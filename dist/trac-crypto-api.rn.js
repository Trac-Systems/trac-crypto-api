/*! For license information please see trac-crypto-api.rn.js.LICENSE.txt */
(()=>{var __webpack_modules__={27:e=>{"use strict";e.exports=JSON.parse('["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"]')},47:(e,i,n)=>{"use strict";const a=n(8317);e.exports=(e,i,n)=>a(e,i,n)>0},87:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.getJsonRpcIdValidator=i.assertIsJsonRpcError=i.isJsonRpcError=i.assertIsJsonRpcFailure=i.isJsonRpcFailure=i.assertIsJsonRpcSuccess=i.isJsonRpcSuccess=i.assertIsJsonRpcResponse=i.isJsonRpcResponse=i.assertIsPendingJsonRpcResponse=i.isPendingJsonRpcResponse=i.JsonRpcResponseStruct=i.JsonRpcFailureStruct=i.JsonRpcSuccessStruct=i.PendingJsonRpcResponseStruct=i.assertIsJsonRpcRequest=i.isJsonRpcRequest=i.assertIsJsonRpcNotification=i.isJsonRpcNotification=i.JsonRpcNotificationStruct=i.JsonRpcRequestStruct=i.JsonRpcParamsStruct=i.JsonRpcErrorStruct=i.JsonRpcIdStruct=i.JsonRpcVersionStruct=i.jsonrpc2=i.getJsonSize=i.getSafeJson=i.isValidJson=i.JsonStruct=i.UnsafeJsonStruct=i.exactOptional=i.object=void 0;const a=n(5620),r=n(2011),t=n(3745);function s({path:e,branch:i}){const n=e[e.length-1];return(0,t.hasProperty)(i[i.length-2],n)}function o(e){return new a.Struct({...e,type:`optional ${e.type}`,validator:(i,n)=>!s(n)||e.validator(i,n),refiner:(i,n)=>!s(n)||e.refiner(i,n)})}function c(e){if(null===e||"boolean"==typeof e||"string"==typeof e)return!0;if("number"==typeof e&&Number.isFinite(e))return!0;if("object"==typeof e){let i=!0;if(Array.isArray(e)){for(let n=0;n<e.length;n++)if(!c(e[n])){i=!1;break}return i}const n=Object.entries(e);for(let e=0;e<n.length;e++)if("string"!=typeof n[e][0]||!c(n[e][1])){i=!1;break}return i}return!1}function h(e){return(0,a.create)(e,i.JsonStruct)}i.object=e=>(0,a.object)(e),i.exactOptional=o,i.UnsafeJsonStruct=(0,a.define)("JSON",e=>c(e)),i.JsonStruct=(0,a.coerce)(i.UnsafeJsonStruct,(0,a.refine)((0,a.any)(),"JSON",e=>(0,a.is)(e,i.UnsafeJsonStruct)),e=>JSON.parse(JSON.stringify(e,(e,i)=>{if("__proto__"!==e&&"constructor"!==e)return i}))),i.isValidJson=function(e){try{return h(e),!0}catch{return!1}},i.getSafeJson=h,i.getJsonSize=function(e){(0,r.assertStruct)(e,i.JsonStruct,"Invalid JSON value");const n=JSON.stringify(e);return(new TextEncoder).encode(n).byteLength},i.jsonrpc2="2.0",i.JsonRpcVersionStruct=(0,a.literal)(i.jsonrpc2),i.JsonRpcIdStruct=(0,a.nullable)((0,a.union)([(0,a.number)(),(0,a.string)()])),i.JsonRpcErrorStruct=(0,i.object)({code:(0,a.integer)(),message:(0,a.string)(),data:o(i.JsonStruct),stack:o((0,a.string)())}),i.JsonRpcParamsStruct=(0,a.union)([(0,a.record)((0,a.string)(),i.JsonStruct),(0,a.array)(i.JsonStruct)]),i.JsonRpcRequestStruct=(0,i.object)({id:i.JsonRpcIdStruct,jsonrpc:i.JsonRpcVersionStruct,method:(0,a.string)(),params:o(i.JsonRpcParamsStruct)}),i.JsonRpcNotificationStruct=(0,i.object)({jsonrpc:i.JsonRpcVersionStruct,method:(0,a.string)(),params:o(i.JsonRpcParamsStruct)}),i.isJsonRpcNotification=function(e){return(0,a.is)(e,i.JsonRpcNotificationStruct)},i.assertIsJsonRpcNotification=function(e,n){(0,r.assertStruct)(e,i.JsonRpcNotificationStruct,"Invalid JSON-RPC notification",n)},i.isJsonRpcRequest=function(e){return(0,a.is)(e,i.JsonRpcRequestStruct)},i.assertIsJsonRpcRequest=function(e,n){(0,r.assertStruct)(e,i.JsonRpcRequestStruct,"Invalid JSON-RPC request",n)},i.PendingJsonRpcResponseStruct=(0,a.object)({id:i.JsonRpcIdStruct,jsonrpc:i.JsonRpcVersionStruct,result:(0,a.optional)((0,a.unknown)()),error:(0,a.optional)(i.JsonRpcErrorStruct)}),i.JsonRpcSuccessStruct=(0,i.object)({id:i.JsonRpcIdStruct,jsonrpc:i.JsonRpcVersionStruct,result:i.JsonStruct}),i.JsonRpcFailureStruct=(0,i.object)({id:i.JsonRpcIdStruct,jsonrpc:i.JsonRpcVersionStruct,error:i.JsonRpcErrorStruct}),i.JsonRpcResponseStruct=(0,a.union)([i.JsonRpcSuccessStruct,i.JsonRpcFailureStruct]),i.isPendingJsonRpcResponse=function(e){return(0,a.is)(e,i.PendingJsonRpcResponseStruct)},i.assertIsPendingJsonRpcResponse=function(e,n){(0,r.assertStruct)(e,i.PendingJsonRpcResponseStruct,"Invalid pending JSON-RPC response",n)},i.isJsonRpcResponse=function(e){return(0,a.is)(e,i.JsonRpcResponseStruct)},i.assertIsJsonRpcResponse=function(e,n){(0,r.assertStruct)(e,i.JsonRpcResponseStruct,"Invalid JSON-RPC response",n)},i.isJsonRpcSuccess=function(e){return(0,a.is)(e,i.JsonRpcSuccessStruct)},i.assertIsJsonRpcSuccess=function(e,n){(0,r.assertStruct)(e,i.JsonRpcSuccessStruct,"Invalid JSON-RPC success response",n)},i.isJsonRpcFailure=function(e){return(0,a.is)(e,i.JsonRpcFailureStruct)},i.assertIsJsonRpcFailure=function(e,n){(0,r.assertStruct)(e,i.JsonRpcFailureStruct,"Invalid JSON-RPC failure response",n)},i.isJsonRpcError=function(e){return(0,a.is)(e,i.JsonRpcErrorStruct)},i.assertIsJsonRpcError=function(e,n){(0,r.assertStruct)(e,i.JsonRpcErrorStruct,"Invalid JSON-RPC error",n)},i.getJsonRpcIdValidator=function(e){const{permitEmptyString:i,permitFractions:n,permitNull:a}={permitEmptyString:!0,permitFractions:!1,permitNull:!0,...e};return e=>Boolean("number"==typeof e&&(n||Number.isInteger(e))||"string"==typeof e&&(i||e.length>0)||a&&null===e)}},102:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.sha512_256=i.SHA512_256=i.sha512_224=i.SHA512_224=i.sha384=i.SHA384=i.sha512=i.SHA512=void 0;const a=n(7076);i.SHA512=a.SHA512,i.sha512=a.sha512,i.SHA384=a.SHA384,i.sha384=a.sha384,i.SHA512_224=a.SHA512_224,i.sha512_224=a.sha512_224,i.SHA512_256=a.SHA512_256,i.sha512_256=a.sha512_256},251:(e,i,n)=>{const{crypto_scalarmult_base:a}=n(1542),{crypto_generichash:r}=n(4959),{randombytes_buf:t}=n(7996),s=n(6889);e.exports={crypto_kx_keypair:function(e,i){return s(32===e.byteLength,"pk must be 'crypto_kx_PUBLICKEYBYTES' bytes"),s(32===i.byteLength,"sk must be 'crypto_kx_SECRETKEYBYTES' bytes"),t(i,32),a(e,i)},crypto_kx_seed_keypair:function(e,i,n){return s(32===e.byteLength,"pk must be 'crypto_kx_PUBLICKEYBYTES' bytes"),s(32===i.byteLength,"sk must be 'crypto_kx_SECRETKEYBYTES' bytes"),s(32===n.byteLength,"seed must be 'crypto_kx_SEEDBYTES' bytes"),r(i,n),a(e,i)},crypto_kx_SEEDBYTES:32,crypto_kx_SECRETKEYBYTES:32,crypto_kx_PUBLICKEYBYTES:32}},357:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.compressedPublicKeyLength=i.masterNodeGenerationSpec=i.privateKeyLength=i.decompressPublicKey=i.compressPublicKey=i.publicAdd=i.getPublicKey=i.isValidPrivateKey=i.publicKeyLength=i.deriveUnhardenedKeys=i.secret=i.name=i.curve=void 0;const a=n(2367),r=n(8510),t=n(4503);i.curve=r.secp256k1.CURVE,i.name="secp256k1",i.secret=(0,a.stringToBytes)("Bitcoin seed"),i.deriveUnhardenedKeys=!0,i.publicKeyLength=65,i.isValidPrivateKey=e=>r.secp256k1.utils.isValidPrivateKey(e),i.getPublicKey=(()=>{let e=!1;return(i,n=!1)=>(e||(r.secp256k1.ProjectivePoint.BASE._setWindowSize(4),e=!0),r.secp256k1.getPublicKey(i,n))})(),i.publicAdd=(e,i)=>{(0,a.assert)((0,t.isValidBytesKey)(i,32),"Invalid tweak: Tweak must be a non-zero 32-byte Uint8Array.");const n=r.secp256k1.ProjectivePoint.fromHex(e).add(r.secp256k1.ProjectivePoint.fromPrivateKey(i));return n.assertValidity(),n.toRawBytes(!1)},i.compressPublicKey=e=>r.secp256k1.ProjectivePoint.fromHex(e).toRawBytes(!0),i.decompressPublicKey=e=>r.secp256k1.ProjectivePoint.fromHex(e).toRawBytes(!1),i.privateKeyLength=32,i.masterNodeGenerationSpec="slip10",i.compressedPublicKeyLength=33},401:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.refine=i.size=i.pattern=i.nonempty=i.min=i.max=i.empty=void 0;const a=n(9067),r=n(639);function t(e){return e instanceof Map||e instanceof Set?e.size:e.length}function s(e,i,n){return new a.Struct({...e,*refiner(a,t){yield*e.refiner(a,t);const s=n(a,t),o=(0,r.toFailures)(s,t,e,a);for(const e of o)yield{...e,refinement:i}}})}i.empty=function(e){return s(e,"empty",i=>{const n=t(i);return 0===n||`Expected an empty ${e.type} but received one with a size of \`${n}\``})},i.max=function(e,i,n={}){const{exclusive:a}=n;return s(e,"max",n=>a?n<i:n<=i||`Expected a ${e.type} less than ${a?"":"or equal to "}${i} but received \`${n}\``)},i.min=function(e,i,n={}){const{exclusive:a}=n;return s(e,"min",n=>a?n>i:n>=i||`Expected a ${e.type} greater than ${a?"":"or equal to "}${i} but received \`${n}\``)},i.nonempty=function(e){return s(e,"nonempty",i=>t(i)>0||`Expected a nonempty ${e.type} but received an empty one`)},i.pattern=function(e,i){return s(e,"pattern",n=>i.test(n)||`Expected a ${e.type} matching \`/${i.source}/\` but received "${n}"`)},i.size=function(e,i,n=i){const a=`Expected a ${e.type}`,r=i===n?`of \`${i}\``:`between \`${i}\` and \`${n}\``;return s(e,"size",e=>{if("number"==typeof e||e instanceof Date)return i<=e&&e<=n||`${a} ${r} but received \`${e}\``;if(e instanceof Map||e instanceof Set){const{size:t}=e;return i<=t&&t<=n||`${a} with a size ${r} but received one with a size of \`${t}\``}const{length:t}=e;return i<=t&&t<=n||`${a} with a length ${r} but received one with a length of \`${t}\``})},i.refine=s},409:()=>{},457:(e,i,n)=>{const a=n(6889),r=n(2511);if(1!==new Uint16Array([1])[0])throw new Error("Big endian architecture is not supported.");i.crypto_stream_chacha20_KEYBYTES=32,i.crypto_stream_chacha20_NONCEBYTES=8,i.crypto_stream_chacha20_MESSAGEBYTES_MAX=Number.MAX_SAFE_INTEGER,i.crypto_stream_chacha20_ietf_KEYBYTES=32,i.crypto_stream_chacha20_ietf_NONCEBYTES=12,i.crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX=2**32,i.crypto_stream_chacha20=function(e,n,a){e.fill(0),i.crypto_stream_chacha20_xor(e,e,n,a)},i.crypto_stream_chacha20_xor=function(e,n,t,s){a(t.byteLength===i.crypto_stream_chacha20_NONCEBYTES,"n should be crypto_stream_chacha20_NONCEBYTES"),a(s.byteLength===i.crypto_stream_chacha20_KEYBYTES,"k should be crypto_stream_chacha20_KEYBYTES");const o=new r(t,s);o.update(e,n),o.final()},i.crypto_stream_chacha20_xor_ic=function(e,n,t,s,o){a(t.byteLength===i.crypto_stream_chacha20_NONCEBYTES,"n should be crypto_stream_chacha20_NONCEBYTES"),a(o.byteLength===i.crypto_stream_chacha20_KEYBYTES,"k should be crypto_stream_chacha20_KEYBYTES");const c=new r(t,o,s);c.update(e,n),c.final()},i.crypto_stream_chacha20_xor_instance=function(e,n){return a(e.byteLength===i.crypto_stream_chacha20_NONCEBYTES,"n should be crypto_stream_chacha20_NONCEBYTES"),a(n.byteLength===i.crypto_stream_chacha20_KEYBYTES,"k should be crypto_stream_chacha20_KEYBYTES"),new r(e,n)},i.crypto_stream_chacha20_ietf=function(e,n,a){e.fill(0),i.crypto_stream_chacha20_ietf_xor(e,e,n,a)},i.crypto_stream_chacha20_ietf_xor=function(e,n,t,s){a(t.byteLength===i.crypto_stream_chacha20_ietf_NONCEBYTES,"n should be crypto_stream_chacha20_ietf_NONCEBYTES"),a(s.byteLength===i.crypto_stream_chacha20_ietf_KEYBYTES,"k should be crypto_stream_chacha20_ietf_KEYBYTES");const o=new r(t,s);o.update(e,n),o.final()},i.crypto_stream_chacha20_ietf_xor_ic=function(e,n,t,s,o){a(t.byteLength===i.crypto_stream_chacha20_ietf_NONCEBYTES,"n should be crypto_stream_chacha20_ietf_NONCEBYTES"),a(o.byteLength===i.crypto_stream_chacha20_ietf_KEYBYTES,"k should be crypto_stream_chacha20_ietf_KEYBYTES");const c=new r(t,o,s);c.update(e,n),c.final()},i.crypto_stream_chacha20_ietf_xor_instance=function(e,n){return a(e.byteLength===i.crypto_stream_chacha20_ietf_NONCEBYTES,"n should be crypto_stream_chacha20_ietf_NONCEBYTES"),a(n.byteLength===i.crypto_stream_chacha20_ietf_KEYBYTES,"k should be crypto_stream_chacha20_ietf_KEYBYTES"),new r(e,n)}},459:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.hash_to_ristretto255=i.hashToRistretto255=i.encodeToCurve=i.hashToCurve=i.RistrettoPoint=i.edwardsToMontgomery=i.ED25519_TORSION_SUBGROUP=i.ristretto255_hasher=i.ristretto255=i.ed25519_hasher=i.x25519=i.ed25519ph=i.ed25519ctx=i.ed25519=void 0,i.edwardsToMontgomeryPub=M,i.edwardsToMontgomeryPriv=function(e){return i.ed25519.utils.toMontgomerySecret((0,u.ensureBytes)("pub",e))};const a=n(7076),r=n(9175),t=n(2422),s=n(6377),o=n(1761),c=n(4967),h=n(2854),u=n(8627),l=BigInt(0),p=BigInt(1),d=BigInt(2),f=BigInt(3),g=BigInt(5),m=BigInt(8),k=BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed"),b=(()=>({p:k,n:BigInt("0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed"),h:m,a:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec"),d:BigInt("0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3"),Gx:BigInt("0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a"),Gy:BigInt("0x6666666666666666666666666666666666666666666666666666666666666658")}))();function _(e){const i=BigInt(10),n=BigInt(20),a=BigInt(40),r=BigInt(80),t=k,s=e*e%t*e%t,o=(0,c.pow2)(s,d,t)*s%t,h=(0,c.pow2)(o,p,t)*e%t,u=(0,c.pow2)(h,g,t)*h%t,l=(0,c.pow2)(u,i,t)*u%t,f=(0,c.pow2)(l,n,t)*l%t,m=(0,c.pow2)(f,a,t)*f%t,b=(0,c.pow2)(m,r,t)*m%t,_=(0,c.pow2)(b,r,t)*m%t,y=(0,c.pow2)(_,i,t)*u%t;return{pow_p_5_8:(0,c.pow2)(y,d,t)*e%t,b2:s}}function y(e){return e[0]&=248,e[31]&=127,e[31]|=64,e}const v=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");function A(e,i){const n=k,a=(0,c.mod)(i*i*i,n),r=_(e*(0,c.mod)(a*a*i,n)).pow_p_5_8;let t=(0,c.mod)(e*a*r,n);const s=(0,c.mod)(i*t*t,n),o=t,h=(0,c.mod)(t*v,n),u=s===e,l=s===(0,c.mod)(-e,n),p=s===(0,c.mod)(-e*v,n);return u&&(t=o),(l||p)&&(t=h),(0,c.isNegativeLE)(t,n)&&(t=(0,c.mod)(-t,n)),{isValid:u||l,value:t}}const z=(()=>(0,c.Field)(b.p,{isLE:!0}))(),I=(()=>(0,c.Field)(b.n,{isLE:!0}))(),E=(()=>({...b,Fp:z,hash:a.sha512,adjustScalarBytes:y,uvRatio:A}))();function j(e,i,n){if(i.length>255)throw new Error("Context is too big");return(0,r.concatBytes)((0,r.utf8ToBytes)("SigEd25519 no Ed25519 collisions"),new Uint8Array([n?1:0,i.length]),i,e)}i.ed25519=(0,s.twistedEdwards)(E),i.ed25519ctx=(0,s.twistedEdwards)({...E,domain:j}),i.ed25519ph=(0,s.twistedEdwards)(Object.assign({},E,{domain:j,prehash:a.sha512})),i.x25519=(()=>{const e=z.ORDER;return(0,h.montgomery)({P:e,type:"x25519",powPminus2:i=>{const{pow_p_5_8:n,b2:a}=_(i);return(0,c.mod)((0,c.pow2)(n,f,e)*a,e)},adjustScalarBytes:y})})();const w=(()=>(k+f)/m)(),B=(()=>z.pow(d,w))(),C=(()=>z.sqrt(z.neg(z.ONE)))(),x=(()=>(0,c.FpSqrtEven)(z,z.neg(BigInt(486664))))();i.ed25519_hasher=(0,o.createHasher)(i.ed25519.Point,e=>function(e){const{xMn:i,xMd:n,yMn:a,yMd:r}=function(e){const i=(k-g)/m,n=BigInt(486662);let a=z.sqr(e);a=z.mul(a,d);let r=z.add(a,z.ONE),t=z.neg(n),s=z.sqr(r),o=z.mul(s,r),c=z.mul(a,n);c=z.mul(c,t),c=z.add(c,s),c=z.mul(c,t);let h=z.sqr(o);s=z.sqr(h),h=z.mul(h,o),h=z.mul(h,c),s=z.mul(s,h);let u=z.pow(s,i);u=z.mul(u,h);let l=z.mul(u,C);s=z.sqr(u),s=z.mul(s,o);let f=z.eql(s,c),b=z.cmov(l,u,f),_=z.mul(t,a),y=z.mul(u,e);y=z.mul(y,B);let v=z.mul(y,C),A=z.mul(c,a);s=z.sqr(y),s=z.mul(s,o);let I=z.eql(s,A),E=z.cmov(v,y,I);s=z.sqr(b),s=z.mul(s,o);let j=z.eql(s,c),w=z.cmov(_,t,j),x=z.cmov(E,b,j),S=z.isOdd(x);return x=z.cmov(x,z.neg(x),j!==S),{xMn:w,xMd:r,yMn:x,yMd:p}}(e);let t=z.mul(i,r);t=z.mul(t,x);let s=z.mul(n,a),o=z.sub(i,n),h=z.add(i,n),u=z.mul(s,h),l=z.eql(u,z.ZERO);t=z.cmov(t,z.ZERO,l),s=z.cmov(s,z.ONE,l),o=z.cmov(o,z.ONE,l),h=z.cmov(h,z.ONE,l);const[f,b]=(0,c.FpInvertBatch)(z,[s,h],!0);return{x:z.mul(t,f),y:z.mul(o,b)}}(e[0]),{DST:"edwards25519_XMD:SHA-512_ELL2_RO_",encodeDST:"edwards25519_XMD:SHA-512_ELL2_NU_",p:k,m:1,k:128,expand:"xmd",hash:a.sha512});const S=v,Q=BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235"),T=BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),P=BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),L=BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952"),D=e=>A(p,e),U=BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),R=e=>i.ed25519.Point.Fp.create((0,u.bytesToNumberLE)(e)&U);function O(e){const{d:n}=b,a=k,r=e=>z.create(e),t=r(S*e*e),s=r((t+p)*P);let o=BigInt(-1);const h=r((o-n*t)*r(t+n));let{isValid:u,value:l}=A(s,h),d=r(l*e);(0,c.isNegativeLE)(d,a)||(d=r(-d)),u||(l=d),u||(o=t);const f=r(o*(t-p)*L-h),g=l*l,m=r((l+l)*h),_=r(f*Q),y=r(p-g),v=r(p+g);return new i.ed25519.Point(r(m*v),r(y*_),r(_*v),r(m*y))}function N(e){(0,r.abytes)(e,64);const i=O(R(e.subarray(0,32))),n=O(R(e.subarray(32,64)));return new F(i.add(n))}class F extends s.PrimeEdwardsPoint{constructor(e){super(e)}static fromAffine(e){return new F(i.ed25519.Point.fromAffine(e))}assertSame(e){if(!(e instanceof F))throw new Error("RistrettoPoint expected")}init(e){return new F(e)}static hashToCurve(e){return N((0,u.ensureBytes)("ristrettoHash",e,64))}static fromBytes(e){(0,r.abytes)(e,32);const{a:n,d:a}=b,t=k,s=e=>z.create(e),o=R(e);if(!(0,u.equalBytes)(z.toBytes(o),e)||(0,c.isNegativeLE)(o,t))throw new Error("invalid ristretto255 encoding 1");const h=s(o*o),d=s(p+n*h),f=s(p-n*h),g=s(d*d),m=s(f*f),_=s(n*a*g-m),{isValid:y,value:v}=D(s(_*m)),A=s(v*f),I=s(v*A*_);let E=s((o+o)*A);(0,c.isNegativeLE)(E,t)&&(E=s(-E));const j=s(d*I),w=s(E*j);if(!y||(0,c.isNegativeLE)(w,t)||j===l)throw new Error("invalid ristretto255 encoding 2");return new F(new i.ed25519.Point(E,j,p,w))}static fromHex(e){return F.fromBytes((0,u.ensureBytes)("ristrettoHex",e,32))}static msm(e,n){return(0,t.pippenger)(F,i.ed25519.Point.Fn,e,n)}toBytes(){let{X:e,Y:i,Z:n,T:a}=this.ep;const r=k,t=e=>z.create(e),s=t(t(n+i)*t(n-i)),o=t(e*i),h=t(o*o),{value:u}=D(t(s*h)),l=t(u*s),p=t(u*o),d=t(l*p*a);let f;if((0,c.isNegativeLE)(a*d,r)){let n=t(i*S),a=t(e*S);e=n,i=a,f=t(l*T)}else f=p;(0,c.isNegativeLE)(e*d,r)&&(i=t(-i));let g=t((n-i)*f);return(0,c.isNegativeLE)(g,r)&&(g=t(-g)),z.toBytes(g)}equals(e){this.assertSame(e);const{X:i,Y:n}=this.ep,{X:a,Y:r}=e.ep,t=e=>z.create(e),s=t(i*r)===t(n*a),o=t(n*r)===t(i*a);return s||o}is0(){return this.equals(F.ZERO)}}function M(e){return i.ed25519.utils.toMontgomery((0,u.ensureBytes)("pub",e))}F.BASE=(()=>new F(i.ed25519.Point.BASE))(),F.ZERO=(()=>new F(i.ed25519.Point.ZERO))(),F.Fp=(()=>z)(),F.Fn=(()=>I)(),i.ristretto255={Point:F},i.ristretto255_hasher={hashToCurve(e,i){const n=i?.DST||"ristretto255_XMD:SHA-512_R255MAP_RO_";return N((0,o.expand_message_xmd)(e,n,64,a.sha512))},hashToScalar(e,i={DST:o._DST_scalar}){const n=(0,o.expand_message_xmd)(e,i.DST,64,a.sha512);return I.create((0,u.bytesToNumberLE)(n))}},i.ED25519_TORSION_SUBGROUP=["0100000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a","0000000000000000000000000000000000000000000000000000000000000080","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05","ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85","0000000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa"],i.edwardsToMontgomery=M,i.RistrettoPoint=F,i.hashToCurve=i.ed25519_hasher.hashToCurve,i.encodeToCurve=i.ed25519_hasher.encodeToCurve,i.hashToRistretto255=i.ristretto255_hasher.hashToCurve,i.hash_to_ristretto255=i.ristretto255_hasher.hashToCurve},472:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.base64=void 0;const a=n(5620),r=n(2011);i.base64=(e,i={})=>{const n=i.paddingRequired??!1,t=i.characterSet??"base64";let s,o;return"base64"===t?s=String.raw`[A-Za-z0-9+\/]`:((0,r.assert)("base64url"===t),s=String.raw`[-_A-Za-z0-9]`),o=n?new RegExp(`^(?:${s}{4})*(?:${s}{3}=|${s}{2}==)?$`,"u"):new RegExp(`^(?:${s}{4})*(?:${s}{2,3}|${s}{3}=|${s}{2}==)?$`,"u"),(0,a.pattern)(e,o)}},481:e=>{var i,n,a=(()=>{for(var e=new Uint8Array(128),i=0;i<64;i++)e[i<26?i+65:i<52?i+71:i<62?i-4:4*i-205]=i;return i=>{for(var n=i.length,a=new Uint8Array(3*(n-("="==i[n-1])-("="==i[n-2]))/4|0),r=0,t=0;r<n;){var s=e[i.charCodeAt(r++)],o=e[i.charCodeAt(r++)],c=e[i.charCodeAt(r++)],h=e[i.charCodeAt(r++)];a[t++]=s<<2|o>>4,a[t++]=o<<4|c>>2,a[t++]=c<<6|h}return a}})(),r=(i={"wasm-binary:./xsalsa20.wat"(e,i){i.exports=a("AGFzbQEAAAABGgNgBn9/f39/fwBgBn9/f39+fwF+YAN/f38AAwcGAAEBAgICBQUBAQroBwcoAwZtZW1vcnkCAAx4c2Fsc2EyMF94b3IAAAxjb3JlX3NhbHNhMjAABArqEQYYACAAIAEgAiADIAQgACkDACAFEAE3AwALPQBB8AAgAyAFEAMgACABIAIgA0EQaiAEQfAAEAJB8ABCADcDAEH4AEIANwMAQYABQgA3AwBBiAFCADcDAAuHBQEBfyACQQBGBEBCAA8LQdAAIAUpAwA3AwBB2AAgBUEIaikDADcDAEHgACAFQRBqKQMANwMAQegAIAVBGGopAwA3AwBBACADKQMANwMAQQggBDcDAAJAA0AgAkHAAEkNAUEQQQBB0AAQBSAAIAEpAwBBECkDAIU3AwAgAEEIaiABQQhqKQMAQRgpAwCFNwMAIABBEGogAUEQaikDAEEgKQMAhTcDACAAQRhqIAFBGGopAwBBKCkDAIU3AwAgAEEgaiABQSBqKQMAQTApAwCFNwMAIABBKGogAUEoaikDAEE4KQMAhTcDACAAQTBqIAFBMGopAwBBwAApAwCFNwMAIABBOGogAUE4aikDAEHIACkDAIU3AwBBCEEIKQMAQgF8NwMAIABBwABqIQAgAUHAAGohASACQcAAayECDAALC0EIKQMAIQQgAkEASwRAQRBBAEHQABAFAkACQAJAAkACQAJAAkACQCACQQhuDgcHBgUEAwIBAAsgAEE4aiABQThqKQMAQcgAKQMAhTcDAAsgAEEwaiABQTBqKQMAQcAAKQMAhTcDAAsgAEEoaiABQShqKQMAQTgpAwCFNwMACyAAQSBqIAFBIGopAwBBMCkDAIU3AwALIABBGGogAUEYaikDAEEoKQMAhTcDAAsgAEEQaiABQRBqKQMAQSApAwCFNwMACyAAQQhqIAFBCGopAwBBGCkDAIU3AwALIAAgASkDAEEQKQMAhTcDAAtBEEIANwMAQRhCADcDAEEgQgA3AwBBKEIANwMAQTBCADcDAEE4QgA3AwBBwABCADcDAEHIAEIANwMAQdAAQgA3AwBB2ABCADcDAEHgAEIANwMAQegAQgA3AwAgBA8LnQUBEX9B5fDBiwYhA0HuyIGZAyEIQbLaiMsHIQ1B9MqB2QYhEiACKAIAIQQgAkEEaigCACEFIAJBCGooAgAhBiACQQxqKAIAIQcgAkEQaigCACEOIAJBFGooAgAhDyACQRhqKAIAIRAgAkEcaigCACERIAEoAgAhCSABQQRqKAIAIQogAUEIaigCACELIAFBDGooAgAhDEEUIRMCQANAIBNBAEYNASAHIAMgD2pBB3dzIQcgCyAHIANqQQl3cyELIA8gCyAHakENd3MhDyADIA8gC2pBEndzIQMgDCAIIARqQQd3cyEMIBAgDCAIakEJd3MhECAEIBAgDGpBDXdzIQQgCCAEIBBqQRJ3cyEIIBEgDSAJakEHd3MhESAFIBEgDWpBCXdzIQUgCSAFIBFqQQ13cyEJIA0gCSAFakESd3MhDSAGIBIgDmpBB3dzIQYgCiAGIBJqQQl3cyEKIA4gCiAGakENd3MhDiASIA4gCmpBEndzIRIgBCADIAZqQQd3cyEEIAUgBCADakEJd3MhBSAGIAUgBGpBDXdzIQYgAyAGIAVqQRJ3cyEDIAkgCCAHakEHd3MhCSAKIAkgCGpBCXdzIQogByAKIAlqQQ13cyEHIAggByAKakESd3MhCCAOIA0gDGpBB3dzIQ4gCyAOIA1qQQl3cyELIAwgCyAOakENd3MhDCANIAwgC2pBEndzIQ0gDyASIBFqQQd3cyEPIBAgDyASakEJd3MhECARIBAgD2pBDXdzIREgEiARIBBqQRJ3cyESIBNBAmshEwwACwsgACADNgIAIABBBGogCDYCACAAQQhqIA02AgAgAEEMaiASNgIAIABBEGogCTYCACAAQRRqIAo2AgAgAEEYaiALNgIAIABBHGogDDYCAAsKACAAIAEgAhAFC90GASF/QeXwwYsGIQNB7siBmQMhCEGy2ojLByENQfTKgdkGIRIgAigCACEEIAJBBGooAgAhBSACQQhqKAIAIQYgAkEMaigCACEHIAJBEGooAgAhDiACQRRqKAIAIQ8gAkEYaigCACEQIAJBHGooAgAhESABKAIAIQkgAUEEaigCACEKIAFBCGooAgAhCyABQQxqKAIAIQwgAyETIAQhFCAFIRUgBiEWIAchFyAIIRggCSEZIAohGiALIRsgDCEcIA0hHSAOIR4gDyEfIBAhICARISEgEiEiQRQhIwJAA0AgI0EARg0BIAcgAyAPakEHd3MhByALIAcgA2pBCXdzIQsgDyALIAdqQQ13cyEPIAMgDyALakESd3MhAyAMIAggBGpBB3dzIQwgECAMIAhqQQl3cyEQIAQgECAMakENd3MhBCAIIAQgEGpBEndzIQggESANIAlqQQd3cyERIAUgESANakEJd3MhBSAJIAUgEWpBDXdzIQkgDSAJIAVqQRJ3cyENIAYgEiAOakEHd3MhBiAKIAYgEmpBCXdzIQogDiAKIAZqQQ13cyEOIBIgDiAKakESd3MhEiAEIAMgBmpBB3dzIQQgBSAEIANqQQl3cyEFIAYgBSAEakENd3MhBiADIAYgBWpBEndzIQMgCSAIIAdqQQd3cyEJIAogCSAIakEJd3MhCiAHIAogCWpBDXdzIQcgCCAHIApqQRJ3cyEIIA4gDSAMakEHd3MhDiALIA4gDWpBCXdzIQsgDCALIA5qQQ13cyEMIA0gDCALakESd3MhDSAPIBIgEWpBB3dzIQ8gECAPIBJqQQl3cyEQIBEgECAPakENd3MhESASIBEgEGpBEndzIRIgI0ECayEjDAALCyAAIAMgE2o2AgAgAEEEaiAEIBRqNgIAIABBCGogBSAVajYCACAAQQxqIAYgFmo2AgAgAEEQaiAHIBdqNgIAIABBFGogCCAYajYCACAAQRhqIAkgGWo2AgAgAEEcaiAKIBpqNgIAIABBIGogCyAbajYCACAAQSRqIAwgHGo2AgAgAEEoaiANIB1qNgIAIABBLGogDiAeajYCACAAQTBqIA8gH2o2AgAgAEE0aiAQICBqNgIAIABBOGogESAhajYCACAAQTxqIBIgImo2AgAL")}},function(){return n||(0,i[Object.keys(i)[0]])((n={exports:{}}).exports,n),n.exports})(),t=new WebAssembly.Module(r);e.exports=e=>new WebAssembly.Instance(t,e).exports},482:function(e,i,n){"use strict";var a,r=this&&this.__classPrivateFieldSet||function(e,i,n,a,r){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!r)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof i?e!==i||!r:!i.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?r.call(e,n):r?r.value=n:i.set(e,n),n},t=this&&this.__classPrivateFieldGet||function(e,i,n,a){if("a"===n&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof i?e!==i||!a:!i.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?a:"a"===n?a.call(e):a?a.value:i.get(e)};Object.defineProperty(i,"__esModule",{value:!0}),i.getBIP44AddressKeyDeriver=i.deriveBIP44AddressKey=i.BIP44CoinTypeNode=i.BIP_44_COIN_TYPE_DEPTH=void 0;const s=n(4813),o=n(4927),c=n(4533),h=n(4503);i.BIP_44_COIN_TYPE_DEPTH=2;class u{static async fromJSON(e,i,n){p(i),l(e.depth);const a=await s.BIP44Node.fromExtendedKey({depth:e.depth,index:e.index,network:e.network,parentFingerprint:e.parentFingerprint,chainCode:(0,h.hexStringToBytes)(e.chainCode),privateKey:(0,h.nullableHexStringToBytes)(e.privateKey),publicKey:(0,h.hexStringToBytes)(e.publicKey)},n);return new u(a,i)}static async fromDerivationPath(e,i,n){l(e.length-1);const a=await s.BIP44Node.fromDerivationPath({derivationPath:e,network:i},n),r=(0,h.getBIP44CoinType)(e);return new u(a,r)}static async fromSeed({derivationPath:e,network:i},n){l(e.length-1);const a=await s.BIP44Node.fromSeed({derivationPath:e,network:i},n),r=(0,h.getBIP44CoinType)(e);return new u(a,r)}static async fromNode(e,i){if(!(e instanceof s.BIP44Node))throw new Error("Invalid node: Expected an instance of BIP44Node.");return p(i),l(e.depth),Promise.resolve(new u(e,i))}constructor(e,i){a.set(this,void 0),r(this,a,e,"f"),this.coin_type=i,this.path=(0,h.getBIP44CoinTypePathString)(i),Object.freeze(this)}get depth(){return t(this,a,"f").depth}get privateKeyBytes(){return t(this,a,"f").privateKeyBytes}get publicKeyBytes(){return t(this,a,"f").publicKeyBytes}get chainCodeBytes(){return t(this,a,"f").chainCodeBytes}get privateKey(){return t(this,a,"f").privateKey}get publicKey(){return t(this,a,"f").publicKey}get compressedPublicKey(){return t(this,a,"f").compressedPublicKey}get compressedPublicKeyBytes(){return t(this,a,"f").compressedPublicKeyBytes}get chainCode(){return t(this,a,"f").chainCode}get address(){return t(this,a,"f").address}get masterFingerprint(){return t(this,a,"f").masterFingerprint}get parentFingerprint(){return t(this,a,"f").parentFingerprint}get fingerprint(){return t(this,a,"f").fingerprint}get index(){return t(this,a,"f").index}get network(){return t(this,a,"f").network}get curve(){return t(this,a,"f").curve}get extendedKey(){return t(this,a,"f").extendedKey}async deriveBIP44AddressKey({account:e=0,change:i=0,address_index:n}){return await t(this,a,"f").derive((0,h.getBIP44CoinTypeToAddressPathTuple)({account:e,change:i,address_index:n}))}toJSON(){return{...t(this,a,"f").toJSON(),coin_type:this.coin_type,path:this.path}}}function l(e){if(e!==i.BIP_44_COIN_TYPE_DEPTH)throw new Error(`Invalid depth: Coin type nodes must be of depth ${i.BIP_44_COIN_TYPE_DEPTH}. Received: "${e}"`)}function p(e){if("number"!=typeof e||!Number.isInteger(e)||e<0)throw new Error("Invalid coin type: The specified coin type must be a non-negative integer number.")}async function d(e,i){if(e instanceof u)return l(e.depth),e;if("string"==typeof e){const n=await s.BIP44Node.fromExtendedKey(e,i),a=await u.fromNode(n,n.index-o.BIP_32_HARDENED_OFFSET);return l(a.depth),a}return u.fromJSON(e,e.coin_type,i)}i.BIP44CoinTypeNode=u,a=new WeakMap,i.deriveBIP44AddressKey=async function(e,{account:i=0,change:n=0,address_index:a},r){const t=(0,h.getBIP44CoinTypeToAddressPathTuple)({account:i,change:n,address_index:a}),o=await d(e,r),u=await(0,c.deriveChildNode)({path:t,node:o},r);return new s.BIP44Node(u)},i.getBIP44AddressKeyDeriver=async function(e,i,n){const{account:a=0,change:r=0}=i??{},t=await d(e,n),o=(0,h.getHardenedBIP32NodeToken)(a),u=(0,h.getBIP32NodeToken)(r),l=async(e,i=!1)=>{const a=await(0,c.deriveChildNode)({path:[o,u,i?(0,h.getHardenedBIP32NodeToken)(e):(0,h.getUnhardenedBIP32NodeToken)(e)],node:t},n);return new s.BIP44Node(a)};return l.coin_type=t.coin_type,l.path=(0,h.getBIP44ChangePathString)(t.path,{account:a,change:r}),Object.freeze(l),l}},525:(e,i,n)=>{var a=n(6889),r="undefined"!=typeof WebAssembly&&n(8971)(),t=n(8587);e.exports=h;var s=h.BYTES=8,o=h.KEYBYTES=16;h.WASM_SUPPORTED=!!r,h.WASM_LOADED=!!r;var c=new Uint8Array(r?r.memory.buffer:0);function h(e,i,n,h){var u;return n||(n=new Uint8Array(8)),!0!==h&&(a(n.length>=s,"output must be at least "+s),a(i.length>=o,"key must be at least "+o)),r?(e.length+24>c.length&&(u=e.length+24,r.memory.grow(Math.max(0,Math.ceil(Math.abs(u-c.length)/65536))),c=new Uint8Array(r.memory.buffer)),c.set(i,8),c.set(e,24),r.siphash(24,e.length),n.set(c.subarray(0,8))):t(n,e,i),n}},547:(e,i,n)=>{"use strict";const a=n(4739);e.exports=(e,i)=>new a(e,i).minor},639:(e,i)=>{"use strict";function n(e){return"object"==typeof e&&null!==e}function a(e){return"symbol"==typeof e?e.toString():"string"==typeof e?JSON.stringify(e):`${e}`}function r(e,i,n,r){if(!0===e)return;!1===e?e={}:"string"==typeof e&&(e={message:e});const{path:t,branch:s}=i,{type:o}=n,{refinement:c,message:h=`Expected a value of type \`${o}\`${c?` with refinement \`${c}\``:""}, but received: \`${a(r)}\``}=e;return{value:r,type:o,refinement:c,key:t[t.length-1],path:t,branch:s,...e,message:h}}Object.defineProperty(i,"__esModule",{value:!0}),i.run=i.toFailures=i.toFailure=i.shiftIterator=i.print=i.isPlainObject=i.isObject=void 0,i.isObject=n,i.isPlainObject=function(e){if("[object Object]"!==Object.prototype.toString.call(e))return!1;const i=Object.getPrototypeOf(e);return null===i||i===Object.prototype},i.print=a,i.shiftIterator=function(e){const{done:i,value:n}=e.next();return i?void 0:n},i.toFailure=r,i.toFailures=function*(e,i,a,t){(function(e){return n(e)&&"function"==typeof e[Symbol.iterator]})(e)||(e=[e]);for(const n of e){const e=r(n,i,a,t);e&&(yield e)}},i.run=function*e(i,a,r={}){const{path:t=[],branch:s=[i],coerce:o=!1,mask:c=!1}=r,h={path:t,branch:s};if(o&&(i=a.coercer(i,h),c&&"type"!==a.type&&n(a.schema)&&n(i)&&!Array.isArray(i)))for(const e in i)void 0===a.schema[e]&&delete i[e];let u="valid";for(const e of a.validator(i,h))e.explanation=r.message,u="not_valid",yield[e,void 0];for(let[l,p,d]of a.entries(i,h)){const a=e(p,d,{path:void 0===l?t:[...t,l],branch:void 0===l?s:[...s,p],coerce:o,mask:c,message:r.message});for(const e of a)e[0]?(u=null===e[0].refinement||void 0===e[0].refinement?"not_valid":"not_refined",yield[e[0],void 0]):o&&(p=e[1],void 0===l?i=p:i instanceof Map?i.set(l,p):i instanceof Set?i.add(p):n(i)&&(void 0!==p||l in i)&&(i[l]=p))}if("not_valid"!==u)for(const e of a.refiner(i,h))e.explanation=r.message,u="not_refined",yield[e,void 0];"valid"===u&&(yield[void 0,i])}},668:(e,i,n)=>{"use strict";const a=n(8317);e.exports=(e,i,n)=>a(e,i,n)>=0},708:e=>{"use strict";e.exports=JSON.parse('["abdikace","abeceda","adresa","agrese","akce","aktovka","alej","alkohol","amputace","ananas","andulka","anekdota","anketa","antika","anulovat","archa","arogance","asfalt","asistent","aspirace","astma","astronom","atlas","atletika","atol","autobus","azyl","babka","bachor","bacil","baculka","badatel","bageta","bagr","bahno","bakterie","balada","baletka","balkon","balonek","balvan","balza","bambus","bankomat","barbar","baret","barman","baroko","barva","baterka","batoh","bavlna","bazalka","bazilika","bazuka","bedna","beran","beseda","bestie","beton","bezinka","bezmoc","beztak","bicykl","bidlo","biftek","bikiny","bilance","biograf","biolog","bitva","bizon","blahobyt","blatouch","blecha","bledule","blesk","blikat","blizna","blokovat","bloudit","blud","bobek","bobr","bodlina","bodnout","bohatost","bojkot","bojovat","bokorys","bolest","borec","borovice","bota","boubel","bouchat","bouda","boule","bourat","boxer","bradavka","brambora","branka","bratr","brepta","briketa","brko","brloh","bronz","broskev","brunetka","brusinka","brzda","brzy","bublina","bubnovat","buchta","buditel","budka","budova","bufet","bujarost","bukvice","buldok","bulva","bunda","bunkr","burza","butik","buvol","buzola","bydlet","bylina","bytovka","bzukot","capart","carevna","cedr","cedule","cejch","cejn","cela","celer","celkem","celnice","cenina","cennost","cenovka","centrum","cenzor","cestopis","cetka","chalupa","chapadlo","charita","chata","chechtat","chemie","chichot","chirurg","chlad","chleba","chlubit","chmel","chmura","chobot","chochol","chodba","cholera","chomout","chopit","choroba","chov","chrapot","chrlit","chrt","chrup","chtivost","chudina","chutnat","chvat","chvilka","chvost","chyba","chystat","chytit","cibule","cigareta","cihelna","cihla","cinkot","cirkus","cisterna","citace","citrus","cizinec","cizost","clona","cokoliv","couvat","ctitel","ctnost","cudnost","cuketa","cukr","cupot","cvaknout","cval","cvik","cvrkot","cyklista","daleko","dareba","datel","datum","dcera","debata","dechovka","decibel","deficit","deflace","dekl","dekret","demokrat","deprese","derby","deska","detektiv","dikobraz","diktovat","dioda","diplom","disk","displej","divadlo","divoch","dlaha","dlouho","dluhopis","dnes","dobro","dobytek","docent","dochutit","dodnes","dohled","dohoda","dohra","dojem","dojnice","doklad","dokola","doktor","dokument","dolar","doleva","dolina","doma","dominant","domluvit","domov","donutit","dopad","dopis","doplnit","doposud","doprovod","dopustit","dorazit","dorost","dort","dosah","doslov","dostatek","dosud","dosyta","dotaz","dotek","dotknout","doufat","doutnat","dovozce","dozadu","doznat","dozorce","drahota","drak","dramatik","dravec","draze","drdol","drobnost","drogerie","drozd","drsnost","drtit","drzost","duben","duchovno","dudek","duha","duhovka","dusit","dusno","dutost","dvojice","dvorec","dynamit","ekolog","ekonomie","elektron","elipsa","email","emise","emoce","empatie","epizoda","epocha","epopej","epos","esej","esence","eskorta","eskymo","etiketa","euforie","evoluce","exekuce","exkurze","expedice","exploze","export","extrakt","facka","fajfka","fakulta","fanatik","fantazie","farmacie","favorit","fazole","federace","fejeton","fenka","fialka","figurant","filozof","filtr","finance","finta","fixace","fjord","flanel","flirt","flotila","fond","fosfor","fotbal","fotka","foton","frakce","freska","fronta","fukar","funkce","fyzika","galeje","garant","genetika","geolog","gilotina","glazura","glejt","golem","golfista","gotika","graf","gramofon","granule","grep","gril","grog","groteska","guma","hadice","hadr","hala","halenka","hanba","hanopis","harfa","harpuna","havran","hebkost","hejkal","hejno","hejtman","hektar","helma","hematom","herec","herna","heslo","hezky","historik","hladovka","hlasivky","hlava","hledat","hlen","hlodavec","hloh","hloupost","hltat","hlubina","hluchota","hmat","hmota","hmyz","hnis","hnojivo","hnout","hoblina","hoboj","hoch","hodiny","hodlat","hodnota","hodovat","hojnost","hokej","holinka","holka","holub","homole","honitba","honorace","horal","horda","horizont","horko","horlivec","hormon","hornina","horoskop","horstvo","hospoda","hostina","hotovost","houba","houf","houpat","houska","hovor","hradba","hranice","hravost","hrazda","hrbolek","hrdina","hrdlo","hrdost","hrnek","hrobka","hromada","hrot","hrouda","hrozen","hrstka","hrubost","hryzat","hubenost","hubnout","hudba","hukot","humr","husita","hustota","hvozd","hybnost","hydrant","hygiena","hymna","hysterik","idylka","ihned","ikona","iluze","imunita","infekce","inflace","inkaso","inovace","inspekce","internet","invalida","investor","inzerce","ironie","jablko","jachta","jahoda","jakmile","jakost","jalovec","jantar","jarmark","jaro","jasan","jasno","jatka","javor","jazyk","jedinec","jedle","jednatel","jehlan","jekot","jelen","jelito","jemnost","jenom","jepice","jeseter","jevit","jezdec","jezero","jinak","jindy","jinoch","jiskra","jistota","jitrnice","jizva","jmenovat","jogurt","jurta","kabaret","kabel","kabinet","kachna","kadet","kadidlo","kahan","kajak","kajuta","kakao","kaktus","kalamita","kalhoty","kalibr","kalnost","kamera","kamkoliv","kamna","kanibal","kanoe","kantor","kapalina","kapela","kapitola","kapka","kaple","kapota","kapr","kapusta","kapybara","karamel","karotka","karton","kasa","katalog","katedra","kauce","kauza","kavalec","kazajka","kazeta","kazivost","kdekoliv","kdesi","kedluben","kemp","keramika","kino","klacek","kladivo","klam","klapot","klasika","klaun","klec","klenba","klepat","klesnout","klid","klima","klisna","klobouk","klokan","klopa","kloub","klubovna","klusat","kluzkost","kmen","kmitat","kmotr","kniha","knot","koalice","koberec","kobka","kobliha","kobyla","kocour","kohout","kojenec","kokos","koktejl","kolaps","koleda","kolize","kolo","komando","kometa","komik","komnata","komora","kompas","komunita","konat","koncept","kondice","konec","konfese","kongres","konina","konkurs","kontakt","konzerva","kopanec","kopie","kopnout","koprovka","korbel","korektor","kormidlo","koroptev","korpus","koruna","koryto","korzet","kosatec","kostka","kotel","kotleta","kotoul","koukat","koupelna","kousek","kouzlo","kovboj","koza","kozoroh","krabice","krach","krajina","kralovat","krasopis","kravata","kredit","krejcar","kresba","kreveta","kriket","kritik","krize","krkavec","krmelec","krmivo","krocan","krok","kronika","kropit","kroupa","krovka","krtek","kruhadlo","krupice","krutost","krvinka","krychle","krypta","krystal","kryt","kudlanka","kufr","kujnost","kukla","kulajda","kulich","kulka","kulomet","kultura","kuna","kupodivu","kurt","kurzor","kutil","kvalita","kvasinka","kvestor","kynolog","kyselina","kytara","kytice","kytka","kytovec","kyvadlo","labrador","lachtan","ladnost","laik","lakomec","lamela","lampa","lanovka","lasice","laso","lastura","latinka","lavina","lebka","leckdy","leden","lednice","ledovka","ledvina","legenda","legie","legrace","lehce","lehkost","lehnout","lektvar","lenochod","lentilka","lepenka","lepidlo","letadlo","letec","letmo","letokruh","levhart","levitace","levobok","libra","lichotka","lidojed","lidskost","lihovina","lijavec","lilek","limetka","linie","linka","linoleum","listopad","litina","litovat","lobista","lodivod","logika","logoped","lokalita","loket","lomcovat","lopata","lopuch","lord","losos","lotr","loudal","louh","louka","louskat","lovec","lstivost","lucerna","lucifer","lump","lusk","lustrace","lvice","lyra","lyrika","lysina","madam","madlo","magistr","mahagon","majetek","majitel","majorita","makak","makovice","makrela","malba","malina","malovat","malvice","maminka","mandle","manko","marnost","masakr","maskot","masopust","matice","matrika","maturita","mazanec","mazivo","mazlit","mazurka","mdloba","mechanik","meditace","medovina","melasa","meloun","mentolka","metla","metoda","metr","mezera","migrace","mihnout","mihule","mikina","mikrofon","milenec","milimetr","milost","mimika","mincovna","minibar","minomet","minulost","miska","mistr","mixovat","mladost","mlha","mlhovina","mlok","mlsat","mluvit","mnich","mnohem","mobil","mocnost","modelka","modlitba","mohyla","mokro","molekula","momentka","monarcha","monokl","monstrum","montovat","monzun","mosaz","moskyt","most","motivace","motorka","motyka","moucha","moudrost","mozaika","mozek","mozol","mramor","mravenec","mrkev","mrtvola","mrzet","mrzutost","mstitel","mudrc","muflon","mulat","mumie","munice","muset","mutace","muzeum","muzikant","myslivec","mzda","nabourat","nachytat","nadace","nadbytek","nadhoz","nadobro","nadpis","nahlas","nahnat","nahodile","nahradit","naivita","najednou","najisto","najmout","naklonit","nakonec","nakrmit","nalevo","namazat","namluvit","nanometr","naoko","naopak","naostro","napadat","napevno","naplnit","napnout","naposled","naprosto","narodit","naruby","narychlo","nasadit","nasekat","naslepo","nastat","natolik","navenek","navrch","navzdory","nazvat","nebe","nechat","necky","nedaleko","nedbat","neduh","negace","nehet","nehoda","nejen","nejprve","neklid","nelibost","nemilost","nemoc","neochota","neonka","nepokoj","nerost","nerv","nesmysl","nesoulad","netvor","neuron","nevina","nezvykle","nicota","nijak","nikam","nikdy","nikl","nikterak","nitro","nocleh","nohavice","nominace","nora","norek","nositel","nosnost","nouze","noviny","novota","nozdra","nuda","nudle","nuget","nutit","nutnost","nutrie","nymfa","obal","obarvit","obava","obdiv","obec","obehnat","obejmout","obezita","obhajoba","obilnice","objasnit","objekt","obklopit","oblast","oblek","obliba","obloha","obluda","obnos","obohatit","obojek","obout","obrazec","obrna","obruba","obrys","obsah","obsluha","obstarat","obuv","obvaz","obvinit","obvod","obvykle","obyvatel","obzor","ocas","ocel","ocenit","ochladit","ochota","ochrana","ocitnout","odboj","odbyt","odchod","odcizit","odebrat","odeslat","odevzdat","odezva","odhadce","odhodit","odjet","odjinud","odkaz","odkoupit","odliv","odluka","odmlka","odolnost","odpad","odpis","odplout","odpor","odpustit","odpykat","odrazka","odsoudit","odstup","odsun","odtok","odtud","odvaha","odveta","odvolat","odvracet","odznak","ofina","ofsajd","ohlas","ohnisko","ohrada","ohrozit","ohryzek","okap","okenice","oklika","okno","okouzlit","okovy","okrasa","okres","okrsek","okruh","okupant","okurka","okusit","olejnina","olizovat","omak","omeleta","omezit","omladina","omlouvat","omluva","omyl","onehdy","opakovat","opasek","operace","opice","opilost","opisovat","opora","opozice","opravdu","oproti","orbital","orchestr","orgie","orlice","orloj","ortel","osada","oschnout","osika","osivo","oslava","oslepit","oslnit","oslovit","osnova","osoba","osolit","ospalec","osten","ostraha","ostuda","ostych","osvojit","oteplit","otisk","otop","otrhat","otrlost","otrok","otruby","otvor","ovanout","ovar","oves","ovlivnit","ovoce","oxid","ozdoba","pachatel","pacient","padouch","pahorek","pakt","palanda","palec","palivo","paluba","pamflet","pamlsek","panenka","panika","panna","panovat","panstvo","pantofle","paprika","parketa","parodie","parta","paruka","paryba","paseka","pasivita","pastelka","patent","patrona","pavouk","pazneht","pazourek","pecka","pedagog","pejsek","peklo","peloton","penalta","pendrek","penze","periskop","pero","pestrost","petarda","petice","petrolej","pevnina","pexeso","pianista","piha","pijavice","pikle","piknik","pilina","pilnost","pilulka","pinzeta","pipeta","pisatel","pistole","pitevna","pivnice","pivovar","placenta","plakat","plamen","planeta","plastika","platit","plavidlo","plaz","plech","plemeno","plenta","ples","pletivo","plevel","plivat","plnit","plno","plocha","plodina","plomba","plout","pluk","plyn","pobavit","pobyt","pochod","pocit","poctivec","podat","podcenit","podepsat","podhled","podivit","podklad","podmanit","podnik","podoba","podpora","podraz","podstata","podvod","podzim","poezie","pohanka","pohnutka","pohovor","pohroma","pohyb","pointa","pojistka","pojmout","pokazit","pokles","pokoj","pokrok","pokuta","pokyn","poledne","polibek","polknout","poloha","polynom","pomalu","pominout","pomlka","pomoc","pomsta","pomyslet","ponechat","ponorka","ponurost","popadat","popel","popisek","poplach","poprosit","popsat","popud","poradce","porce","porod","porucha","poryv","posadit","posed","posila","poskok","poslanec","posoudit","pospolu","postava","posudek","posyp","potah","potkan","potlesk","potomek","potrava","potupa","potvora","poukaz","pouto","pouzdro","povaha","povidla","povlak","povoz","povrch","povstat","povyk","povzdech","pozdrav","pozemek","poznatek","pozor","pozvat","pracovat","prahory","praktika","prales","praotec","praporek","prase","pravda","princip","prkno","probudit","procento","prodej","profese","prohra","projekt","prolomit","promile","pronikat","propad","prorok","prosba","proton","proutek","provaz","prskavka","prsten","prudkost","prut","prvek","prvohory","psanec","psovod","pstruh","ptactvo","puberta","puch","pudl","pukavec","puklina","pukrle","pult","pumpa","punc","pupen","pusa","pusinka","pustina","putovat","putyka","pyramida","pysk","pytel","racek","rachot","radiace","radnice","radon","raft","ragby","raketa","rakovina","rameno","rampouch","rande","rarach","rarita","rasovna","rastr","ratolest","razance","razidlo","reagovat","reakce","recept","redaktor","referent","reflex","rejnok","reklama","rekord","rekrut","rektor","reputace","revize","revma","revolver","rezerva","riskovat","riziko","robotika","rodokmen","rohovka","rokle","rokoko","romaneto","ropovod","ropucha","rorejs","rosol","rostlina","rotmistr","rotoped","rotunda","roubenka","roucho","roup","roura","rovina","rovnice","rozbor","rozchod","rozdat","rozeznat","rozhodce","rozinka","rozjezd","rozkaz","rozloha","rozmar","rozpad","rozruch","rozsah","roztok","rozum","rozvod","rubrika","ruchadlo","rukavice","rukopis","ryba","rybolov","rychlost","rydlo","rypadlo","rytina","ryzost","sadista","sahat","sako","samec","samizdat","samota","sanitka","sardinka","sasanka","satelit","sazba","sazenice","sbor","schovat","sebranka","secese","sedadlo","sediment","sedlo","sehnat","sejmout","sekera","sekta","sekunda","sekvoje","semeno","seno","servis","sesadit","seshora","seskok","seslat","sestra","sesuv","sesypat","setba","setina","setkat","setnout","setrvat","sever","seznam","shoda","shrnout","sifon","silnice","sirka","sirotek","sirup","situace","skafandr","skalisko","skanzen","skaut","skeptik","skica","skladba","sklenice","sklo","skluz","skoba","skokan","skoro","skripta","skrz","skupina","skvost","skvrna","slabika","sladidlo","slanina","slast","slavnost","sledovat","slepec","sleva","slezina","slib","slina","sliznice","slon","sloupek","slovo","sluch","sluha","slunce","slupka","slza","smaragd","smetana","smilstvo","smlouva","smog","smrad","smrk","smrtka","smutek","smysl","snad","snaha","snob","sobota","socha","sodovka","sokol","sopka","sotva","souboj","soucit","soudce","souhlas","soulad","soumrak","souprava","soused","soutok","souviset","spalovna","spasitel","spis","splav","spodek","spojenec","spolu","sponzor","spornost","spousta","sprcha","spustit","sranda","sraz","srdce","srna","srnec","srovnat","srpen","srst","srub","stanice","starosta","statika","stavba","stehno","stezka","stodola","stolek","stopa","storno","stoupat","strach","stres","strhnout","strom","struna","studna","stupnice","stvol","styk","subjekt","subtropy","suchar","sudost","sukno","sundat","sunout","surikata","surovina","svah","svalstvo","svetr","svatba","svazek","svisle","svitek","svoboda","svodidlo","svorka","svrab","sykavka","sykot","synek","synovec","sypat","sypkost","syrovost","sysel","sytost","tabletka","tabule","tahoun","tajemno","tajfun","tajga","tajit","tajnost","taktika","tamhle","tampon","tancovat","tanec","tanker","tapeta","tavenina","tazatel","technika","tehdy","tekutina","telefon","temnota","tendence","tenista","tenor","teplota","tepna","teprve","terapie","termoska","textil","ticho","tiskopis","titulek","tkadlec","tkanina","tlapka","tleskat","tlukot","tlupa","tmel","toaleta","topinka","topol","torzo","touha","toulec","tradice","traktor","tramp","trasa","traverza","trefit","trest","trezor","trhavina","trhlina","trochu","trojice","troska","trouba","trpce","trpitel","trpkost","trubec","truchlit","truhlice","trus","trvat","tudy","tuhnout","tuhost","tundra","turista","turnaj","tuzemsko","tvaroh","tvorba","tvrdost","tvrz","tygr","tykev","ubohost","uboze","ubrat","ubrousek","ubrus","ubytovna","ucho","uctivost","udivit","uhradit","ujednat","ujistit","ujmout","ukazatel","uklidnit","uklonit","ukotvit","ukrojit","ulice","ulita","ulovit","umyvadlo","unavit","uniforma","uniknout","upadnout","uplatnit","uplynout","upoutat","upravit","uran","urazit","usednout","usilovat","usmrtit","usnadnit","usnout","usoudit","ustlat","ustrnout","utahovat","utkat","utlumit","utonout","utopenec","utrousit","uvalit","uvolnit","uvozovka","uzdravit","uzel","uzenina","uzlina","uznat","vagon","valcha","valoun","vana","vandal","vanilka","varan","varhany","varovat","vcelku","vchod","vdova","vedro","vegetace","vejce","velbloud","veletrh","velitel","velmoc","velryba","venkov","veranda","verze","veselka","veskrze","vesnice","vespodu","vesta","veterina","veverka","vibrace","vichr","videohra","vidina","vidle","vila","vinice","viset","vitalita","vize","vizitka","vjezd","vklad","vkus","vlajka","vlak","vlasec","vlevo","vlhkost","vliv","vlnovka","vloupat","vnucovat","vnuk","voda","vodivost","vodoznak","vodstvo","vojensky","vojna","vojsko","volant","volba","volit","volno","voskovka","vozidlo","vozovna","vpravo","vrabec","vracet","vrah","vrata","vrba","vrcholek","vrhat","vrstva","vrtule","vsadit","vstoupit","vstup","vtip","vybavit","vybrat","vychovat","vydat","vydra","vyfotit","vyhledat","vyhnout","vyhodit","vyhradit","vyhubit","vyjasnit","vyjet","vyjmout","vyklopit","vykonat","vylekat","vymazat","vymezit","vymizet","vymyslet","vynechat","vynikat","vynutit","vypadat","vyplatit","vypravit","vypustit","vyrazit","vyrovnat","vyrvat","vyslovit","vysoko","vystavit","vysunout","vysypat","vytasit","vytesat","vytratit","vyvinout","vyvolat","vyvrhel","vyzdobit","vyznat","vzadu","vzbudit","vzchopit","vzdor","vzduch","vzdychat","vzestup","vzhledem","vzkaz","vzlykat","vznik","vzorek","vzpoura","vztah","vztek","xylofon","zabrat","zabydlet","zachovat","zadarmo","zadusit","zafoukat","zahltit","zahodit","zahrada","zahynout","zajatec","zajet","zajistit","zaklepat","zakoupit","zalepit","zamezit","zamotat","zamyslet","zanechat","zanikat","zaplatit","zapojit","zapsat","zarazit","zastavit","zasunout","zatajit","zatemnit","zatknout","zaujmout","zavalit","zavelet","zavinit","zavolat","zavrtat","zazvonit","zbavit","zbrusu","zbudovat","zbytek","zdaleka","zdarma","zdatnost","zdivo","zdobit","zdroj","zdvih","zdymadlo","zelenina","zeman","zemina","zeptat","zezadu","zezdola","zhatit","zhltnout","zhluboka","zhotovit","zhruba","zima","zimnice","zjemnit","zklamat","zkoumat","zkratka","zkumavka","zlato","zlehka","zloba","zlom","zlost","zlozvyk","zmapovat","zmar","zmatek","zmije","zmizet","zmocnit","zmodrat","zmrzlina","zmutovat","znak","znalost","znamenat","znovu","zobrazit","zotavit","zoubek","zoufale","zplodit","zpomalit","zprava","zprostit","zprudka","zprvu","zrada","zranit","zrcadlo","zrnitost","zrno","zrovna","zrychlit","zrzavost","zticha","ztratit","zubovina","zubr","zvednout","zvenku","zvesela","zvon","zvrat","zvukovod","zvyk"]')},710:(e,i,n)=>{"use strict";const a=n(8317);e.exports=(e,i,n)=>0!==a(e,i,n)},736:(e,i,n)=>{e.exports=function(e){function i(e){let n,r,t,s=null;function o(...e){if(!o.enabled)return;const a=o,r=Number(new Date),t=r-(n||r);a.diff=t,a.prev=n,a.curr=r,n=r,e[0]=i.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let s=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(n,r)=>{if("%%"===n)return"%";s++;const t=i.formatters[r];if("function"==typeof t){const i=e[s];n=t.call(a,i),e.splice(s,1),s--}return n}),i.formatArgs.call(a,e),(a.log||i.log).apply(a,e)}return o.namespace=e,o.useColors=i.useColors(),o.color=i.selectColor(e),o.extend=a,o.destroy=i.destroy,Object.defineProperty(o,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==s?s:(r!==i.namespaces&&(r=i.namespaces,t=i.enabled(e)),t),set:e=>{s=e}}),"function"==typeof i.init&&i.init(o),o}function a(e,n){const a=i(this.namespace+(void 0===n?":":n)+e);return a.log=this.log,a}function r(e,i){let n=0,a=0,r=-1,t=0;for(;n<e.length;)if(a<i.length&&(i[a]===e[n]||"*"===i[a]))"*"===i[a]?(r=a,t=n,a++):(n++,a++);else{if(-1===r)return!1;a=r+1,t++,n=t}for(;a<i.length&&"*"===i[a];)a++;return a===i.length}return i.debug=i,i.default=i,i.coerce=function(e){return e instanceof Error?e.stack||e.message:e},i.disable=function(){const e=[...i.names,...i.skips.map(e=>"-"+e)].join(",");return i.enable(""),e},i.enable=function(e){i.save(e),i.namespaces=e,i.names=[],i.skips=[];const n=("string"==typeof e?e:"").trim().replace(/\s+/g,",").split(",").filter(Boolean);for(const e of n)"-"===e[0]?i.skips.push(e.slice(1)):i.names.push(e)},i.enabled=function(e){for(const n of i.skips)if(r(e,n))return!1;for(const n of i.names)if(r(e,n))return!0;return!1},i.humanize=n(6585),i.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach(n=>{i[n]=e[n]}),i.names=[],i.skips=[],i.formatters={},i.selectColor=function(e){let n=0;for(let i=0;i<e.length;i++)n=(n<<5)-n+e.charCodeAt(i),n|=0;return i.colors[Math.abs(n)%i.colors.length]},i.enable(i.load()),i}},741:function(e,i,n){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,i,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(i,n);r&&!("get"in r?!i.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return i[n]}}),Object.defineProperty(e,a,r)}:function(e,i,n,a){void 0===a&&(a=n),e[a]=i[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,i){Object.defineProperty(e,"default",{enumerable:!0,value:i})}:function(e,i){e.default=i}),t=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(i,e,n);return r(i,e),i};Object.defineProperty(i,"__esModule",{value:!0}),i.mnemonicToSeed=i.createBip39KeyFromSeed=i.derivers=void 0;const s=t(n(1603)),o=t(n(3144)),c=t(n(7268)),h=t(n(7266));i.derivers={bip32:s,bip39:o,slip10:h,cip3:c};var u=n(3144);Object.defineProperty(i,"createBip39KeyFromSeed",{enumerable:!0,get:function(){return u.createBip39KeyFromSeed}}),Object.defineProperty(i,"mnemonicToSeed",{enumerable:!0,get:function(){return u.mnemonicToSeed}})},823:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.validatePathSegment=i.deriveKeyFromPath=void 0;const a=n(2367),r=n(482),t=n(4813),s=n(4927),o=n(2913),c=n(741),h=n(4533);function u(e,i,n){if(0===e.length)throw new Error("Invalid HD path segment: The segment must not be empty.");let r=!1;if(e.forEach((e,i)=>{if(0===i){if(r=e instanceof Uint8Array||s.BIP_39_PATH_REGEX.test(e),!(e instanceof Uint8Array||r||s.BIP_32_PATH_REGEX.test(e)||s.SLIP_10_PATH_REGEX.test(e)||s.CIP_3_PATH_REGEX.test(e)))throw l()}else if(e instanceof Uint8Array||!s.BIP_32_PATH_REGEX.test(e)&&!s.SLIP_10_PATH_REGEX.test(e)&&!s.CIP_3_PATH_REGEX.test(e))throw l()}),n===s.MIN_BIP_44_DEPTH&&(!r||1!==e.length))throw new Error(`Invalid HD path segment: The segment must consist of a single BIP-39 node for depths of ${s.MIN_BIP_44_DEPTH}. Received: "${String(e)}".`);if(!i&&!r)throw new Error("Invalid derivation parameters: Must specify parent key if the first node of the path segment is not a BIP-39 node.");if(i&&r)throw new Error("Invalid derivation parameters: May not specify parent key if the path segment starts with a BIP-39 node.");const t=r?e.slice(1):e;if(t.length>0){const e=t[0]?.split(":")[0];(0,a.assert)(e),(0,a.assert)(t.every(i=>i.startsWith(`${e}:`)),"Invalid HD path segment: Cannot mix 'bip32' and 'slip10' path segments.")}}function l(){return new Error("Invalid HD path segment: The path segment is malformed.")}i.deriveKeyFromPath=async function(e,i){const{path:n,depth:s=n.length}=e,p="node"in e?e.node:void 0,d="network"in e?e.network:p?.network,f="curve"in e?e.curve:p?.curve;if(p&&!(p instanceof h.SLIP10Node)&&!(p instanceof t.BIP44Node)&&!(p instanceof r.BIP44CoinTypeNode))throw new Error("Invalid arguments: Node must be a SLIP-10 node or a BIP-44 node when provided.");if(!f)throw new Error("Invalid arguments: Must specify either a parent node or curve.");return u(n,Boolean(p?.privateKey)||Boolean(p?.publicKey),s),await n.reduce(async(e,n,r)=>{const t=await e;if("string"==typeof n){const[e,r]=n.split(":");(0,a.assert)(e),(0,a.assert)(r),(0,a.assert)(function(e){return e in c.derivers}(e),`Unknown derivation type: "${e}".`);const s=c.derivers[e];return await s.deriveChildKey({path:r,node:t,curve:(0,o.getCurveByName)(f),network:d},i)}return(0,a.assert)(0===r,l()),await c.derivers.bip39.deriveChildKey({path:n,node:t,curve:(0,o.getCurveByName)(f),network:d},i)},Promise.resolve(p))},i.validatePathSegment=u},911:(e,i,n)=>{"use strict";const a=n(3321);e.exports=(e,i)=>{const n=a(e.trim().replace(/^[=v]+/,""),i);return n?n.version:null}},943:e=>{const i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",n=new Uint8Array(256);for(let e=0;e<64;e++)n[i.charCodeAt(e)]=e;function a(e){let i=e.length;return 61===e.charCodeAt(i-1)&&i--,i>1&&61===e.charCodeAt(i-1)&&i--,3*i>>>2}n[45]=62,n[95]=63,e.exports={byteLength:a,toString:function(e){const n=e.byteLength;let a="";for(let r=0;r<n;r+=3)a+=i[e[r]>>2]+i[(3&e[r])<<4|e[r+1]>>4]+i[(15&e[r+1])<<2|e[r+2]>>6]+i[63&e[r+2]];return n%3==2?a=a.substring(0,a.length-1)+"=":n%3==1&&(a=a.substring(0,a.length-2)+"=="),a},write:function(e,i,r=0,t=a(i)){const s=Math.min(t,e.byteLength-r);for(let a=0,r=0;r<s;a+=4){const t=n[i.charCodeAt(a)],s=n[i.charCodeAt(a+1)],o=n[i.charCodeAt(a+2)],c=n[i.charCodeAt(a+3)];e[r++]=t<<2|s>>4,e[r++]=(15&s)<<4|o>>2,e[r++]=(3&o)<<6|63&c}return s}}},1043:(e,i,n)=>{var a="undefined"!=typeof WebAssembly&&n(481)(),r=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]),t=144,s=t,o=[];function c(e,i){if(!(this instanceof c))return new c(e,i);if(!e||e.length<24)throw new Error("nonce must be at least 24 bytes");if(!i||i.length<32)throw new Error("key must be at least 32 bytes");this._xor=a?new h(e,i):new u(e,i)}function h(e,i){o.length||(o.push(t),t+=64),this._pointer=o.pop(),this._nonce=this._pointer+8,this._key=this._nonce+24,this._overflow=0,this._memory=new Uint8Array(a.memory.buffer),this._memory.fill(0,this._pointer,this._pointer+8),this._memory.set(e,this._nonce),this._memory.set(i,this._key)}function u(e,i){this._s=new Uint8Array(32),this._z=new Uint8Array(16),this._overflow=0,p(this._s,e,i,r);for(var n=0;n<8;n++)this._z[n]=e[n+16]}function l(e,i,n,a){for(var r,t=255&a[0]|(255&a[1])<<8|(255&a[2])<<16|(255&a[3])<<24,s=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,o=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,c=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,h=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,u=255&a[4]|(255&a[5])<<8|(255&a[6])<<16|(255&a[7])<<24,l=255&i[0]|(255&i[1])<<8|(255&i[2])<<16|(255&i[3])<<24,p=255&i[4]|(255&i[5])<<8|(255&i[6])<<16|(255&i[7])<<24,d=255&i[8]|(255&i[9])<<8|(255&i[10])<<16|(255&i[11])<<24,f=255&i[12]|(255&i[13])<<8|(255&i[14])<<16|(255&i[15])<<24,g=255&a[8]|(255&a[9])<<8|(255&a[10])<<16|(255&a[11])<<24,m=255&n[16]|(255&n[17])<<8|(255&n[18])<<16|(255&n[19])<<24,k=255&n[20]|(255&n[21])<<8|(255&n[22])<<16|(255&n[23])<<24,b=255&n[24]|(255&n[25])<<8|(255&n[26])<<16|(255&n[27])<<24,_=255&n[28]|(255&n[29])<<8|(255&n[30])<<16|(255&n[31])<<24,y=255&a[12]|(255&a[13])<<8|(255&a[14])<<16|(255&a[15])<<24,v=t,A=s,z=o,I=c,E=h,j=u,w=l,B=p,C=d,x=f,S=g,Q=m,T=k,P=b,L=_,D=y,U=0;U<20;U+=2)v^=(r=(T^=(r=(C^=(r=(E^=(r=v+T|0)<<7|r>>>25)+v|0)<<9|r>>>23)+E|0)<<13|r>>>19)+C|0)<<18|r>>>14,j^=(r=(A^=(r=(P^=(r=(x^=(r=j+A|0)<<7|r>>>25)+j|0)<<9|r>>>23)+x|0)<<13|r>>>19)+P|0)<<18|r>>>14,S^=(r=(w^=(r=(z^=(r=(L^=(r=S+w|0)<<7|r>>>25)+S|0)<<9|r>>>23)+L|0)<<13|r>>>19)+z|0)<<18|r>>>14,D^=(r=(Q^=(r=(B^=(r=(I^=(r=D+Q|0)<<7|r>>>25)+D|0)<<9|r>>>23)+I|0)<<13|r>>>19)+B|0)<<18|r>>>14,v^=(r=(I^=(r=(z^=(r=(A^=(r=v+I|0)<<7|r>>>25)+v|0)<<9|r>>>23)+A|0)<<13|r>>>19)+z|0)<<18|r>>>14,j^=(r=(E^=(r=(B^=(r=(w^=(r=j+E|0)<<7|r>>>25)+j|0)<<9|r>>>23)+w|0)<<13|r>>>19)+B|0)<<18|r>>>14,S^=(r=(x^=(r=(C^=(r=(Q^=(r=S+x|0)<<7|r>>>25)+S|0)<<9|r>>>23)+Q|0)<<13|r>>>19)+C|0)<<18|r>>>14,D^=(r=(L^=(r=(P^=(r=(T^=(r=D+L|0)<<7|r>>>25)+D|0)<<9|r>>>23)+T|0)<<13|r>>>19)+P|0)<<18|r>>>14;v=v+t|0,A=A+s|0,z=z+o|0,I=I+c|0,E=E+h|0,j=j+u|0,w=w+l|0,B=B+p|0,C=C+d|0,x=x+f|0,S=S+g|0,Q=Q+m|0,T=T+k|0,P=P+b|0,L=L+_|0,D=D+y|0,e[0]=v>>>0&255,e[1]=v>>>8&255,e[2]=v>>>16&255,e[3]=v>>>24&255,e[4]=A>>>0&255,e[5]=A>>>8&255,e[6]=A>>>16&255,e[7]=A>>>24&255,e[8]=z>>>0&255,e[9]=z>>>8&255,e[10]=z>>>16&255,e[11]=z>>>24&255,e[12]=I>>>0&255,e[13]=I>>>8&255,e[14]=I>>>16&255,e[15]=I>>>24&255,e[16]=E>>>0&255,e[17]=E>>>8&255,e[18]=E>>>16&255,e[19]=E>>>24&255,e[20]=j>>>0&255,e[21]=j>>>8&255,e[22]=j>>>16&255,e[23]=j>>>24&255,e[24]=w>>>0&255,e[25]=w>>>8&255,e[26]=w>>>16&255,e[27]=w>>>24&255,e[28]=B>>>0&255,e[29]=B>>>8&255,e[30]=B>>>16&255,e[31]=B>>>24&255,e[32]=C>>>0&255,e[33]=C>>>8&255,e[34]=C>>>16&255,e[35]=C>>>24&255,e[36]=x>>>0&255,e[37]=x>>>8&255,e[38]=x>>>16&255,e[39]=x>>>24&255,e[40]=S>>>0&255,e[41]=S>>>8&255,e[42]=S>>>16&255,e[43]=S>>>24&255,e[44]=Q>>>0&255,e[45]=Q>>>8&255,e[46]=Q>>>16&255,e[47]=Q>>>24&255,e[48]=T>>>0&255,e[49]=T>>>8&255,e[50]=T>>>16&255,e[51]=T>>>24&255,e[52]=P>>>0&255,e[53]=P>>>8&255,e[54]=P>>>16&255,e[55]=P>>>24&255,e[56]=L>>>0&255,e[57]=L>>>8&255,e[58]=L>>>16&255,e[59]=L>>>24&255,e[60]=D>>>0&255,e[61]=D>>>8&255,e[62]=D>>>16&255,e[63]=D>>>24&255}function p(e,i,n,a){for(var r,t=255&a[0]|(255&a[1])<<8|(255&a[2])<<16|(255&a[3])<<24,s=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,o=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,c=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,h=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,u=255&a[4]|(255&a[5])<<8|(255&a[6])<<16|(255&a[7])<<24,l=255&i[0]|(255&i[1])<<8|(255&i[2])<<16|(255&i[3])<<24,p=255&i[4]|(255&i[5])<<8|(255&i[6])<<16|(255&i[7])<<24,d=255&i[8]|(255&i[9])<<8|(255&i[10])<<16|(255&i[11])<<24,f=255&i[12]|(255&i[13])<<8|(255&i[14])<<16|(255&i[15])<<24,g=255&a[8]|(255&a[9])<<8|(255&a[10])<<16|(255&a[11])<<24,m=255&n[16]|(255&n[17])<<8|(255&n[18])<<16|(255&n[19])<<24,k=255&n[20]|(255&n[21])<<8|(255&n[22])<<16|(255&n[23])<<24,b=255&n[24]|(255&n[25])<<8|(255&n[26])<<16|(255&n[27])<<24,_=255&n[28]|(255&n[29])<<8|(255&n[30])<<16|(255&n[31])<<24,y=255&a[12]|(255&a[13])<<8|(255&a[14])<<16|(255&a[15])<<24,v=0;v<20;v+=2)t^=(r=(k^=(r=(d^=(r=(h^=(r=t+k|0)<<7|r>>>25)+t|0)<<9|r>>>23)+h|0)<<13|r>>>19)+d|0)<<18|r>>>14,u^=(r=(s^=(r=(b^=(r=(f^=(r=u+s|0)<<7|r>>>25)+u|0)<<9|r>>>23)+f|0)<<13|r>>>19)+b|0)<<18|r>>>14,g^=(r=(l^=(r=(o^=(r=(_^=(r=g+l|0)<<7|r>>>25)+g|0)<<9|r>>>23)+_|0)<<13|r>>>19)+o|0)<<18|r>>>14,y^=(r=(m^=(r=(p^=(r=(c^=(r=y+m|0)<<7|r>>>25)+y|0)<<9|r>>>23)+c|0)<<13|r>>>19)+p|0)<<18|r>>>14,t^=(r=(c^=(r=(o^=(r=(s^=(r=t+c|0)<<7|r>>>25)+t|0)<<9|r>>>23)+s|0)<<13|r>>>19)+o|0)<<18|r>>>14,u^=(r=(h^=(r=(p^=(r=(l^=(r=u+h|0)<<7|r>>>25)+u|0)<<9|r>>>23)+l|0)<<13|r>>>19)+p|0)<<18|r>>>14,g^=(r=(f^=(r=(d^=(r=(m^=(r=g+f|0)<<7|r>>>25)+g|0)<<9|r>>>23)+m|0)<<13|r>>>19)+d|0)<<18|r>>>14,y^=(r=(_^=(r=(b^=(r=(k^=(r=y+_|0)<<7|r>>>25)+y|0)<<9|r>>>23)+k|0)<<13|r>>>19)+b|0)<<18|r>>>14;e[0]=t>>>0&255,e[1]=t>>>8&255,e[2]=t>>>16&255,e[3]=t>>>24&255,e[4]=u>>>0&255,e[5]=u>>>8&255,e[6]=u>>>16&255,e[7]=u>>>24&255,e[8]=g>>>0&255,e[9]=g>>>8&255,e[10]=g>>>16&255,e[11]=g>>>24&255,e[12]=y>>>0&255,e[13]=y>>>8&255,e[14]=y>>>16&255,e[15]=y>>>24&255,e[16]=l>>>0&255,e[17]=l>>>8&255,e[18]=l>>>16&255,e[19]=l>>>24&255,e[20]=p>>>0&255,e[21]=p>>>8&255,e[22]=p>>>16&255,e[23]=p>>>24&255,e[24]=d>>>0&255,e[25]=d>>>8&255,e[26]=d>>>16&255,e[27]=d>>>24&255,e[28]=f>>>0&255,e[29]=f>>>8&255,e[30]=f>>>16&255,e[31]=f>>>24&255}e.exports=c,c.NONCEBYTES=24,c.KEYBYTES=32,c.core_hsalsa20=p,c.SIGMA=r,c.prototype.update=function(e,i){if(!e)throw new Error("input must be Uint8Array or Buffer");return i||(i=new Uint8Array(e.length)),e.length&&this._xor.update(e,i),i},c.prototype.final=c.prototype.finalize=function(){this._xor.finalize(),this._xor=null},h.prototype.realloc=function(e){a.memory.grow(Math.ceil(Math.abs(e-this._memory.length)/65536)),this._memory=new Uint8Array(a.memory.buffer)},h.prototype.update=function(e,i){var n=this._overflow+e.length,r=t+this._overflow;(s=t+n)>=this._memory.length&&this.realloc(s),this._memory.set(e,r),a.xsalsa20_xor(this._pointer,t,t,n,this._nonce,this._key),i.set(this._memory.subarray(r,t+n)),this._overflow=63&n},h.prototype.finalize=function(){this._memory.fill(0,this._pointer,this._key+32),s>t&&(this._memory.fill(0,t,s),s=0),o.push(this._pointer)},u.prototype.update=function(e,i){for(var n=new Uint8Array(64),a=0,t=this._overflow,s=e.length+this._overflow,o=this._z,c=-this._overflow,h=-this._overflow;s>=64;){for(l(n,o,this._s,r);t<64;t++)i[h+t]=e[c+t]^n[t];for(a=1,t=8;t<16;t++)a+=255&o[t],o[t]=255&a,a>>>=8;s-=64,h+=64,c+=64,t=0}if(s>0)for(l(n,o,this._s,r);t<s;t++)i[h+t]=e[c+t]^n[t];this._overflow=63&s},u.prototype.finalize=function(){this._s.fill(0),this._z.fill(0)}},1200:(e,i,n)=>{"use strict";const a=n(7544);e.exports=(e,i)=>e.sort((e,n)=>a(n,e,i))},1223:(e,i,n)=>{const{crypto_hash_sha512:a}=n(2004),{crypto_scalarmult:r,crypto_scalarmult_base:t}=n(1542),{randombytes:s}=n(7996),{crypto_generichash_batch:o}=n(4959),{crypto_stream_xsalsa20_MESSAGEBYTES_MAX:c}=n(6940),{crypto_secretbox_open_easy:h,crypto_secretbox_easy:u,crypto_secretbox_detached:l,crypto_secretbox_open_detached:p}=n(9191),d=n(1043),f=n(6889),g=32,m=32,k=16,b=c-16;function _(e,i){return v(e,g),v(i,m),s(i,32),t(e,i)}function y(e,i,n){const a=new Uint8Array(16),t=new Uint8Array(32);return f(0===r(t,n,i)),d.core_hsalsa20(e,a,t,d.SIGMA),!0}function v(e,i){if(!e||i&&e.length<i)throw new Error("Argument must be a buffer"+(i?" of length "+i:""))}function A(e){for(let i=0;i<e.length;i++)e[i]=0}e.exports={crypto_box_easy:function(e,i,n,a,r){return f(e.length>=i.length+k,"c should be at least 'm.length + crypto_box_MACBYTES' bytes"),f(i.length<=b,"m should be at most 'crypto_box_MESSAGEBYTES_MAX' bytes"),function(e,i,n,a,r,t){v(i,k),v(a,24),v(r,g),v(t,m);const s=new Uint8Array(32);f(y(s,r,t));const o=function(e,i,n,a,r){return l(e,i,n,a,r)}(e,i,n,a,s);return A(s),o}(e.subarray(k,i.length+k),e.subarray(0,k),i,n,a,r)},crypto_box_open_easy:function(e,i,n,a,r){return f(i.length>=e.length+k,"c should be at least 'm.length + crypto_box_MACBYTES' bytes"),function(e,i,n,a,r,t){const s=new Uint8Array(32);f(y(s,r,t));const o=function(e,i,n,a,r){return p(e,i,n,a,r)}(e,i,n,a,s);return A(s),o}(e,i.subarray(k,e.length+k),i.subarray(0,k),n,a,r)},crypto_box_keypair:_,crypto_box_seed_keypair:function(e,i,n){f(e.byteLength===g,"pk should be 'crypto_box_PUBLICKEYBYTES' bytes"),f(i.byteLength===m,"sk should be 'crypto_box_SECRETKEYBYTES' bytes"),f(32===i.byteLength,"sk should be 'crypto_box_SEEDBYTES' bytes");const r=new Uint8Array(64);return a(r,n,32),i.set(r.subarray(0,32)),r.fill(0),t(e,i)},crypto_box_seal:function(e,i,n){v(e,48+i.length),v(n,g);var a=e.subarray(0,g),t=new Uint8Array(m);_(a,t);var s=new Uint8Array(24);o(s,[a,n]);var c=new Uint8Array(g);r(c,t,n);var h=new Uint8Array(32),l=new Uint8Array(16);d.core_hsalsa20(h,l,c,d.SIGMA),u(e.subarray(a.length),i,s,h),A(t)},crypto_box_seal_open:function(e,i,n,a){v(i,48),v(e,i.length-48),v(n,g),v(a,m);var t=i.subarray(0,g),s=new Uint8Array(24);o(s,[t,n]);var c=new Uint8Array(g);r(c,a,t);var u=new Uint8Array(32),l=new Uint8Array(16);return d.core_hsalsa20(u,l,c,d.SIGMA),h(e,i.subarray(t.length),s,u)},crypto_box_PUBLICKEYBYTES:g,crypto_box_SECRETKEYBYTES:m,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_box_SEALBYTES:48,crypto_box_SEEDBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_MACBYTES:k}},1353:e=>{if(1!==new Uint16Array([1])[0])throw new Error("Big endian architecture is not supported.");var i=function(e){var i,n,a,r,t,s,o,c;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,i=255&e[0]|(255&e[1])<<8,this.r[0]=8191&i,n=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(i>>>13|n<<3),a=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(n>>>10|a<<6),r=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(a>>>7|r<<9),t=255&e[8]|(255&e[9])<<8,this.r[4]=255&(r>>>4|t<<12),this.r[5]=t>>>1&8190,s=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(t>>>14|s<<2),o=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(s>>>11|o<<5),c=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(o>>>8|c<<8),this.r[9]=c>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};i.prototype.blocks=function(e,i,n){for(var a,r,t,s,o,c,h,u,l,p,d,f,g,m,k,b,_,y,v,A=this.fin?0:2048,z=this.h[0],I=this.h[1],E=this.h[2],j=this.h[3],w=this.h[4],B=this.h[5],C=this.h[6],x=this.h[7],S=this.h[8],Q=this.h[9],T=this.r[0],P=this.r[1],L=this.r[2],D=this.r[3],U=this.r[4],R=this.r[5],O=this.r[6],N=this.r[7],F=this.r[8],M=this.r[9];n>=16;)p=l=0,p+=(z+=8191&(a=255&e[i+0]|(255&e[i+1])<<8))*T,p+=(I+=8191&(a>>>13|(r=255&e[i+2]|(255&e[i+3])<<8)<<3))*(5*M),p+=(E+=8191&(r>>>10|(t=255&e[i+4]|(255&e[i+5])<<8)<<6))*(5*F),p+=(j+=8191&(t>>>7|(s=255&e[i+6]|(255&e[i+7])<<8)<<9))*(5*N),l=(p+=(w+=8191&(s>>>4|(o=255&e[i+8]|(255&e[i+9])<<8)<<12))*(5*O))>>>13,p&=8191,p+=(B+=o>>>1&8191)*(5*R),p+=(C+=8191&(o>>>14|(c=255&e[i+10]|(255&e[i+11])<<8)<<2))*(5*U),p+=(x+=8191&(c>>>11|(h=255&e[i+12]|(255&e[i+13])<<8)<<5))*(5*D),p+=(S+=8191&(h>>>8|(u=255&e[i+14]|(255&e[i+15])<<8)<<8))*(5*L),d=l+=(p+=(Q+=u>>>5|A)*(5*P))>>>13,d+=z*P,d+=I*T,d+=E*(5*M),d+=j*(5*F),l=(d+=w*(5*N))>>>13,d&=8191,d+=B*(5*O),d+=C*(5*R),d+=x*(5*U),d+=S*(5*D),l+=(d+=Q*(5*L))>>>13,d&=8191,f=l,f+=z*L,f+=I*P,f+=E*T,f+=j*(5*M),l=(f+=w*(5*F))>>>13,f&=8191,f+=B*(5*N),f+=C*(5*O),f+=x*(5*R),f+=S*(5*U),g=l+=(f+=Q*(5*D))>>>13,g+=z*D,g+=I*L,g+=E*P,g+=j*T,l=(g+=w*(5*M))>>>13,g&=8191,g+=B*(5*F),g+=C*(5*N),g+=x*(5*O),g+=S*(5*R),m=l+=(g+=Q*(5*U))>>>13,m+=z*U,m+=I*D,m+=E*L,m+=j*P,l=(m+=w*T)>>>13,m&=8191,m+=B*(5*M),m+=C*(5*F),m+=x*(5*N),m+=S*(5*O),k=l+=(m+=Q*(5*R))>>>13,k+=z*R,k+=I*U,k+=E*D,k+=j*L,l=(k+=w*P)>>>13,k&=8191,k+=B*T,k+=C*(5*M),k+=x*(5*F),k+=S*(5*N),b=l+=(k+=Q*(5*O))>>>13,b+=z*O,b+=I*R,b+=E*U,b+=j*D,l=(b+=w*L)>>>13,b&=8191,b+=B*P,b+=C*T,b+=x*(5*M),b+=S*(5*F),_=l+=(b+=Q*(5*N))>>>13,_+=z*N,_+=I*O,_+=E*R,_+=j*U,l=(_+=w*D)>>>13,_&=8191,_+=B*L,_+=C*P,_+=x*T,_+=S*(5*M),y=l+=(_+=Q*(5*F))>>>13,y+=z*F,y+=I*N,y+=E*O,y+=j*R,l=(y+=w*U)>>>13,y&=8191,y+=B*D,y+=C*L,y+=x*P,y+=S*T,v=l+=(y+=Q*(5*M))>>>13,v+=z*M,v+=I*F,v+=E*N,v+=j*O,l=(v+=w*R)>>>13,v&=8191,v+=B*U,v+=C*D,v+=x*L,v+=S*P,z=p=8191&(l=(l=((l+=(v+=Q*T)>>>13)<<2)+l|0)+(p&=8191)|0),I=d+=l>>>=13,E=f&=8191,j=g&=8191,w=m&=8191,B=k&=8191,C=b&=8191,x=_&=8191,S=y&=8191,Q=v&=8191,i+=16,n-=16;this.h[0]=z,this.h[1]=I,this.h[2]=E,this.h[3]=j,this.h[4]=w,this.h[5]=B,this.h[6]=C,this.h[7]=x,this.h[8]=S,this.h[9]=Q},i.prototype.finish=function(e,i){var n,a,r,t,s=new Uint16Array(10);if(this.leftover){for(t=this.leftover,this.buffer[t++]=1;t<16;t++)this.buffer[t]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(n=this.h[1]>>>13,this.h[1]&=8191,t=2;t<10;t++)this.h[t]+=n,n=this.h[t]>>>13,this.h[t]&=8191;for(this.h[0]+=5*n,n=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=n,n=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=n,s[0]=this.h[0]+5,n=s[0]>>>13,s[0]&=8191,t=1;t<10;t++)s[t]=this.h[t]+n,n=s[t]>>>13,s[t]&=8191;for(s[9]-=8192,a=(1^n)-1,t=0;t<10;t++)s[t]&=a;for(a=~a,t=0;t<10;t++)this.h[t]=this.h[t]&a|s[t];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),r=this.h[0]+this.pad[0],this.h[0]=65535&r,t=1;t<8;t++)r=(this.h[t]+this.pad[t]|0)+(r>>>16)|0,this.h[t]=65535&r;e[i+0]=this.h[0]>>>0&255,e[i+1]=this.h[0]>>>8&255,e[i+2]=this.h[1]>>>0&255,e[i+3]=this.h[1]>>>8&255,e[i+4]=this.h[2]>>>0&255,e[i+5]=this.h[2]>>>8&255,e[i+6]=this.h[3]>>>0&255,e[i+7]=this.h[3]>>>8&255,e[i+8]=this.h[4]>>>0&255,e[i+9]=this.h[4]>>>8&255,e[i+10]=this.h[5]>>>0&255,e[i+11]=this.h[5]>>>8&255,e[i+12]=this.h[6]>>>0&255,e[i+13]=this.h[6]>>>8&255,e[i+14]=this.h[7]>>>0&255,e[i+15]=this.h[7]>>>8&255},i.prototype.update=function(e,i,n){var a,r;if(this.leftover){for((r=16-this.leftover)>n&&(r=n),a=0;a<r;a++)this.buffer[this.leftover+a]=e[i+a];if(n-=r,i+=r,this.leftover+=r,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(n>=16&&(r=n-n%16,this.blocks(e,i,r),i+=r,n-=r),n){for(a=0;a<n;a++)this.buffer[this.leftover+a]=e[i+a];this.leftover+=n}},e.exports=i},1371:(e,i)=>{"use strict";function n(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`Wrong positive integer: ${e}`)}function a(e){if("boolean"!=typeof e)throw new Error(`Expected boolean, not ${e}`)}function r(e,...i){if(!((n=e)instanceof Uint8Array||null!=n&&"object"==typeof n&&"Uint8Array"===n.constructor.name))throw new Error("Expected Uint8Array");var n;if(i.length>0&&!i.includes(e.length))throw new Error(`Expected Uint8Array of length ${i}, not of length=${e.length}`)}function t(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("Hash should be wrapped by utils.wrapConstructor");n(e.outputLen),n(e.blockLen)}function s(e,i=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(i&&e.finished)throw new Error("Hash#digest() has already been called")}function o(e,i){r(e);const n=i.outputLen;if(e.length<n)throw new Error(`digestInto() expects output buffer of length at least ${n}`)}Object.defineProperty(i,"__esModule",{value:!0}),i.output=i.exists=i.hash=i.bytes=i.bool=i.number=void 0,i.number=n,i.bool=a,i.bytes=r,i.hash=t,i.exists=s,i.output=o;const c={number:n,bool:a,bytes:r,hash:t,exists:s,output:o};i.default=c},1397:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.hmac=i.HMAC=void 0;const a=n(1371),r=n(9161);class t extends r.Hash{constructor(e,i){super(),this.finished=!1,this.destroyed=!1,(0,a.hash)(e);const n=(0,r.toBytes)(i);if(this.iHash=e.create(),"function"!=typeof this.iHash.update)throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const t=this.blockLen,s=new Uint8Array(t);s.set(n.length>t?e.create().update(n).digest():n);for(let e=0;e<s.length;e++)s[e]^=54;this.iHash.update(s),this.oHash=e.create();for(let e=0;e<s.length;e++)s[e]^=106;this.oHash.update(s),s.fill(0)}update(e){return(0,a.exists)(this),this.iHash.update(e),this}digestInto(e){(0,a.exists)(this),(0,a.bytes)(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:i,iHash:n,finished:a,destroyed:r,blockLen:t,outputLen:s}=this;return e.finished=a,e.destroyed=r,e.blockLen=t,e.outputLen=s,e.oHash=i._cloneInto(e.oHash),e.iHash=n._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}i.HMAC=t,i.hmac=(e,i,n)=>new t(e,i).update(n).digest(),i.hmac.create=(e,i)=>new t(e,i)},1542:(e,i,n)=>{const{_9:a,_121665:r,gf:t,inv25519:s,pack25519:o,unpack25519:c,sel25519:h,A:u,M:l,Z:p,S:d}=n(3895);function f(e,i,n){g(e,32),g(i,32),g(n,32);var a,f,m=new Uint8Array(32),k=new Float64Array(80),b=t(),_=t(),y=t(),v=t(),A=t(),z=t();for(f=0;f<31;f++)m[f]=i[f];for(m[31]=127&i[31]|64,m[0]&=248,c(k,n),f=0;f<16;f++)_[f]=k[f],v[f]=b[f]=y[f]=0;for(b[0]=v[0]=1,f=254;f>=0;--f)a=m[f>>>3]>>>(7&f)&1,h(b,_,a),h(y,v,a),u(A,b,y),p(b,b,y),u(y,_,v),p(_,_,v),d(v,A),d(z,b),l(b,y,b),l(y,_,A),u(A,b,y),p(b,b,y),d(_,b),p(y,v,z),l(b,y,r),u(b,b,v),l(y,y,b),l(b,v,z),l(v,_,k),d(_,A),h(b,_,a),h(y,v,a);for(f=0;f<16;f++)k[f+16]=b[f],k[f+32]=y[f],k[f+48]=_[f],k[f+64]=v[f];var I=k.subarray(32),E=k.subarray(16);return s(I,I),l(E,E,I),o(e,E),0}function g(e,i){if(!e||i&&e.length<i)throw new Error("Argument must be a buffer"+(i?" of length "+i:""))}e.exports={crypto_scalarmult:f,crypto_scalarmult_base:function(e,i){return f(e,i,a)},crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32}},1554:(e,i,n)=>{"use strict";const a=n(8317);e.exports=(e,i)=>a(e,i,!0)},1603:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.deriveChildKey=i.publicKeyToEthAddress=i.privateKeyToEthAddress=void 0;const a=n(2367),r=n(2600),t=n(4927),s=n(5162),o=n(2913),c=n(4503);function h(e){return(0,a.assert)(e instanceof Uint8Array&&(0,c.isValidBytesKey)(e,o.secp256k1.publicKeyLength),"Invalid key: The key must be a 65-byte, non-zero Uint8Array."),(0,s.keccak256)(e.slice(1)).slice(-20)}async function u(e,i,n){const{childIndex:a,privateKey:t,publicKey:s,isHardened:o,chainCode:h,curve:u}=i;if((0,c.validateBIP32Index)(a+1),t){const e=await(0,r.deriveSecretExtension)({privateKey:t,publicKey:u.compressPublicKey(s),childIndex:a+1,isHardened:o,curve:u}),c=await(0,r.generateEntropy)({chainCode:h,extension:e},n);return{...i,childIndex:a+1,entropy:c}}const l=(0,r.derivePublicExtension)({parentPublicKey:s,childIndex:a+1}),p=await(0,r.generateEntropy)({chainCode:h,extension:l});return{...i,childIndex:a+1,entropy:p}}i.privateKeyToEthAddress=function(e){return(0,a.assert)(e instanceof Uint8Array&&(0,c.isValidBytesKey)(e,t.BYTES_KEY_LENGTH),"Invalid key: The key must be a 32-byte, non-zero Uint8Array."),h(o.secp256k1.getPublicKey(e,!1))},i.publicKeyToEthAddress=h,i.deriveChildKey=async function(e,i){return(0,a.assert)("secp256k1"===e.curve.name,"Invalid curve: Only secp256k1 is supported by BIP-32."),(0,r.deriveChildKey)(e,u,i)}},1630:(e,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0})},1644:e=>{"use strict";e.exports=JSON.parse('["abacate","abaixo","abalar","abater","abduzir","abelha","aberto","abismo","abotoar","abranger","abreviar","abrigar","abrupto","absinto","absoluto","absurdo","abutre","acabado","acalmar","acampar","acanhar","acaso","aceitar","acelerar","acenar","acervo","acessar","acetona","achatar","acidez","acima","acionado","acirrar","aclamar","aclive","acolhida","acomodar","acoplar","acordar","acumular","acusador","adaptar","adega","adentro","adepto","adequar","aderente","adesivo","adeus","adiante","aditivo","adjetivo","adjunto","admirar","adorar","adquirir","adubo","adverso","advogado","aeronave","afastar","aferir","afetivo","afinador","afivelar","aflito","afluente","afrontar","agachar","agarrar","agasalho","agenciar","agilizar","agiota","agitado","agora","agradar","agreste","agrupar","aguardar","agulha","ajoelhar","ajudar","ajustar","alameda","alarme","alastrar","alavanca","albergue","albino","alcatra","aldeia","alecrim","alegria","alertar","alface","alfinete","algum","alheio","aliar","alicate","alienar","alinhar","aliviar","almofada","alocar","alpiste","alterar","altitude","alucinar","alugar","aluno","alusivo","alvo","amaciar","amador","amarelo","amassar","ambas","ambiente","ameixa","amenizar","amido","amistoso","amizade","amolador","amontoar","amoroso","amostra","amparar","ampliar","ampola","anagrama","analisar","anarquia","anatomia","andaime","anel","anexo","angular","animar","anjo","anomalia","anotado","ansioso","anterior","anuidade","anunciar","anzol","apagador","apalpar","apanhado","apego","apelido","apertada","apesar","apetite","apito","aplauso","aplicada","apoio","apontar","aposta","aprendiz","aprovar","aquecer","arame","aranha","arara","arcada","ardente","areia","arejar","arenito","aresta","argiloso","argola","arma","arquivo","arraial","arrebate","arriscar","arroba","arrumar","arsenal","arterial","artigo","arvoredo","asfaltar","asilado","aspirar","assador","assinar","assoalho","assunto","astral","atacado","atadura","atalho","atarefar","atear","atender","aterro","ateu","atingir","atirador","ativo","atoleiro","atracar","atrevido","atriz","atual","atum","auditor","aumentar","aura","aurora","autismo","autoria","autuar","avaliar","avante","avaria","avental","avesso","aviador","avisar","avulso","axila","azarar","azedo","azeite","azulejo","babar","babosa","bacalhau","bacharel","bacia","bagagem","baiano","bailar","baioneta","bairro","baixista","bajular","baleia","baliza","balsa","banal","bandeira","banho","banir","banquete","barato","barbado","baronesa","barraca","barulho","baseado","bastante","batata","batedor","batida","batom","batucar","baunilha","beber","beijo","beirada","beisebol","beldade","beleza","belga","beliscar","bendito","bengala","benzer","berimbau","berlinda","berro","besouro","bexiga","bezerro","bico","bicudo","bienal","bifocal","bifurcar","bigorna","bilhete","bimestre","bimotor","biologia","biombo","biosfera","bipolar","birrento","biscoito","bisneto","bispo","bissexto","bitola","bizarro","blindado","bloco","bloquear","boato","bobagem","bocado","bocejo","bochecha","boicotar","bolada","boletim","bolha","bolo","bombeiro","bonde","boneco","bonita","borbulha","borda","boreal","borracha","bovino","boxeador","branco","brasa","braveza","breu","briga","brilho","brincar","broa","brochura","bronzear","broto","bruxo","bucha","budismo","bufar","bule","buraco","busca","busto","buzina","cabana","cabelo","cabide","cabo","cabrito","cacau","cacetada","cachorro","cacique","cadastro","cadeado","cafezal","caiaque","caipira","caixote","cajado","caju","calafrio","calcular","caldeira","calibrar","calmante","calota","camada","cambista","camisa","camomila","campanha","camuflar","canavial","cancelar","caneta","canguru","canhoto","canivete","canoa","cansado","cantar","canudo","capacho","capela","capinar","capotar","capricho","captador","capuz","caracol","carbono","cardeal","careca","carimbar","carneiro","carpete","carreira","cartaz","carvalho","casaco","casca","casebre","castelo","casulo","catarata","cativar","caule","causador","cautelar","cavalo","caverna","cebola","cedilha","cegonha","celebrar","celular","cenoura","censo","centeio","cercar","cerrado","certeiro","cerveja","cetim","cevada","chacota","chaleira","chamado","chapada","charme","chatice","chave","chefe","chegada","cheiro","cheque","chicote","chifre","chinelo","chocalho","chover","chumbo","chutar","chuva","cicatriz","ciclone","cidade","cidreira","ciente","cigana","cimento","cinto","cinza","ciranda","circuito","cirurgia","citar","clareza","clero","clicar","clone","clube","coado","coagir","cobaia","cobertor","cobrar","cocada","coelho","coentro","coeso","cogumelo","coibir","coifa","coiote","colar","coleira","colher","colidir","colmeia","colono","coluna","comando","combinar","comentar","comitiva","comover","complexo","comum","concha","condor","conectar","confuso","congelar","conhecer","conjugar","consumir","contrato","convite","cooperar","copeiro","copiador","copo","coquetel","coragem","cordial","corneta","coronha","corporal","correio","cortejo","coruja","corvo","cosseno","costela","cotonete","couro","couve","covil","cozinha","cratera","cravo","creche","credor","creme","crer","crespo","criada","criminal","crioulo","crise","criticar","crosta","crua","cruzeiro","cubano","cueca","cuidado","cujo","culatra","culminar","culpar","cultura","cumprir","cunhado","cupido","curativo","curral","cursar","curto","cuspir","custear","cutelo","damasco","datar","debater","debitar","deboche","debulhar","decalque","decimal","declive","decote","decretar","dedal","dedicado","deduzir","defesa","defumar","degelo","degrau","degustar","deitado","deixar","delator","delegado","delinear","delonga","demanda","demitir","demolido","dentista","depenado","depilar","depois","depressa","depurar","deriva","derramar","desafio","desbotar","descanso","desenho","desfiado","desgaste","desigual","deslize","desmamar","desova","despesa","destaque","desviar","detalhar","detentor","detonar","detrito","deusa","dever","devido","devotado","dezena","diagrama","dialeto","didata","difuso","digitar","dilatado","diluente","diminuir","dinastia","dinheiro","diocese","direto","discreta","disfarce","disparo","disquete","dissipar","distante","ditador","diurno","diverso","divisor","divulgar","dizer","dobrador","dolorido","domador","dominado","donativo","donzela","dormente","dorsal","dosagem","dourado","doutor","drenagem","drible","drogaria","duelar","duende","dueto","duplo","duquesa","durante","duvidoso","eclodir","ecoar","ecologia","edificar","edital","educado","efeito","efetivar","ejetar","elaborar","eleger","eleitor","elenco","elevador","eliminar","elogiar","embargo","embolado","embrulho","embutido","emenda","emergir","emissor","empatia","empenho","empinado","empolgar","emprego","empurrar","emulador","encaixe","encenado","enchente","encontro","endeusar","endossar","enfaixar","enfeite","enfim","engajado","engenho","englobar","engomado","engraxar","enguia","enjoar","enlatar","enquanto","enraizar","enrolado","enrugar","ensaio","enseada","ensino","ensopado","entanto","enteado","entidade","entortar","entrada","entulho","envergar","enviado","envolver","enxame","enxerto","enxofre","enxuto","epiderme","equipar","ereto","erguido","errata","erva","ervilha","esbanjar","esbelto","escama","escola","escrita","escuta","esfinge","esfolar","esfregar","esfumado","esgrima","esmalte","espanto","espelho","espiga","esponja","espreita","espumar","esquerda","estaca","esteira","esticar","estofado","estrela","estudo","esvaziar","etanol","etiqueta","euforia","europeu","evacuar","evaporar","evasivo","eventual","evidente","evoluir","exagero","exalar","examinar","exato","exausto","excesso","excitar","exclamar","executar","exemplo","exibir","exigente","exonerar","expandir","expelir","expirar","explanar","exposto","expresso","expulsar","externo","extinto","extrato","fabricar","fabuloso","faceta","facial","fada","fadiga","faixa","falar","falta","familiar","fandango","fanfarra","fantoche","fardado","farelo","farinha","farofa","farpa","fartura","fatia","fator","favorita","faxina","fazenda","fechado","feijoada","feirante","felino","feminino","fenda","feno","fera","feriado","ferrugem","ferver","festejar","fetal","feudal","fiapo","fibrose","ficar","ficheiro","figurado","fileira","filho","filme","filtrar","firmeza","fisgada","fissura","fita","fivela","fixador","fixo","flacidez","flamingo","flanela","flechada","flora","flutuar","fluxo","focal","focinho","fofocar","fogo","foguete","foice","folgado","folheto","forjar","formiga","forno","forte","fosco","fossa","fragata","fralda","frango","frasco","fraterno","freira","frente","fretar","frieza","friso","fritura","fronha","frustrar","fruteira","fugir","fulano","fuligem","fundar","fungo","funil","furador","furioso","futebol","gabarito","gabinete","gado","gaiato","gaiola","gaivota","galega","galho","galinha","galocha","ganhar","garagem","garfo","gargalo","garimpo","garoupa","garrafa","gasoduto","gasto","gata","gatilho","gaveta","gazela","gelado","geleia","gelo","gemada","gemer","gemido","generoso","gengiva","genial","genoma","genro","geologia","gerador","germinar","gesso","gestor","ginasta","gincana","gingado","girafa","girino","glacial","glicose","global","glorioso","goela","goiaba","golfe","golpear","gordura","gorjeta","gorro","gostoso","goteira","governar","gracejo","gradual","grafite","gralha","grampo","granada","gratuito","graveto","graxa","grego","grelhar","greve","grilo","grisalho","gritaria","grosso","grotesco","grudado","grunhido","gruta","guache","guarani","guaxinim","guerrear","guiar","guincho","guisado","gula","guloso","guru","habitar","harmonia","haste","haver","hectare","herdar","heresia","hesitar","hiato","hibernar","hidratar","hiena","hino","hipismo","hipnose","hipoteca","hoje","holofote","homem","honesto","honrado","hormonal","hospedar","humorado","iate","ideia","idoso","ignorado","igreja","iguana","ileso","ilha","iludido","iluminar","ilustrar","imagem","imediato","imenso","imersivo","iminente","imitador","imortal","impacto","impedir","implante","impor","imprensa","impune","imunizar","inalador","inapto","inativo","incenso","inchar","incidir","incluir","incolor","indeciso","indireto","indutor","ineficaz","inerente","infantil","infestar","infinito","inflamar","informal","infrator","ingerir","inibido","inicial","inimigo","injetar","inocente","inodoro","inovador","inox","inquieto","inscrito","inseto","insistir","inspetor","instalar","insulto","intacto","integral","intimar","intocado","intriga","invasor","inverno","invicto","invocar","iogurte","iraniano","ironizar","irreal","irritado","isca","isento","isolado","isqueiro","italiano","janeiro","jangada","janta","jararaca","jardim","jarro","jasmim","jato","javali","jazida","jejum","joaninha","joelhada","jogador","joia","jornal","jorrar","jovem","juba","judeu","judoca","juiz","julgador","julho","jurado","jurista","juro","justa","labareda","laboral","lacre","lactante","ladrilho","lagarta","lagoa","laje","lamber","lamentar","laminar","lampejo","lanche","lapidar","lapso","laranja","lareira","largura","lasanha","lastro","lateral","latido","lavanda","lavoura","lavrador","laxante","lazer","lealdade","lebre","legado","legendar","legista","leigo","leiloar","leitura","lembrete","leme","lenhador","lentilha","leoa","lesma","leste","letivo","letreiro","levar","leveza","levitar","liberal","libido","liderar","ligar","ligeiro","limitar","limoeiro","limpador","linda","linear","linhagem","liquidez","listagem","lisura","litoral","livro","lixa","lixeira","locador","locutor","lojista","lombo","lona","longe","lontra","lorde","lotado","loteria","loucura","lousa","louvar","luar","lucidez","lucro","luneta","lustre","lutador","luva","macaco","macete","machado","macio","madeira","madrinha","magnata","magreza","maior","mais","malandro","malha","malote","maluco","mamilo","mamoeiro","mamute","manada","mancha","mandato","manequim","manhoso","manivela","manobrar","mansa","manter","manusear","mapeado","maquinar","marcador","maresia","marfim","margem","marinho","marmita","maroto","marquise","marreco","martelo","marujo","mascote","masmorra","massagem","mastigar","matagal","materno","matinal","matutar","maxilar","medalha","medida","medusa","megafone","meiga","melancia","melhor","membro","memorial","menino","menos","mensagem","mental","merecer","mergulho","mesada","mesclar","mesmo","mesquita","mestre","metade","meteoro","metragem","mexer","mexicano","micro","migalha","migrar","milagre","milenar","milhar","mimado","minerar","minhoca","ministro","minoria","miolo","mirante","mirtilo","misturar","mocidade","moderno","modular","moeda","moer","moinho","moita","moldura","moleza","molho","molinete","molusco","montanha","moqueca","morango","morcego","mordomo","morena","mosaico","mosquete","mostarda","motel","motim","moto","motriz","muda","muito","mulata","mulher","multar","mundial","munido","muralha","murcho","muscular","museu","musical","nacional","nadador","naja","namoro","narina","narrado","nascer","nativa","natureza","navalha","navegar","navio","neblina","nebuloso","negativa","negociar","negrito","nervoso","neta","neural","nevasca","nevoeiro","ninar","ninho","nitidez","nivelar","nobreza","noite","noiva","nomear","nominal","nordeste","nortear","notar","noticiar","noturno","novelo","novilho","novo","nublado","nudez","numeral","nupcial","nutrir","nuvem","obcecado","obedecer","objetivo","obrigado","obscuro","obstetra","obter","obturar","ocidente","ocioso","ocorrer","oculista","ocupado","ofegante","ofensiva","oferenda","oficina","ofuscado","ogiva","olaria","oleoso","olhar","oliveira","ombro","omelete","omisso","omitir","ondulado","oneroso","ontem","opcional","operador","oponente","oportuno","oposto","orar","orbitar","ordem","ordinal","orfanato","orgasmo","orgulho","oriental","origem","oriundo","orla","ortodoxo","orvalho","oscilar","ossada","osso","ostentar","otimismo","ousadia","outono","outubro","ouvido","ovelha","ovular","oxidar","oxigenar","pacato","paciente","pacote","pactuar","padaria","padrinho","pagar","pagode","painel","pairar","paisagem","palavra","palestra","palheta","palito","palmada","palpitar","pancada","panela","panfleto","panqueca","pantanal","papagaio","papelada","papiro","parafina","parcial","pardal","parede","partida","pasmo","passado","pastel","patamar","patente","patinar","patrono","paulada","pausar","peculiar","pedalar","pedestre","pediatra","pedra","pegada","peitoral","peixe","pele","pelicano","penca","pendurar","peneira","penhasco","pensador","pente","perceber","perfeito","pergunta","perito","permitir","perna","perplexo","persiana","pertence","peruca","pescado","pesquisa","pessoa","petiscar","piada","picado","piedade","pigmento","pilastra","pilhado","pilotar","pimenta","pincel","pinguim","pinha","pinote","pintar","pioneiro","pipoca","piquete","piranha","pires","pirueta","piscar","pistola","pitanga","pivete","planta","plaqueta","platina","plebeu","plumagem","pluvial","pneu","poda","poeira","poetisa","polegada","policiar","poluente","polvilho","pomar","pomba","ponderar","pontaria","populoso","porta","possuir","postal","pote","poupar","pouso","povoar","praia","prancha","prato","praxe","prece","predador","prefeito","premiar","prensar","preparar","presilha","pretexto","prevenir","prezar","primata","princesa","prisma","privado","processo","produto","profeta","proibido","projeto","prometer","propagar","prosa","protetor","provador","publicar","pudim","pular","pulmonar","pulseira","punhal","punir","pupilo","pureza","puxador","quadra","quantia","quarto","quase","quebrar","queda","queijo","quente","querido","quimono","quina","quiosque","rabanada","rabisco","rachar","racionar","radial","raiar","rainha","raio","raiva","rajada","ralado","ramal","ranger","ranhura","rapadura","rapel","rapidez","raposa","raquete","raridade","rasante","rascunho","rasgar","raspador","rasteira","rasurar","ratazana","ratoeira","realeza","reanimar","reaver","rebaixar","rebelde","rebolar","recado","recente","recheio","recibo","recordar","recrutar","recuar","rede","redimir","redonda","reduzida","reenvio","refinar","refletir","refogar","refresco","refugiar","regalia","regime","regra","reinado","reitor","rejeitar","relativo","remador","remendo","remorso","renovado","reparo","repelir","repleto","repolho","represa","repudiar","requerer","resenha","resfriar","resgatar","residir","resolver","respeito","ressaca","restante","resumir","retalho","reter","retirar","retomada","retratar","revelar","revisor","revolta","riacho","rica","rigidez","rigoroso","rimar","ringue","risada","risco","risonho","robalo","rochedo","rodada","rodeio","rodovia","roedor","roleta","romano","roncar","rosado","roseira","rosto","rota","roteiro","rotina","rotular","rouco","roupa","roxo","rubro","rugido","rugoso","ruivo","rumo","rupestre","russo","sabor","saciar","sacola","sacudir","sadio","safira","saga","sagrada","saibro","salada","saleiro","salgado","saliva","salpicar","salsicha","saltar","salvador","sambar","samurai","sanar","sanfona","sangue","sanidade","sapato","sarda","sargento","sarjeta","saturar","saudade","saxofone","sazonal","secar","secular","seda","sedento","sediado","sedoso","sedutor","segmento","segredo","segundo","seiva","seleto","selvagem","semanal","semente","senador","senhor","sensual","sentado","separado","sereia","seringa","serra","servo","setembro","setor","sigilo","silhueta","silicone","simetria","simpatia","simular","sinal","sincero","singular","sinopse","sintonia","sirene","siri","situado","soberano","sobra","socorro","sogro","soja","solda","soletrar","solteiro","sombrio","sonata","sondar","sonegar","sonhador","sono","soprano","soquete","sorrir","sorteio","sossego","sotaque","soterrar","sovado","sozinho","suavizar","subida","submerso","subsolo","subtrair","sucata","sucesso","suco","sudeste","sufixo","sugador","sugerir","sujeito","sulfato","sumir","suor","superior","suplicar","suposto","suprimir","surdina","surfista","surpresa","surreal","surtir","suspiro","sustento","tabela","tablete","tabuada","tacho","tagarela","talher","talo","talvez","tamanho","tamborim","tampa","tangente","tanto","tapar","tapioca","tardio","tarefa","tarja","tarraxa","tatuagem","taurino","taxativo","taxista","teatral","tecer","tecido","teclado","tedioso","teia","teimar","telefone","telhado","tempero","tenente","tensor","tentar","termal","terno","terreno","tese","tesoura","testado","teto","textura","texugo","tiara","tigela","tijolo","timbrar","timidez","tingido","tinteiro","tiragem","titular","toalha","tocha","tolerar","tolice","tomada","tomilho","tonel","tontura","topete","tora","torcido","torneio","torque","torrada","torto","tostar","touca","toupeira","toxina","trabalho","tracejar","tradutor","trafegar","trajeto","trama","trancar","trapo","traseiro","tratador","travar","treino","tremer","trepidar","trevo","triagem","tribo","triciclo","tridente","trilogia","trindade","triplo","triturar","triunfal","trocar","trombeta","trova","trunfo","truque","tubular","tucano","tudo","tulipa","tupi","turbo","turma","turquesa","tutelar","tutorial","uivar","umbigo","unha","unidade","uniforme","urologia","urso","urtiga","urubu","usado","usina","usufruir","vacina","vadiar","vagaroso","vaidoso","vala","valente","validade","valores","vantagem","vaqueiro","varanda","vareta","varrer","vascular","vasilha","vassoura","vazar","vazio","veado","vedar","vegetar","veicular","veleiro","velhice","veludo","vencedor","vendaval","venerar","ventre","verbal","verdade","vereador","vergonha","vermelho","verniz","versar","vertente","vespa","vestido","vetorial","viaduto","viagem","viajar","viatura","vibrador","videira","vidraria","viela","viga","vigente","vigiar","vigorar","vilarejo","vinco","vinheta","vinil","violeta","virada","virtude","visitar","visto","vitral","viveiro","vizinho","voador","voar","vogal","volante","voleibol","voltagem","volumoso","vontade","vulto","vuvuzela","xadrez","xarope","xeque","xeretar","xerife","xingar","zangado","zarpar","zebu","zelador","zombar","zoologia","zumbido"]')},1685:(e,i,n)=>{var a=n(6889),r=n(5682),t=null,s="undefined"!=typeof WebAssembly&&n(1892)().then(e=>{t=e}),o=64,c=[];e.exports=g;var h=e.exports.BYTES_MIN=16,u=e.exports.BYTES_MAX=64,l=(e.exports.BYTES=32,e.exports.KEYBYTES_MIN=16),p=e.exports.KEYBYTES_MAX=64,d=(e.exports.KEYBYTES=32,e.exports.SALTBYTES=16),f=e.exports.PERSONALBYTES=16;function g(e,i,n,r,s){if(!(this instanceof g))return new g(e,i,n,r,s);if(!t)throw new Error("WASM not loaded. Wait for Blake2b.ready(cb)");e||(e=32),!0!==s&&(a(e>=h,"digestLength must be at least "+h+", was given "+e),a(e<=u,"digestLength must be at most "+u+", was given "+e),null!=i&&(a(i instanceof Uint8Array,"key must be Uint8Array or Buffer"),a(i.length>=l,"key must be at least "+l+", was given "+i.length),a(i.length<=p,"key must be at least "+p+", was given "+i.length)),null!=n&&(a(n instanceof Uint8Array,"salt must be Uint8Array or Buffer"),a(n.length===d,"salt must be exactly "+d+", was given "+n.length)),null!=r&&(a(r instanceof Uint8Array,"personal must be Uint8Array or Buffer"),a(r.length===f,"personal must be exactly "+f+", was given "+r.length))),c.length||(c.push(o),o+=216),this.digestLength=e,this.finalized=!1,this.pointer=c.pop(),this._memory=new Uint8Array(t.memory.buffer),this._memory.fill(0,0,64),this._memory[0]=this.digestLength,this._memory[1]=i?i.length:0,this._memory[2]=1,this._memory[3]=1,n&&this._memory.set(n,32),r&&this._memory.set(r,48),this.pointer+216>this._memory.length&&this._realloc(this.pointer+216),t.blake2b_init(this.pointer,this.digestLength),i&&(this.update(i),this._memory.fill(0,o,o+i.length),this._memory[this.pointer+200]=128)}function m(){}g.prototype._realloc=function(e){t.memory.grow(Math.max(0,Math.ceil(Math.abs(e-this._memory.length)/65536))),this._memory=new Uint8Array(t.memory.buffer)},g.prototype.update=function(e){return a(!1===this.finalized,"Hash instance finalized"),a(e instanceof Uint8Array,"input must be Uint8Array or Buffer"),o+e.length>this._memory.length&&this._realloc(o+e.length),this._memory.set(e,o),t.blake2b_update(this.pointer,o,o+e.length),this},g.prototype.digest=function(e){if(a(!1===this.finalized,"Hash instance finalized"),this.finalized=!0,c.push(this.pointer),t.blake2b_final(this.pointer),!e||"binary"===e)return this._memory.slice(this.pointer+128,this.pointer+128+this.digestLength);if("string"==typeof e)return r.toString(this._memory,e,this.pointer+128,this.pointer+128+this.digestLength);a(e instanceof Uint8Array&&e.length>=this.digestLength,"input must be Uint8Array or Buffer");for(var i=0;i<this.digestLength;i++)e[i]=this._memory[this.pointer+128+i];return e},g.prototype.final=g.prototype.digest,g.WASM=t,g.SUPPORTED="undefined"!=typeof WebAssembly,g.ready=function(e){return e||(e=m),s?s.then(()=>e(),e):e(new Error("WebAssembly not supported"))},g.prototype.ready=g.ready,g.prototype.getPartialHash=function(){return this._memory.slice(this.pointer,this.pointer+216)},g.prototype.setPartialHash=function(e){this._memory.set(e,this.pointer)}},1704:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.trimmed=i.defaulted=i.coerce=void 0;const a=n(9067),r=n(639),t=n(7792);function s(e,i,n){return new a.Struct({...e,coercer:(r,t)=>(0,a.is)(r,i)?e.coercer(n(r,t),t):e.coercer(r,t)})}i.coerce=s,i.defaulted=function(e,i,n={}){return s(e,(0,t.unknown)(),e=>{const a="function"==typeof i?i():i;if(void 0===e)return a;if(!n.strict&&(0,r.isPlainObject)(e)&&(0,r.isPlainObject)(a)){const i={...e};let n=!1;for(const e in a)void 0===i[e]&&(i[e]=a[e],n=!0);if(n)return i}return e})},i.trimmed=function(e){return s(e,(0,t.string)(),e=>e.trim())}},1705:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.DER=i.DERErr=void 0,i._splitEndoScalar=h,i._normFnElement=b,i.weierstrassN=_,i.SWUFpSqrtRatio=v,i.mapToCurveSimpleSWU=function(e,i){(0,o.validateField)(e);const{A:n,B:a,Z:r}=i;if(!e.isValid(n)||!e.isValid(a)||!e.isValid(r))throw new Error("mapToCurveSimpleSWU: invalid opts");const t=v(e,r);if(!e.isOdd)throw new Error("Field does not have .isOdd()");return i=>{let s,c,h,u,l,p,d,f;s=e.sqr(i),s=e.mul(s,r),c=e.sqr(s),c=e.add(c,s),h=e.add(c,e.ONE),h=e.mul(h,a),u=e.cmov(r,e.neg(c),!e.eql(c,e.ZERO)),u=e.mul(u,n),c=e.sqr(h),p=e.sqr(u),l=e.mul(p,n),c=e.add(c,l),c=e.mul(c,h),p=e.mul(p,u),l=e.mul(p,a),c=e.add(c,l),d=e.mul(s,h);const{isValid:g,value:m}=t(c,p);f=e.mul(s,i),f=e.mul(f,m),d=e.cmov(d,h,g),f=e.cmov(f,m,g);const k=e.isOdd(i)===e.isOdd(f);f=e.cmov(e.neg(f),f,k);const b=(0,o.FpInvertBatch)(e,[u],!0)[0];return d=e.mul(d,b),{x:d,y:f}}},i.ecdh=z,i.ecdsa=I,i.weierstrassPoints=function(e){const{CURVE:i,curveOpts:n}=E(e);return function(e,i){const{Fp:n,Fn:a}=i;const r=j(n,e.a,e.b);return Object.assign({},{CURVE:e,Point:i,ProjectivePoint:i,normPrivateKeyToScalar:e=>b(a,e),weierstrassEquation:r,isWithinCurveOrder:function(e){return(0,t.inRange)(e,f,a.ORDER)}})}(e,_(i,n))},i._legacyHelperEquat=j,i.weierstrass=function(e){const{CURVE:i,curveOpts:n,hash:a,ecdsaOpts:r}=function(e){const{CURVE:i,curveOpts:n}=E(e),a={hmac:e.hmac,randomBytes:e.randomBytes,lowS:e.lowS,bits2int:e.bits2int,bits2int_modN:e.bits2int_modN};return{CURVE:i,curveOpts:n,hash:e.hash,ecdsaOpts:a}}(e);return function(e,i){const n=i.Point;return Object.assign({},i,{ProjectivePoint:n,CURVE:Object.assign({},e,(0,o.nLength)(n.Fn.ORDER,n.Fn.BITS))})}(e,I(_(i,n),a,r))};const a=n(9615),r=n(9175),t=n(8627),s=n(2422),o=n(4967),c=(e,i)=>(e+(e>=0?i:-i)/g)/i;function h(e,i,n){const[[a,r],[s,o]]=i,h=c(o*e,n),u=c(-r*e,n);let l=e-h*a-u*s,p=-h*r-u*o;const g=l<d,m=p<d;g&&(l=-l),m&&(p=-p);const k=(0,t.bitMask)(Math.ceil((0,t.bitLen)(n)/2))+f;if(l<d||l>=k||p<d||p>=k)throw new Error("splitScalar (endomorphism): failed, k="+e);return{k1neg:g,k1:l,k2neg:m,k2:p}}function u(e){if(!["compact","recovered","der"].includes(e))throw new Error('Signature format must be "compact", "recovered", or "der"');return e}function l(e,i){const n={};for(let a of Object.keys(i))n[a]=void 0===e[a]?i[a]:e[a];return(0,t._abool2)(n.lowS,"lowS"),(0,t._abool2)(n.prehash,"prehash"),void 0!==n.format&&u(n.format),n}class p extends Error{constructor(e=""){super(e)}}i.DERErr=p,i.DER={Err:p,_tlv:{encode:(e,n)=>{const{Err:a}=i.DER;if(e<0||e>256)throw new a("tlv.encode: wrong tag");if(1&n.length)throw new a("tlv.encode: unpadded data");const r=n.length/2,s=(0,t.numberToHexUnpadded)(r);if(s.length/2&128)throw new a("tlv.encode: long form length too big");const o=r>127?(0,t.numberToHexUnpadded)(s.length/2|128):"";return(0,t.numberToHexUnpadded)(e)+o+s+n},decode(e,n){const{Err:a}=i.DER;let r=0;if(e<0||e>256)throw new a("tlv.encode: wrong tag");if(n.length<2||n[r++]!==e)throw new a("tlv.decode: wrong tlv");const t=n[r++];let s=0;if(128&t){const e=127&t;if(!e)throw new a("tlv.decode(long): indefinite length not supported");if(e>4)throw new a("tlv.decode(long): byte length is too big");const i=n.subarray(r,r+e);if(i.length!==e)throw new a("tlv.decode: length bytes not complete");if(0===i[0])throw new a("tlv.decode(long): zero leftmost byte");for(const e of i)s=s<<8|e;if(r+=e,s<128)throw new a("tlv.decode(long): not minimal encoding")}else s=t;const o=n.subarray(r,r+s);if(o.length!==s)throw new a("tlv.decode: wrong value length");return{v:o,l:n.subarray(r+s)}}},_int:{encode(e){const{Err:n}=i.DER;if(e<d)throw new n("integer: negative integers are not allowed");let a=(0,t.numberToHexUnpadded)(e);if(8&Number.parseInt(a[0],16)&&(a="00"+a),1&a.length)throw new n("unexpected DER parsing assertion: unpadded hex");return a},decode(e){const{Err:n}=i.DER;if(128&e[0])throw new n("invalid signature integer: negative");if(0===e[0]&&!(128&e[1]))throw new n("invalid signature integer: unnecessary leading zero");return(0,t.bytesToNumberBE)(e)}},toSig(e){const{Err:n,_int:a,_tlv:r}=i.DER,s=(0,t.ensureBytes)("signature",e),{v:o,l:c}=r.decode(48,s);if(c.length)throw new n("invalid signature: left bytes after parsing");const{v:h,l:u}=r.decode(2,o),{v:l,l:p}=r.decode(2,u);if(p.length)throw new n("invalid signature: left bytes after parsing");return{r:a.decode(h),s:a.decode(l)}},hexFromSig(e){const{_tlv:n,_int:a}=i.DER,r=n.encode(2,a.encode(e.r))+n.encode(2,a.encode(e.s));return n.encode(48,r)}};const d=BigInt(0),f=BigInt(1),g=BigInt(2),m=BigInt(3),k=BigInt(4);function b(e,i){const{BYTES:n}=e;let a;if("bigint"==typeof i)a=i;else{let r=(0,t.ensureBytes)("private key",i);try{a=e.fromBytes(r)}catch(e){throw new Error(`invalid private key: expected ui8a of size ${n}, got ${typeof i}`)}}if(!e.isValidNot0(a))throw new Error("invalid private key: out of range [1..N-1]");return a}function _(e,i={}){const n=(0,s._createCurveFields)("weierstrass",e,i),{Fp:a,Fn:r}=n;let o=n.CURVE;const{h:c,n:u}=o;(0,t._validateObject)(i,{},{allowInfinityPoint:"boolean",clearCofactor:"function",isTorsionFree:"function",fromBytes:"function",toBytes:"function",endo:"object",wrapPrivateKey:"boolean"});const{endo:l}=i;if(l&&(!a.is0(o.a)||"bigint"!=typeof l.beta||!Array.isArray(l.basises)))throw new Error('invalid endo: expected "beta": bigint and "basises": array');const p=A(a,r);function g(){if(!a.isOdd)throw new Error("compression is not supported: Field does not have .isOdd()")}const _=i.toBytes||function(e,i,n){const{x:r,y:s}=i.toAffine(),o=a.toBytes(r);if((0,t._abool2)(n,"isCompressed"),n){g();const e=!a.isOdd(s);return(0,t.concatBytes)(y(e),o)}return(0,t.concatBytes)(Uint8Array.of(4),o,a.toBytes(s))},v=i.fromBytes||function(e){(0,t._abytes2)(e,void 0,"Point");const{publicKey:i,publicKeyUncompressed:n}=p,r=e.length,s=e[0],o=e.subarray(1);if(r!==i||2!==s&&3!==s){if(r===n&&4===s){const e=a.BYTES,i=a.fromBytes(o.subarray(0,e)),n=a.fromBytes(o.subarray(e,2*e));if(!I(i,n))throw new Error("bad point: is not on curve");return{x:i,y:n}}throw new Error(`bad point: got length ${r}, expected compressed=${i} or uncompressed=${n}`)}{const e=a.fromBytes(o);if(!a.isValid(e))throw new Error("bad point: is not on curve, wrong x");const i=z(e);let n;try{n=a.sqrt(i)}catch(e){const i=e instanceof Error?": "+e.message:"";throw new Error("bad point: is not on curve, sqrt error"+i)}return g(),!(1&~s)!==a.isOdd(n)&&(n=a.neg(n)),{x:e,y:n}}};function z(e){const i=a.sqr(e),n=a.mul(i,e);return a.add(a.add(n,a.mul(e,o.a)),o.b)}function I(e,i){const n=a.sqr(i),r=z(e);return a.eql(n,r)}if(!I(o.Gx,o.Gy))throw new Error("bad curve params: generator point");const E=a.mul(a.pow(o.a,m),k),j=a.mul(a.sqr(o.b),BigInt(27));if(a.is0(a.add(E,j)))throw new Error("bad curve params: a or b");function w(e,i,n=!1){if(!a.isValid(i)||n&&a.is0(i))throw new Error(`bad point coordinate ${e}`);return i}function B(e){if(!(e instanceof T))throw new Error("ProjectivePoint expected")}function C(e){if(!l||!l.basises)throw new Error("no endo");return h(e,l.basises,r.ORDER)}const x=(0,t.memoized)((e,i)=>{const{X:n,Y:r,Z:t}=e;if(a.eql(t,a.ONE))return{x:n,y:r};const s=e.is0();null==i&&(i=s?a.ONE:a.inv(t));const o=a.mul(n,i),c=a.mul(r,i),h=a.mul(t,i);if(s)return{x:a.ZERO,y:a.ZERO};if(!a.eql(h,a.ONE))throw new Error("invZ was invalid");return{x:o,y:c}}),S=(0,t.memoized)(e=>{if(e.is0()){if(i.allowInfinityPoint&&!a.is0(e.Y))return;throw new Error("bad point: ZERO")}const{x:n,y:r}=e.toAffine();if(!a.isValid(n)||!a.isValid(r))throw new Error("bad point: x or y not field elements");if(!I(n,r))throw new Error("bad point: equation left != right");if(!e.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});function Q(e,i,n,r,t){return n=new T(a.mul(n.X,e),n.Y,n.Z),i=(0,s.negateCt)(r,i),n=(0,s.negateCt)(t,n),i.add(n)}class T{constructor(e,i,n){this.X=w("x",e),this.Y=w("y",i,!0),this.Z=w("z",n),Object.freeze(this)}static CURVE(){return o}static fromAffine(e){const{x:i,y:n}=e||{};if(!e||!a.isValid(i)||!a.isValid(n))throw new Error("invalid affine point");if(e instanceof T)throw new Error("projective point not allowed");return a.is0(i)&&a.is0(n)?T.ZERO:new T(i,n,a.ONE)}static fromBytes(e){const i=T.fromAffine(v((0,t._abytes2)(e,void 0,"point")));return i.assertValidity(),i}static fromHex(e){return T.fromBytes((0,t.ensureBytes)("pointHex",e))}get x(){return this.toAffine().x}get y(){return this.toAffine().y}precompute(e=8,i=!0){return L.createCache(this,e),i||this.multiply(m),this}assertValidity(){S(this)}hasEvenY(){const{y:e}=this.toAffine();if(!a.isOdd)throw new Error("Field doesn't support isOdd");return!a.isOdd(e)}equals(e){B(e);const{X:i,Y:n,Z:r}=this,{X:t,Y:s,Z:o}=e,c=a.eql(a.mul(i,o),a.mul(t,r)),h=a.eql(a.mul(n,o),a.mul(s,r));return c&&h}negate(){return new T(this.X,a.neg(this.Y),this.Z)}double(){const{a:e,b:i}=o,n=a.mul(i,m),{X:r,Y:t,Z:s}=this;let c=a.ZERO,h=a.ZERO,u=a.ZERO,l=a.mul(r,r),p=a.mul(t,t),d=a.mul(s,s),f=a.mul(r,t);return f=a.add(f,f),u=a.mul(r,s),u=a.add(u,u),c=a.mul(e,u),h=a.mul(n,d),h=a.add(c,h),c=a.sub(p,h),h=a.add(p,h),h=a.mul(c,h),c=a.mul(f,c),u=a.mul(n,u),d=a.mul(e,d),f=a.sub(l,d),f=a.mul(e,f),f=a.add(f,u),u=a.add(l,l),l=a.add(u,l),l=a.add(l,d),l=a.mul(l,f),h=a.add(h,l),d=a.mul(t,s),d=a.add(d,d),l=a.mul(d,f),c=a.sub(c,l),u=a.mul(d,p),u=a.add(u,u),u=a.add(u,u),new T(c,h,u)}add(e){B(e);const{X:i,Y:n,Z:r}=this,{X:t,Y:s,Z:c}=e;let h=a.ZERO,u=a.ZERO,l=a.ZERO;const p=o.a,d=a.mul(o.b,m);let f=a.mul(i,t),g=a.mul(n,s),k=a.mul(r,c),b=a.add(i,n),_=a.add(t,s);b=a.mul(b,_),_=a.add(f,g),b=a.sub(b,_),_=a.add(i,r);let y=a.add(t,c);return _=a.mul(_,y),y=a.add(f,k),_=a.sub(_,y),y=a.add(n,r),h=a.add(s,c),y=a.mul(y,h),h=a.add(g,k),y=a.sub(y,h),l=a.mul(p,_),h=a.mul(d,k),l=a.add(h,l),h=a.sub(g,l),l=a.add(g,l),u=a.mul(h,l),g=a.add(f,f),g=a.add(g,f),k=a.mul(p,k),_=a.mul(d,_),g=a.add(g,k),k=a.sub(f,k),k=a.mul(p,k),_=a.add(_,k),f=a.mul(g,_),u=a.add(u,f),f=a.mul(y,_),h=a.mul(b,h),h=a.sub(h,f),f=a.mul(b,g),l=a.mul(y,l),l=a.add(l,f),new T(h,u,l)}subtract(e){return this.add(e.negate())}is0(){return this.equals(T.ZERO)}multiply(e){const{endo:n}=i;if(!r.isValidNot0(e))throw new Error("invalid scalar: out of range");let a,t;const o=e=>L.cached(this,e,e=>(0,s.normalizeZ)(T,e));if(n){const{k1neg:i,k1:r,k2neg:s,k2:c}=C(e),{p:h,f:u}=o(r),{p:l,f:p}=o(c);t=u.add(p),a=Q(n.beta,h,l,i,s)}else{const{p:i,f:n}=o(e);a=i,t=n}return(0,s.normalizeZ)(T,[a,t])[0]}multiplyUnsafe(e){const{endo:n}=i,a=this;if(!r.isValid(e))throw new Error("invalid scalar: out of range");if(e===d||a.is0())return T.ZERO;if(e===f)return a;if(L.hasCache(this))return this.multiply(e);if(n){const{k1neg:i,k1:r,k2neg:t,k2:o}=C(e),{p1:c,p2:h}=(0,s.mulEndoUnsafe)(T,a,r,o);return Q(n.beta,c,h,i,t)}return L.unsafe(a,e)}multiplyAndAddUnsafe(e,i,n){const a=this.multiplyUnsafe(i).add(e.multiplyUnsafe(n));return a.is0()?void 0:a}toAffine(e){return x(this,e)}isTorsionFree(){const{isTorsionFree:e}=i;return c===f||(e?e(T,this):L.unsafe(this,u).is0())}clearCofactor(){const{clearCofactor:e}=i;return c===f?this:e?e(T,this):this.multiplyUnsafe(c)}isSmallOrder(){return this.multiplyUnsafe(c).is0()}toBytes(e=!0){return(0,t._abool2)(e,"isCompressed"),this.assertValidity(),_(T,this,e)}toHex(e=!0){return(0,t.bytesToHex)(this.toBytes(e))}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}get px(){return this.X}get py(){return this.X}get pz(){return this.Z}toRawBytes(e=!0){return this.toBytes(e)}_setWindowSize(e){this.precompute(e)}static normalizeZ(e){return(0,s.normalizeZ)(T,e)}static msm(e,i){return(0,s.pippenger)(T,r,e,i)}static fromPrivateKey(e){return T.BASE.multiply(b(r,e))}}T.BASE=new T(o.Gx,o.Gy,a.ONE),T.ZERO=new T(a.ZERO,a.ONE,a.ZERO),T.Fp=a,T.Fn=r;const P=r.BITS,L=new s.wNAF(T,i.endo?Math.ceil(P/2):P);return T.BASE.precompute(8),T}function y(e){return Uint8Array.of(e?2:3)}function v(e,i){const n=e.ORDER;let a=d;for(let e=n-f;e%g===d;e/=g)a+=f;const r=a,t=g<<r-f-f,s=t*g,o=(n-f)/s,c=(o-f)/g,h=s-f,u=t,l=e.pow(i,o),p=e.pow(i,(o+f)/g);let b=(i,n)=>{let a=l,t=e.pow(n,h),s=e.sqr(t);s=e.mul(s,n);let o=e.mul(i,s);o=e.pow(o,c),o=e.mul(o,t),t=e.mul(o,n),s=e.mul(o,i);let d=e.mul(s,t);o=e.pow(d,u);let m=e.eql(o,e.ONE);t=e.mul(s,p),o=e.mul(d,a),s=e.cmov(t,s,m),d=e.cmov(o,d,m);for(let i=r;i>f;i--){let n=i-g;n=g<<n-f;let r=e.pow(d,n);const o=e.eql(r,e.ONE);t=e.mul(s,a),a=e.mul(a,a),r=e.mul(d,a),s=e.cmov(t,s,o),d=e.cmov(r,d,o)}return{isValid:m,value:s}};if(e.ORDER%k===m){const n=(e.ORDER-m)/k,a=e.sqrt(e.neg(i));b=(i,r)=>{let t=e.sqr(r);const s=e.mul(i,r);t=e.mul(t,s);let o=e.pow(t,n);o=e.mul(o,s);const c=e.mul(o,a),h=e.mul(e.sqr(o),r),u=e.eql(h,i);return{isValid:u,value:e.cmov(c,o,u)}}}return b}function A(e,i){return{secretKey:i.BYTES,publicKey:1+e.BYTES,publicKeyUncompressed:1+2*e.BYTES,publicKeyHasPrefix:!0,signature:2*i.BYTES}}function z(e,i={}){const{Fn:n}=e,a=i.randomBytes||t.randomBytes,r=Object.assign(A(e.Fp,n),{seed:(0,o.getMinHashLength)(n.ORDER)});function s(e){try{return!!b(n,e)}catch(e){return!1}}function c(e=a(r.seed)){return(0,o.mapHashToField)((0,t._abytes2)(e,r.seed,"seed"),n.ORDER)}function h(i,a=!0){return e.BASE.multiply(b(n,i)).toBytes(a)}function u(i){if("bigint"==typeof i)return!1;if(i instanceof e)return!0;const{secretKey:a,publicKey:s,publicKeyUncompressed:o}=r;if(n.allowedLengths||a===s)return;const c=(0,t.ensureBytes)("key",i).length;return c===s||c===o}const l={isValidSecretKey:s,isValidPublicKey:function(i,n){const{publicKey:a,publicKeyUncompressed:t}=r;try{const r=i.length;return!(!0===n&&r!==a||!1===n&&r!==t||!e.fromBytes(i))}catch(e){return!1}},randomSecretKey:c,isValidPrivateKey:s,randomPrivateKey:c,normPrivateKeyToScalar:e=>b(n,e),precompute:(i=8,n=e.BASE)=>n.precompute(i,!1)};return Object.freeze({getPublicKey:h,getSharedSecret:function(i,a,r=!0){if(!0===u(i))throw new Error("first arg must be private key");if(!1===u(a))throw new Error("second arg must be public key");const t=b(n,i);return e.fromHex(a).multiply(t).toBytes(r)},keygen:function(e){const i=c(e);return{secretKey:i,publicKey:h(i)}},Point:e,utils:l,lengths:r})}function I(e,n,s={}){(0,r.ahash)(n),(0,t._validateObject)(s,{},{hmac:"function",lowS:"boolean",randomBytes:"function",bits2int:"function",bits2int_modN:"function"});const o=s.randomBytes||t.randomBytes,c=s.hmac||((e,...i)=>(0,a.hmac)(n,e,(0,t.concatBytes)(...i))),{Fp:h,Fn:p}=e,{ORDER:m,BITS:k}=p,{keygen:_,getPublicKey:v,getSharedSecret:A,utils:I,lengths:E}=z(e,s),j={prehash:!1,lowS:"boolean"==typeof s.lowS&&s.lowS,format:void 0,extraEntropy:!1},w="compact";function B(e){return e>m>>f}function C(e,i){if(!p.isValidNot0(i))throw new Error(`invalid signature ${e}: out of range 1..Point.Fn.ORDER`);return i}class x{constructor(e,i,n){this.r=C("r",e),this.s=C("s",i),null!=n&&(this.recovery=n),Object.freeze(this)}static fromBytes(e,n=w){let a;if(function(e,i){u(i);const n=E.signature,a="compact"===i?n:"recovered"===i?n+1:void 0;(0,t._abytes2)(e,a,`${i} signature`)}(e,n),"der"===n){const{r:n,s:a}=i.DER.toSig((0,t._abytes2)(e));return new x(n,a)}"recovered"===n&&(a=e[0],n="compact",e=e.subarray(1));const r=p.BYTES,s=e.subarray(0,r),o=e.subarray(r,2*r);return new x(p.fromBytes(s),p.fromBytes(o),a)}static fromHex(e,i){return this.fromBytes((0,t.hexToBytes)(e),i)}addRecoveryBit(e){return new x(this.r,this.s,e)}recoverPublicKey(i){const n=h.ORDER,{r:a,s:r,recovery:s}=this;if(null==s||![0,1,2,3].includes(s))throw new Error("recovery id invalid");if(m*g<n&&s>1)throw new Error("recovery id is ambiguous for h>1 curve");const o=2===s||3===s?a+m:a;if(!h.isValid(o))throw new Error("recovery id 2 or 3 invalid");const c=h.toBytes(o),u=e.fromBytes((0,t.concatBytes)(y(!(1&s)),c)),l=p.inv(o),d=Q((0,t.ensureBytes)("msgHash",i)),f=p.create(-d*l),k=p.create(r*l),b=e.BASE.multiplyUnsafe(f).add(u.multiplyUnsafe(k));if(b.is0())throw new Error("point at infinify");return b.assertValidity(),b}hasHighS(){return B(this.s)}toBytes(e=w){if(u(e),"der"===e)return(0,t.hexToBytes)(i.DER.hexFromSig(this));const n=p.toBytes(this.r),a=p.toBytes(this.s);if("recovered"===e){if(null==this.recovery)throw new Error("recovery bit must be present");return(0,t.concatBytes)(Uint8Array.of(this.recovery),n,a)}return(0,t.concatBytes)(n,a)}toHex(e){return(0,t.bytesToHex)(this.toBytes(e))}assertValidity(){}static fromCompact(e){return x.fromBytes((0,t.ensureBytes)("sig",e),"compact")}static fromDER(e){return x.fromBytes((0,t.ensureBytes)("sig",e),"der")}normalizeS(){return this.hasHighS()?new x(this.r,p.neg(this.s),this.recovery):this}toDERRawBytes(){return this.toBytes("der")}toDERHex(){return(0,t.bytesToHex)(this.toBytes("der"))}toCompactRawBytes(){return this.toBytes("compact")}toCompactHex(){return(0,t.bytesToHex)(this.toBytes("compact"))}}const S=s.bits2int||function(e){if(e.length>8192)throw new Error("input is too large");const i=(0,t.bytesToNumberBE)(e),n=8*e.length-k;return n>0?i>>BigInt(n):i},Q=s.bits2int_modN||function(e){return p.create(S(e))},T=(0,t.bitMask)(k);function P(e){return(0,t.aInRange)("num < 2^"+k,e,d,T),p.toBytes(e)}function L(e,i){return(0,t._abytes2)(e,void 0,"message"),i?(0,t._abytes2)(n(e),void 0,"prehashed message"):e}return Object.freeze({keygen:_,getPublicKey:v,getSharedSecret:A,utils:I,lengths:E,Point:e,sign:function(i,a,r={}){i=(0,t.ensureBytes)("message",i);const{seed:s,k2sig:h}=function(i,n,a){if(["recovered","canonical"].some(e=>e in a))throw new Error("sign() legacy options not supported");const{lowS:r,prehash:s,extraEntropy:c}=l(a,j);i=L(i,s);const h=Q(i),u=b(p,n),g=[P(u),P(h)];if(null!=c&&!1!==c){const e=!0===c?o(E.secretKey):c;g.push((0,t.ensureBytes)("extraEntropy",e))}const m=(0,t.concatBytes)(...g),k=h;return{seed:m,k2sig:function(i){const n=S(i);if(!p.isValidNot0(n))return;const a=p.inv(n),t=e.BASE.multiply(n).toAffine(),s=p.create(t.x);if(s===d)return;const o=p.create(a*p.create(k+s*u));if(o===d)return;let c=(t.x===s?0:2)|Number(t.y&f),h=o;return r&&B(o)&&(h=p.neg(o),c^=1),new x(s,h,c)}}}(i,a,r);return(0,t.createHmacDrbg)(n.outputLen,p.BYTES,c)(s,h)},verify:function(n,a,r,s={}){const{lowS:o,prehash:c,format:h}=l(s,j);if(r=(0,t.ensureBytes)("publicKey",r),a=L((0,t.ensureBytes)("message",a),c),"strict"in s)throw new Error("options.strict was renamed to lowS");const u=void 0===h?function(e){let n;const a="string"==typeof e||(0,t.isBytes)(e),r=!a&&null!==e&&"object"==typeof e&&"bigint"==typeof e.r&&"bigint"==typeof e.s;if(!a&&!r)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");if(r)n=new x(e.r,e.s);else if(a){try{n=x.fromBytes((0,t.ensureBytes)("sig",e),"der")}catch(e){if(!(e instanceof i.DER.Err))throw e}if(!n)try{n=x.fromBytes((0,t.ensureBytes)("sig",e),"compact")}catch(e){return!1}}return n||!1}(n):x.fromBytes((0,t.ensureBytes)("sig",n),h);if(!1===u)return!1;try{const i=e.fromBytes(r);if(o&&u.hasHighS())return!1;const{r:n,s:t}=u,s=Q(a),c=p.inv(t),h=p.create(s*c),l=p.create(n*c),d=e.BASE.multiplyUnsafe(h).add(i.multiplyUnsafe(l));return!d.is0()&&p.create(d.x)===n}catch(e){return!1}},recoverPublicKey:function(e,i,n={}){const{prehash:a}=l(n,j);return i=L(i,a),x.fromBytes(e,"recovered").recoverPublicKey(i).toBytes()},Signature:x,hash:n})}function E(e){const i={a:e.a,b:e.b,p:e.Fp.ORDER,n:e.n,h:e.h,Gx:e.Gx,Gy:e.Gy},n=e.Fp;let a=e.allowedPrivateKeyLengths?Array.from(new Set(e.allowedPrivateKeyLengths.map(e=>Math.ceil(e/2)))):void 0;return{CURVE:i,curveOpts:{Fp:n,Fn:(0,o.Field)(i.n,{BITS:e.nBitLength,allowedLengths:a,modFromBytes:e.wrapPrivateKey}),allowInfinityPoint:e.allowInfinityPoint,endo:e.endo,isTorsionFree:e.isTorsionFree,clearCofactor:e.clearCofactor,fromBytes:e.fromBytes,toBytes:e.toBytes}}}function j(e,i,n){return function(a){const r=e.sqr(a),t=e.mul(r,a);return e.add(e.add(t,e.mul(a,i)),n)}}},1761:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i._DST_scalar=void 0,i.expand_message_xmd=u,i.expand_message_xof=l,i.hash_to_field=p,i.isogenyMap=function(e,i){const n=i.map(e=>Array.from(e).reverse());return(i,a)=>{const[t,s,o,c]=n.map(n=>n.reduce((n,a)=>e.add(e.mul(n,i),a))),[h,u]=(0,r.FpInvertBatch)(e,[s,c],!0);return i=e.mul(t,h),a=e.mul(a,e.mul(o,u)),{x:i,y:a}}},i.createHasher=function(e,n,a){if("function"!=typeof n)throw new Error("mapToCurve() must be defined");function r(i){return e.fromAffine(n(i))}function t(i){const n=i.clearCofactor();return n.equals(e.ZERO)?e.ZERO:(n.assertValidity(),n)}return{defaults:a,hashToCurve(e,i){const n=p(e,2,Object.assign({},a,i)),s=r(n[0]),o=r(n[1]);return t(s.add(o))},encodeToCurve(e,i){const n=a.encodeDST?{DST:a.encodeDST}:{};return t(r(p(e,1,Object.assign({},a,n,i))[0]))},mapToCurve(e){if(!Array.isArray(e))throw new Error("expected array of bigints");for(const i of e)if("bigint"!=typeof i)throw new Error("expected array of bigints");return t(r(e))},hashToScalar(n,r){const t=e.Fn.ORDER;return p(n,1,Object.assign({},a,{p:t,m:1,DST:i._DST_scalar},r))[0][0]}}};const a=n(8627),r=n(4967),t=a.bytesToNumberBE;function s(e,i){if(c(e),c(i),e<0||e>=1<<8*i)throw new Error("invalid I2OSP input: "+e);const n=Array.from({length:i}).fill(0);for(let a=i-1;a>=0;a--)n[a]=255&e,e>>>=8;return new Uint8Array(n)}function o(e,i){const n=new Uint8Array(e.length);for(let a=0;a<e.length;a++)n[a]=e[a]^i[a];return n}function c(e){if(!Number.isSafeInteger(e))throw new Error("number expected")}function h(e){if(!(0,a.isBytes)(e)&&"string"!=typeof e)throw new Error("DST must be Uint8Array or string");return"string"==typeof e?(0,a.utf8ToBytes)(e):e}function u(e,i,n,r){(0,a.abytes)(e),c(n),(i=h(i)).length>255&&(i=r((0,a.concatBytes)((0,a.utf8ToBytes)("H2C-OVERSIZE-DST-"),i)));const{outputLen:t,blockLen:u}=r,l=Math.ceil(n/t);if(n>65535||l>255)throw new Error("expand_message_xmd: invalid lenInBytes");const p=(0,a.concatBytes)(i,s(i.length,1)),d=s(0,u),f=s(n,2),g=new Array(l),m=r((0,a.concatBytes)(d,e,f,s(0,1),p));g[0]=r((0,a.concatBytes)(m,s(1,1),p));for(let e=1;e<=l;e++){const i=[o(m,g[e-1]),s(e+1,1),p];g[e]=r((0,a.concatBytes)(...i))}return(0,a.concatBytes)(...g).slice(0,n)}function l(e,i,n,r,t){if((0,a.abytes)(e),c(n),(i=h(i)).length>255){const e=Math.ceil(2*r/8);i=t.create({dkLen:e}).update((0,a.utf8ToBytes)("H2C-OVERSIZE-DST-")).update(i).digest()}if(n>65535||i.length>255)throw new Error("expand_message_xof: invalid lenInBytes");return t.create({dkLen:n}).update(e).update(s(n,2)).update(i).update(s(i.length,1)).digest()}function p(e,i,n){(0,a._validateObject)(n,{p:"bigint",m:"number",k:"number",hash:"function"});const{p:s,k:o,m:h,hash:p,expand:d,DST:f}=n;if(!(0,a.isHash)(n.hash))throw new Error("expected valid hash");(0,a.abytes)(e),c(i);const g=s.toString(2).length,m=Math.ceil((g+o)/8),k=i*h*m;let b;if("xmd"===d)b=u(e,f,k,p);else if("xof"===d)b=l(e,f,k,o,p);else{if("_internal_pass"!==d)throw new Error('expand must be "xmd" or "xof"');b=e}const _=new Array(i);for(let e=0;e<i;e++){const i=new Array(h);for(let n=0;n<h;n++){const a=m*(n+e*h),o=b.subarray(a,a+m);i[n]=(0,r.mod)(t(o),s)}_[e]=i}return _}i._DST_scalar=(0,a.utf8ToBytes)("HashToScalar-")},1783:(e,i,n)=>{const a=n(6889),r=n(5682);e.exports=h;const t=e.exports.SHA256_BYTES=32,s=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function o(e,i,n,a){return((e>>>17|e<<15)^(e>>>19|e<<13)^e>>>10)+i+(((n>>>7|n<<25)^(n>>>18|n<<14)^n>>>3)+a)|0}function c(e,i){var n,a,r,[t,c,h,u,p,d,f,g]=e;const m=new Uint32Array(64);for(let e=0;e<16;e++)m[e]=l(i[e]);for(let e=16;e<64;e++)m[e]=o(m[e-2],m[e-7],m[e-15],m[e-16]);for(let e=0;e<64;e+=4)k(e);function k(e){n=t&c^t&h^c&h,a=(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10),r=g+(p&d^~p&f)+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+m[e]+s[e],g=u+r,n=(u=r+(a+n))&t^u&c^t&c,a=(u>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10),r=f+(g&p^~g&d)+((g>>>6|g<<26)^(g>>>11|g<<21)^(g>>>25|g<<7))+m[e+1]+s[e+1],f=h+r,n=(h=r+(a+n))&u^h&t^u&t,a=(h>>>2|h<<30)^(h>>>13|h<<19)^(h>>>22|h<<10),r=d+(f&g^~f&p)+((f>>>6|f<<26)^(f>>>11|f<<21)^(f>>>25|f<<7))+m[e+2]+s[e+2],d=c+r,n=(c=r+(a+n))&h^c&u^h&u,a=(c>>>2|c<<30)^(c>>>13|c<<19)^(c>>>22|c<<10),r=p+(d&f^~d&g)+((d>>>6|d<<26)^(d>>>11|d<<21)^(d>>>25|d<<7))+m[e+3]+s[e+3],p=t+r,t=r+(a+n)}e[0]=e[0]+t,e[1]=e[1]+c,e[2]=e[2]+h,e[3]=e[3]+u,e[4]=e[4]+p,e[5]=e[5]+d,e[6]=e[6]+f,e[7]=e[7]+g}function h(){return this instanceof h?(this.buffer=new ArrayBuffer(64),this.bytesRead=0,this.pos=0,this.digestLength=t,this.finalised=!1,this.load=new Uint8Array(this.buffer),this.words=new Uint32Array(this.buffer),this.state=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),this):new h}function u(e){if(!(this instanceof u))return new u(e);this.pad=r.alloc(64),this.inner=h(),this.outer=h();const i=r.alloc(32);e.byteLength>64&&(h().update(e).digest(i),e=i),this.pad.fill(54);for(let i=0;i<e.byteLength;i++)this.pad[i]^=e[i];this.inner.update(this.pad),this.pad.fill(92);for(let i=0;i<e.byteLength;i++)this.pad[i]^=e[i];this.outer.update(this.pad),this.pad.fill(0),i.fill(0)}function l(e){return(16711935&e)>>>8|(16711935&e)<<24|(4278255360&e)<<8|(4278255360&e)>>>24}h.prototype.update=function(e,i){a(!1===this.finalised,"Hash instance finalised");var[n,t]=function(e,i){var n=r.from(e,i);return[n,n.byteLength]}(e,i),s=0;for(this.bytesRead+=t;t>0&&(this.load.set(n.subarray(s,s+64-this.pos),this.pos),s+=64-this.pos,!((t-=64-this.pos)<0));)this.pos=0,c(this.state,this.words);return this.pos=63&this.bytesRead,this.load.fill(0,this.pos),this},h.prototype.digest=function(e,i=0){a(!1===this.finalised,"Hash instance finalised"),this.finalised=!0,this.load.fill(0,this.pos),this.load[this.pos]=128,this.pos>55&&(c(this.state,this.words),this.words.fill(0),this.pos=0);const n=new DataView(this.buffer);n.setUint32(56,this.bytesRead/2**29),n.setUint32(60,this.bytesRead<<3),c(this.state,this.words);const t=new Uint8Array(this.state.map(l).buffer);if(!e)return new Uint8Array(t);if("string"==typeof e)return r.toString(t,e);a(e instanceof Uint8Array,"input must be Uint8Array or Buffer"),a(e.byteLength>=this.digestLength+i,"input not large enough for digest");for(let n=0;n<this.digestLength;n++)e[n+i]=t[n];return e},u.prototype.update=function(e,i){return this.inner.update(e,i),this},u.prototype.digest=function(e,i=0){return this.outer.update(this.inner.digest()),this.outer.digest(e,i)},h.HMAC=u},1805:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.definePattern=void 0;const a=n(5620);i.definePattern=function(e,i){return(0,a.define)(e,e=>"string"==typeof e&&i.test(e))}},1816:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.sha384=i.sha512_256=i.sha512_224=i.sha512=i.SHA512=void 0;const a=n(4133),r=n(6472),t=n(9161),[s,o]=(()=>r.default.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(e=>BigInt(e))))(),c=new Uint32Array(80),h=new Uint32Array(80);class u extends a.SHA2{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:e,Al:i,Bh:n,Bl:a,Ch:r,Cl:t,Dh:s,Dl:o,Eh:c,El:h,Fh:u,Fl:l,Gh:p,Gl:d,Hh:f,Hl:g}=this;return[e,i,n,a,r,t,s,o,c,h,u,l,p,d,f,g]}set(e,i,n,a,r,t,s,o,c,h,u,l,p,d,f,g){this.Ah=0|e,this.Al=0|i,this.Bh=0|n,this.Bl=0|a,this.Ch=0|r,this.Cl=0|t,this.Dh=0|s,this.Dl=0|o,this.Eh=0|c,this.El=0|h,this.Fh=0|u,this.Fl=0|l,this.Gh=0|p,this.Gl=0|d,this.Hh=0|f,this.Hl=0|g}process(e,i){for(let n=0;n<16;n++,i+=4)c[n]=e.getUint32(i),h[n]=e.getUint32(i+=4);for(let e=16;e<80;e++){const i=0|c[e-15],n=0|h[e-15],a=r.default.rotrSH(i,n,1)^r.default.rotrSH(i,n,8)^r.default.shrSH(i,n,7),t=r.default.rotrSL(i,n,1)^r.default.rotrSL(i,n,8)^r.default.shrSL(i,n,7),s=0|c[e-2],o=0|h[e-2],u=r.default.rotrSH(s,o,19)^r.default.rotrBH(s,o,61)^r.default.shrSH(s,o,6),l=r.default.rotrSL(s,o,19)^r.default.rotrBL(s,o,61)^r.default.shrSL(s,o,6),p=r.default.add4L(t,l,h[e-7],h[e-16]),d=r.default.add4H(p,a,u,c[e-7],c[e-16]);c[e]=0|d,h[e]=0|p}let{Ah:n,Al:a,Bh:t,Bl:u,Ch:l,Cl:p,Dh:d,Dl:f,Eh:g,El:m,Fh:k,Fl:b,Gh:_,Gl:y,Hh:v,Hl:A}=this;for(let e=0;e<80;e++){const i=r.default.rotrSH(g,m,14)^r.default.rotrSH(g,m,18)^r.default.rotrBH(g,m,41),z=r.default.rotrSL(g,m,14)^r.default.rotrSL(g,m,18)^r.default.rotrBL(g,m,41),I=g&k^~g&_,E=m&b^~m&y,j=r.default.add5L(A,z,E,o[e],h[e]),w=r.default.add5H(j,v,i,I,s[e],c[e]),B=0|j,C=r.default.rotrSH(n,a,28)^r.default.rotrBH(n,a,34)^r.default.rotrBH(n,a,39),x=r.default.rotrSL(n,a,28)^r.default.rotrBL(n,a,34)^r.default.rotrBL(n,a,39),S=n&t^n&l^t&l,Q=a&u^a&p^u&p;v=0|_,A=0|y,_=0|k,y=0|b,k=0|g,b=0|m,({h:g,l:m}=r.default.add(0|d,0|f,0|w,0|B)),d=0|l,f=0|p,l=0|t,p=0|u,t=0|n,u=0|a;const T=r.default.add3L(B,x,Q);n=r.default.add3H(T,w,C,S),a=0|T}({h:n,l:a}=r.default.add(0|this.Ah,0|this.Al,0|n,0|a)),({h:t,l:u}=r.default.add(0|this.Bh,0|this.Bl,0|t,0|u)),({h:l,l:p}=r.default.add(0|this.Ch,0|this.Cl,0|l,0|p)),({h:d,l:f}=r.default.add(0|this.Dh,0|this.Dl,0|d,0|f)),({h:g,l:m}=r.default.add(0|this.Eh,0|this.El,0|g,0|m)),({h:k,l:b}=r.default.add(0|this.Fh,0|this.Fl,0|k,0|b)),({h:_,l:y}=r.default.add(0|this.Gh,0|this.Gl,0|_,0|y)),({h:v,l:A}=r.default.add(0|this.Hh,0|this.Hl,0|v,0|A)),this.set(n,a,t,u,l,p,d,f,g,m,k,b,_,y,v,A)}roundClean(){c.fill(0),h.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}i.SHA512=u;class l extends u{constructor(){super(),this.Ah=-1942145080,this.Al=424955298,this.Bh=1944164710,this.Bl=-1982016298,this.Ch=502970286,this.Cl=855612546,this.Dh=1738396948,this.Dl=1479516111,this.Eh=258812777,this.El=2077511080,this.Fh=2011393907,this.Fl=79989058,this.Gh=1067287976,this.Gl=1780299464,this.Hh=286451373,this.Hl=-1848208735,this.outputLen=28}}class p extends u{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32}}class d extends u{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48}}i.sha512=(0,t.wrapConstructor)(()=>new u),i.sha512_224=(0,t.wrapConstructor)(()=>new l),i.sha512_256=(0,t.wrapConstructor)(()=>new p),i.sha384=(0,t.wrapConstructor)(()=>new d)},1819:e=>{"use strict";e.exports=JSON.parse('{"的":["chinese_simplified","chinese_traditional"],"一":["chinese_simplified","chinese_traditional"],"是":["chinese_simplified","chinese_traditional"],"在":["chinese_simplified","chinese_traditional"],"不":["chinese_simplified","chinese_traditional"],"了":["chinese_simplified","chinese_traditional"],"有":["chinese_simplified","chinese_traditional"],"和":["chinese_simplified","chinese_traditional"],"人":["chinese_simplified","chinese_traditional"],"这":["chinese_simplified"],"中":["chinese_simplified","chinese_traditional"],"大":["chinese_simplified","chinese_traditional"],"为":["chinese_simplified"],"上":["chinese_simplified","chinese_traditional"],"个":["chinese_simplified"],"国":["chinese_simplified"],"我":["chinese_simplified","chinese_traditional"],"以":["chinese_simplified","chinese_traditional"],"要":["chinese_simplified","chinese_traditional"],"他":["chinese_simplified","chinese_traditional"],"时":["chinese_simplified"],"来":["chinese_simplified"],"用":["chinese_simplified","chinese_traditional"],"们":["chinese_simplified"],"生":["chinese_simplified","chinese_traditional"],"到":["chinese_simplified","chinese_traditional"],"作":["chinese_simplified","chinese_traditional"],"地":["chinese_simplified","chinese_traditional"],"于":["chinese_simplified"],"出":["chinese_simplified","chinese_traditional"],"就":["chinese_simplified","chinese_traditional"],"分":["chinese_simplified","chinese_traditional"],"对":["chinese_simplified"],"成":["chinese_simplified","chinese_traditional"],"会":["chinese_simplified"],"可":["chinese_simplified","chinese_traditional"],"主":["chinese_simplified","chinese_traditional"],"发":["chinese_simplified"],"年":["chinese_simplified","chinese_traditional"],"动":["chinese_simplified"],"同":["chinese_simplified","chinese_traditional"],"工":["chinese_simplified","chinese_traditional"],"也":["chinese_simplified","chinese_traditional"],"能":["chinese_simplified","chinese_traditional"],"下":["chinese_simplified","chinese_traditional"],"过":["chinese_simplified"],"子":["chinese_simplified","chinese_traditional"],"说":["chinese_simplified"],"产":["chinese_simplified"],"种":["chinese_simplified"],"面":["chinese_simplified","chinese_traditional"],"而":["chinese_simplified","chinese_traditional"],"方":["chinese_simplified","chinese_traditional"],"后":["chinese_simplified"],"多":["chinese_simplified","chinese_traditional"],"定":["chinese_simplified","chinese_traditional"],"行":["chinese_simplified","chinese_traditional"],"学":["chinese_simplified"],"法":["chinese_simplified","chinese_traditional"],"所":["chinese_simplified","chinese_traditional"],"民":["chinese_simplified","chinese_traditional"],"得":["chinese_simplified","chinese_traditional"],"经":["chinese_simplified"],"十":["chinese_simplified","chinese_traditional"],"三":["chinese_simplified","chinese_traditional"],"之":["chinese_simplified","chinese_traditional"],"进":["chinese_simplified"],"着":["chinese_simplified"],"等":["chinese_simplified","chinese_traditional"],"部":["chinese_simplified","chinese_traditional"],"度":["chinese_simplified","chinese_traditional"],"家":["chinese_simplified","chinese_traditional"],"电":["chinese_simplified"],"力":["chinese_simplified","chinese_traditional"],"里":["chinese_simplified"],"如":["chinese_simplified","chinese_traditional"],"水":["chinese_simplified","chinese_traditional"],"化":["chinese_simplified","chinese_traditional"],"高":["chinese_simplified","chinese_traditional"],"自":["chinese_simplified","chinese_traditional"],"二":["chinese_simplified","chinese_traditional"],"理":["chinese_simplified","chinese_traditional"],"起":["chinese_simplified","chinese_traditional"],"小":["chinese_simplified","chinese_traditional"],"物":["chinese_simplified","chinese_traditional"],"现":["chinese_simplified"],"实":["chinese_simplified"],"加":["chinese_simplified","chinese_traditional"],"量":["chinese_simplified","chinese_traditional"],"都":["chinese_simplified","chinese_traditional"],"两":["chinese_simplified"],"体":["chinese_simplified"],"制":["chinese_simplified","chinese_traditional"],"机":["chinese_simplified"],"当":["chinese_simplified"],"使":["chinese_simplified","chinese_traditional"],"点":["chinese_simplified"],"从":["chinese_simplified"],"业":["chinese_simplified"],"本":["chinese_simplified","chinese_traditional"],"去":["chinese_simplified","chinese_traditional"],"把":["chinese_simplified","chinese_traditional"],"性":["chinese_simplified","chinese_traditional"],"好":["chinese_simplified","chinese_traditional"],"应":["chinese_simplified"],"开":["chinese_simplified"],"它":["chinese_simplified","chinese_traditional"],"合":["chinese_simplified","chinese_traditional"],"还":["chinese_simplified"],"因":["chinese_simplified","chinese_traditional"],"由":["chinese_simplified","chinese_traditional"],"其":["chinese_simplified","chinese_traditional"],"些":["chinese_simplified","chinese_traditional"],"然":["chinese_simplified","chinese_traditional"],"前":["chinese_simplified","chinese_traditional"],"外":["chinese_simplified","chinese_traditional"],"天":["chinese_simplified","chinese_traditional"],"政":["chinese_simplified","chinese_traditional"],"四":["chinese_simplified","chinese_traditional"],"日":["chinese_simplified","chinese_traditional"],"那":["chinese_simplified","chinese_traditional"],"社":["chinese_simplified","chinese_traditional"],"义":["chinese_simplified"],"事":["chinese_simplified","chinese_traditional"],"平":["chinese_simplified","chinese_traditional"],"形":["chinese_simplified","chinese_traditional"],"相":["chinese_simplified","chinese_traditional"],"全":["chinese_simplified","chinese_traditional"],"表":["chinese_simplified","chinese_traditional"],"间":["chinese_simplified"],"样":["chinese_simplified"],"与":["chinese_simplified"],"关":["chinese_simplified"],"各":["chinese_simplified","chinese_traditional"],"重":["chinese_simplified","chinese_traditional"],"新":["chinese_simplified","chinese_traditional"],"线":["chinese_simplified"],"内":["chinese_simplified"],"数":["chinese_simplified"],"正":["chinese_simplified","chinese_traditional"],"心":["chinese_simplified","chinese_traditional"],"反":["chinese_simplified","chinese_traditional"],"你":["chinese_simplified","chinese_traditional"],"明":["chinese_simplified","chinese_traditional"],"看":["chinese_simplified","chinese_traditional"],"原":["chinese_simplified","chinese_traditional"],"又":["chinese_simplified","chinese_traditional"],"么":["chinese_simplified"],"利":["chinese_simplified","chinese_traditional"],"比":["chinese_simplified","chinese_traditional"],"或":["chinese_simplified","chinese_traditional"],"但":["chinese_simplified","chinese_traditional"],"质":["chinese_simplified"],"气":["chinese_simplified"],"第":["chinese_simplified","chinese_traditional"],"向":["chinese_simplified","chinese_traditional"],"道":["chinese_simplified","chinese_traditional"],"命":["chinese_simplified","chinese_traditional"],"此":["chinese_simplified","chinese_traditional"],"变":["chinese_simplified"],"条":["chinese_simplified"],"只":["chinese_simplified","chinese_traditional"],"没":["chinese_simplified"],"结":["chinese_simplified"],"解":["chinese_simplified","chinese_traditional"],"问":["chinese_simplified"],"意":["chinese_simplified","chinese_traditional"],"建":["chinese_simplified","chinese_traditional"],"月":["chinese_simplified","chinese_traditional"],"公":["chinese_simplified","chinese_traditional"],"无":["chinese_simplified"],"系":["chinese_simplified","chinese_traditional"],"军":["chinese_simplified"],"很":["chinese_simplified","chinese_traditional"],"情":["chinese_simplified","chinese_traditional"],"者":["chinese_simplified","chinese_traditional"],"最":["chinese_simplified","chinese_traditional"],"立":["chinese_simplified","chinese_traditional"],"代":["chinese_simplified","chinese_traditional"],"想":["chinese_simplified","chinese_traditional"],"已":["chinese_simplified","chinese_traditional"],"通":["chinese_simplified","chinese_traditional"],"并":["chinese_simplified"],"提":["chinese_simplified","chinese_traditional"],"直":["chinese_simplified","chinese_traditional"],"题":["chinese_simplified"],"党":["chinese_simplified"],"程":["chinese_simplified","chinese_traditional"],"展":["chinese_simplified","chinese_traditional"],"五":["chinese_simplified","chinese_traditional"],"果":["chinese_simplified","chinese_traditional"],"料":["chinese_simplified","chinese_traditional"],"象":["chinese_simplified","chinese_traditional"],"员":["chinese_simplified"],"革":["chinese_simplified","chinese_traditional"],"位":["chinese_simplified","chinese_traditional"],"入":["chinese_simplified","chinese_traditional"],"常":["chinese_simplified","chinese_traditional"],"文":["chinese_simplified","chinese_traditional"],"总":["chinese_simplified"],"次":["chinese_simplified","chinese_traditional"],"品":["chinese_simplified","chinese_traditional"],"式":["chinese_simplified","chinese_traditional"],"活":["chinese_simplified","chinese_traditional"],"设":["chinese_simplified"],"及":["chinese_simplified","chinese_traditional"],"管":["chinese_simplified","chinese_traditional"],"特":["chinese_simplified","chinese_traditional"],"件":["chinese_simplified","chinese_traditional"],"长":["chinese_simplified"],"求":["chinese_simplified","chinese_traditional"],"老":["chinese_simplified","chinese_traditional"],"头":["chinese_simplified"],"基":["chinese_simplified","chinese_traditional"],"资":["chinese_simplified"],"边":["chinese_simplified"],"流":["chinese_simplified","chinese_traditional"],"路":["chinese_simplified","chinese_traditional"],"级":["chinese_simplified"],"少":["chinese_simplified","chinese_traditional"],"图":["chinese_simplified"],"山":["chinese_simplified","chinese_traditional"],"统":["chinese_simplified"],"接":["chinese_simplified","chinese_traditional"],"知":["chinese_simplified","chinese_traditional"],"较":["chinese_simplified"],"将":["chinese_simplified"],"组":["chinese_simplified"],"见":["chinese_simplified"],"计":["chinese_simplified"],"别":["chinese_simplified"],"她":["chinese_simplified","chinese_traditional"],"手":["chinese_simplified","chinese_traditional"],"角":["chinese_simplified","chinese_traditional"],"期":["chinese_simplified","chinese_traditional"],"根":["chinese_simplified","chinese_traditional"],"论":["chinese_simplified"],"运":["chinese_simplified"],"农":["chinese_simplified"],"指":["chinese_simplified","chinese_traditional"],"几":["chinese_simplified"],"九":["chinese_simplified","chinese_traditional"],"区":["chinese_simplified"],"强":["chinese_simplified"],"放":["chinese_simplified","chinese_traditional"],"决":["chinese_simplified"],"西":["chinese_simplified","chinese_traditional"],"被":["chinese_simplified","chinese_traditional"],"干":["chinese_simplified"],"做":["chinese_simplified","chinese_traditional"],"必":["chinese_simplified","chinese_traditional"],"战":["chinese_simplified"],"先":["chinese_simplified","chinese_traditional"],"回":["chinese_simplified","chinese_traditional"],"则":["chinese_simplified"],"任":["chinese_simplified","chinese_traditional"],"取":["chinese_simplified","chinese_traditional"],"据":["chinese_simplified"],"处":["chinese_simplified"],"队":["chinese_simplified"],"南":["chinese_simplified","chinese_traditional"],"给":["chinese_simplified"],"色":["chinese_simplified","chinese_traditional"],"光":["chinese_simplified","chinese_traditional"],"门":["chinese_simplified"],"即":["chinese_simplified","chinese_traditional"],"保":["chinese_simplified","chinese_traditional"],"治":["chinese_simplified","chinese_traditional"],"北":["chinese_simplified","chinese_traditional"],"造":["chinese_simplified","chinese_traditional"],"百":["chinese_simplified","chinese_traditional"],"规":["chinese_simplified"],"热":["chinese_simplified"],"领":["chinese_simplified"],"七":["chinese_simplified","chinese_traditional"],"海":["chinese_simplified","chinese_traditional"],"口":["chinese_simplified","chinese_traditional"],"东":["chinese_simplified"],"导":["chinese_simplified"],"器":["chinese_simplified","chinese_traditional"],"压":["chinese_simplified"],"志":["chinese_simplified","chinese_traditional"],"世":["chinese_simplified","chinese_traditional"],"金":["chinese_simplified","chinese_traditional"],"增":["chinese_simplified","chinese_traditional"],"争":["chinese_simplified"],"济":["chinese_simplified"],"阶":["chinese_simplified"],"油":["chinese_simplified","chinese_traditional"],"思":["chinese_simplified","chinese_traditional"],"术":["chinese_simplified"],"极":["chinese_simplified"],"交":["chinese_simplified","chinese_traditional"],"受":["chinese_simplified","chinese_traditional"],"联":["chinese_simplified"],"什":["chinese_simplified","chinese_traditional"],"认":["chinese_simplified"],"六":["chinese_simplified","chinese_traditional"],"共":["chinese_simplified","chinese_traditional"],"权":["chinese_simplified"],"收":["chinese_simplified","chinese_traditional"],"证":["chinese_simplified"],"改":["chinese_simplified","chinese_traditional"],"清":["chinese_simplified","chinese_traditional"],"美":["chinese_simplified","chinese_traditional"],"再":["chinese_simplified","chinese_traditional"],"采":["chinese_simplified"],"转":["chinese_simplified"],"更":["chinese_simplified","chinese_traditional"],"单":["chinese_simplified"],"风":["chinese_simplified"],"切":["chinese_simplified","chinese_traditional"],"打":["chinese_simplified","chinese_traditional"],"白":["chinese_simplified","chinese_traditional"],"教":["chinese_simplified","chinese_traditional"],"速":["chinese_simplified","chinese_traditional"],"花":["chinese_simplified","chinese_traditional"],"带":["chinese_simplified"],"安":["chinese_simplified","chinese_traditional"],"场":["chinese_simplified"],"身":["chinese_simplified","chinese_traditional"],"车":["chinese_simplified"],"例":["chinese_simplified","chinese_traditional"],"真":["chinese_simplified","chinese_traditional"],"务":["chinese_simplified"],"具":["chinese_simplified","chinese_traditional"],"万":["chinese_simplified"],"每":["chinese_simplified","chinese_traditional"],"目":["chinese_simplified","chinese_traditional"],"至":["chinese_simplified","chinese_traditional"],"达":["chinese_simplified"],"走":["chinese_simplified","chinese_traditional"],"积":["chinese_simplified"],"示":["chinese_simplified","chinese_traditional"],"议":["chinese_simplified"],"声":["chinese_simplified"],"报":["chinese_simplified"],"斗":["chinese_simplified"],"完":["chinese_simplified","chinese_traditional"],"类":["chinese_simplified"],"八":["chinese_simplified","chinese_traditional"],"离":["chinese_simplified"],"华":["chinese_simplified"],"名":["chinese_simplified","chinese_traditional"],"确":["chinese_simplified"],"才":["chinese_simplified","chinese_traditional"],"科":["chinese_simplified","chinese_traditional"],"张":["chinese_simplified"],"信":["chinese_simplified","chinese_traditional"],"马":["chinese_simplified"],"节":["chinese_simplified"],"话":["chinese_simplified"],"米":["chinese_simplified","chinese_traditional"],"整":["chinese_simplified","chinese_traditional"],"空":["chinese_simplified","chinese_traditional"],"元":["chinese_simplified","chinese_traditional"],"况":["chinese_simplified"],"今":["chinese_simplified","chinese_traditional"],"集":["chinese_simplified","chinese_traditional"],"温":["chinese_simplified"],"传":["chinese_simplified"],"土":["chinese_simplified","chinese_traditional"],"许":["chinese_simplified"],"步":["chinese_simplified","chinese_traditional"],"群":["chinese_simplified","chinese_traditional"],"广":["chinese_simplified"],"石":["chinese_simplified","chinese_traditional"],"记":["chinese_simplified"],"需":["chinese_simplified","chinese_traditional"],"段":["chinese_simplified","chinese_traditional"],"研":["chinese_simplified","chinese_traditional"],"界":["chinese_simplified","chinese_traditional"],"拉":["chinese_simplified","chinese_traditional"],"林":["chinese_simplified","chinese_traditional"],"律":["chinese_simplified","chinese_traditional"],"叫":["chinese_simplified","chinese_traditional"],"且":["chinese_simplified","chinese_traditional"],"究":["chinese_simplified","chinese_traditional"],"观":["chinese_simplified"],"越":["chinese_simplified","chinese_traditional"],"织":["chinese_simplified"],"装":["chinese_simplified"],"影":["chinese_simplified","chinese_traditional"],"算":["chinese_simplified","chinese_traditional"],"低":["chinese_simplified","chinese_traditional"],"持":["chinese_simplified","chinese_traditional"],"音":["chinese_simplified","chinese_traditional"],"众":["chinese_simplified"],"书":["chinese_simplified"],"布":["chinese_simplified","chinese_traditional"],"复":["chinese_simplified","chinese_traditional"],"容":["chinese_simplified","chinese_traditional"],"儿":["chinese_simplified"],"须":["chinese_simplified"],"际":["chinese_simplified"],"商":["chinese_simplified","chinese_traditional"],"非":["chinese_simplified","chinese_traditional"],"验":["chinese_simplified"],"连":["chinese_simplified"],"断":["chinese_simplified"],"深":["chinese_simplified","chinese_traditional"],"难":["chinese_simplified"],"近":["chinese_simplified","chinese_traditional"],"矿":["chinese_simplified"],"千":["chinese_simplified","chinese_traditional"],"周":["chinese_simplified"],"委":["chinese_simplified","chinese_traditional"],"素":["chinese_simplified","chinese_traditional"],"技":["chinese_simplified","chinese_traditional"],"备":["chinese_simplified"],"半":["chinese_simplified","chinese_traditional"],"办":["chinese_simplified"],"青":["chinese_simplified","chinese_traditional"],"省":["chinese_simplified","chinese_traditional"],"列":["chinese_simplified","chinese_traditional"],"习":["chinese_simplified"],"响":["chinese_simplified"],"约":["chinese_simplified"],"支":["chinese_simplified","chinese_traditional"],"般":["chinese_simplified","chinese_traditional"],"史":["chinese_simplified","chinese_traditional"],"感":["chinese_simplified","chinese_traditional"],"劳":["chinese_simplified"],"便":["chinese_simplified","chinese_traditional"],"团":["chinese_simplified"],"往":["chinese_simplified","chinese_traditional"],"酸":["chinese_simplified","chinese_traditional"],"历":["chinese_simplified"],"市":["chinese_simplified","chinese_traditional"],"克":["chinese_simplified","chinese_traditional"],"何":["chinese_simplified","chinese_traditional"],"除":["chinese_simplified","chinese_traditional"],"消":["chinese_simplified","chinese_traditional"],"构":["chinese_simplified"],"府":["chinese_simplified","chinese_traditional"],"称":["chinese_simplified"],"太":["chinese_simplified","chinese_traditional"],"准":["chinese_simplified"],"精":["chinese_simplified","chinese_traditional"],"值":["chinese_simplified","chinese_traditional"],"号":["chinese_simplified"],"率":["chinese_simplified","chinese_traditional"],"族":["chinese_simplified","chinese_traditional"],"维":["chinese_simplified"],"划":["chinese_simplified"],"选":["chinese_simplified"],"标":["chinese_simplified"],"写":["chinese_simplified"],"存":["chinese_simplified","chinese_traditional"],"候":["chinese_simplified","chinese_traditional"],"毛":["chinese_simplified","chinese_traditional"],"亲":["chinese_simplified"],"快":["chinese_simplified","chinese_traditional"],"效":["chinese_simplified","chinese_traditional"],"斯":["chinese_simplified","chinese_traditional"],"院":["chinese_simplified","chinese_traditional"],"查":["chinese_simplified","chinese_traditional"],"江":["chinese_simplified","chinese_traditional"],"型":["chinese_simplified","chinese_traditional"],"眼":["chinese_simplified","chinese_traditional"],"王":["chinese_simplified","chinese_traditional"],"按":["chinese_simplified","chinese_traditional"],"格":["chinese_simplified","chinese_traditional"],"养":["chinese_simplified"],"易":["chinese_simplified","chinese_traditional"],"置":["chinese_simplified","chinese_traditional"],"派":["chinese_simplified","chinese_traditional"],"层":["chinese_simplified"],"片":["chinese_simplified","chinese_traditional"],"始":["chinese_simplified","chinese_traditional"],"却":["chinese_simplified"],"专":["chinese_simplified"],"状":["chinese_simplified"],"育":["chinese_simplified","chinese_traditional"],"厂":["chinese_simplified"],"京":["chinese_simplified","chinese_traditional"],"识":["chinese_simplified"],"适":["chinese_simplified"],"属":["chinese_simplified"],"圆":["chinese_simplified"],"包":["chinese_simplified","chinese_traditional"],"火":["chinese_simplified","chinese_traditional"],"住":["chinese_simplified","chinese_traditional"],"调":["chinese_simplified"],"满":["chinese_simplified"],"县":["chinese_simplified"],"局":["chinese_simplified","chinese_traditional"],"照":["chinese_simplified","chinese_traditional"],"参":["chinese_simplified"],"红":["chinese_simplified"],"细":["chinese_simplified"],"引":["chinese_simplified","chinese_traditional"],"听":["chinese_simplified"],"该":["chinese_simplified"],"铁":["chinese_simplified"],"价":["chinese_simplified"],"严":["chinese_simplified"],"首":["chinese_simplified","chinese_traditional"],"底":["chinese_simplified","chinese_traditional"],"液":["chinese_simplified","chinese_traditional"],"官":["chinese_simplified","chinese_traditional"],"德":["chinese_simplified","chinese_traditional"],"随":["chinese_simplified"],"病":["chinese_simplified","chinese_traditional"],"苏":["chinese_simplified"],"失":["chinese_simplified","chinese_traditional"],"尔":["chinese_simplified"],"死":["chinese_simplified","chinese_traditional"],"讲":["chinese_simplified"],"配":["chinese_simplified","chinese_traditional"],"女":["chinese_simplified","chinese_traditional"],"黄":["chinese_simplified"],"推":["chinese_simplified","chinese_traditional"],"显":["chinese_simplified"],"谈":["chinese_simplified"],"罪":["chinese_simplified","chinese_traditional"],"神":["chinese_simplified","chinese_traditional"],"艺":["chinese_simplified"],"呢":["chinese_simplified","chinese_traditional"],"席":["chinese_simplified","chinese_traditional"],"含":["chinese_simplified","chinese_traditional"],"企":["chinese_simplified","chinese_traditional"],"望":["chinese_simplified","chinese_traditional"],"密":["chinese_simplified","chinese_traditional"],"批":["chinese_simplified","chinese_traditional"],"营":["chinese_simplified"],"项":["chinese_simplified"],"防":["chinese_simplified","chinese_traditional"],"举":["chinese_simplified"],"球":["chinese_simplified","chinese_traditional"],"英":["chinese_simplified","chinese_traditional"],"氧":["chinese_simplified","chinese_traditional"],"势":["chinese_simplified"],"告":["chinese_simplified","chinese_traditional"],"李":["chinese_simplified","chinese_traditional"],"台":["chinese_simplified","chinese_traditional"],"落":["chinese_simplified","chinese_traditional"],"木":["chinese_simplified","chinese_traditional"],"帮":["chinese_simplified"],"轮":["chinese_simplified"],"破":["chinese_simplified","chinese_traditional"],"亚":["chinese_simplified"],"师":["chinese_simplified"],"围":["chinese_simplified"],"注":["chinese_simplified","chinese_traditional"],"远":["chinese_simplified"],"字":["chinese_simplified","chinese_traditional"],"材":["chinese_simplified","chinese_traditional"],"排":["chinese_simplified","chinese_traditional"],"供":["chinese_simplified","chinese_traditional"],"河":["chinese_simplified","chinese_traditional"],"态":["chinese_simplified"],"封":["chinese_simplified","chinese_traditional"],"另":["chinese_simplified","chinese_traditional"],"施":["chinese_simplified","chinese_traditional"],"减":["chinese_simplified"],"树":["chinese_simplified"],"溶":["chinese_simplified","chinese_traditional"],"怎":["chinese_simplified","chinese_traditional"],"止":["chinese_simplified","chinese_traditional"],"案":["chinese_simplified","chinese_traditional"],"言":["chinese_simplified","chinese_traditional"],"士":["chinese_simplified","chinese_traditional"],"均":["chinese_simplified","chinese_traditional"],"武":["chinese_simplified","chinese_traditional"],"固":["chinese_simplified","chinese_traditional"],"叶":["chinese_simplified"],"鱼":["chinese_simplified"],"波":["chinese_simplified","chinese_traditional"],"视":["chinese_simplified"],"仅":["chinese_simplified"],"费":["chinese_simplified"],"紧":["chinese_simplified"],"爱":["chinese_simplified"],"左":["chinese_simplified","chinese_traditional"],"章":["chinese_simplified","chinese_traditional"],"早":["chinese_simplified","chinese_traditional"],"朝":["chinese_simplified","chinese_traditional"],"害":["chinese_simplified","chinese_traditional"],"续":["chinese_simplified"],"轻":["chinese_simplified"],"服":["chinese_simplified","chinese_traditional"],"试":["chinese_simplified"],"食":["chinese_simplified","chinese_traditional"],"充":["chinese_simplified","chinese_traditional"],"兵":["chinese_simplified","chinese_traditional"],"源":["chinese_simplified","chinese_traditional"],"判":["chinese_simplified","chinese_traditional"],"护":["chinese_simplified"],"司":["chinese_simplified","chinese_traditional"],"足":["chinese_simplified","chinese_traditional"],"某":["chinese_simplified","chinese_traditional"],"练":["chinese_simplified"],"差":["chinese_simplified","chinese_traditional"],"致":["chinese_simplified","chinese_traditional"],"板":["chinese_simplified","chinese_traditional"],"田":["chinese_simplified","chinese_traditional"],"降":["chinese_simplified","chinese_traditional"],"黑":["chinese_simplified","chinese_traditional"],"犯":["chinese_simplified","chinese_traditional"],"负":["chinese_simplified"],"击":["chinese_simplified"],"范":["chinese_simplified","chinese_traditional"],"继":["chinese_simplified"],"兴":["chinese_simplified"],"似":["chinese_simplified","chinese_traditional"],"余":["chinese_simplified"],"坚":["chinese_simplified"],"曲":["chinese_simplified","chinese_traditional"],"输":["chinese_simplified"],"修":["chinese_simplified","chinese_traditional"],"故":["chinese_simplified","chinese_traditional"],"城":["chinese_simplified","chinese_traditional"],"夫":["chinese_simplified","chinese_traditional"],"够":["chinese_simplified"],"送":["chinese_simplified","chinese_traditional"],"笔":["chinese_simplified"],"船":["chinese_simplified","chinese_traditional"],"占":["chinese_simplified"],"右":["chinese_simplified","chinese_traditional"],"财":["chinese_simplified"],"吃":["chinese_simplified","chinese_traditional"],"富":["chinese_simplified","chinese_traditional"],"春":["chinese_simplified","chinese_traditional"],"职":["chinese_simplified"],"觉":["chinese_simplified"],"汉":["chinese_simplified"],"画":["chinese_simplified"],"功":["chinese_simplified","chinese_traditional"],"巴":["chinese_simplified","chinese_traditional"],"跟":["chinese_simplified","chinese_traditional"],"虽":["chinese_simplified"],"杂":["chinese_simplified"],"飞":["chinese_simplified"],"检":["chinese_simplified"],"吸":["chinese_simplified","chinese_traditional"],"助":["chinese_simplified","chinese_traditional"],"升":["chinese_simplified"],"阳":["chinese_simplified"],"互":["chinese_simplified","chinese_traditional"],"初":["chinese_simplified","chinese_traditional"],"创":["chinese_simplified"],"抗":["chinese_simplified","chinese_traditional"],"考":["chinese_simplified","chinese_traditional"],"投":["chinese_simplified","chinese_traditional"],"坏":["chinese_simplified"],"策":["chinese_simplified","chinese_traditional"],"古":["chinese_simplified","chinese_traditional"],"径":["chinese_simplified"],"换":["chinese_simplified"],"未":["chinese_simplified","chinese_traditional"],"跑":["chinese_simplified","chinese_traditional"],"留":["chinese_simplified","chinese_traditional"],"钢":["chinese_simplified"],"曾":["chinese_simplified","chinese_traditional"],"端":["chinese_simplified","chinese_traditional"],"责":["chinese_simplified"],"站":["chinese_simplified","chinese_traditional"],"简":["chinese_simplified"],"述":["chinese_simplified","chinese_traditional"],"钱":["chinese_simplified"],"副":["chinese_simplified","chinese_traditional"],"尽":["chinese_simplified"],"帝":["chinese_simplified","chinese_traditional"],"射":["chinese_simplified","chinese_traditional"],"草":["chinese_simplified","chinese_traditional"],"冲":["chinese_simplified"],"承":["chinese_simplified","chinese_traditional"],"独":["chinese_simplified"],"令":["chinese_simplified","chinese_traditional"],"限":["chinese_simplified","chinese_traditional"],"阿":["chinese_simplified","chinese_traditional"],"宣":["chinese_simplified","chinese_traditional"],"环":["chinese_simplified"],"双":["chinese_simplified"],"请":["chinese_simplified"],"超":["chinese_simplified","chinese_traditional"],"微":["chinese_simplified","chinese_traditional"],"让":["chinese_simplified"],"控":["chinese_simplified","chinese_traditional"],"州":["chinese_simplified","chinese_traditional"],"良":["chinese_simplified","chinese_traditional"],"轴":["chinese_simplified"],"找":["chinese_simplified","chinese_traditional"],"否":["chinese_simplified","chinese_traditional"],"纪":["chinese_simplified"],"益":["chinese_simplified","chinese_traditional"],"依":["chinese_simplified","chinese_traditional"],"优":["chinese_simplified"],"顶":["chinese_simplified"],"础":["chinese_simplified"],"载":["chinese_simplified"],"倒":["chinese_simplified","chinese_traditional"],"房":["chinese_simplified","chinese_traditional"],"突":["chinese_simplified","chinese_traditional"],"坐":["chinese_simplified","chinese_traditional"],"粉":["chinese_simplified","chinese_traditional"],"敌":["chinese_simplified"],"略":["chinese_simplified","chinese_traditional"],"客":["chinese_simplified","chinese_traditional"],"袁":["chinese_simplified","chinese_traditional"],"冷":["chinese_simplified","chinese_traditional"],"胜":["chinese_simplified"],"绝":["chinese_simplified"],"析":["chinese_simplified","chinese_traditional"],"块":["chinese_simplified"],"剂":["chinese_simplified"],"测":["chinese_simplified"],"丝":["chinese_simplified"],"协":["chinese_simplified"],"诉":["chinese_simplified"],"念":["chinese_simplified","chinese_traditional"],"陈":["chinese_simplified"],"仍":["chinese_simplified","chinese_traditional"],"罗":["chinese_simplified"],"盐":["chinese_simplified"],"友":["chinese_simplified","chinese_traditional"],"洋":["chinese_simplified","chinese_traditional"],"错":["chinese_simplified"],"苦":["chinese_simplified","chinese_traditional"],"夜":["chinese_simplified","chinese_traditional"],"刑":["chinese_simplified","chinese_traditional"],"移":["chinese_simplified","chinese_traditional"],"频":["chinese_simplified"],"逐":["chinese_simplified","chinese_traditional"],"靠":["chinese_simplified","chinese_traditional"],"混":["chinese_simplified","chinese_traditional"],"母":["chinese_simplified","chinese_traditional"],"短":["chinese_simplified","chinese_traditional"],"皮":["chinese_simplified","chinese_traditional"],"终":["chinese_simplified"],"聚":["chinese_simplified","chinese_traditional"],"汽":["chinese_simplified","chinese_traditional"],"村":["chinese_simplified","chinese_traditional"],"云":["chinese_simplified"],"哪":["chinese_simplified","chinese_traditional"],"既":["chinese_simplified","chinese_traditional"],"距":["chinese_simplified","chinese_traditional"],"卫":["chinese_simplified"],"停":["chinese_simplified","chinese_traditional"],"烈":["chinese_simplified","chinese_traditional"],"央":["chinese_simplified","chinese_traditional"],"察":["chinese_simplified","chinese_traditional"],"烧":["chinese_simplified"],"迅":["chinese_simplified","chinese_traditional"],"境":["chinese_simplified","chinese_traditional"],"若":["chinese_simplified","chinese_traditional"],"印":["chinese_simplified","chinese_traditional"],"洲":["chinese_simplified","chinese_traditional"],"刻":["chinese_simplified","chinese_traditional"],"括":["chinese_simplified","chinese_traditional"],"激":["chinese_simplified","chinese_traditional"],"孔":["chinese_simplified","chinese_traditional"],"搞":["chinese_simplified","chinese_traditional"],"甚":["chinese_simplified","chinese_traditional"],"室":["chinese_simplified","chinese_traditional"],"待":["chinese_simplified","chinese_traditional"],"核":["chinese_simplified","chinese_traditional"],"校":["chinese_simplified","chinese_traditional"],"散":["chinese_simplified","chinese_traditional"],"侵":["chinese_simplified","chinese_traditional"],"吧":["chinese_simplified","chinese_traditional"],"甲":["chinese_simplified","chinese_traditional"],"游":["chinese_simplified"],"久":["chinese_simplified","chinese_traditional"],"菜":["chinese_simplified","chinese_traditional"],"味":["chinese_simplified","chinese_traditional"],"旧":["chinese_simplified"],"模":["chinese_simplified","chinese_traditional"],"湖":["chinese_simplified","chinese_traditional"],"货":["chinese_simplified"],"损":["chinese_simplified"],"预":["chinese_simplified"],"阻":["chinese_simplified","chinese_traditional"],"毫":["chinese_simplified","chinese_traditional"],"普":["chinese_simplified","chinese_traditional"],"稳":["chinese_simplified"],"乙":["chinese_simplified","chinese_traditional"],"妈":["chinese_simplified"],"植":["chinese_simplified","chinese_traditional"],"息":["chinese_simplified","chinese_traditional"],"扩":["chinese_simplified"],"银":["chinese_simplified"],"语":["chinese_simplified"],"挥":["chinese_simplified"],"酒":["chinese_simplified","chinese_traditional"],"守":["chinese_simplified","chinese_traditional"],"拿":["chinese_simplified","chinese_traditional"],"序":["chinese_simplified","chinese_traditional"],"纸":["chinese_simplified"],"医":["chinese_simplified"],"缺":["chinese_simplified","chinese_traditional"],"雨":["chinese_simplified","chinese_traditional"],"吗":["chinese_simplified"],"针":["chinese_simplified"],"刘":["chinese_simplified"],"啊":["chinese_simplified","chinese_traditional"],"急":["chinese_simplified","chinese_traditional"],"唱":["chinese_simplified","chinese_traditional"],"误":["chinese_simplified"],"训":["chinese_simplified"],"愿":["chinese_simplified"],"审":["chinese_simplified"],"附":["chinese_simplified","chinese_traditional"],"获":["chinese_simplified"],"茶":["chinese_simplified","chinese_traditional"],"鲜":["chinese_simplified"],"粮":["chinese_simplified"],"斤":["chinese_simplified","chinese_traditional"],"孩":["chinese_simplified","chinese_traditional"],"脱":["chinese_simplified"],"硫":["chinese_simplified","chinese_traditional"],"肥":["chinese_simplified","chinese_traditional"],"善":["chinese_simplified","chinese_traditional"],"龙":["chinese_simplified"],"演":["chinese_simplified","chinese_traditional"],"父":["chinese_simplified","chinese_traditional"],"渐":["chinese_simplified"],"血":["chinese_simplified","chinese_traditional"],"欢":["chinese_simplified"],"械":["chinese_simplified","chinese_traditional"],"掌":["chinese_simplified","chinese_traditional"],"歌":["chinese_simplified","chinese_traditional"],"沙":["chinese_simplified","chinese_traditional"],"刚":["chinese_simplified"],"攻":["chinese_simplified","chinese_traditional"],"谓":["chinese_simplified"],"盾":["chinese_simplified","chinese_traditional"],"讨":["chinese_simplified"],"晚":["chinese_simplified","chinese_traditional"],"粒":["chinese_simplified","chinese_traditional"],"乱":["chinese_simplified"],"燃":["chinese_simplified","chinese_traditional"],"矛":["chinese_simplified","chinese_traditional"],"乎":["chinese_simplified","chinese_traditional"],"杀":["chinese_simplified"],"药":["chinese_simplified"],"宁":["chinese_simplified"],"鲁":["chinese_simplified"],"贵":["chinese_simplified"],"钟":["chinese_simplified"],"煤":["chinese_simplified","chinese_traditional"],"读":["chinese_simplified"],"班":["chinese_simplified","chinese_traditional"],"伯":["chinese_simplified","chinese_traditional"],"香":["chinese_simplified","chinese_traditional"],"介":["chinese_simplified","chinese_traditional"],"迫":["chinese_simplified","chinese_traditional"],"句":["chinese_simplified","chinese_traditional"],"丰":["chinese_simplified"],"培":["chinese_simplified","chinese_traditional"],"握":["chinese_simplified","chinese_traditional"],"兰":["chinese_simplified"],"担":["chinese_simplified"],"弦":["chinese_simplified","chinese_traditional"],"蛋":["chinese_simplified","chinese_traditional"],"沉":["chinese_simplified","chinese_traditional"],"假":["chinese_simplified","chinese_traditional"],"穿":["chinese_simplified","chinese_traditional"],"执":["chinese_simplified"],"答":["chinese_simplified","chinese_traditional"],"乐":["chinese_simplified"],"谁":["chinese_simplified"],"顺":["chinese_simplified"],"烟":["chinese_simplified"],"缩":["chinese_simplified"],"征":["chinese_simplified"],"脸":["chinese_simplified"],"喜":["chinese_simplified","chinese_traditional"],"松":["chinese_simplified","chinese_traditional"],"脚":["chinese_simplified"],"困":["chinese_simplified","chinese_traditional"],"异":["chinese_simplified"],"免":["chinese_simplified","chinese_traditional"],"背":["chinese_simplified","chinese_traditional"],"星":["chinese_simplified","chinese_traditional"],"福":["chinese_simplified","chinese_traditional"],"买":["chinese_simplified"],"染":["chinese_simplified","chinese_traditional"],"井":["chinese_simplified","chinese_traditional"],"概":["chinese_simplified","chinese_traditional"],"慢":["chinese_simplified","chinese_traditional"],"怕":["chinese_simplified","chinese_traditional"],"磁":["chinese_simplified","chinese_traditional"],"倍":["chinese_simplified","chinese_traditional"],"祖":["chinese_simplified","chinese_traditional"],"皇":["chinese_simplified","chinese_traditional"],"促":["chinese_simplified","chinese_traditional"],"静":["chinese_simplified"],"补":["chinese_simplified"],"评":["chinese_simplified"],"翻":["chinese_simplified","chinese_traditional"],"肉":["chinese_simplified","chinese_traditional"],"践":["chinese_simplified"],"尼":["chinese_simplified","chinese_traditional"],"衣":["chinese_simplified","chinese_traditional"],"宽":["chinese_simplified"],"扬":["chinese_simplified"],"棉":["chinese_simplified","chinese_traditional"],"希":["chinese_simplified","chinese_traditional"],"伤":["chinese_simplified"],"操":["chinese_simplified","chinese_traditional"],"垂":["chinese_simplified","chinese_traditional"],"秋":["chinese_simplified","chinese_traditional"],"宜":["chinese_simplified","chinese_traditional"],"氢":["chinese_simplified"],"套":["chinese_simplified","chinese_traditional"],"督":["chinese_simplified","chinese_traditional"],"振":["chinese_simplified","chinese_traditional"],"架":["chinese_simplified","chinese_traditional"],"亮":["chinese_simplified","chinese_traditional"],"末":["chinese_simplified","chinese_traditional"],"宪":["chinese_simplified"],"庆":["chinese_simplified"],"编":["chinese_simplified"],"牛":["chinese_simplified","chinese_traditional"],"触":["chinese_simplified"],"映":["chinese_simplified","chinese_traditional"],"雷":["chinese_simplified","chinese_traditional"],"销":["chinese_simplified"],"诗":["chinese_simplified"],"座":["chinese_simplified","chinese_traditional"],"居":["chinese_simplified","chinese_traditional"],"抓":["chinese_simplified","chinese_traditional"],"裂":["chinese_simplified","chinese_traditional"],"胞":["chinese_simplified","chinese_traditional"],"呼":["chinese_simplified","chinese_traditional"],"娘":["chinese_simplified","chinese_traditional"],"景":["chinese_simplified","chinese_traditional"],"威":["chinese_simplified","chinese_traditional"],"绿":["chinese_simplified"],"晶":["chinese_simplified","chinese_traditional"],"厚":["chinese_simplified","chinese_traditional"],"盟":["chinese_simplified","chinese_traditional"],"衡":["chinese_simplified","chinese_traditional"],"鸡":["chinese_simplified"],"孙":["chinese_simplified"],"延":["chinese_simplified","chinese_traditional"],"危":["chinese_simplified","chinese_traditional"],"胶":["chinese_simplified"],"屋":["chinese_simplified","chinese_traditional"],"乡":["chinese_simplified"],"临":["chinese_simplified"],"陆":["chinese_simplified"],"顾":["chinese_simplified"],"掉":["chinese_simplified","chinese_traditional"],"呀":["chinese_simplified","chinese_traditional"],"灯":["chinese_simplified"],"岁":["chinese_simplified"],"措":["chinese_simplified","chinese_traditional"],"束":["chinese_simplified","chinese_traditional"],"耐":["chinese_simplified","chinese_traditional"],"剧":["chinese_simplified"],"玉":["chinese_simplified","chinese_traditional"],"赵":["chinese_simplified"],"跳":["chinese_simplified","chinese_traditional"],"哥":["chinese_simplified","chinese_traditional"],"季":["chinese_simplified","chinese_traditional"],"课":["chinese_simplified"],"凯":["chinese_simplified"],"胡":["chinese_simplified","chinese_traditional"],"额":["chinese_simplified"],"款":["chinese_simplified","chinese_traditional"],"绍":["chinese_simplified"],"卷":["chinese_simplified","chinese_traditional"],"齐":["chinese_simplified"],"伟":["chinese_simplified"],"蒸":["chinese_simplified","chinese_traditional"],"殖":["chinese_simplified","chinese_traditional"],"永":["chinese_simplified","chinese_traditional"],"宗":["chinese_simplified","chinese_traditional"],"苗":["chinese_simplified","chinese_traditional"],"川":["chinese_simplified","chinese_traditional"],"炉":["chinese_simplified"],"岩":["chinese_simplified","chinese_traditional"],"弱":["chinese_simplified","chinese_traditional"],"零":["chinese_simplified","chinese_traditional"],"杨":["chinese_simplified"],"奏":["chinese_simplified","chinese_traditional"],"沿":["chinese_simplified","chinese_traditional"],"露":["chinese_simplified","chinese_traditional"],"杆":["chinese_simplified"],"探":["chinese_simplified","chinese_traditional"],"滑":["chinese_simplified","chinese_traditional"],"镇":["chinese_simplified"],"饭":["chinese_simplified"],"浓":["chinese_simplified"],"航":["chinese_simplified","chinese_traditional"],"怀":["chinese_simplified"],"赶":["chinese_simplified"],"库":["chinese_simplified"],"夺":["chinese_simplified"],"伊":["chinese_simplified","chinese_traditional"],"灵":["chinese_simplified"],"税":["chinese_simplified"],"途":["chinese_simplified","chinese_traditional"],"灭":["chinese_simplified"],"赛":["chinese_simplified"],"归":["chinese_simplified"],"召":["chinese_simplified","chinese_traditional"],"鼓":["chinese_simplified","chinese_traditional"],"播":["chinese_simplified","chinese_traditional"],"盘":["chinese_simplified"],"裁":["chinese_simplified","chinese_traditional"],"险":["chinese_simplified"],"康":["chinese_simplified","chinese_traditional"],"唯":["chinese_simplified","chinese_traditional"],"录":["chinese_simplified"],"菌":["chinese_simplified","chinese_traditional"],"纯":["chinese_simplified"],"借":["chinese_simplified","chinese_traditional"],"糖":["chinese_simplified","chinese_traditional"],"盖":["chinese_simplified"],"横":["chinese_simplified"],"符":["chinese_simplified","chinese_traditional"],"私":["chinese_simplified","chinese_traditional"],"努":["chinese_simplified","chinese_traditional"],"堂":["chinese_simplified","chinese_traditional"],"域":["chinese_simplified","chinese_traditional"],"枪":["chinese_simplified"],"润":["chinese_simplified"],"幅":["chinese_simplified","chinese_traditional"],"哈":["chinese_simplified","chinese_traditional"],"竟":["chinese_simplified","chinese_traditional"],"熟":["chinese_simplified","chinese_traditional"],"虫":["chinese_simplified"],"泽":["chinese_simplified"],"脑":["chinese_simplified"],"壤":["chinese_simplified","chinese_traditional"],"碳":["chinese_simplified","chinese_traditional"],"欧":["chinese_simplified"],"遍":["chinese_simplified","chinese_traditional"],"侧":["chinese_simplified"],"寨":["chinese_simplified","chinese_traditional"],"敢":["chinese_simplified","chinese_traditional"],"彻":["chinese_simplified"],"虑":["chinese_simplified"],"斜":["chinese_simplified","chinese_traditional"],"薄":["chinese_simplified","chinese_traditional"],"庭":["chinese_simplified","chinese_traditional"],"纳":["chinese_simplified"],"弹":["chinese_simplified"],"饲":["chinese_simplified"],"伸":["chinese_simplified","chinese_traditional"],"折":["chinese_simplified","chinese_traditional"],"麦":["chinese_simplified"],"湿":["chinese_simplified"],"暗":["chinese_simplified","chinese_traditional"],"荷":["chinese_simplified","chinese_traditional"],"瓦":["chinese_simplified","chinese_traditional"],"塞":["chinese_simplified","chinese_traditional"],"床":["chinese_simplified","chinese_traditional"],"筑":["chinese_simplified"],"恶":["chinese_simplified"],"户":["chinese_simplified"],"访":["chinese_simplified"],"塔":["chinese_simplified","chinese_traditional"],"奇":["chinese_simplified","chinese_traditional"],"透":["chinese_simplified","chinese_traditional"],"梁":["chinese_simplified","chinese_traditional"],"刀":["chinese_simplified","chinese_traditional"],"旋":["chinese_simplified","chinese_traditional"],"迹":["chinese_simplified"],"卡":["chinese_simplified","chinese_traditional"],"氯":["chinese_simplified","chinese_traditional"],"遇":["chinese_simplified","chinese_traditional"],"份":["chinese_simplified","chinese_traditional"],"毒":["chinese_simplified","chinese_traditional"],"泥":["chinese_simplified","chinese_traditional"],"退":["chinese_simplified","chinese_traditional"],"洗":["chinese_simplified","chinese_traditional"],"摆":["chinese_simplified"],"灰":["chinese_simplified","chinese_traditional"],"彩":["chinese_simplified","chinese_traditional"],"卖":["chinese_simplified"],"耗":["chinese_simplified","chinese_traditional"],"夏":["chinese_simplified","chinese_traditional"],"择":["chinese_simplified"],"忙":["chinese_simplified","chinese_traditional"],"铜":["chinese_simplified"],"献":["chinese_simplified"],"硬":["chinese_simplified","chinese_traditional"],"予":["chinese_simplified","chinese_traditional"],"繁":["chinese_simplified","chinese_traditional"],"圈":["chinese_simplified","chinese_traditional"],"雪":["chinese_simplified","chinese_traditional"],"函":["chinese_simplified","chinese_traditional"],"亦":["chinese_simplified","chinese_traditional"],"抽":["chinese_simplified","chinese_traditional"],"篇":["chinese_simplified","chinese_traditional"],"阵":["chinese_simplified"],"阴":["chinese_simplified"],"丁":["chinese_simplified","chinese_traditional"],"尺":["chinese_simplified","chinese_traditional"],"追":["chinese_simplified","chinese_traditional"],"堆":["chinese_simplified","chinese_traditional"],"雄":["chinese_simplified","chinese_traditional"],"迎":["chinese_simplified","chinese_traditional"],"泛":["chinese_simplified","chinese_traditional"],"爸":["chinese_simplified","chinese_traditional"],"楼":["chinese_simplified"],"避":["chinese_simplified","chinese_traditional"],"谋":["chinese_simplified"],"吨":["chinese_simplified"],"野":["chinese_simplified","chinese_traditional"],"猪":["chinese_simplified"],"旗":["chinese_simplified","chinese_traditional"],"累":["chinese_simplified","chinese_traditional"],"偏":["chinese_simplified","chinese_traditional"],"典":["chinese_simplified","chinese_traditional"],"馆":["chinese_simplified"],"索":["chinese_simplified","chinese_traditional"],"秦":["chinese_simplified","chinese_traditional"],"脂":["chinese_simplified","chinese_traditional"],"潮":["chinese_simplified","chinese_traditional"],"爷":["chinese_simplified"],"豆":["chinese_simplified","chinese_traditional"],"忽":["chinese_simplified","chinese_traditional"],"托":["chinese_simplified","chinese_traditional"],"惊":["chinese_simplified"],"塑":["chinese_simplified","chinese_traditional"],"遗":["chinese_simplified"],"愈":["chinese_simplified","chinese_traditional"],"朱":["chinese_simplified","chinese_traditional"],"替":["chinese_simplified","chinese_traditional"],"纤":["chinese_simplified"],"粗":["chinese_simplified","chinese_traditional"],"倾":["chinese_simplified"],"尚":["chinese_simplified","chinese_traditional"],"痛":["chinese_simplified","chinese_traditional"],"楚":["chinese_simplified","chinese_traditional"],"谢":["chinese_simplified"],"奋":["chinese_simplified"],"购":["chinese_simplified"],"磨":["chinese_simplified","chinese_traditional"],"君":["chinese_simplified","chinese_traditional"],"池":["chinese_simplified","chinese_traditional"],"旁":["chinese_simplified","chinese_traditional"],"碎":["chinese_simplified","chinese_traditional"],"骨":["chinese_simplified","chinese_traditional"],"监":["chinese_simplified"],"捕":["chinese_simplified","chinese_traditional"],"弟":["chinese_simplified","chinese_traditional"],"暴":["chinese_simplified","chinese_traditional"],"割":["chinese_simplified","chinese_traditional"],"贯":["chinese_simplified"],"殊":["chinese_simplified","chinese_traditional"],"释":["chinese_simplified"],"词":["chinese_simplified"],"亡":["chinese_simplified","chinese_traditional"],"壁":["chinese_simplified","chinese_traditional"],"顿":["chinese_simplified"],"宝":["chinese_simplified"],"午":["chinese_simplified","chinese_traditional"],"尘":["chinese_simplified"],"闻":["chinese_simplified"],"揭":["chinese_simplified","chinese_traditional"],"炮":["chinese_simplified","chinese_traditional"],"残":["chinese_simplified"],"冬":["chinese_simplified","chinese_traditional"],"桥":["chinese_simplified"],"妇":["chinese_simplified"],"警":["chinese_simplified","chinese_traditional"],"综":["chinese_simplified"],"招":["chinese_simplified","chinese_traditional"],"吴":["chinese_simplified"],"付":["chinese_simplified","chinese_traditional"],"浮":["chinese_simplified","chinese_traditional"],"遭":["chinese_simplified","chinese_traditional"],"徐":["chinese_simplified","chinese_traditional"],"您":["chinese_simplified","chinese_traditional"],"摇":["chinese_simplified"],"谷":["chinese_simplified","chinese_traditional"],"赞":["chinese_simplified"],"箱":["chinese_simplified","chinese_traditional"],"隔":["chinese_simplified","chinese_traditional"],"订":["chinese_simplified"],"男":["chinese_simplified","chinese_traditional"],"吹":["chinese_simplified","chinese_traditional"],"园":["chinese_simplified"],"纷":["chinese_simplified"],"唐":["chinese_simplified","chinese_traditional"],"败":["chinese_simplified"],"宋":["chinese_simplified","chinese_traditional"],"玻":["chinese_simplified","chinese_traditional"],"巨":["chinese_simplified","chinese_traditional"],"耕":["chinese_simplified","chinese_traditional"],"坦":["chinese_simplified","chinese_traditional"],"荣":["chinese_simplified"],"闭":["chinese_simplified"],"湾":["chinese_simplified"],"键":["chinese_simplified"],"凡":["chinese_simplified","chinese_traditional"],"驻":["chinese_simplified"],"锅":["chinese_simplified"],"救":["chinese_simplified","chinese_traditional"],"恩":["chinese_simplified","chinese_traditional"],"剥":["chinese_simplified"],"凝":["chinese_simplified","chinese_traditional"],"碱":["chinese_simplified"],"齿":["chinese_simplified"],"截":["chinese_simplified","chinese_traditional"],"炼":["chinese_simplified"],"麻":["chinese_simplified","chinese_traditional"],"纺":["chinese_simplified"],"禁":["chinese_simplified","chinese_traditional"],"废":["chinese_simplified"],"盛":["chinese_simplified","chinese_traditional"],"版":["chinese_simplified","chinese_traditional"],"缓":["chinese_simplified"],"净":["chinese_simplified"],"睛":["chinese_simplified","chinese_traditional"],"昌":["chinese_simplified","chinese_traditional"],"婚":["chinese_simplified","chinese_traditional"],"涉":["chinese_simplified","chinese_traditional"],"筒":["chinese_simplified","chinese_traditional"],"嘴":["chinese_simplified","chinese_traditional"],"插":["chinese_simplified","chinese_traditional"],"岸":["chinese_simplified","chinese_traditional"],"朗":["chinese_simplified","chinese_traditional"],"庄":["chinese_simplified"],"街":["chinese_simplified","chinese_traditional"],"藏":["chinese_simplified","chinese_traditional"],"姑":["chinese_simplified","chinese_traditional"],"贸":["chinese_simplified"],"腐":["chinese_simplified","chinese_traditional"],"奴":["chinese_simplified","chinese_traditional"],"啦":["chinese_simplified","chinese_traditional"],"惯":["chinese_simplified"],"乘":["chinese_simplified","chinese_traditional"],"伙":["chinese_simplified"],"恢":["chinese_simplified","chinese_traditional"],"匀":["chinese_simplified"],"纱":["chinese_simplified"],"扎":["chinese_simplified","chinese_traditional"],"辩":["chinese_simplified"],"耳":["chinese_simplified","chinese_traditional"],"彪":["chinese_simplified","chinese_traditional"],"臣":["chinese_simplified","chinese_traditional"],"亿":["chinese_simplified"],"璃":["chinese_simplified","chinese_traditional"],"抵":["chinese_simplified","chinese_traditional"],"脉":["chinese_simplified"],"秀":["chinese_simplified","chinese_traditional"],"萨":["chinese_simplified"],"俄":["chinese_simplified","chinese_traditional"],"网":["chinese_simplified"],"舞":["chinese_simplified","chinese_traditional"],"店":["chinese_simplified","chinese_traditional"],"喷":["chinese_simplified"],"纵":["chinese_simplified"],"寸":["chinese_simplified","chinese_traditional"],"汗":["chinese_simplified","chinese_traditional"],"挂":["chinese_simplified"],"洪":["chinese_simplified","chinese_traditional"],"贺":["chinese_simplified"],"闪":["chinese_simplified"],"柬":["chinese_simplified","chinese_traditional"],"爆":["chinese_simplified","chinese_traditional"],"烯":["chinese_simplified","chinese_traditional"],"津":["chinese_simplified","chinese_traditional"],"稻":["chinese_simplified","chinese_traditional"],"墙":["chinese_simplified"],"软":["chinese_simplified"],"勇":["chinese_simplified","chinese_traditional"],"像":["chinese_simplified","chinese_traditional"],"滚":["chinese_simplified"],"厘":["chinese_simplified","chinese_traditional"],"蒙":["chinese_simplified","chinese_traditional"],"芳":["chinese_simplified","chinese_traditional"],"肯":["chinese_simplified","chinese_traditional"],"坡":["chinese_simplified","chinese_traditional"],"柱":["chinese_simplified","chinese_traditional"],"荡":["chinese_simplified"],"腿":["chinese_simplified","chinese_traditional"],"仪":["chinese_simplified"],"旅":["chinese_simplified","chinese_traditional"],"尾":["chinese_simplified","chinese_traditional"],"轧":["chinese_simplified"],"冰":["chinese_simplified","chinese_traditional"],"贡":["chinese_simplified"],"登":["chinese_simplified","chinese_traditional"],"黎":["chinese_simplified","chinese_traditional"],"削":["chinese_simplified","chinese_traditional"],"钻":["chinese_simplified"],"勒":["chinese_simplified","chinese_traditional"],"逃":["chinese_simplified","chinese_traditional"],"障":["chinese_simplified","chinese_traditional"],"氨":["chinese_simplified","chinese_traditional"],"郭":["chinese_simplified","chinese_traditional"],"峰":["chinese_simplified","chinese_traditional"],"币":["chinese_simplified"],"港":["chinese_simplified","chinese_traditional"],"伏":["chinese_simplified","chinese_traditional"],"轨":["chinese_simplified"],"亩":["chinese_simplified"],"毕":["chinese_simplified"],"擦":["chinese_simplified","chinese_traditional"],"莫":["chinese_simplified","chinese_traditional"],"刺":["chinese_simplified","chinese_traditional"],"浪":["chinese_simplified","chinese_traditional"],"秘":["chinese_simplified","chinese_traditional"],"援":["chinese_simplified","chinese_traditional"],"株":["chinese_simplified","chinese_traditional"],"健":["chinese_simplified","chinese_traditional"],"售":["chinese_simplified","chinese_traditional"],"股":["chinese_simplified","chinese_traditional"],"岛":["chinese_simplified"],"甘":["chinese_simplified","chinese_traditional"],"泡":["chinese_simplified","chinese_traditional"],"睡":["chinese_simplified","chinese_traditional"],"童":["chinese_simplified","chinese_traditional"],"铸":["chinese_simplified"],"汤":["chinese_simplified"],"阀":["chinese_simplified"],"休":["chinese_simplified","chinese_traditional"],"汇":["chinese_simplified"],"舍":["chinese_simplified","chinese_traditional"],"牧":["chinese_simplified","chinese_traditional"],"绕":["chinese_simplified"],"炸":["chinese_simplified","chinese_traditional"],"哲":["chinese_simplified","chinese_traditional"],"磷":["chinese_simplified","chinese_traditional"],"绩":["chinese_simplified"],"朋":["chinese_simplified","chinese_traditional"],"淡":["chinese_simplified","chinese_traditional"],"尖":["chinese_simplified","chinese_traditional"],"启":["chinese_simplified"],"陷":["chinese_simplified","chinese_traditional"],"柴":["chinese_simplified","chinese_traditional"],"呈":["chinese_simplified","chinese_traditional"],"徒":["chinese_simplified","chinese_traditional"],"颜":["chinese_simplified"],"泪":["chinese_simplified"],"稍":["chinese_simplified","chinese_traditional"],"忘":["chinese_simplified","chinese_traditional"],"泵":["chinese_simplified","chinese_traditional"],"蓝":["chinese_simplified"],"拖":["chinese_simplified","chinese_traditional"],"洞":["chinese_simplified","chinese_traditional"],"授":["chinese_simplified","chinese_traditional"],"镜":["chinese_simplified"],"辛":["chinese_simplified","chinese_traditional"],"壮":["chinese_simplified"],"锋":["chinese_simplified"],"贫":["chinese_simplified"],"虚":["chinese_simplified"],"弯":["chinese_simplified"],"摩":["chinese_simplified","chinese_traditional"],"泰":["chinese_simplified","chinese_traditional"],"幼":["chinese_simplified","chinese_traditional"],"廷":["chinese_simplified","chinese_traditional"],"尊":["chinese_simplified","chinese_traditional"],"窗":["chinese_simplified","chinese_traditional"],"纲":["chinese_simplified"],"弄":["chinese_simplified","chinese_traditional"],"隶":["chinese_simplified"],"疑":["chinese_simplified","chinese_traditional"],"氏":["chinese_simplified","chinese_traditional"],"宫":["chinese_simplified"],"姐":["chinese_simplified","chinese_traditional"],"震":["chinese_simplified","chinese_traditional"],"瑞":["chinese_simplified","chinese_traditional"],"怪":["chinese_simplified","chinese_traditional"],"尤":["chinese_simplified","chinese_traditional"],"琴":["chinese_simplified","chinese_traditional"],"循":["chinese_simplified","chinese_traditional"],"描":["chinese_simplified","chinese_traditional"],"膜":["chinese_simplified","chinese_traditional"],"违":["chinese_simplified"],"夹":["chinese_simplified"],"腰":["chinese_simplified","chinese_traditional"],"缘":["chinese_simplified"],"珠":["chinese_simplified","chinese_traditional"],"穷":["chinese_simplified"],"森":["chinese_simplified","chinese_traditional"],"枝":["chinese_simplified","chinese_traditional"],"竹":["chinese_simplified","chinese_traditional"],"沟":["chinese_simplified"],"催":["chinese_simplified","chinese_traditional"],"绳":["chinese_simplified"],"忆":["chinese_simplified"],"邦":["chinese_simplified","chinese_traditional"],"剩":["chinese_simplified","chinese_traditional"],"幸":["chinese_simplified","chinese_traditional"],"浆":["chinese_simplified"],"栏":["chinese_simplified"],"拥":["chinese_simplified"],"牙":["chinese_simplified","chinese_traditional"],"贮":["chinese_simplified"],"礼":["chinese_simplified"],"滤":["chinese_simplified"],"钠":["chinese_simplified"],"纹":["chinese_simplified"],"罢":["chinese_simplified"],"拍":["chinese_simplified","chinese_traditional"],"咱":["chinese_simplified","chinese_traditional"],"喊":["chinese_simplified","chinese_traditional"],"袖":["chinese_simplified","chinese_traditional"],"埃":["chinese_simplified","chinese_traditional"],"勤":["chinese_simplified","chinese_traditional"],"罚":["chinese_simplified"],"焦":["chinese_simplified","chinese_traditional"],"潜":["chinese_simplified"],"伍":["chinese_simplified","chinese_traditional"],"墨":["chinese_simplified","chinese_traditional"],"欲":["chinese_simplified","chinese_traditional"],"缝":["chinese_simplified"],"姓":["chinese_simplified","chinese_traditional"],"刊":["chinese_simplified","chinese_traditional"],"饱":["chinese_simplified"],"仿":["chinese_simplified","chinese_traditional"],"奖":["chinese_simplified"],"铝":["chinese_simplified"],"鬼":["chinese_simplified","chinese_traditional"],"丽":["chinese_simplified"],"跨":["chinese_simplified","chinese_traditional"],"默":["chinese_simplified","chinese_traditional"],"挖":["chinese_simplified","chinese_traditional"],"链":["chinese_simplified"],"扫":["chinese_simplified"],"喝":["chinese_simplified","chinese_traditional"],"袋":["chinese_simplified","chinese_traditional"],"炭":["chinese_simplified","chinese_traditional"],"污":["chinese_simplified","chinese_traditional"],"幕":["chinese_simplified","chinese_traditional"],"诸":["chinese_simplified"],"弧":["chinese_simplified","chinese_traditional"],"励":["chinese_simplified"],"梅":["chinese_simplified","chinese_traditional"],"奶":["chinese_simplified","chinese_traditional"],"洁":["chinese_simplified"],"灾":["chinese_simplified"],"舟":["chinese_simplified","chinese_traditional"],"鉴":["chinese_simplified"],"苯":["chinese_simplified","chinese_traditional"],"讼":["chinese_simplified"],"抱":["chinese_simplified","chinese_traditional"],"毁":["chinese_simplified"],"懂":["chinese_simplified","chinese_traditional"],"寒":["chinese_simplified","chinese_traditional"],"智":["chinese_simplified","chinese_traditional"],"埔":["chinese_simplified","chinese_traditional"],"寄":["chinese_simplified","chinese_traditional"],"届":["chinese_simplified"],"跃":["chinese_simplified"],"渡":["chinese_simplified","chinese_traditional"],"挑":["chinese_simplified","chinese_traditional"],"丹":["chinese_simplified","chinese_traditional"],"艰":["chinese_simplified"],"贝":["chinese_simplified"],"碰":["chinese_simplified","chinese_traditional"],"拔":["chinese_simplified","chinese_traditional"],"爹":["chinese_simplified","chinese_traditional"],"戴":["chinese_simplified","chinese_traditional"],"码":["chinese_simplified"],"梦":["chinese_simplified"],"芽":["chinese_simplified","chinese_traditional"],"熔":["chinese_simplified","chinese_traditional"],"赤":["chinese_simplified","chinese_traditional"],"渔":["chinese_simplified"],"哭":["chinese_simplified","chinese_traditional"],"敬":["chinese_simplified","chinese_traditional"],"颗":["chinese_simplified"],"奔":["chinese_simplified","chinese_traditional"],"铅":["chinese_simplified"],"仲":["chinese_simplified","chinese_traditional"],"虎":["chinese_simplified","chinese_traditional"],"稀":["chinese_simplified","chinese_traditional"],"妹":["chinese_simplified","chinese_traditional"],"乏":["chinese_simplified","chinese_traditional"],"珍":["chinese_simplified","chinese_traditional"],"申":["chinese_simplified","chinese_traditional"],"桌":["chinese_simplified","chinese_traditional"],"遵":["chinese_simplified","chinese_traditional"],"允":["chinese_simplified","chinese_traditional"],"隆":["chinese_simplified","chinese_traditional"],"螺":["chinese_simplified","chinese_traditional"],"仓":["chinese_simplified"],"魏":["chinese_simplified","chinese_traditional"],"锐":["chinese_simplified"],"晓":["chinese_simplified"],"氮":["chinese_simplified","chinese_traditional"],"兼":["chinese_simplified","chinese_traditional"],"隐":["chinese_simplified"],"碍":["chinese_simplified"],"赫":["chinese_simplified","chinese_traditional"],"拨":["chinese_simplified"],"忠":["chinese_simplified","chinese_traditional"],"肃":["chinese_simplified"],"缸":["chinese_simplified","chinese_traditional"],"牵":["chinese_simplified"],"抢":["chinese_simplified"],"博":["chinese_simplified","chinese_traditional"],"巧":["chinese_simplified","chinese_traditional"],"壳":["chinese_simplified"],"兄":["chinese_simplified","chinese_traditional"],"杜":["chinese_simplified","chinese_traditional"],"讯":["chinese_simplified"],"诚":["chinese_simplified"],"碧":["chinese_simplified","chinese_traditional"],"祥":["chinese_simplified","chinese_traditional"],"柯":["chinese_simplified","chinese_traditional"],"页":["chinese_simplified"],"巡":["chinese_simplified","chinese_traditional"],"矩":["chinese_simplified","chinese_traditional"],"悲":["chinese_simplified","chinese_traditional"],"灌":["chinese_simplified","chinese_traditional"],"龄":["chinese_simplified"],"伦":["chinese_simplified"],"票":["chinese_simplified","chinese_traditional"],"寻":["chinese_simplified"],"桂":["chinese_simplified","chinese_traditional"],"铺":["chinese_simplified"],"圣":["chinese_simplified"],"恐":["chinese_simplified","chinese_traditional"],"恰":["chinese_simplified","chinese_traditional"],"郑":["chinese_simplified"],"趣":["chinese_simplified","chinese_traditional"],"抬":["chinese_simplified","chinese_traditional"],"荒":["chinese_simplified","chinese_traditional"],"腾":["chinese_simplified"],"贴":["chinese_simplified"],"柔":["chinese_simplified","chinese_traditional"],"滴":["chinese_simplified","chinese_traditional"],"猛":["chinese_simplified","chinese_traditional"],"阔":["chinese_simplified"],"辆":["chinese_simplified"],"妻":["chinese_simplified","chinese_traditional"],"填":["chinese_simplified","chinese_traditional"],"撤":["chinese_simplified","chinese_traditional"],"储":["chinese_simplified"],"签":["chinese_simplified"],"闹":["chinese_simplified"],"扰":["chinese_simplified"],"紫":["chinese_simplified","chinese_traditional"],"砂":["chinese_simplified","chinese_traditional"],"递":["chinese_simplified"],"戏":["chinese_simplified"],"吊":["chinese_simplified","chinese_traditional"],"陶":["chinese_simplified","chinese_traditional"],"伐":["chinese_simplified","chinese_traditional"],"喂":["chinese_simplified"],"疗":["chinese_simplified"],"瓶":["chinese_simplified","chinese_traditional"],"婆":["chinese_simplified","chinese_traditional"],"抚":["chinese_simplified"],"臂":["chinese_simplified","chinese_traditional"],"摸":["chinese_simplified","chinese_traditional"],"忍":["chinese_simplified","chinese_traditional"],"虾":["chinese_simplified"],"蜡":["chinese_simplified"],"邻":["chinese_simplified"],"胸":["chinese_simplified","chinese_traditional"],"巩":["chinese_simplified"],"挤":["chinese_simplified"],"偶":["chinese_simplified","chinese_traditional"],"弃":["chinese_simplified"],"槽":["chinese_simplified","chinese_traditional"],"劲":["chinese_simplified"],"乳":["chinese_simplified","chinese_traditional"],"邓":["chinese_simplified"],"吉":["chinese_simplified","chinese_traditional"],"仁":["chinese_simplified","chinese_traditional"],"烂":["chinese_simplified"],"砖":["chinese_simplified"],"租":["chinese_simplified","chinese_traditional"],"乌":["chinese_simplified"],"舰":["chinese_simplified"],"伴":["chinese_simplified","chinese_traditional"],"瓜":["chinese_simplified","chinese_traditional"],"浅":["chinese_simplified"],"丙":["chinese_simplified","chinese_traditional"],"暂":["chinese_simplified"],"燥":["chinese_simplified","chinese_traditional"],"橡":["chinese_simplified","chinese_traditional"],"柳":["chinese_simplified","chinese_traditional"],"迷":["chinese_simplified","chinese_traditional"],"暖":["chinese_simplified","chinese_traditional"],"牌":["chinese_simplified","chinese_traditional"],"秧":["chinese_simplified","chinese_traditional"],"胆":["chinese_simplified"],"详":["chinese_simplified"],"簧":["chinese_simplified","chinese_traditional"],"踏":["chinese_simplified","chinese_traditional"],"瓷":["chinese_simplified","chinese_traditional"],"谱":["chinese_simplified"],"呆":["chinese_simplified","chinese_traditional"],"宾":["chinese_simplified"],"糊":["chinese_simplified","chinese_traditional"],"洛":["chinese_simplified","chinese_traditional"],"辉":["chinese_simplified"],"愤":["chinese_simplified"],"竞":["chinese_simplified"],"隙":["chinese_simplified","chinese_traditional"],"怒":["chinese_simplified","chinese_traditional"],"粘":["chinese_simplified","chinese_traditional"],"乃":["chinese_simplified","chinese_traditional"],"绪":["chinese_simplified"],"肩":["chinese_simplified","chinese_traditional"],"籍":["chinese_simplified","chinese_traditional"],"敏":["chinese_simplified","chinese_traditional"],"涂":["chinese_simplified"],"熙":["chinese_simplified","chinese_traditional"],"皆":["chinese_simplified","chinese_traditional"],"侦":["chinese_simplified"],"悬":["chinese_simplified"],"掘":["chinese_simplified","chinese_traditional"],"享":["chinese_simplified","chinese_traditional"],"纠":["chinese_simplified"],"醒":["chinese_simplified","chinese_traditional"],"狂":["chinese_simplified","chinese_traditional"],"锁":["chinese_simplified"],"淀":["chinese_simplified","chinese_traditional"],"恨":["chinese_simplified","chinese_traditional"],"牲":["chinese_simplified","chinese_traditional"],"霸":["chinese_simplified","chinese_traditional"],"爬":["chinese_simplified","chinese_traditional"],"赏":["chinese_simplified"],"逆":["chinese_simplified","chinese_traditional"],"玩":["chinese_simplified","chinese_traditional"],"陵":["chinese_simplified","chinese_traditional"],"祝":["chinese_simplified","chinese_traditional"],"秒":["chinese_simplified","chinese_traditional"],"浙":["chinese_simplified","chinese_traditional"],"貌":["chinese_simplified","chinese_traditional"],"役":["chinese_simplified","chinese_traditional"],"彼":["chinese_simplified","chinese_traditional"],"悉":["chinese_simplified","chinese_traditional"],"鸭":["chinese_simplified"],"趋":["chinese_simplified"],"凤":["chinese_simplified"],"晨":["chinese_simplified","chinese_traditional"],"畜":["chinese_simplified","chinese_traditional"],"辈":["chinese_simplified"],"秩":["chinese_simplified","chinese_traditional"],"卵":["chinese_simplified","chinese_traditional"],"署":["chinese_simplified","chinese_traditional"],"梯":["chinese_simplified","chinese_traditional"],"炎":["chinese_simplified","chinese_traditional"],"滩":["chinese_simplified"],"棋":["chinese_simplified","chinese_traditional"],"驱":["chinese_simplified"],"筛":["chinese_simplified"],"峡":["chinese_simplified"],"冒":["chinese_simplified","chinese_traditional"],"啥":["chinese_simplified","chinese_traditional"],"寿":["chinese_simplified"],"译":["chinese_simplified"],"浸":["chinese_simplified","chinese_traditional"],"泉":["chinese_simplified","chinese_traditional"],"帽":["chinese_simplified","chinese_traditional"],"迟":["chinese_simplified"],"硅":["chinese_simplified"],"疆":["chinese_simplified","chinese_traditional"],"贷":["chinese_simplified"],"漏":["chinese_simplified","chinese_traditional"],"稿":["chinese_simplified","chinese_traditional"],"冠":["chinese_simplified","chinese_traditional"],"嫩":["chinese_simplified","chinese_traditional"],"胁":["chinese_simplified"],"芯":["chinese_simplified","chinese_traditional"],"牢":["chinese_simplified","chinese_traditional"],"叛":["chinese_simplified","chinese_traditional"],"蚀":["chinese_simplified"],"奥":["chinese_simplified"],"鸣":["chinese_simplified"],"岭":["chinese_simplified"],"羊":["chinese_simplified","chinese_traditional"],"凭":["chinese_simplified"],"串":["chinese_simplified","chinese_traditional"],"塘":["chinese_simplified","chinese_traditional"],"绘":["chinese_simplified"],"酵":["chinese_simplified","chinese_traditional"],"融":["chinese_simplified","chinese_traditional"],"盆":["chinese_simplified","chinese_traditional"],"锡":["chinese_simplified"],"庙":["chinese_simplified"],"筹":["chinese_simplified"],"冻":["chinese_simplified"],"辅":["chinese_simplified"],"摄":["chinese_simplified"],"袭":["chinese_simplified"],"筋":["chinese_simplified","chinese_traditional"],"拒":["chinese_simplified","chinese_traditional"],"僚":["chinese_simplified","chinese_traditional"],"旱":["chinese_simplified","chinese_traditional"],"钾":["chinese_simplified"],"鸟":["chinese_simplified"],"漆":["chinese_simplified","chinese_traditional"],"沈":["chinese_simplified","chinese_traditional"],"眉":["chinese_simplified","chinese_traditional"],"疏":["chinese_simplified","chinese_traditional"],"添":["chinese_simplified","chinese_traditional"],"棒":["chinese_simplified","chinese_traditional"],"穗":["chinese_simplified","chinese_traditional"],"硝":["chinese_simplified","chinese_traditional"],"韩":["chinese_simplified"],"逼":["chinese_simplified","chinese_traditional"],"扭":["chinese_simplified","chinese_traditional"],"侨":["chinese_simplified"],"凉":["chinese_simplified"],"挺":["chinese_simplified","chinese_traditional"],"碗":["chinese_simplified","chinese_traditional"],"栽":["chinese_simplified","chinese_traditional"],"炒":["chinese_simplified","chinese_traditional"],"杯":["chinese_simplified","chinese_traditional"],"患":["chinese_simplified","chinese_traditional"],"馏":["chinese_simplified"],"劝":["chinese_simplified"],"豪":["chinese_simplified","chinese_traditional"],"辽":["chinese_simplified"],"勃":["chinese_simplified","chinese_traditional"],"鸿":["chinese_simplified"],"旦":["chinese_simplified","chinese_traditional"],"吏":["chinese_simplified","chinese_traditional"],"拜":["chinese_simplified","chinese_traditional"],"狗":["chinese_simplified","chinese_traditional"],"埋":["chinese_simplified","chinese_traditional"],"辊":["chinese_simplified"],"掩":["chinese_simplified","chinese_traditional"],"饮":["chinese_simplified"],"搬":["chinese_simplified","chinese_traditional"],"骂":["chinese_simplified"],"辞":["chinese_simplified"],"勾":["chinese_simplified","chinese_traditional"],"扣":["chinese_simplified","chinese_traditional"],"估":["chinese_simplified","chinese_traditional"],"蒋":["chinese_simplified"],"绒":["chinese_simplified"],"雾":["chinese_simplified"],"丈":["chinese_simplified","chinese_traditional"],"朵":["chinese_simplified","chinese_traditional"],"姆":["chinese_simplified","chinese_traditional"],"拟":["chinese_simplified"],"宇":["chinese_simplified","chinese_traditional"],"辑":["chinese_simplified"],"陕":["chinese_simplified"],"雕":["chinese_simplified","chinese_traditional"],"偿":["chinese_simplified"],"蓄":["chinese_simplified","chinese_traditional"],"崇":["chinese_simplified","chinese_traditional"],"剪":["chinese_simplified","chinese_traditional"],"倡":["chinese_simplified","chinese_traditional"],"厅":["chinese_simplified"],"咬":["chinese_simplified","chinese_traditional"],"驶":["chinese_simplified"],"薯":["chinese_simplified","chinese_traditional"],"刷":["chinese_simplified","chinese_traditional"],"斥":["chinese_simplified","chinese_traditional"],"番":["chinese_simplified","chinese_traditional"],"赋":["chinese_simplified"],"奉":["chinese_simplified","chinese_traditional"],"佛":["chinese_simplified","chinese_traditional"],"浇":["chinese_simplified"],"漫":["chinese_simplified","chinese_traditional"],"曼":["chinese_simplified","chinese_traditional"],"扇":["chinese_simplified","chinese_traditional"],"钙":["chinese_simplified"],"桃":["chinese_simplified","chinese_traditional"],"扶":["chinese_simplified","chinese_traditional"],"仔":["chinese_simplified","chinese_traditional"],"返":["chinese_simplified","chinese_traditional"],"俗":["chinese_simplified","chinese_traditional"],"亏":["chinese_simplified"],"腔":["chinese_simplified","chinese_traditional"],"鞋":["chinese_simplified","chinese_traditional"],"棱":["chinese_simplified","chinese_traditional"],"覆":["chinese_simplified","chinese_traditional"],"框":["chinese_simplified","chinese_traditional"],"悄":["chinese_simplified","chinese_traditional"],"叔":["chinese_simplified","chinese_traditional"],"撞":["chinese_simplified","chinese_traditional"],"骗":["chinese_simplified"],"勘":["chinese_simplified","chinese_traditional"],"旺":["chinese_simplified","chinese_traditional"],"沸":["chinese_simplified","chinese_traditional"],"孤":["chinese_simplified","chinese_traditional"],"吐":["chinese_simplified","chinese_traditional"],"孟":["chinese_simplified","chinese_traditional"],"渠":["chinese_simplified","chinese_traditional"],"屈":["chinese_simplified","chinese_traditional"],"疾":["chinese_simplified","chinese_traditional"],"妙":["chinese_simplified","chinese_traditional"],"惜":["chinese_simplified","chinese_traditional"],"仰":["chinese_simplified","chinese_traditional"],"狠":["chinese_simplified","chinese_traditional"],"胀":["chinese_simplified"],"谐":["chinese_simplified"],"抛":["chinese_simplified"],"霉":["chinese_simplified"],"桑":["chinese_simplified","chinese_traditional"],"岗":["chinese_simplified"],"嘛":["chinese_simplified","chinese_traditional"],"衰":["chinese_simplified","chinese_traditional"],"盗":["chinese_simplified"],"渗":["chinese_simplified"],"脏":["chinese_simplified"],"赖":["chinese_simplified"],"涌":["chinese_simplified"],"甜":["chinese_simplified","chinese_traditional"],"曹":["chinese_simplified","chinese_traditional"],"阅":["chinese_simplified"],"肌":["chinese_simplified","chinese_traditional"],"哩":["chinese_simplified","chinese_traditional"],"厉":["chinese_simplified"],"烃":["chinese_simplified"],"纬":["chinese_simplified"],"毅":["chinese_simplified","chinese_traditional"],"昨":["chinese_simplified","chinese_traditional"],"伪":["chinese_simplified"],"症":["chinese_simplified","chinese_traditional"],"煮":["chinese_simplified","chinese_traditional"],"叹":["chinese_simplified"],"钉":["chinese_simplified"],"搭":["chinese_simplified","chinese_traditional"],"茎":["chinese_simplified"],"笼":["chinese_simplified"],"酷":["chinese_simplified","chinese_traditional"],"偷":["chinese_simplified","chinese_traditional"],"弓":["chinese_simplified","chinese_traditional"],"锥":["chinese_simplified"],"恒":["chinese_simplified"],"杰":["chinese_simplified"],"坑":["chinese_simplified","chinese_traditional"],"鼻":["chinese_simplified","chinese_traditional"],"翼":["chinese_simplified","chinese_traditional"],"纶":["chinese_simplified"],"叙":["chinese_simplified"],"狱":["chinese_simplified"],"逮":["chinese_simplified","chinese_traditional"],"罐":["chinese_simplified","chinese_traditional"],"络":["chinese_simplified"],"棚":["chinese_simplified","chinese_traditional"],"抑":["chinese_simplified","chinese_traditional"],"膨":["chinese_simplified","chinese_traditional"],"蔬":["chinese_simplified","chinese_traditional"],"寺":["chinese_simplified","chinese_traditional"],"骤":["chinese_simplified"],"穆":["chinese_simplified","chinese_traditional"],"冶":["chinese_simplified","chinese_traditional"],"枯":["chinese_simplified","chinese_traditional"],"册":["chinese_simplified"],"尸":["chinese_simplified"],"凸":["chinese_simplified","chinese_traditional"],"绅":["chinese_simplified"],"坯":["chinese_simplified","chinese_traditional"],"牺":["chinese_simplified"],"焰":["chinese_simplified","chinese_traditional"],"轰":["chinese_simplified"],"欣":["chinese_simplified","chinese_traditional"],"晋":["chinese_simplified"],"瘦":["chinese_simplified","chinese_traditional"],"御":["chinese_simplified"],"锭":["chinese_simplified"],"锦":["chinese_simplified"],"丧":["chinese_simplified"],"旬":["chinese_simplified","chinese_traditional"],"锻":["chinese_simplified"],"垄":["chinese_simplified"],"搜":["chinese_simplified","chinese_traditional"],"扑":["chinese_simplified"],"邀":["chinese_simplified","chinese_traditional"],"亭":["chinese_simplified","chinese_traditional"],"酯":["chinese_simplified","chinese_traditional"],"迈":["chinese_simplified"],"舒":["chinese_simplified","chinese_traditional"],"脆":["chinese_simplified","chinese_traditional"],"酶":["chinese_simplified","chinese_traditional"],"闲":["chinese_simplified"],"忧":["chinese_simplified"],"酚":["chinese_simplified","chinese_traditional"],"顽":["chinese_simplified"],"羽":["chinese_simplified","chinese_traditional"],"涨":["chinese_simplified"],"卸":["chinese_simplified","chinese_traditional"],"仗":["chinese_simplified","chinese_traditional"],"陪":["chinese_simplified","chinese_traditional"],"辟":["chinese_simplified"],"惩":["chinese_simplified"],"杭":["chinese_simplified","chinese_traditional"],"姚":["chinese_simplified","chinese_traditional"],"肚":["chinese_simplified","chinese_traditional"],"捉":["chinese_simplified","chinese_traditional"],"飘":["chinese_simplified"],"漂":["chinese_simplified","chinese_traditional"],"昆":["chinese_simplified","chinese_traditional"],"欺":["chinese_simplified","chinese_traditional"],"吾":["chinese_simplified","chinese_traditional"],"郎":["chinese_simplified","chinese_traditional"],"烷":["chinese_simplified","chinese_traditional"],"汁":["chinese_simplified","chinese_traditional"],"呵":["chinese_simplified","chinese_traditional"],"饰":["chinese_simplified"],"萧":["chinese_simplified"],"雅":["chinese_simplified","chinese_traditional"],"邮":["chinese_simplified"],"迁":["chinese_simplified"],"燕":["chinese_simplified","chinese_traditional"],"撒":["chinese_simplified","chinese_traditional"],"姻":["chinese_simplified","chinese_traditional"],"赴":["chinese_simplified","chinese_traditional"],"宴":["chinese_simplified","chinese_traditional"],"烦":["chinese_simplified"],"债":["chinese_simplified"],"帐":["chinese_simplified"],"斑":["chinese_simplified","chinese_traditional"],"铃":["chinese_simplified"],"旨":["chinese_simplified","chinese_traditional"],"醇":["chinese_simplified","chinese_traditional"],"董":["chinese_simplified","chinese_traditional"],"饼":["chinese_simplified"],"雏":["chinese_simplified"],"姿":["chinese_simplified","chinese_traditional"],"拌":["chinese_simplified","chinese_traditional"],"傅":["chinese_simplified","chinese_traditional"],"腹":["chinese_simplified","chinese_traditional"],"妥":["chinese_simplified","chinese_traditional"],"揉":["chinese_simplified","chinese_traditional"],"贤":["chinese_simplified"],"拆":["chinese_simplified","chinese_traditional"],"歪":["chinese_simplified","chinese_traditional"],"葡":["chinese_simplified","chinese_traditional"],"胺":["chinese_simplified","chinese_traditional"],"丢":["chinese_simplified"],"浩":["chinese_simplified","chinese_traditional"],"徽":["chinese_simplified","chinese_traditional"],"昂":["chinese_simplified","chinese_traditional"],"垫":["chinese_simplified"],"挡":["chinese_simplified"],"览":["chinese_simplified"],"贪":["chinese_simplified"],"慰":["chinese_simplified","chinese_traditional"],"缴":["chinese_simplified"],"汪":["chinese_simplified","chinese_traditional"],"慌":["chinese_simplified","chinese_traditional"],"冯":["chinese_simplified"],"诺":["chinese_simplified"],"姜":["chinese_simplified","chinese_traditional"],"谊":["chinese_simplified"],"凶":["chinese_simplified"],"劣":["chinese_simplified","chinese_traditional"],"诬":["chinese_simplified"],"耀":["chinese_simplified","chinese_traditional"],"昏":["chinese_simplified","chinese_traditional"],"躺":["chinese_simplified","chinese_traditional"],"盈":["chinese_simplified","chinese_traditional"],"骑":["chinese_simplified"],"乔":["chinese_simplified"],"溪":["chinese_simplified","chinese_traditional"],"丛":["chinese_simplified"],"卢":["chinese_simplified"],"抹":["chinese_simplified","chinese_traditional"],"闷":["chinese_simplified"],"咨":["chinese_simplified"],"刮":["chinese_simplified","chinese_traditional"],"驾":["chinese_simplified"],"缆":["chinese_simplified"],"悟":["chinese_simplified","chinese_traditional"],"摘":["chinese_simplified","chinese_traditional"],"铒":["chinese_simplified"],"掷":["chinese_simplified"],"颇":["chinese_simplified"],"幻":["chinese_simplified","chinese_traditional"],"柄":["chinese_simplified","chinese_traditional"],"惠":["chinese_simplified","chinese_traditional"],"惨":["chinese_simplified"],"佳":["chinese_simplified","chinese_traditional"],"仇":["chinese_simplified","chinese_traditional"],"腊":["chinese_simplified"],"窝":["chinese_simplified"],"涤":["chinese_simplified"],"剑":["chinese_simplified"],"瞧":["chinese_simplified","chinese_traditional"],"堡":["chinese_simplified","chinese_traditional"],"泼":["chinese_simplified"],"葱":["chinese_simplified"],"罩":["chinese_simplified","chinese_traditional"],"霍":["chinese_simplified","chinese_traditional"],"捞":["chinese_simplified"],"胎":["chinese_simplified","chinese_traditional"],"苍":["chinese_simplified"],"滨":["chinese_simplified"],"俩":["chinese_simplified"],"捅":["chinese_simplified","chinese_traditional"],"湘":["chinese_simplified","chinese_traditional"],"砍":["chinese_simplified","chinese_traditional"],"霞":["chinese_simplified","chinese_traditional"],"邵":["chinese_simplified","chinese_traditional"],"萄":["chinese_simplified","chinese_traditional"],"疯":["chinese_simplified"],"淮":["chinese_simplified","chinese_traditional"],"遂":["chinese_simplified","chinese_traditional"],"熊":["chinese_simplified","chinese_traditional"],"粪":["chinese_simplified"],"烘":["chinese_simplified","chinese_traditional"],"宿":["chinese_simplified","chinese_traditional"],"档":["chinese_simplified"],"戈":["chinese_simplified","chinese_traditional"],"驳":["chinese_simplified"],"嫂":["chinese_simplified","chinese_traditional"],"裕":["chinese_simplified","chinese_traditional"],"徙":["chinese_simplified","chinese_traditional"],"箭":["chinese_simplified","chinese_traditional"],"捐":["chinese_simplified","chinese_traditional"],"肠":["chinese_simplified"],"撑":["chinese_simplified"],"晒":["chinese_simplified"],"辨":["chinese_simplified","chinese_traditional"],"殿":["chinese_simplified","chinese_traditional"],"莲":["chinese_simplified"],"摊":["chinese_simplified"],"搅":["chinese_simplified"],"酱":["chinese_simplified"],"屏":["chinese_simplified","chinese_traditional"],"疫":["chinese_simplified","chinese_traditional"],"哀":["chinese_simplified","chinese_traditional"],"蔡":["chinese_simplified","chinese_traditional"],"堵":["chinese_simplified","chinese_traditional"],"沫":["chinese_simplified","chinese_traditional"],"皱":["chinese_simplified"],"畅":["chinese_simplified"],"叠":["chinese_simplified"],"阁":["chinese_simplified"],"莱":["chinese_simplified"],"敲":["chinese_simplified","chinese_traditional"],"辖":["chinese_simplified"],"钩":["chinese_simplified"],"痕":["chinese_simplified","chinese_traditional"],"坝":["chinese_simplified"],"巷":["chinese_simplified","chinese_traditional"],"饿":["chinese_simplified"],"祸":["chinese_simplified"],"丘":["chinese_simplified","chinese_traditional"],"玄":["chinese_simplified","chinese_traditional"],"溜":["chinese_simplified","chinese_traditional"],"曰":["chinese_simplified","chinese_traditional"],"逻":["chinese_simplified"],"彭":["chinese_simplified","chinese_traditional"],"尝":["chinese_simplified"],"卿":["chinese_simplified","chinese_traditional"],"妨":["chinese_simplified","chinese_traditional"],"艇":["chinese_simplified","chinese_traditional"],"吞":["chinese_simplified","chinese_traditional"],"韦":["chinese_simplified"],"怨":["chinese_simplified","chinese_traditional"],"矮":["chinese_simplified","chinese_traditional"],"歇":["chinese_simplified","chinese_traditional"],"這":["chinese_traditional"],"為":["chinese_traditional"],"個":["chinese_traditional"],"國":["chinese_traditional"],"時":["chinese_traditional"],"來":["chinese_traditional"],"們":["chinese_traditional"],"於":["chinese_traditional"],"對":["chinese_traditional"],"會":["chinese_traditional"],"發":["chinese_traditional"],"動":["chinese_traditional"],"過":["chinese_traditional"],"說":["chinese_traditional"],"產":["chinese_traditional"],"種":["chinese_traditional"],"後":["chinese_traditional"],"學":["chinese_traditional"],"經":["chinese_traditional"],"進":["chinese_traditional"],"著":["chinese_traditional"],"電":["chinese_traditional"],"裡":["chinese_traditional"],"現":["chinese_traditional"],"實":["chinese_traditional"],"兩":["chinese_traditional"],"體":["chinese_traditional"],"機":["chinese_traditional"],"當":["chinese_traditional"],"點":["chinese_traditional"],"從":["chinese_traditional"],"業":["chinese_traditional"],"應":["chinese_traditional"],"開":["chinese_traditional"],"還":["chinese_traditional"],"義":["chinese_traditional"],"間":["chinese_traditional"],"樣":["chinese_traditional"],"與":["chinese_traditional"],"關":["chinese_traditional"],"線":["chinese_traditional"],"內":["chinese_traditional"],"數":["chinese_traditional"],"麼":["chinese_traditional"],"質":["chinese_traditional"],"氣":["chinese_traditional"],"變":["chinese_traditional"],"條":["chinese_traditional"],"沒":["chinese_traditional"],"結":["chinese_traditional"],"問":["chinese_traditional"],"無":["chinese_traditional"],"軍":["chinese_traditional"],"並":["chinese_traditional"],"題":["chinese_traditional"],"黨":["chinese_traditional"],"員":["chinese_traditional"],"總":["chinese_traditional"],"設":["chinese_traditional"],"長":["chinese_traditional"],"頭":["chinese_traditional"],"資":["chinese_traditional"],"邊":["chinese_traditional"],"級":["chinese_traditional"],"圖":["chinese_traditional"],"統":["chinese_traditional"],"較":["chinese_traditional"],"將":["chinese_traditional"],"組":["chinese_traditional"],"見":["chinese_traditional"],"計":["chinese_traditional"],"別":["chinese_traditional"],"論":["chinese_traditional"],"運":["chinese_traditional"],"農":["chinese_traditional"],"幾":["chinese_traditional"],"區":["chinese_traditional"],"強":["chinese_traditional"],"決":["chinese_traditional"],"幹":["chinese_traditional"],"戰":["chinese_traditional"],"則":["chinese_traditional"],"據":["chinese_traditional"],"處":["chinese_traditional"],"隊":["chinese_traditional"],"給":["chinese_traditional"],"門":["chinese_traditional"],"規":["chinese_traditional"],"熱":["chinese_traditional"],"領":["chinese_traditional"],"東":["chinese_traditional"],"導":["chinese_traditional"],"壓":["chinese_traditional"],"爭":["chinese_traditional"],"濟":["chinese_traditional"],"階":["chinese_traditional"],"術":["chinese_traditional"],"極":["chinese_traditional"],"聯":["chinese_traditional"],"認":["chinese_traditional"],"權":["chinese_traditional"],"證":["chinese_traditional"],"採":["chinese_traditional"],"轉":["chinese_traditional"],"單":["chinese_traditional"],"風":["chinese_traditional"],"帶":["chinese_traditional"],"場":["chinese_traditional"],"車":["chinese_traditional"],"務":["chinese_traditional"],"萬":["chinese_traditional"],"達":["chinese_traditional"],"積":["chinese_traditional"],"議":["chinese_traditional"],"聲":["chinese_traditional"],"報":["chinese_traditional"],"鬥":["chinese_traditional"],"類":["chinese_traditional"],"離":["chinese_traditional"],"華":["chinese_traditional"],"確":["chinese_traditional"],"張":["chinese_traditional"],"馬":["chinese_traditional"],"節":["chinese_traditional"],"話":["chinese_traditional"],"況":["chinese_traditional"],"溫":["chinese_traditional"],"傳":["chinese_traditional"],"許":["chinese_traditional"],"廣":["chinese_traditional"],"記":["chinese_traditional"],"觀":["chinese_traditional"],"織":["chinese_traditional"],"裝":["chinese_traditional"],"眾":["chinese_traditional"],"書":["chinese_traditional"],"兒":["chinese_traditional"],"須":["chinese_traditional"],"際":["chinese_traditional"],"驗":["chinese_traditional"],"連":["chinese_traditional"],"斷":["chinese_traditional"],"難":["chinese_traditional"],"礦":["chinese_traditional"],"週":["chinese_traditional"],"備":["chinese_traditional"],"辦":["chinese_traditional"],"習":["chinese_traditional"],"響":["chinese_traditional"],"約":["chinese_traditional"],"勞":["chinese_traditional"],"團":["chinese_traditional"],"歷":["chinese_traditional"],"構":["chinese_traditional"],"稱":["chinese_traditional"],"準":["chinese_traditional"],"號":["chinese_traditional"],"維":["chinese_traditional"],"劃":["chinese_traditional"],"選":["chinese_traditional"],"標":["chinese_traditional"],"寫":["chinese_traditional"],"親":["chinese_traditional"],"養":["chinese_traditional"],"層":["chinese_traditional"],"卻":["chinese_traditional"],"專":["chinese_traditional"],"狀":["chinese_traditional"],"廠":["chinese_traditional"],"識":["chinese_traditional"],"適":["chinese_traditional"],"屬":["chinese_traditional"],"圓":["chinese_traditional"],"調":["chinese_traditional"],"滿":["chinese_traditional"],"縣":["chinese_traditional"],"參":["chinese_traditional"],"紅":["chinese_traditional"],"細":["chinese_traditional"],"聽":["chinese_traditional"],"該":["chinese_traditional"],"鐵":["chinese_traditional"],"價":["chinese_traditional"],"嚴":["chinese_traditional"],"隨":["chinese_traditional"],"蘇":["chinese_traditional"],"爾":["chinese_traditional"],"講":["chinese_traditional"],"黃":["chinese_traditional"],"顯":["chinese_traditional"],"談":["chinese_traditional"],"藝":["chinese_traditional"],"營":["chinese_traditional"],"項":["chinese_traditional"],"舉":["chinese_traditional"],"勢":["chinese_traditional"],"幫":["chinese_traditional"],"輪":["chinese_traditional"],"亞":["chinese_traditional"],"師":["chinese_traditional"],"圍":["chinese_traditional"],"遠":["chinese_traditional"],"態":["chinese_traditional"],"減":["chinese_traditional"],"樹":["chinese_traditional"],"葉":["chinese_traditional"],"魚":["chinese_traditional"],"視":["chinese_traditional"],"僅":["chinese_traditional"],"費":["chinese_traditional"],"緊":["chinese_traditional"],"愛":["chinese_traditional"],"續":["chinese_traditional"],"輕":["chinese_traditional"],"試":["chinese_traditional"],"護":["chinese_traditional"],"練":["chinese_traditional"],"負":["chinese_traditional"],"擊":["chinese_traditional"],"繼":["chinese_traditional"],"興":["chinese_traditional"],"餘":["chinese_traditional"],"堅":["chinese_traditional"],"輸":["chinese_traditional"],"夠":["chinese_traditional"],"筆":["chinese_traditional"],"佔":["chinese_traditional"],"財":["chinese_traditional"],"職":["chinese_traditional"],"覺":["chinese_traditional"],"漢":["chinese_traditional"],"畫":["chinese_traditional"],"雖":["chinese_traditional"],"雜":["chinese_traditional"],"飛":["chinese_traditional"],"檢":["chinese_traditional"],"昇":["chinese_traditional"],"陽":["chinese_traditional"],"創":["chinese_traditional"],"壞":["chinese_traditional"],"徑":["chinese_traditional"],"換":["chinese_traditional"],"鋼":["chinese_traditional"],"責":["chinese_traditional"],"簡":["chinese_traditional"],"錢":["chinese_traditional"],"盡":["chinese_traditional"],"衝":["chinese_traditional"],"獨":["chinese_traditional"],"環":["chinese_traditional"],"雙":["chinese_traditional"],"請":["chinese_traditional"],"讓":["chinese_traditional"],"軸":["chinese_traditional"],"紀":["chinese_traditional"],"優":["chinese_traditional"],"頂":["chinese_traditional"],"礎":["chinese_traditional"],"載":["chinese_traditional"],"敵":["chinese_traditional"],"勝":["chinese_traditional"],"絕":["chinese_traditional"],"塊":["chinese_traditional"],"劑":["chinese_traditional"],"測":["chinese_traditional"],"絲":["chinese_traditional"],"協":["chinese_traditional"],"訴":["chinese_traditional"],"陳":["chinese_traditional"],"羅":["chinese_traditional"],"鹽":["chinese_traditional"],"錯":["chinese_traditional"],"頻":["chinese_traditional"],"終":["chinese_traditional"],"雲":["chinese_traditional"],"衛":["chinese_traditional"],"燒":["chinese_traditional"],"遊":["chinese_traditional"],"舊":["chinese_traditional"],"貨":["chinese_traditional"],"損":["chinese_traditional"],"預":["chinese_traditional"],"穩":["chinese_traditional"],"媽":["chinese_traditional"],"擴":["chinese_traditional"],"銀":["chinese_traditional"],"語":["chinese_traditional"],"揮":["chinese_traditional"],"紙":["chinese_traditional"],"醫":["chinese_traditional"],"嗎":["chinese_traditional"],"針":["chinese_traditional"],"劉":["chinese_traditional"],"誤":["chinese_traditional"],"訓":["chinese_traditional"],"願":["chinese_traditional"],"審":["chinese_traditional"],"獲":["chinese_traditional"],"鮮":["chinese_traditional"],"糧":["chinese_traditional"],"脫":["chinese_traditional"],"龍":["chinese_traditional"],"漸":["chinese_traditional"],"歡":["chinese_traditional"],"剛":["chinese_traditional"],"謂":["chinese_traditional"],"討":["chinese_traditional"],"亂":["chinese_traditional"],"殺":["chinese_traditional"],"藥":["chinese_traditional"],"寧":["chinese_traditional"],"魯":["chinese_traditional"],"貴":["chinese_traditional"],"鐘":["chinese_traditional"],"讀":["chinese_traditional"],"豐":["chinese_traditional"],"蘭":["chinese_traditional"],"擔":["chinese_traditional"],"執":["chinese_traditional"],"樂":["chinese_traditional"],"誰":["chinese_traditional"],"順":["chinese_traditional"],"煙":["chinese_traditional"],"縮":["chinese_traditional"],"徵":["chinese_traditional"],"臉":["chinese_traditional"],"腳":["chinese_traditional"],"異":["chinese_traditional"],"買":["chinese_traditional"],"靜":["chinese_traditional"],"補":["chinese_traditional"],"評":["chinese_traditional"],"踐":["chinese_traditional"],"寬":["chinese_traditional"],"揚":["chinese_traditional"],"傷":["chinese_traditional"],"氫":["chinese_traditional"],"憲":["chinese_traditional"],"慶":["chinese_traditional"],"編":["chinese_traditional"],"觸":["chinese_traditional"],"銷":["chinese_traditional"],"詩":["chinese_traditional"],"綠":["chinese_traditional"],"雞":["chinese_traditional"],"孫":["chinese_traditional"],"膠":["chinese_traditional"],"鄉":["chinese_traditional"],"臨":["chinese_traditional"],"陸":["chinese_traditional"],"顧":["chinese_traditional"],"燈":["chinese_traditional"],"歲":["chinese_traditional"],"劇":["chinese_traditional"],"趙":["chinese_traditional"],"課":["chinese_traditional"],"凱":["chinese_traditional"],"額":["chinese_traditional"],"紹":["chinese_traditional"],"齊":["chinese_traditional"],"偉":["chinese_traditional"],"爐":["chinese_traditional"],"楊":["chinese_traditional"],"桿":["chinese_traditional"],"鎮":["chinese_traditional"],"飯":["chinese_traditional"],"濃":["chinese_traditional"],"懷":["chinese_traditional"],"趕":["chinese_traditional"],"庫":["chinese_traditional"],"奪":["chinese_traditional"],"靈":["chinese_traditional"],"稅":["chinese_traditional"],"滅":["chinese_traditional"],"賽":["chinese_traditional"],"歸":["chinese_traditional"],"盤":["chinese_traditional"],"險":["chinese_traditional"],"錄":["chinese_traditional"],"純":["chinese_traditional"],"蓋":["chinese_traditional"],"橫":["chinese_traditional"],"槍":["chinese_traditional"],"潤":["chinese_traditional"],"蟲":["chinese_traditional"],"澤":["chinese_traditional"],"腦":["chinese_traditional"],"歐":["chinese_traditional"],"側":["chinese_traditional"],"徹":["chinese_traditional"],"慮":["chinese_traditional"],"納":["chinese_traditional"],"彈":["chinese_traditional"],"飼":["chinese_traditional"],"麥":["chinese_traditional"],"濕":["chinese_traditional"],"築":["chinese_traditional"],"惡":["chinese_traditional"],"戶":["chinese_traditional"],"訪":["chinese_traditional"],"跡":["chinese_traditional"],"擺":["chinese_traditional"],"賣":["chinese_traditional"],"擇":["chinese_traditional"],"銅":["chinese_traditional"],"獻":["chinese_traditional"],"陣":["chinese_traditional"],"陰":["chinese_traditional"],"樓":["chinese_traditional"],"謀":["chinese_traditional"],"噸":["chinese_traditional"],"豬":["chinese_traditional"],"館":["chinese_traditional"],"爺":["chinese_traditional"],"驚":["chinese_traditional"],"遺":["chinese_traditional"],"纖":["chinese_traditional"],"傾":["chinese_traditional"],"謝":["chinese_traditional"],"奮":["chinese_traditional"],"購":["chinese_traditional"],"監":["chinese_traditional"],"貫":["chinese_traditional"],"釋":["chinese_traditional"],"詞":["chinese_traditional"],"頓":["chinese_traditional"],"寶":["chinese_traditional"],"塵":["chinese_traditional"],"聞":["chinese_traditional"],"殘":["chinese_traditional"],"橋":["chinese_traditional"],"婦":["chinese_traditional"],"綜":["chinese_traditional"],"吳":["chinese_traditional"],"搖":["chinese_traditional"],"贊":["chinese_traditional"],"訂":["chinese_traditional"],"園":["chinese_traditional"],"紛":["chinese_traditional"],"敗":["chinese_traditional"],"榮":["chinese_traditional"],"閉":["chinese_traditional"],"灣":["chinese_traditional"],"鍵":["chinese_traditional"],"駐":["chinese_traditional"],"鍋":["chinese_traditional"],"剝":["chinese_traditional"],"鹼":["chinese_traditional"],"齒":["chinese_traditional"],"煉":["chinese_traditional"],"紡":["chinese_traditional"],"廢":["chinese_traditional"],"緩":["chinese_traditional"],"淨":["chinese_traditional"],"莊":["chinese_traditional"],"貿":["chinese_traditional"],"慣":["chinese_traditional"],"夥":["chinese_traditional"],"勻":["chinese_traditional"],"紗":["chinese_traditional"],"辯":["chinese_traditional"],"億":["chinese_traditional"],"脈":["chinese_traditional"],"薩":["chinese_traditional"],"網":["chinese_traditional"],"噴":["chinese_traditional"],"縱":["chinese_traditional"],"掛":["chinese_traditional"],"賀":["chinese_traditional"],"閃":["chinese_traditional"],"牆":["chinese_traditional"],"軟":["chinese_traditional"],"滾":["chinese_traditional"],"盪":["chinese_traditional"],"儀":["chinese_traditional"],"軋":["chinese_traditional"],"貢":["chinese_traditional"],"鑽":["chinese_traditional"],"幣":["chinese_traditional"],"軌":["chinese_traditional"],"畝":["chinese_traditional"],"畢":["chinese_traditional"],"島":["chinese_traditional"],"鑄":["chinese_traditional"],"湯":["chinese_traditional"],"閥":["chinese_traditional"],"匯":["chinese_traditional"],"繞":["chinese_traditional"],"績":["chinese_traditional"],"啟":["chinese_traditional"],"顏":["chinese_traditional"],"淚":["chinese_traditional"],"藍":["chinese_traditional"],"鏡":["chinese_traditional"],"壯":["chinese_traditional"],"鋒":["chinese_traditional"],"貧":["chinese_traditional"],"虛":["chinese_traditional"],"彎":["chinese_traditional"],"綱":["chinese_traditional"],"隸":["chinese_traditional"],"宮":["chinese_traditional"],"違":["chinese_traditional"],"夾":["chinese_traditional"],"緣":["chinese_traditional"],"窮":["chinese_traditional"],"溝":["chinese_traditional"],"繩":["chinese_traditional"],"憶":["chinese_traditional"],"漿":["chinese_traditional"],"欄":["chinese_traditional"],"擁":["chinese_traditional"],"貯":["chinese_traditional"],"禮":["chinese_traditional"],"濾":["chinese_traditional"],"鈉":["chinese_traditional"],"紋":["chinese_traditional"],"罷":["chinese_traditional"],"罰":["chinese_traditional"],"潛":["chinese_traditional"],"縫":["chinese_traditional"],"飽":["chinese_traditional"],"獎":["chinese_traditional"],"鋁":["chinese_traditional"],"麗":["chinese_traditional"],"鏈":["chinese_traditional"],"掃":["chinese_traditional"],"諸":["chinese_traditional"],"勵":["chinese_traditional"],"潔":["chinese_traditional"],"災":["chinese_traditional"],"鑑":["chinese_traditional"],"訟":["chinese_traditional"],"毀":["chinese_traditional"],"屆":["chinese_traditional"],"躍":["chinese_traditional"],"艱":["chinese_traditional"],"貝":["chinese_traditional"],"碼":["chinese_traditional"],"夢":["chinese_traditional"],"漁":["chinese_traditional"],"顆":["chinese_traditional"],"鉛":["chinese_traditional"],"倉":["chinese_traditional"],"銳":["chinese_traditional"],"曉":["chinese_traditional"],"隱":["chinese_traditional"],"礙":["chinese_traditional"],"撥":["chinese_traditional"],"肅":["chinese_traditional"],"牽":["chinese_traditional"],"搶":["chinese_traditional"],"殼":["chinese_traditional"],"訊":["chinese_traditional"],"誠":["chinese_traditional"],"頁":["chinese_traditional"],"齡":["chinese_traditional"],"倫":["chinese_traditional"],"尋":["chinese_traditional"],"鋪":["chinese_traditional"],"聖":["chinese_traditional"],"鄭":["chinese_traditional"],"騰":["chinese_traditional"],"貼":["chinese_traditional"],"闊":["chinese_traditional"],"輛":["chinese_traditional"],"儲":["chinese_traditional"],"簽":["chinese_traditional"],"鬧":["chinese_traditional"],"擾":["chinese_traditional"],"遞":["chinese_traditional"],"戲":["chinese_traditional"],"餵":["chinese_traditional"],"療":["chinese_traditional"],"撫":["chinese_traditional"],"蝦":["chinese_traditional"],"蠟":["chinese_traditional"],"鄰":["chinese_traditional"],"鞏":["chinese_traditional"],"擠":["chinese_traditional"],"棄":["chinese_traditional"],"勁":["chinese_traditional"],"鄧":["chinese_traditional"],"爛":["chinese_traditional"],"磚":["chinese_traditional"],"烏":["chinese_traditional"],"艦":["chinese_traditional"],"淺":["chinese_traditional"],"暫":["chinese_traditional"],"膽":["chinese_traditional"],"詳":["chinese_traditional"],"譜":["chinese_traditional"],"賓":["chinese_traditional"],"輝":["chinese_traditional"],"憤":["chinese_traditional"],"競":["chinese_traditional"],"緒":["chinese_traditional"],"塗":["chinese_traditional"],"偵":["chinese_traditional"],"懸":["chinese_traditional"],"糾":["chinese_traditional"],"鎖":["chinese_traditional"],"賞":["chinese_traditional"],"鴨":["chinese_traditional"],"趨":["chinese_traditional"],"鳳":["chinese_traditional"],"輩":["chinese_traditional"],"灘":["chinese_traditional"],"驅":["chinese_traditional"],"篩":["chinese_traditional"],"峽":["chinese_traditional"],"壽":["chinese_traditional"],"譯":["chinese_traditional"],"遲":["chinese_traditional"],"矽":["chinese_traditional"],"貸":["chinese_traditional"],"脅":["chinese_traditional"],"蝕":["chinese_traditional"],"奧":["chinese_traditional"],"鳴":["chinese_traditional"],"嶺":["chinese_traditional"],"憑":["chinese_traditional"],"繪":["chinese_traditional"],"錫":["chinese_traditional"],"廟":["chinese_traditional"],"籌":["chinese_traditional"],"凍":["chinese_traditional"],"輔":["chinese_traditional"],"攝":["chinese_traditional"],"襲":["chinese_traditional"],"鉀":["chinese_traditional"],"鳥":["chinese_traditional"],"韓":["chinese_traditional"],"僑":["chinese_traditional"],"涼":["chinese_traditional"],"餾":["chinese_traditional"],"勸":["chinese_traditional"],"遼":["chinese_traditional"],"鴻":["chinese_traditional"],"輥":["chinese_traditional"],"飲":["chinese_traditional"],"罵":["chinese_traditional"],"辭":["chinese_traditional"],"蔣":["chinese_traditional"],"絨":["chinese_traditional"],"霧":["chinese_traditional"],"擬":["chinese_traditional"],"輯":["chinese_traditional"],"陝":["chinese_traditional"],"償":["chinese_traditional"],"廳":["chinese_traditional"],"駛":["chinese_traditional"],"賦":["chinese_traditional"],"澆":["chinese_traditional"],"鈣":["chinese_traditional"],"虧":["chinese_traditional"],"騙":["chinese_traditional"],"脹":["chinese_traditional"],"諧":["chinese_traditional"],"拋":["chinese_traditional"],"黴":["chinese_traditional"],"崗":["chinese_traditional"],"盜":["chinese_traditional"],"滲":["chinese_traditional"],"臟":["chinese_traditional"],"賴":["chinese_traditional"],"湧":["chinese_traditional"],"閱":["chinese_traditional"],"厲":["chinese_traditional"],"烴":["chinese_traditional"],"緯":["chinese_traditional"],"偽":["chinese_traditional"],"嘆":["chinese_traditional"],"釘":["chinese_traditional"],"莖":["chinese_traditional"],"籠":["chinese_traditional"],"錐":["chinese_traditional"],"恆":["chinese_traditional"],"傑":["chinese_traditional"],"綸":["chinese_traditional"],"敘":["chinese_traditional"],"獄":["chinese_traditional"],"絡":["chinese_traditional"],"驟":["chinese_traditional"],"冊":["chinese_traditional"],"屍":["chinese_traditional"],"紳":["chinese_traditional"],"犧":["chinese_traditional"],"轟":["chinese_traditional"],"晉":["chinese_traditional"],"禦":["chinese_traditional"],"錠":["chinese_traditional"],"錦":["chinese_traditional"],"喪":["chinese_traditional"],"鍛":["chinese_traditional"],"壟":["chinese_traditional"],"撲":["chinese_traditional"],"邁":["chinese_traditional"],"閒":["chinese_traditional"],"憂":["chinese_traditional"],"頑":["chinese_traditional"],"漲":["chinese_traditional"],"闢":["chinese_traditional"],"懲":["chinese_traditional"],"飄":["chinese_traditional"],"飾":["chinese_traditional"],"蕭":["chinese_traditional"],"郵":["chinese_traditional"],"遷":["chinese_traditional"],"煩":["chinese_traditional"],"債":["chinese_traditional"],"帳":["chinese_traditional"],"鈴":["chinese_traditional"],"餅":["chinese_traditional"],"雛":["chinese_traditional"],"賢":["chinese_traditional"],"丟":["chinese_traditional"],"墊":["chinese_traditional"],"擋":["chinese_traditional"],"覽":["chinese_traditional"],"貪":["chinese_traditional"],"繳":["chinese_traditional"],"馮":["chinese_traditional"],"諾":["chinese_traditional"],"誼":["chinese_traditional"],"兇":["chinese_traditional"],"誣":["chinese_traditional"],"騎":["chinese_traditional"],"喬":["chinese_traditional"],"叢":["chinese_traditional"],"盧":["chinese_traditional"],"悶":["chinese_traditional"],"諮":["chinese_traditional"],"駕":["chinese_traditional"],"纜":["chinese_traditional"],"鉺":["chinese_traditional"],"擲":["chinese_traditional"],"頗":["chinese_traditional"],"慘":["chinese_traditional"],"臘":["chinese_traditional"],"窩":["chinese_traditional"],"滌":["chinese_traditional"],"劍":["chinese_traditional"],"潑":["chinese_traditional"],"蔥":["chinese_traditional"],"撈":["chinese_traditional"],"蒼":["chinese_traditional"],"濱":["chinese_traditional"],"倆":["chinese_traditional"],"瘋":["chinese_traditional"],"糞":["chinese_traditional"],"檔":["chinese_traditional"],"駁":["chinese_traditional"],"腸":["chinese_traditional"],"撐":["chinese_traditional"],"曬":["chinese_traditional"],"蓮":["chinese_traditional"],"攤":["chinese_traditional"],"攪":["chinese_traditional"],"醬":["chinese_traditional"],"皺":["chinese_traditional"],"暢":["chinese_traditional"],"疊":["chinese_traditional"],"閣":["chinese_traditional"],"萊":["chinese_traditional"],"轄":["chinese_traditional"],"鉤":["chinese_traditional"],"壩":["chinese_traditional"],"餓":["chinese_traditional"],"禍":["chinese_traditional"],"邏":["chinese_traditional"],"嘗":["chinese_traditional"],"韋":["chinese_traditional"],"abdikace":["czech"],"abeceda":["czech"],"adresa":["czech"],"agrese":["czech"],"akce":["czech"],"aktovka":["czech"],"alej":["czech"],"alkohol":["czech"],"amputace":["czech"],"ananas":["czech"],"andulka":["czech"],"anekdota":["czech"],"anketa":["czech"],"antika":["czech"],"anulovat":["czech"],"archa":["czech"],"arogance":["czech"],"asfalt":["czech","turkish"],"asistent":["czech"],"aspirace":["czech"],"astma":["czech"],"astronom":["czech"],"atlas":["czech"],"atletika":["czech"],"atol":["czech"],"autobus":["czech"],"azyl":["czech"],"babka":["czech"],"bachor":["czech"],"bacil":["czech"],"baculka":["czech"],"badatel":["czech"],"bageta":["czech"],"bagr":["czech"],"bahno":["czech"],"bakterie":["czech"],"balada":["czech"],"baletka":["czech"],"balkon":["czech"],"balonek":["czech"],"balvan":["czech"],"balza":["czech"],"bambus":["czech"],"bankomat":["czech"],"barbar":["czech"],"baret":["czech"],"barman":["czech"],"baroko":["czech"],"barva":["czech"],"baterka":["czech"],"batoh":["czech"],"bavlna":["czech"],"bazalka":["czech"],"bazilika":["czech"],"bazuka":["czech"],"bedna":["czech"],"beran":["czech"],"beseda":["czech"],"bestie":["czech"],"beton":["czech","turkish"],"bezinka":["czech"],"bezmoc":["czech"],"beztak":["czech"],"bicykl":["czech"],"bidlo":["czech"],"biftek":["czech","turkish"],"bikiny":["czech"],"bilance":["czech"],"biograf":["czech"],"biolog":["czech"],"bitva":["czech"],"bizon":["czech"],"blahobyt":["czech"],"blatouch":["czech"],"blecha":["czech"],"bledule":["czech"],"blesk":["czech"],"blikat":["czech"],"blizna":["czech"],"blokovat":["czech"],"bloudit":["czech"],"blud":["czech"],"bobek":["czech"],"bobr":["czech"],"bodlina":["czech"],"bodnout":["czech"],"bohatost":["czech"],"bojkot":["czech"],"bojovat":["czech"],"bokorys":["czech"],"bolest":["czech"],"borec":["czech"],"borovice":["czech"],"bota":["czech"],"boubel":["czech"],"bouchat":["czech"],"bouda":["czech"],"boule":["czech"],"bourat":["czech"],"boxer":["czech"],"bradavka":["czech"],"brambora":["czech"],"branka":["czech"],"bratr":["czech"],"brepta":["czech"],"briketa":["czech"],"brko":["czech"],"brloh":["czech"],"bronz":["czech"],"broskev":["czech"],"brunetka":["czech"],"brusinka":["czech"],"brzda":["czech"],"brzy":["czech"],"bublina":["czech"],"bubnovat":["czech"],"buchta":["czech"],"buditel":["czech"],"budka":["czech"],"budova":["czech"],"bufet":["czech"],"bujarost":["czech"],"bukvice":["czech"],"buldok":["czech"],"bulva":["czech"],"bunda":["czech"],"bunkr":["czech"],"burza":["czech"],"butik":["czech","turkish"],"buvol":["czech"],"buzola":["czech"],"bydlet":["czech"],"bylina":["czech"],"bytovka":["czech"],"bzukot":["czech"],"capart":["czech"],"carevna":["czech"],"cedr":["czech"],"cedule":["czech"],"cejch":["czech"],"cejn":["czech"],"cela":["czech"],"celer":["czech"],"celkem":["czech"],"celnice":["czech"],"cenina":["czech"],"cennost":["czech"],"cenovka":["czech"],"centrum":["czech"],"cenzor":["czech"],"cestopis":["czech"],"cetka":["czech"],"chalupa":["czech"],"chapadlo":["czech"],"charita":["czech"],"chata":["czech"],"chechtat":["czech"],"chemie":["czech"],"chichot":["czech"],"chirurg":["czech"],"chlad":["czech"],"chleba":["czech"],"chlubit":["czech"],"chmel":["czech"],"chmura":["czech"],"chobot":["czech"],"chochol":["czech"],"chodba":["czech"],"cholera":["czech"],"chomout":["czech"],"chopit":["czech"],"choroba":["czech"],"chov":["czech"],"chrapot":["czech"],"chrlit":["czech"],"chrt":["czech"],"chrup":["czech"],"chtivost":["czech"],"chudina":["czech"],"chutnat":["czech"],"chvat":["czech"],"chvilka":["czech"],"chvost":["czech"],"chyba":["czech"],"chystat":["czech"],"chytit":["czech"],"cibule":["czech"],"cigareta":["czech"],"cihelna":["czech"],"cihla":["czech"],"cinkot":["czech"],"cirkus":["czech"],"cisterna":["czech"],"citace":["czech"],"citrus":["czech"],"cizinec":["czech"],"cizost":["czech"],"clona":["czech"],"cokoliv":["czech"],"couvat":["czech"],"ctitel":["czech"],"ctnost":["czech"],"cudnost":["czech"],"cuketa":["czech"],"cukr":["czech"],"cupot":["czech"],"cvaknout":["czech"],"cval":["czech"],"cvik":["czech"],"cvrkot":["czech"],"cyklista":["czech"],"daleko":["czech"],"dareba":["czech"],"datel":["czech"],"datum":["czech"],"dcera":["czech"],"debata":["czech"],"dechovka":["czech"],"decibel":["czech"],"deficit":["czech"],"deflace":["czech"],"dekl":["czech"],"dekret":["czech"],"demokrat":["czech"],"deprese":["czech"],"derby":["czech"],"deska":["czech"],"detektiv":["czech"],"dikobraz":["czech"],"diktovat":["czech"],"dioda":["czech"],"diplom":["czech"],"disk":["czech","turkish"],"displej":["czech"],"divadlo":["czech"],"divoch":["czech"],"dlaha":["czech"],"dlouho":["czech"],"dluhopis":["czech"],"dnes":["czech"],"dobro":["czech"],"dobytek":["czech"],"docent":["czech"],"dochutit":["czech"],"dodnes":["czech"],"dohled":["czech"],"dohoda":["czech"],"dohra":["czech"],"dojem":["czech"],"dojnice":["czech"],"doklad":["czech"],"dokola":["czech"],"doktor":["czech","turkish"],"dokument":["czech"],"dolar":["czech"],"doleva":["czech"],"dolina":["czech"],"doma":["czech"],"dominant":["czech"],"domluvit":["czech"],"domov":["czech"],"donutit":["czech"],"dopad":["czech"],"dopis":["czech"],"doplnit":["czech"],"doposud":["czech"],"doprovod":["czech"],"dopustit":["czech"],"dorazit":["czech"],"dorost":["czech"],"dort":["czech"],"dosah":["czech"],"doslov":["czech"],"dostatek":["czech"],"dosud":["czech"],"dosyta":["czech"],"dotaz":["czech"],"dotek":["czech"],"dotknout":["czech"],"doufat":["czech"],"doutnat":["czech"],"dovozce":["czech"],"dozadu":["czech"],"doznat":["czech"],"dozorce":["czech"],"drahota":["czech"],"drak":["czech"],"dramatik":["czech"],"dravec":["czech"],"draze":["czech"],"drdol":["czech"],"drobnost":["czech"],"drogerie":["czech"],"drozd":["czech"],"drsnost":["czech"],"drtit":["czech"],"drzost":["czech"],"duben":["czech"],"duchovno":["czech"],"dudek":["czech"],"duha":["czech"],"duhovka":["czech"],"dusit":["czech"],"dusno":["czech"],"dutost":["czech"],"dvojice":["czech"],"dvorec":["czech"],"dynamit":["czech"],"ekolog":["czech"],"ekonomie":["czech"],"elektron":["czech"],"elipsa":["czech"],"email":["czech"],"emise":["czech"],"emoce":["czech"],"empatie":["czech"],"epizoda":["czech"],"epocha":["czech"],"epopej":["czech"],"epos":["czech"],"esej":["czech"],"esence":["czech"],"eskorta":["czech"],"eskymo":["czech"],"etiketa":["czech"],"euforie":["czech"],"evoluce":["czech"],"exekuce":["czech"],"exkurze":["czech"],"expedice":["czech"],"exploze":["czech"],"export":["czech"],"extrakt":["czech"],"facka":["czech"],"fajfka":["czech"],"fakulta":["czech"],"fanatik":["czech","turkish"],"fantazie":["czech"],"farmacie":["czech"],"favorit":["czech"],"fazole":["czech"],"federace":["czech"],"fejeton":["czech"],"fenka":["czech"],"fialka":["czech"],"figurant":["czech"],"filozof":["czech"],"filtr":["czech"],"finance":["czech"],"finta":["czech"],"fixace":["czech"],"fjord":["czech"],"flanel":["czech"],"flirt":["czech"],"flotila":["czech"],"fond":["czech"],"fosfor":["czech"],"fotbal":["czech"],"fotka":["czech"],"foton":["czech"],"frakce":["czech"],"freska":["czech"],"fronta":["czech"],"fukar":["czech"],"funkce":["czech"],"fyzika":["czech"],"galeje":["czech"],"garant":["czech"],"genetika":["czech"],"geolog":["czech"],"gilotina":["czech"],"glazura":["czech"],"glejt":["czech"],"golem":["czech"],"golfista":["czech"],"gotika":["czech"],"graf":["czech"],"gramofon":["czech"],"granule":["czech"],"grep":["czech"],"gril":["czech"],"grog":["czech"],"groteska":["czech"],"guma":["czech"],"hadice":["czech"],"hadr":["czech"],"hala":["czech"],"halenka":["czech"],"hanba":["czech"],"hanopis":["czech"],"harfa":["czech"],"harpuna":["czech"],"havran":["czech"],"hebkost":["czech"],"hejkal":["czech"],"hejno":["czech"],"hejtman":["czech"],"hektar":["czech","turkish"],"helma":["czech"],"hematom":["czech"],"herec":["czech"],"herna":["czech"],"heslo":["czech"],"hezky":["czech"],"historik":["czech"],"hladovka":["czech"],"hlasivky":["czech"],"hlava":["czech"],"hledat":["czech"],"hlen":["czech"],"hlodavec":["czech"],"hloh":["czech"],"hloupost":["czech"],"hltat":["czech"],"hlubina":["czech"],"hluchota":["czech"],"hmat":["czech"],"hmota":["czech"],"hmyz":["czech"],"hnis":["czech"],"hnojivo":["czech"],"hnout":["czech"],"hoblina":["czech"],"hoboj":["czech"],"hoch":["czech"],"hodiny":["czech"],"hodlat":["czech"],"hodnota":["czech"],"hodovat":["czech"],"hojnost":["czech"],"hokej":["czech"],"holinka":["czech"],"holka":["czech"],"holub":["czech"],"homole":["czech"],"honitba":["czech"],"honorace":["czech"],"horal":["czech"],"horda":["czech"],"horizont":["czech"],"horko":["czech"],"horlivec":["czech"],"hormon":["czech","turkish"],"hornina":["czech"],"horoskop":["czech"],"horstvo":["czech"],"hospoda":["czech"],"hostina":["czech"],"hotovost":["czech"],"houba":["czech"],"houf":["czech"],"houpat":["czech"],"houska":["czech"],"hovor":["czech"],"hradba":["czech"],"hranice":["czech"],"hravost":["czech"],"hrazda":["czech"],"hrbolek":["czech"],"hrdina":["czech"],"hrdlo":["czech"],"hrdost":["czech"],"hrnek":["czech"],"hrobka":["czech"],"hromada":["czech"],"hrot":["czech"],"hrouda":["czech"],"hrozen":["czech"],"hrstka":["czech"],"hrubost":["czech"],"hryzat":["czech"],"hubenost":["czech"],"hubnout":["czech"],"hudba":["czech"],"hukot":["czech"],"humr":["czech"],"husita":["czech"],"hustota":["czech"],"hvozd":["czech"],"hybnost":["czech"],"hydrant":["czech"],"hygiena":["czech"],"hymna":["czech"],"hysterik":["czech"],"idylka":["czech"],"ihned":["czech"],"ikona":["czech"],"iluze":["czech"],"imunita":["czech"],"infekce":["czech"],"inflace":["czech"],"inkaso":["czech"],"inovace":["czech"],"inspekce":["czech"],"internet":["czech"],"invalida":["czech"],"investor":["czech"],"inzerce":["czech"],"ironie":["czech"],"jablko":["czech"],"jachta":["czech"],"jahoda":["czech"],"jakmile":["czech"],"jakost":["czech"],"jalovec":["czech"],"jantar":["czech"],"jarmark":["czech"],"jaro":["czech"],"jasan":["czech"],"jasno":["czech"],"jatka":["czech"],"javor":["czech"],"jazyk":["czech"],"jedinec":["czech"],"jedle":["czech"],"jednatel":["czech"],"jehlan":["czech"],"jekot":["czech"],"jelen":["czech"],"jelito":["czech"],"jemnost":["czech"],"jenom":["czech"],"jepice":["czech"],"jeseter":["czech"],"jevit":["czech"],"jezdec":["czech"],"jezero":["czech"],"jinak":["czech"],"jindy":["czech"],"jinoch":["czech"],"jiskra":["czech"],"jistota":["czech"],"jitrnice":["czech"],"jizva":["czech"],"jmenovat":["czech"],"jogurt":["czech"],"jurta":["czech"],"kabaret":["czech"],"kabel":["czech"],"kabinet":["czech"],"kachna":["czech"],"kadet":["czech"],"kadidlo":["czech"],"kahan":["czech"],"kajak":["czech"],"kajuta":["czech"],"kakao":["czech"],"kaktus":["czech"],"kalamita":["czech"],"kalhoty":["czech"],"kalibr":["czech"],"kalnost":["czech"],"kamera":["czech"],"kamkoliv":["czech"],"kamna":["czech"],"kanibal":["czech"],"kanoe":["czech"],"kantor":["czech"],"kapalina":["czech"],"kapela":["czech"],"kapitola":["czech"],"kapka":["czech"],"kaple":["czech"],"kapota":["czech"],"kapr":["czech"],"kapusta":["czech"],"kapybara":["czech"],"karamel":["czech"],"karotka":["czech"],"karton":["czech"],"kasa":["czech"],"katalog":["czech"],"katedra":["czech"],"kauce":["czech"],"kauza":["czech"],"kavalec":["czech"],"kazajka":["czech"],"kazeta":["czech"],"kazivost":["czech"],"kdekoliv":["czech"],"kdesi":["czech"],"kedluben":["czech"],"kemp":["czech"],"keramika":["czech"],"kino":["czech"],"klacek":["czech"],"kladivo":["czech"],"klam":["czech"],"klapot":["czech"],"klasika":["czech"],"klaun":["czech"],"klec":["czech"],"klenba":["czech"],"klepat":["czech"],"klesnout":["czech"],"klid":["czech"],"klima":["czech"],"klisna":["czech"],"klobouk":["czech"],"klokan":["czech"],"klopa":["czech"],"kloub":["czech"],"klubovna":["czech"],"klusat":["czech"],"kluzkost":["czech"],"kmen":["czech"],"kmitat":["czech"],"kmotr":["czech"],"kniha":["czech"],"knot":["czech"],"koalice":["czech"],"koberec":["czech"],"kobka":["czech"],"kobliha":["czech"],"kobyla":["czech"],"kocour":["czech"],"kohout":["czech"],"kojenec":["czech"],"kokos":["czech"],"koktejl":["czech"],"kolaps":["czech"],"koleda":["czech"],"kolize":["czech"],"kolo":["czech"],"komando":["czech"],"kometa":["czech"],"komik":["czech"],"komnata":["czech"],"komora":["czech"],"kompas":["czech"],"komunita":["czech"],"konat":["czech"],"koncept":["czech"],"kondice":["czech"],"konec":["czech"],"konfese":["czech"],"kongres":["czech"],"konina":["czech"],"konkurs":["czech"],"kontakt":["czech"],"konzerva":["czech"],"kopanec":["czech"],"kopie":["czech"],"kopnout":["czech"],"koprovka":["czech"],"korbel":["czech"],"korektor":["czech"],"kormidlo":["czech"],"koroptev":["czech"],"korpus":["czech"],"koruna":["czech"],"koryto":["czech"],"korzet":["czech"],"kosatec":["czech"],"kostka":["czech"],"kotel":["czech"],"kotleta":["czech"],"kotoul":["czech"],"koukat":["czech"],"koupelna":["czech"],"kousek":["czech"],"kouzlo":["czech"],"kovboj":["czech"],"koza":["czech"],"kozoroh":["czech"],"krabice":["czech"],"krach":["czech"],"krajina":["czech"],"kralovat":["czech"],"krasopis":["czech"],"kravata":["czech"],"kredit":["czech"],"krejcar":["czech"],"kresba":["czech"],"kreveta":["czech"],"kriket":["czech"],"kritik":["czech"],"krize":["czech"],"krkavec":["czech"],"krmelec":["czech"],"krmivo":["czech"],"krocan":["czech"],"krok":["czech"],"kronika":["czech"],"kropit":["czech"],"kroupa":["czech"],"krovka":["czech"],"krtek":["czech"],"kruhadlo":["czech"],"krupice":["czech"],"krutost":["czech"],"krvinka":["czech"],"krychle":["czech"],"krypta":["czech"],"krystal":["czech"],"kryt":["czech"],"kudlanka":["czech"],"kufr":["czech"],"kujnost":["czech"],"kukla":["czech"],"kulajda":["czech"],"kulich":["czech"],"kulka":["czech"],"kulomet":["czech"],"kultura":["czech"],"kuna":["czech"],"kupodivu":["czech"],"kurt":["czech"],"kurzor":["czech"],"kutil":["czech"],"kvalita":["czech"],"kvasinka":["czech"],"kvestor":["czech"],"kynolog":["czech"],"kyselina":["czech"],"kytara":["czech"],"kytice":["czech"],"kytka":["czech"],"kytovec":["czech"],"kyvadlo":["czech"],"labrador":["czech"],"lachtan":["czech"],"ladnost":["czech"],"laik":["czech"],"lakomec":["czech"],"lamela":["czech"],"lampa":["czech"],"lanovka":["czech"],"lasice":["czech"],"laso":["czech"],"lastura":["czech"],"latinka":["czech"],"lavina":["czech"],"lebka":["czech"],"leckdy":["czech"],"leden":["czech"],"lednice":["czech"],"ledovka":["czech"],"ledvina":["czech"],"legenda":["czech"],"legie":["czech"],"legrace":["czech"],"lehce":["czech"],"lehkost":["czech"],"lehnout":["czech"],"lektvar":["czech"],"lenochod":["czech"],"lentilka":["czech"],"lepenka":["czech"],"lepidlo":["czech"],"letadlo":["czech"],"letec":["czech"],"letmo":["czech"],"letokruh":["czech"],"levhart":["czech"],"levitace":["czech"],"levobok":["czech"],"libra":["czech"],"lichotka":["czech"],"lidojed":["czech"],"lidskost":["czech"],"lihovina":["czech"],"lijavec":["czech"],"lilek":["czech"],"limetka":["czech"],"linie":["czech"],"linka":["czech"],"linoleum":["czech"],"listopad":["czech"],"litina":["czech"],"litovat":["czech"],"lobista":["czech"],"lodivod":["czech"],"logika":["czech"],"logoped":["czech"],"lokalita":["czech"],"loket":["czech"],"lomcovat":["czech"],"lopata":["czech"],"lopuch":["czech"],"lord":["czech"],"losos":["czech"],"lotr":["czech"],"loudal":["czech"],"louh":["czech"],"louka":["czech"],"louskat":["czech"],"lovec":["czech"],"lstivost":["czech"],"lucerna":["czech"],"lucifer":["czech"],"lump":["czech"],"lusk":["czech"],"lustrace":["czech"],"lvice":["czech"],"lyra":["czech"],"lyrika":["czech"],"lysina":["czech"],"madam":["czech"],"madlo":["czech"],"magistr":["czech"],"mahagon":["czech"],"majetek":["czech"],"majitel":["czech"],"majorita":["czech"],"makak":["czech"],"makovice":["czech"],"makrela":["czech"],"malba":["czech"],"malina":["czech"],"malovat":["czech"],"malvice":["czech"],"maminka":["czech"],"mandle":["czech"],"manko":["czech"],"marnost":["czech"],"masakr":["czech"],"maskot":["czech"],"masopust":["czech"],"matice":["czech"],"matrika":["czech"],"maturita":["czech"],"mazanec":["czech"],"mazivo":["czech"],"mazlit":["czech"],"mazurka":["czech"],"mdloba":["czech"],"mechanik":["czech"],"meditace":["czech"],"medovina":["czech"],"melasa":["czech"],"meloun":["czech"],"mentolka":["czech"],"metla":["czech"],"metoda":["czech"],"metr":["czech"],"mezera":["czech"],"migrace":["czech"],"mihnout":["czech"],"mihule":["czech"],"mikina":["czech"],"mikrofon":["czech","turkish"],"milenec":["czech"],"milimetr":["czech"],"milost":["czech"],"mimika":["czech"],"mincovna":["czech"],"minibar":["czech"],"minomet":["czech"],"minulost":["czech"],"miska":["czech"],"mistr":["czech"],"mixovat":["czech"],"mladost":["czech"],"mlha":["czech"],"mlhovina":["czech"],"mlok":["czech"],"mlsat":["czech"],"mluvit":["czech"],"mnich":["czech"],"mnohem":["czech"],"mobil":["czech"],"mocnost":["czech"],"modelka":["czech"],"modlitba":["czech"],"mohyla":["czech"],"mokro":["czech"],"molekula":["czech"],"momentka":["czech"],"monarcha":["czech"],"monokl":["czech"],"monstrum":["czech"],"montovat":["czech"],"monzun":["czech"],"mosaz":["czech"],"moskyt":["czech"],"most":["czech"],"motivace":["czech"],"motorka":["czech"],"motyka":["czech"],"moucha":["czech"],"moudrost":["czech"],"mozaika":["czech"],"mozek":["czech"],"mozol":["czech"],"mramor":["czech"],"mravenec":["czech"],"mrkev":["czech"],"mrtvola":["czech"],"mrzet":["czech"],"mrzutost":["czech"],"mstitel":["czech"],"mudrc":["czech"],"muflon":["czech"],"mulat":["czech"],"mumie":["czech"],"munice":["czech"],"muset":["czech"],"mutace":["czech"],"muzeum":["czech"],"muzikant":["czech"],"myslivec":["czech"],"mzda":["czech"],"nabourat":["czech"],"nachytat":["czech"],"nadace":["czech"],"nadbytek":["czech"],"nadhoz":["czech"],"nadobro":["czech"],"nadpis":["czech"],"nahlas":["czech"],"nahnat":["czech"],"nahodile":["czech"],"nahradit":["czech"],"naivita":["czech"],"najednou":["czech"],"najisto":["czech"],"najmout":["czech"],"naklonit":["czech"],"nakonec":["czech"],"nakrmit":["czech"],"nalevo":["czech"],"namazat":["czech"],"namluvit":["czech"],"nanometr":["czech"],"naoko":["czech"],"naopak":["czech"],"naostro":["czech"],"napadat":["czech"],"napevno":["czech"],"naplnit":["czech"],"napnout":["czech"],"naposled":["czech"],"naprosto":["czech"],"narodit":["czech"],"naruby":["czech"],"narychlo":["czech"],"nasadit":["czech"],"nasekat":["czech"],"naslepo":["czech"],"nastat":["czech"],"natolik":["czech"],"navenek":["czech"],"navrch":["czech"],"navzdory":["czech"],"nazvat":["czech"],"nebe":["czech"],"nechat":["czech"],"necky":["czech"],"nedaleko":["czech"],"nedbat":["czech"],"neduh":["czech"],"negace":["czech"],"nehet":["czech"],"nehoda":["czech"],"nejen":["czech"],"nejprve":["czech"],"neklid":["czech"],"nelibost":["czech"],"nemilost":["czech"],"nemoc":["czech"],"neochota":["czech"],"neonka":["czech"],"nepokoj":["czech"],"nerost":["czech"],"nerv":["czech"],"nesmysl":["czech"],"nesoulad":["czech"],"netvor":["czech"],"neuron":["czech"],"nevina":["czech"],"nezvykle":["czech"],"nicota":["czech"],"nijak":["czech"],"nikam":["czech"],"nikdy":["czech"],"nikl":["czech"],"nikterak":["czech"],"nitro":["czech"],"nocleh":["czech"],"nohavice":["czech"],"nominace":["czech"],"nora":["czech"],"norek":["czech"],"nositel":["czech"],"nosnost":["czech"],"nouze":["czech"],"noviny":["czech"],"novota":["czech"],"nozdra":["czech"],"nuda":["czech"],"nudle":["czech"],"nuget":["czech"],"nutit":["czech"],"nutnost":["czech"],"nutrie":["czech"],"nymfa":["czech"],"obal":["czech"],"obarvit":["czech"],"obava":["czech"],"obdiv":["czech"],"obec":["czech"],"obehnat":["czech"],"obejmout":["czech"],"obezita":["czech"],"obhajoba":["czech"],"obilnice":["czech"],"objasnit":["czech"],"objekt":["czech"],"obklopit":["czech"],"oblast":["czech"],"oblek":["czech"],"obliba":["czech"],"obloha":["czech"],"obluda":["czech"],"obnos":["czech"],"obohatit":["czech"],"obojek":["czech"],"obout":["czech"],"obrazec":["czech"],"obrna":["czech"],"obruba":["czech"],"obrys":["czech"],"obsah":["czech"],"obsluha":["czech"],"obstarat":["czech"],"obuv":["czech"],"obvaz":["czech"],"obvinit":["czech"],"obvod":["czech"],"obvykle":["czech"],"obyvatel":["czech"],"obzor":["czech"],"ocas":["czech"],"ocel":["czech"],"ocenit":["czech"],"ochladit":["czech"],"ochota":["czech"],"ochrana":["czech"],"ocitnout":["czech"],"odboj":["czech"],"odbyt":["czech"],"odchod":["czech"],"odcizit":["czech"],"odebrat":["czech"],"odeslat":["czech"],"odevzdat":["czech"],"odezva":["czech"],"odhadce":["czech"],"odhodit":["czech"],"odjet":["czech"],"odjinud":["czech"],"odkaz":["czech"],"odkoupit":["czech"],"odliv":["czech"],"odluka":["czech"],"odmlka":["czech"],"odolnost":["czech"],"odpad":["czech"],"odpis":["czech"],"odplout":["czech"],"odpor":["czech"],"odpustit":["czech"],"odpykat":["czech"],"odrazka":["czech"],"odsoudit":["czech"],"odstup":["czech"],"odsun":["czech"],"odtok":["czech"],"odtud":["czech"],"odvaha":["czech"],"odveta":["czech"],"odvolat":["czech"],"odvracet":["czech"],"odznak":["czech"],"ofina":["czech"],"ofsajd":["czech"],"ohlas":["czech"],"ohnisko":["czech"],"ohrada":["czech"],"ohrozit":["czech"],"ohryzek":["czech"],"okap":["czech"],"okenice":["czech"],"oklika":["czech"],"okno":["czech"],"okouzlit":["czech"],"okovy":["czech"],"okrasa":["czech"],"okres":["czech"],"okrsek":["czech"],"okruh":["czech"],"okupant":["czech"],"okurka":["czech"],"okusit":["czech"],"olejnina":["czech"],"olizovat":["czech"],"omak":["czech"],"omeleta":["czech"],"omezit":["czech"],"omladina":["czech"],"omlouvat":["czech"],"omluva":["czech"],"omyl":["czech"],"onehdy":["czech"],"opakovat":["czech"],"opasek":["czech"],"operace":["czech"],"opice":["czech"],"opilost":["czech"],"opisovat":["czech"],"opora":["czech"],"opozice":["czech"],"opravdu":["czech"],"oproti":["czech"],"orbital":["czech"],"orchestr":["czech"],"orgie":["czech"],"orlice":["czech"],"orloj":["czech"],"ortel":["czech"],"osada":["czech"],"oschnout":["czech"],"osika":["czech"],"osivo":["czech"],"oslava":["czech"],"oslepit":["czech"],"oslnit":["czech"],"oslovit":["czech"],"osnova":["czech"],"osoba":["czech"],"osolit":["czech"],"ospalec":["czech"],"osten":["czech"],"ostraha":["czech"],"ostuda":["czech"],"ostych":["czech"],"osvojit":["czech"],"oteplit":["czech"],"otisk":["czech"],"otop":["czech"],"otrhat":["czech"],"otrlost":["czech"],"otrok":["czech"],"otruby":["czech"],"otvor":["czech"],"ovanout":["czech"],"ovar":["czech"],"oves":["czech"],"ovlivnit":["czech"],"ovoce":["czech"],"oxid":["czech"],"ozdoba":["czech"],"pachatel":["czech"],"pacient":["czech"],"padouch":["czech"],"pahorek":["czech"],"pakt":["czech"],"palanda":["czech"],"palec":["czech"],"palivo":["czech"],"paluba":["czech"],"pamflet":["czech"],"pamlsek":["czech"],"panenka":["czech"],"panika":["czech"],"panna":["czech"],"panovat":["czech"],"panstvo":["czech"],"pantofle":["czech"],"paprika":["czech"],"parketa":["czech"],"parodie":["czech"],"parta":["czech"],"paruka":["czech"],"paryba":["czech"],"paseka":["czech"],"pasivita":["czech"],"pastelka":["czech"],"patent":["czech"],"patrona":["czech"],"pavouk":["czech"],"pazneht":["czech"],"pazourek":["czech"],"pecka":["czech"],"pedagog":["czech"],"pejsek":["czech"],"peklo":["czech"],"peloton":["czech"],"penalta":["czech"],"pendrek":["czech"],"penze":["czech"],"periskop":["czech"],"pero":["czech"],"pestrost":["czech"],"petarda":["czech"],"petice":["czech"],"petrolej":["czech"],"pevnina":["czech"],"pexeso":["czech"],"pianista":["czech"],"piha":["czech"],"pijavice":["czech"],"pikle":["czech"],"piknik":["czech","turkish"],"pilina":["czech"],"pilnost":["czech"],"pilulka":["czech"],"pinzeta":["czech"],"pipeta":["czech"],"pisatel":["czech"],"pistole":["czech"],"pitevna":["czech"],"pivnice":["czech"],"pivovar":["czech"],"placenta":["czech"],"plakat":["czech"],"plamen":["czech"],"planeta":["czech"],"plastika":["czech"],"platit":["czech"],"plavidlo":["czech"],"plaz":["czech"],"plech":["czech"],"plemeno":["czech"],"plenta":["czech"],"ples":["czech"],"pletivo":["czech"],"plevel":["czech"],"plivat":["czech"],"plnit":["czech"],"plno":["czech"],"plocha":["czech"],"plodina":["czech"],"plomba":["czech"],"plout":["czech"],"pluk":["czech"],"plyn":["czech"],"pobavit":["czech"],"pobyt":["czech"],"pochod":["czech"],"pocit":["czech"],"poctivec":["czech"],"podat":["czech"],"podcenit":["czech"],"podepsat":["czech"],"podhled":["czech"],"podivit":["czech"],"podklad":["czech"],"podmanit":["czech"],"podnik":["czech"],"podoba":["czech"],"podpora":["czech"],"podraz":["czech"],"podstata":["czech"],"podvod":["czech"],"podzim":["czech"],"poezie":["czech"],"pohanka":["czech"],"pohnutka":["czech"],"pohovor":["czech"],"pohroma":["czech"],"pohyb":["czech"],"pointa":["czech"],"pojistka":["czech"],"pojmout":["czech"],"pokazit":["czech"],"pokles":["czech"],"pokoj":["czech"],"pokrok":["czech"],"pokuta":["czech"],"pokyn":["czech"],"poledne":["czech"],"polibek":["czech"],"polknout":["czech"],"poloha":["czech"],"polynom":["czech"],"pomalu":["czech"],"pominout":["czech"],"pomlka":["czech"],"pomoc":["czech"],"pomsta":["czech"],"pomyslet":["czech"],"ponechat":["czech"],"ponorka":["czech"],"ponurost":["czech"],"popadat":["czech"],"popel":["czech"],"popisek":["czech"],"poplach":["czech"],"poprosit":["czech"],"popsat":["czech"],"popud":["czech"],"poradce":["czech"],"porce":["czech"],"porod":["czech"],"porucha":["czech"],"poryv":["czech"],"posadit":["czech"],"posed":["czech"],"posila":["czech"],"poskok":["czech"],"poslanec":["czech"],"posoudit":["czech"],"pospolu":["czech"],"postava":["czech"],"posudek":["czech"],"posyp":["czech"],"potah":["czech"],"potkan":["czech"],"potlesk":["czech"],"potomek":["czech"],"potrava":["czech"],"potupa":["czech"],"potvora":["czech"],"poukaz":["czech"],"pouto":["czech"],"pouzdro":["czech"],"povaha":["czech"],"povidla":["czech"],"povlak":["czech"],"povoz":["czech"],"povrch":["czech"],"povstat":["czech"],"povyk":["czech"],"povzdech":["czech"],"pozdrav":["czech"],"pozemek":["czech"],"poznatek":["czech"],"pozor":["czech"],"pozvat":["czech"],"pracovat":["czech"],"prahory":["czech"],"praktika":["czech"],"prales":["czech"],"praotec":["czech"],"praporek":["czech"],"prase":["czech"],"pravda":["czech"],"princip":["czech"],"prkno":["czech"],"probudit":["czech"],"procento":["czech"],"prodej":["czech"],"profese":["czech"],"prohra":["czech"],"projekt":["czech"],"prolomit":["czech"],"promile":["czech"],"pronikat":["czech"],"propad":["czech"],"prorok":["czech"],"prosba":["czech"],"proton":["czech"],"proutek":["czech"],"provaz":["czech"],"prskavka":["czech"],"prsten":["czech"],"prudkost":["czech"],"prut":["czech"],"prvek":["czech"],"prvohory":["czech"],"psanec":["czech"],"psovod":["czech"],"pstruh":["czech"],"ptactvo":["czech"],"puberta":["czech"],"puch":["czech"],"pudl":["czech"],"pukavec":["czech"],"puklina":["czech"],"pukrle":["czech"],"pult":["czech"],"pumpa":["czech"],"punc":["czech"],"pupen":["czech"],"pusa":["czech"],"pusinka":["czech"],"pustina":["czech"],"putovat":["czech"],"putyka":["czech"],"pyramida":["czech"],"pysk":["czech"],"pytel":["czech"],"racek":["czech"],"rachot":["czech"],"radiace":["czech"],"radnice":["czech"],"radon":["czech"],"raft":["czech"],"ragby":["czech"],"raketa":["czech"],"rakovina":["czech"],"rameno":["czech"],"rampouch":["czech"],"rande":["czech"],"rarach":["czech"],"rarita":["czech"],"rasovna":["czech"],"rastr":["czech"],"ratolest":["czech"],"razance":["czech"],"razidlo":["czech"],"reagovat":["czech"],"reakce":["czech"],"recept":["czech"],"redaktor":["czech"],"referent":["czech"],"reflex":["czech"],"rejnok":["czech"],"reklama":["czech"],"rekord":["czech"],"rekrut":["czech"],"rektor":["czech"],"reputace":["czech"],"revize":["czech","turkish"],"revma":["czech"],"revolver":["czech"],"rezerva":["czech"],"riskovat":["czech"],"riziko":["czech"],"robotika":["czech"],"rodokmen":["czech"],"rohovka":["czech"],"rokle":["czech"],"rokoko":["czech"],"romaneto":["czech"],"ropovod":["czech"],"ropucha":["czech"],"rorejs":["czech"],"rosol":["czech"],"rostlina":["czech"],"rotmistr":["czech"],"rotoped":["czech"],"rotunda":["czech"],"roubenka":["czech"],"roucho":["czech"],"roup":["czech"],"roura":["czech"],"rovina":["czech"],"rovnice":["czech"],"rozbor":["czech"],"rozchod":["czech"],"rozdat":["czech"],"rozeznat":["czech"],"rozhodce":["czech"],"rozinka":["czech"],"rozjezd":["czech"],"rozkaz":["czech"],"rozloha":["czech"],"rozmar":["czech"],"rozpad":["czech"],"rozruch":["czech"],"rozsah":["czech"],"roztok":["czech"],"rozum":["czech"],"rozvod":["czech"],"rubrika":["czech"],"ruchadlo":["czech"],"rukavice":["czech"],"rukopis":["czech"],"ryba":["czech"],"rybolov":["czech"],"rychlost":["czech"],"rydlo":["czech"],"rypadlo":["czech"],"rytina":["czech"],"ryzost":["czech"],"sadista":["czech"],"sahat":["czech"],"sako":["czech"],"samec":["czech"],"samizdat":["czech"],"samota":["czech"],"sanitka":["czech"],"sardinka":["czech"],"sasanka":["czech"],"satelit":["czech"],"sazba":["czech"],"sazenice":["czech"],"sbor":["czech"],"schovat":["czech"],"sebranka":["czech"],"secese":["czech"],"sedadlo":["czech"],"sediment":["czech"],"sedlo":["czech"],"sehnat":["czech"],"sejmout":["czech"],"sekera":["czech"],"sekta":["czech"],"sekunda":["czech"],"sekvoje":["czech"],"semeno":["czech"],"seno":["czech"],"servis":["czech","turkish"],"sesadit":["czech"],"seshora":["czech"],"seskok":["czech"],"seslat":["czech"],"sestra":["czech"],"sesuv":["czech"],"sesypat":["czech"],"setba":["czech"],"setina":["czech"],"setkat":["czech"],"setnout":["czech"],"setrvat":["czech"],"sever":["czech"],"seznam":["czech"],"shoda":["czech"],"shrnout":["czech"],"sifon":["czech"],"silnice":["czech"],"sirka":["czech"],"sirotek":["czech"],"sirup":["czech"],"situace":["czech"],"skafandr":["czech"],"skalisko":["czech"],"skanzen":["czech"],"skaut":["czech"],"skeptik":["czech"],"skica":["czech"],"skladba":["czech"],"sklenice":["czech"],"sklo":["czech"],"skluz":["czech"],"skoba":["czech"],"skokan":["czech"],"skoro":["czech"],"skripta":["czech"],"skrz":["czech"],"skupina":["czech"],"skvost":["czech"],"skvrna":["czech"],"slabika":["czech"],"sladidlo":["czech"],"slanina":["czech"],"slast":["czech"],"slavnost":["czech"],"sledovat":["czech"],"slepec":["czech"],"sleva":["czech"],"slezina":["czech"],"slib":["czech"],"slina":["czech"],"sliznice":["czech"],"slon":["czech"],"sloupek":["czech"],"slovo":["czech"],"sluch":["czech"],"sluha":["czech"],"slunce":["czech"],"slupka":["czech"],"slza":["czech"],"smaragd":["czech"],"smetana":["czech"],"smilstvo":["czech"],"smlouva":["czech"],"smog":["czech"],"smrad":["czech"],"smrk":["czech"],"smrtka":["czech"],"smutek":["czech"],"smysl":["czech"],"snad":["czech"],"snaha":["czech"],"snob":["czech"],"sobota":["czech"],"socha":["czech"],"sodovka":["czech"],"sokol":["czech"],"sopka":["czech"],"sotva":["czech"],"souboj":["czech"],"soucit":["czech"],"soudce":["czech"],"souhlas":["czech"],"soulad":["czech"],"soumrak":["czech"],"souprava":["czech"],"soused":["czech"],"soutok":["czech"],"souviset":["czech"],"spalovna":["czech"],"spasitel":["czech"],"spis":["czech"],"splav":["czech"],"spodek":["czech"],"spojenec":["czech"],"spolu":["czech"],"sponzor":["czech"],"spornost":["czech"],"spousta":["czech"],"sprcha":["czech"],"spustit":["czech"],"sranda":["czech"],"sraz":["czech"],"srdce":["czech"],"srna":["czech"],"srnec":["czech"],"srovnat":["czech"],"srpen":["czech"],"srst":["czech"],"srub":["czech"],"stanice":["czech"],"starosta":["czech"],"statika":["czech"],"stavba":["czech"],"stehno":["czech"],"stezka":["czech"],"stodola":["czech"],"stolek":["czech"],"stopa":["czech"],"storno":["czech"],"stoupat":["czech"],"strach":["czech"],"stres":["czech"],"strhnout":["czech"],"strom":["czech"],"struna":["czech"],"studna":["czech"],"stupnice":["czech"],"stvol":["czech"],"styk":["czech"],"subjekt":["czech"],"subtropy":["czech"],"suchar":["czech"],"sudost":["czech"],"sukno":["czech"],"sundat":["czech"],"sunout":["czech"],"surikata":["czech"],"surovina":["czech"],"svah":["czech"],"svalstvo":["czech"],"svetr":["czech"],"svatba":["czech"],"svazek":["czech"],"svisle":["czech"],"svitek":["czech"],"svoboda":["czech"],"svodidlo":["czech"],"svorka":["czech"],"svrab":["czech"],"sykavka":["czech"],"sykot":["czech"],"synek":["czech"],"synovec":["czech"],"sypat":["czech"],"sypkost":["czech"],"syrovost":["czech"],"sysel":["czech"],"sytost":["czech"],"tabletka":["czech"],"tabule":["czech"],"tahoun":["czech"],"tajemno":["czech"],"tajfun":["czech"],"tajga":["czech"],"tajit":["czech"],"tajnost":["czech"],"taktika":["czech"],"tamhle":["czech"],"tampon":["czech","turkish"],"tancovat":["czech"],"tanec":["czech"],"tanker":["czech"],"tapeta":["czech"],"tavenina":["czech"],"tazatel":["czech"],"technika":["czech"],"tehdy":["czech"],"tekutina":["czech"],"telefon":["czech"],"temnota":["czech"],"tendence":["czech"],"tenista":["czech"],"tenor":["czech"],"teplota":["czech"],"tepna":["czech"],"teprve":["czech"],"terapie":["czech"],"termoska":["czech"],"textil":["czech"],"ticho":["czech"],"tiskopis":["czech"],"titulek":["czech"],"tkadlec":["czech"],"tkanina":["czech"],"tlapka":["czech"],"tleskat":["czech"],"tlukot":["czech"],"tlupa":["czech"],"tmel":["czech"],"toaleta":["czech"],"topinka":["czech"],"topol":["czech"],"torzo":["czech"],"touha":["czech"],"toulec":["czech"],"tradice":["czech"],"traktor":["czech"],"tramp":["czech"],"trasa":["czech"],"traverza":["czech"],"trefit":["czech"],"trest":["czech"],"trezor":["czech"],"trhavina":["czech"],"trhlina":["czech"],"trochu":["czech"],"trojice":["czech"],"troska":["czech"],"trouba":["czech"],"trpce":["czech"],"trpitel":["czech"],"trpkost":["czech"],"trubec":["czech"],"truchlit":["czech"],"truhlice":["czech"],"trus":["czech"],"trvat":["czech"],"tudy":["czech"],"tuhnout":["czech"],"tuhost":["czech"],"tundra":["czech"],"turista":["czech"],"turnaj":["czech"],"tuzemsko":["czech"],"tvaroh":["czech"],"tvorba":["czech"],"tvrdost":["czech"],"tvrz":["czech"],"tygr":["czech"],"tykev":["czech"],"ubohost":["czech"],"uboze":["czech"],"ubrat":["czech"],"ubrousek":["czech"],"ubrus":["czech"],"ubytovna":["czech"],"ucho":["czech"],"uctivost":["czech"],"udivit":["czech"],"uhradit":["czech"],"ujednat":["czech"],"ujistit":["czech"],"ujmout":["czech"],"ukazatel":["czech"],"uklidnit":["czech"],"uklonit":["czech"],"ukotvit":["czech"],"ukrojit":["czech"],"ulice":["czech"],"ulita":["czech"],"ulovit":["czech"],"umyvadlo":["czech"],"unavit":["czech"],"uniforma":["czech"],"uniknout":["czech"],"upadnout":["czech"],"uplatnit":["czech"],"uplynout":["czech"],"upoutat":["czech"],"upravit":["czech"],"uran":["czech"],"urazit":["czech"],"usednout":["czech"],"usilovat":["czech"],"usmrtit":["czech"],"usnadnit":["czech"],"usnout":["czech"],"usoudit":["czech"],"ustlat":["czech"],"ustrnout":["czech"],"utahovat":["czech"],"utkat":["czech"],"utlumit":["czech"],"utonout":["czech"],"utopenec":["czech"],"utrousit":["czech"],"uvalit":["czech"],"uvolnit":["czech"],"uvozovka":["czech"],"uzdravit":["czech"],"uzel":["czech"],"uzenina":["czech"],"uzlina":["czech"],"uznat":["czech"],"vagon":["czech","turkish"],"valcha":["czech"],"valoun":["czech"],"vana":["czech"],"vandal":["czech"],"vanilka":["czech"],"varan":["czech"],"varhany":["czech"],"varovat":["czech"],"vcelku":["czech"],"vchod":["czech"],"vdova":["czech"],"vedro":["czech"],"vegetace":["czech"],"vejce":["czech"],"velbloud":["czech"],"veletrh":["czech"],"velitel":["czech"],"velmoc":["czech"],"velryba":["czech"],"venkov":["czech"],"veranda":["czech"],"verze":["czech"],"veselka":["czech"],"veskrze":["czech"],"vesnice":["czech"],"vespodu":["czech"],"vesta":["czech"],"veterina":["czech"],"veverka":["czech"],"vibrace":["czech"],"vichr":["czech"],"videohra":["czech"],"vidina":["czech"],"vidle":["czech"],"vila":["czech"],"vinice":["czech"],"viset":["czech"],"vitalita":["czech"],"vize":["czech"],"vizitka":["czech"],"vjezd":["czech"],"vklad":["czech"],"vkus":["czech"],"vlajka":["czech"],"vlak":["czech"],"vlasec":["czech"],"vlevo":["czech"],"vlhkost":["czech"],"vliv":["czech"],"vlnovka":["czech"],"vloupat":["czech"],"vnucovat":["czech"],"vnuk":["czech"],"voda":["czech"],"vodivost":["czech"],"vodoznak":["czech"],"vodstvo":["czech"],"vojensky":["czech"],"vojna":["czech"],"vojsko":["czech"],"volant":["czech"],"volba":["czech"],"volit":["czech"],"volno":["czech"],"voskovka":["czech"],"vozidlo":["czech"],"vozovna":["czech"],"vpravo":["czech"],"vrabec":["czech"],"vracet":["czech"],"vrah":["czech"],"vrata":["czech"],"vrba":["czech"],"vrcholek":["czech"],"vrhat":["czech"],"vrstva":["czech"],"vrtule":["czech"],"vsadit":["czech"],"vstoupit":["czech"],"vstup":["czech"],"vtip":["czech"],"vybavit":["czech"],"vybrat":["czech"],"vychovat":["czech"],"vydat":["czech"],"vydra":["czech"],"vyfotit":["czech"],"vyhledat":["czech"],"vyhnout":["czech"],"vyhodit":["czech"],"vyhradit":["czech"],"vyhubit":["czech"],"vyjasnit":["czech"],"vyjet":["czech"],"vyjmout":["czech"],"vyklopit":["czech"],"vykonat":["czech"],"vylekat":["czech"],"vymazat":["czech"],"vymezit":["czech"],"vymizet":["czech"],"vymyslet":["czech"],"vynechat":["czech"],"vynikat":["czech"],"vynutit":["czech"],"vypadat":["czech"],"vyplatit":["czech"],"vypravit":["czech"],"vypustit":["czech"],"vyrazit":["czech"],"vyrovnat":["czech"],"vyrvat":["czech"],"vyslovit":["czech"],"vysoko":["czech"],"vystavit":["czech"],"vysunout":["czech"],"vysypat":["czech"],"vytasit":["czech"],"vytesat":["czech"],"vytratit":["czech"],"vyvinout":["czech"],"vyvolat":["czech"],"vyvrhel":["czech"],"vyzdobit":["czech"],"vyznat":["czech"],"vzadu":["czech"],"vzbudit":["czech"],"vzchopit":["czech"],"vzdor":["czech"],"vzduch":["czech"],"vzdychat":["czech"],"vzestup":["czech"],"vzhledem":["czech"],"vzkaz":["czech"],"vzlykat":["czech"],"vznik":["czech"],"vzorek":["czech"],"vzpoura":["czech"],"vztah":["czech"],"vztek":["czech"],"xylofon":["czech"],"zabrat":["czech"],"zabydlet":["czech"],"zachovat":["czech"],"zadarmo":["czech"],"zadusit":["czech"],"zafoukat":["czech"],"zahltit":["czech"],"zahodit":["czech"],"zahrada":["czech"],"zahynout":["czech"],"zajatec":["czech"],"zajet":["czech"],"zajistit":["czech"],"zaklepat":["czech"],"zakoupit":["czech"],"zalepit":["czech"],"zamezit":["czech"],"zamotat":["czech"],"zamyslet":["czech"],"zanechat":["czech"],"zanikat":["czech"],"zaplatit":["czech"],"zapojit":["czech"],"zapsat":["czech"],"zarazit":["czech"],"zastavit":["czech"],"zasunout":["czech"],"zatajit":["czech"],"zatemnit":["czech"],"zatknout":["czech"],"zaujmout":["czech"],"zavalit":["czech"],"zavelet":["czech"],"zavinit":["czech"],"zavolat":["czech"],"zavrtat":["czech"],"zazvonit":["czech"],"zbavit":["czech"],"zbrusu":["czech"],"zbudovat":["czech"],"zbytek":["czech"],"zdaleka":["czech"],"zdarma":["czech"],"zdatnost":["czech"],"zdivo":["czech"],"zdobit":["czech"],"zdroj":["czech"],"zdvih":["czech"],"zdymadlo":["czech"],"zelenina":["czech"],"zeman":["czech"],"zemina":["czech"],"zeptat":["czech"],"zezadu":["czech"],"zezdola":["czech"],"zhatit":["czech"],"zhltnout":["czech"],"zhluboka":["czech"],"zhotovit":["czech"],"zhruba":["czech"],"zima":["czech"],"zimnice":["czech"],"zjemnit":["czech"],"zklamat":["czech"],"zkoumat":["czech"],"zkratka":["czech"],"zkumavka":["czech"],"zlato":["czech"],"zlehka":["czech"],"zloba":["czech"],"zlom":["czech"],"zlost":["czech"],"zlozvyk":["czech"],"zmapovat":["czech"],"zmar":["czech"],"zmatek":["czech"],"zmije":["czech"],"zmizet":["czech"],"zmocnit":["czech"],"zmodrat":["czech"],"zmrzlina":["czech"],"zmutovat":["czech"],"znak":["czech"],"znalost":["czech"],"znamenat":["czech"],"znovu":["czech"],"zobrazit":["czech"],"zotavit":["czech"],"zoubek":["czech"],"zoufale":["czech"],"zplodit":["czech"],"zpomalit":["czech"],"zprava":["czech"],"zprostit":["czech"],"zprudka":["czech"],"zprvu":["czech"],"zrada":["czech"],"zranit":["czech"],"zrcadlo":["czech"],"zrnitost":["czech"],"zrno":["czech"],"zrovna":["czech"],"zrychlit":["czech"],"zrzavost":["czech"],"zticha":["czech"],"ztratit":["czech"],"zubovina":["czech"],"zubr":["czech"],"zvednout":["czech"],"zvenku":["czech"],"zvesela":["czech"],"zvon":["czech"],"zvrat":["czech"],"zvukovod":["czech"],"zvyk":["czech"],"abandon":["english","french"],"ability":["english"],"able":["english"],"about":["english"],"above":["english"],"absent":["english"],"absorb":["english"],"abstract":["english"],"absurd":["english"],"abuse":["english"],"access":["english"],"accident":["english"],"account":["english"],"accuse":["english"],"achieve":["english"],"acid":["english"],"acoustic":["english"],"acquire":["english"],"across":["english"],"act":["english"],"action":["english"],"actor":["english"],"actress":["english"],"actual":["english"],"adapt":["english"],"add":["english"],"addict":["english"],"address":["english"],"adjust":["english"],"admit":["english"],"adult":["english"],"advance":["english"],"advice":["english"],"aerobic":["english"],"affair":["english"],"afford":["english"],"afraid":["english"],"again":["english"],"age":["english"],"agent":["english"],"agree":["english"],"ahead":["english"],"aim":["english"],"air":["english"],"airport":["english"],"aisle":["english"],"alarm":["english"],"album":["english"],"alcohol":["english"],"alert":["english"],"alien":["english"],"all":["english"],"alley":["english"],"allow":["english"],"almost":["english"],"alone":["english"],"alpha":["english"],"already":["english"],"also":["english"],"alter":["english"],"always":["english"],"amateur":["english","french"],"amazing":["english"],"among":["english"],"amount":["english"],"amused":["english"],"analyst":["english"],"anchor":["english"],"ancient":["english"],"anger":["english"],"angle":["english","french"],"angry":["english"],"animal":["english","french"],"ankle":["english"],"announce":["english"],"annual":["english"],"another":["english"],"answer":["english"],"antenna":["english"],"antique":["english"],"anxiety":["english"],"any":["english"],"apart":["english"],"apology":["english"],"appear":["english"],"apple":["english"],"approve":["english"],"april":["english"],"arch":["english"],"arctic":["english"],"area":["english"],"arena":["english","turkish"],"argue":["english"],"arm":["english"],"armed":["english"],"armor":["english"],"army":["english"],"around":["english"],"arrange":["english"],"arrest":["english"],"arrive":["english"],"arrow":["english"],"art":["english"],"artefact":["english"],"artist":["english","turkish"],"artwork":["english"],"ask":["english"],"aspect":["english","french"],"assault":["english"],"asset":["english"],"assist":["english"],"assume":["english"],"asthma":["english"],"athlete":["english"],"atom":["english","turkish"],"attack":["english"],"attend":["english"],"attitude":["english"],"attract":["english"],"auction":["english"],"audit":["english"],"august":["english"],"aunt":["english"],"author":["english"],"auto":["english"],"autumn":["english"],"average":["english"],"avocado":["english"],"avoid":["english"],"awake":["english"],"aware":["english"],"away":["english"],"awesome":["english"],"awful":["english"],"awkward":["english"],"axis":["english"],"baby":["english"],"bachelor":["english"],"bacon":["english"],"badge":["english","french"],"bag":["english"],"balance":["english"],"balcony":["english"],"ball":["english"],"bamboo":["english"],"banana":["english"],"banner":["english"],"bar":["english"],"barely":["english"],"bargain":["english"],"barrel":["english"],"base":["english"],"basic":["english"],"basket":["english"],"battle":["english"],"beach":["english"],"bean":["english"],"beauty":["english"],"because":["english"],"become":["english"],"beef":["english"],"before":["english"],"begin":["english"],"behave":["english"],"behind":["english"],"believe":["english"],"below":["english"],"belt":["english"],"bench":["english"],"benefit":["english"],"best":["english"],"betray":["english"],"better":["english"],"between":["english"],"beyond":["english"],"bicycle":["english","french"],"bid":["english"],"bike":["english"],"bind":["english"],"biology":["english"],"bird":["english"],"birth":["english"],"bitter":["english"],"black":["english"],"blade":["english"],"blame":["english"],"blanket":["english"],"blast":["english"],"bleak":["english"],"bless":["english"],"blind":["english"],"blood":["english"],"blossom":["english"],"blouse":["english"],"blue":["english"],"blur":["english"],"blush":["english"],"board":["english"],"boat":["english"],"body":["english"],"boil":["english"],"bomb":["english"],"bone":["english"],"bonus":["english","french"],"book":["english"],"boost":["english"],"border":["english"],"boring":["english"],"borrow":["english"],"boss":["english"],"bottom":["english"],"bounce":["english"],"box":["english"],"boy":["english"],"bracket":["english"],"brain":["english"],"brand":["english"],"brass":["english"],"brave":["english","french"],"bread":["english"],"breeze":["english"],"brick":["english"],"bridge":["english"],"brief":["english"],"bright":["english"],"bring":["english"],"brisk":["english"],"broccoli":["english"],"broken":["english"],"bronze":["english"],"broom":["english"],"brother":["english"],"brown":["english"],"brush":["english"],"bubble":["english"],"buddy":["english"],"budget":["english"],"buffalo":["english"],"build":["english"],"bulb":["english"],"bulk":["english"],"bullet":["english"],"bundle":["english"],"bunker":["english"],"burden":["english"],"burger":["english"],"burst":["english"],"bus":["english"],"business":["english"],"busy":["english"],"butter":["english"],"buyer":["english"],"buzz":["english"],"cabbage":["english"],"cabin":["english"],"cable":["english"],"cactus":["english"],"cage":["english"],"cake":["english"],"call":["english"],"calm":["english"],"camera":["english"],"camp":["english"],"can":["english"],"canal":["english","french"],"cancel":["english"],"candy":["english"],"cannon":["english"],"canoe":["english"],"canvas":["english"],"canyon":["english"],"capable":["english","french"],"capital":["english"],"captain":["english"],"car":["english"],"carbon":["english"],"card":["english"],"cargo":["english"],"carpet":["english"],"carry":["english"],"cart":["english"],"case":["english"],"cash":["english"],"casino":["english"],"castle":["english"],"casual":["english"],"cat":["english"],"catalog":["english"],"catch":["english"],"category":["english"],"cattle":["english"],"caught":["english"],"cause":["english"],"caution":["english","french"],"cave":["english"],"ceiling":["english"],"celery":["english"],"cement":["english"],"census":["english"],"century":["english"],"cereal":["english"],"certain":["english"],"chair":["english"],"chalk":["english"],"champion":["english"],"change":["english"],"chaos":["english"],"chapter":["english"],"charge":["english"],"chase":["english"],"chat":["english"],"cheap":["english"],"check":["english"],"cheese":["english"],"chef":["english"],"cherry":["english"],"chest":["english"],"chicken":["english"],"chief":["english"],"child":["english"],"chimney":["english"],"choice":["english"],"choose":["english"],"chronic":["english"],"chuckle":["english"],"chunk":["english"],"churn":["english"],"cigar":["english"],"cinnamon":["english"],"circle":["english"],"citizen":["english"],"city":["english"],"civil":["english","french"],"claim":["english"],"clap":["english"],"clarify":["english"],"claw":["english"],"clay":["english"],"clean":["english"],"clerk":["english"],"clever":["english"],"click":["english"],"client":["english","french"],"cliff":["english"],"climb":["english"],"clinic":["english"],"clip":["english"],"clock":["english"],"clog":["english"],"close":["english"],"cloth":["english"],"cloud":["english"],"clown":["english"],"club":["english"],"clump":["english"],"cluster":["english"],"clutch":["english"],"coach":["english"],"coast":["english"],"coconut":["english"],"code":["english"],"coffee":["english"],"coil":["english"],"coin":["english"],"collect":["english"],"color":["english"],"column":["english"],"combine":["english"],"come":["english"],"comfort":["english"],"comic":["english"],"common":["english"],"company":["english"],"concert":["english","french"],"conduct":["english"],"confirm":["english"],"congress":["english"],"connect":["english"],"consider":["english"],"control":["english"],"convince":["english"],"cook":["english"],"cool":["english"],"copper":["english"],"copy":["english"],"coral":["english"],"core":["english"],"corn":["english"],"correct":["english","french"],"cost":["english"],"cotton":["english"],"couch":["english"],"country":["english"],"couple":["english"],"course":["english"],"cousin":["english"],"cover":["english"],"coyote":["english","french"],"crack":["english"],"cradle":["english"],"craft":["english"],"cram":["english"],"crane":["english"],"crash":["english"],"crater":["english"],"crawl":["english"],"crazy":["english"],"cream":["english"],"credit":["english"],"creek":["english"],"crew":["english"],"cricket":["english"],"crime":["english"],"crisp":["english"],"critic":["english"],"crop":["english"],"cross":["english"],"crouch":["english"],"crowd":["english"],"crucial":["english","french"],"cruel":["english","french"],"cruise":["english"],"crumble":["english"],"crunch":["english"],"crush":["english"],"cry":["english"],"crystal":["english"],"cube":["english"],"culture":["english"],"cup":["english"],"cupboard":["english"],"curious":["english"],"current":["english"],"curtain":["english"],"curve":["english"],"cushion":["english"],"custom":["english"],"cute":["english"],"cycle":["english","french"],"dad":["english"],"damage":["english"],"damp":["english"],"dance":["english"],"danger":["english","french"],"daring":["english"],"dash":["english"],"daughter":["english"],"dawn":["english"],"day":["english"],"deal":["english"],"debate":["english"],"debris":["english"],"decade":["english"],"december":["english"],"decide":["english"],"decline":["english"],"decorate":["english"],"decrease":["english"],"deer":["english"],"defense":["english"],"define":["english"],"defy":["english"],"degree":["english"],"delay":["english"],"deliver":["english"],"demand":["english"],"demise":["english"],"denial":["english"],"dentist":["english"],"deny":["english"],"depart":["english"],"depend":["english"],"deposit":["english"],"depth":["english"],"deputy":["english"],"derive":["english"],"describe":["english"],"desert":["english"],"design":["english"],"desk":["english"],"despair":["english"],"destroy":["english"],"detail":["english"],"detect":["english"],"develop":["english"],"device":["english"],"devote":["english"],"diagram":["english"],"dial":["english"],"diamond":["english"],"diary":["english"],"dice":["english"],"diesel":["english"],"diet":["english"],"differ":["english"],"digital":["english","french"],"dignity":["english"],"dilemma":["english"],"dinner":["english"],"dinosaur":["english"],"direct":["english"],"dirt":["english"],"disagree":["english"],"discover":["english"],"disease":["english"],"dish":["english"],"dismiss":["english"],"disorder":["english"],"display":["english"],"distance":["english","french"],"divert":["english"],"divide":["english"],"divorce":["english"],"dizzy":["english"],"doctor":["english"],"document":["english"],"dog":["english"],"doll":["english"],"dolphin":["english"],"domain":["english"],"donate":["english"],"donkey":["english"],"donor":["english"],"door":["english"],"dose":["english"],"double":["english","french"],"dove":["english"],"draft":["english"],"dragon":["english","french"],"drama":["english"],"drastic":["english"],"draw":["english"],"dream":["english"],"dress":["english"],"drift":["english"],"drill":["english"],"drink":["english"],"drip":["english"],"drive":["english"],"drop":["english"],"drum":["english"],"dry":["english"],"duck":["english"],"dumb":["english"],"dune":["english"],"during":["english"],"dust":["english"],"dutch":["english"],"duty":["english"],"dwarf":["english"],"dynamic":["english"],"eager":["english"],"eagle":["english"],"early":["english"],"earn":["english"],"earth":["english"],"easily":["english"],"east":["english"],"easy":["english"],"echo":["english"],"ecology":["english"],"economy":["english"],"edge":["english"],"edit":["english"],"educate":["english"],"effort":["english","french"],"egg":["english"],"eight":["english"],"either":["english"],"elbow":["english"],"elder":["english"],"electric":["english"],"elegant":["english"],"element":["english"],"elephant":["english"],"elevator":["english"],"elite":["english"],"else":["english"],"embark":["english"],"embody":["english"],"embrace":["english"],"emerge":["english"],"emotion":["english"],"employ":["english"],"empower":["english"],"empty":["english"],"enable":["english"],"enact":["english"],"end":["english"],"endless":["english"],"endorse":["english"],"enemy":["english"],"energy":["english"],"enforce":["english"],"engage":["english"],"engine":["english"],"enhance":["english"],"enjoy":["english"],"enlist":["english"],"enough":["english"],"enrich":["english"],"enroll":["english"],"ensure":["english"],"enter":["english"],"entire":["english"],"entry":["english"],"envelope":["english"],"episode":["english"],"equal":["english"],"equip":["english"],"era":["english"],"erase":["english"],"erode":["english"],"erosion":["english"],"error":["english"],"erupt":["english"],"escape":["english"],"essay":["english"],"essence":["english","french"],"estate":["english"],"eternal":["english"],"ethics":["english"],"evidence":["english"],"evil":["english"],"evoke":["english"],"evolve":["english"],"exact":["english","french"],"example":["english"],"excess":["english"],"exchange":["english"],"excite":["english"],"exclude":["english"],"excuse":["english","french"],"execute":["english"],"exercise":["english"],"exhaust":["english"],"exhibit":["english"],"exile":["english"],"exist":["english"],"exit":["english"],"exotic":["english"],"expand":["english"],"expect":["english"],"expire":["english"],"explain":["english"],"expose":["english"],"express":["english"],"extend":["english"],"extra":["english"],"eye":["english"],"eyebrow":["english"],"fabric":["english"],"face":["english"],"faculty":["english"],"fade":["english"],"faint":["english"],"faith":["english"],"fall":["english"],"false":["english"],"fame":["english"],"family":["english"],"famous":["english"],"fan":["english"],"fancy":["english"],"fantasy":["english"],"farm":["english"],"fashion":["english"],"fat":["english"],"fatal":["english","french"],"father":["english"],"fatigue":["english","french"],"fault":["english"],"favorite":["english"],"feature":["english"],"february":["english"],"federal":["english","turkish"],"fee":["english"],"feed":["english"],"feel":["english"],"female":["english"],"fence":["english"],"festival":["english","french","turkish"],"fetch":["english"],"fever":["english"],"few":["english"],"fiber":["english"],"fiction":["english"],"field":["english"],"figure":["english","french"],"file":["english"],"film":["english"],"filter":["english"],"final":["english"],"find":["english"],"fine":["english"],"finger":["english"],"finish":["english"],"fire":["english"],"firm":["english"],"first":["english"],"fiscal":["english"],"fish":["english"],"fit":["english"],"fitness":["english"],"fix":["english"],"flag":["english"],"flame":["english"],"flash":["english"],"flat":["english"],"flavor":["english"],"flee":["english"],"flight":["english"],"flip":["english"],"float":["english"],"flock":["english"],"floor":["english"],"flower":["english"],"fluid":["english"],"flush":["english"],"fly":["english"],"foam":["english"],"focus":["english"],"fog":["english"],"foil":["english"],"fold":["english"],"follow":["english"],"food":["english"],"foot":["english"],"force":["english"],"forest":["english"],"forget":["english"],"fork":["english"],"fortune":["english","french"],"forum":["english"],"forward":["english"],"fossil":["english"],"foster":["english"],"found":["english"],"fox":["english"],"fragile":["english","french"],"frame":["english"],"frequent":["english"],"fresh":["english"],"friend":["english"],"fringe":["english"],"frog":["english"],"front":["english"],"frost":["english"],"frown":["english"],"frozen":["english"],"fruit":["english","french"],"fuel":["english"],"fun":["english"],"funny":["english"],"furnace":["english"],"fury":["english"],"future":["english"],"gadget":["english"],"gain":["english"],"galaxy":["english"],"gallery":["english"],"game":["english"],"gap":["english"],"garage":["english"],"garbage":["english"],"garden":["english"],"garlic":["english"],"garment":["english"],"gas":["english"],"gasp":["english"],"gate":["english"],"gather":["english"],"gauge":["english"],"gaze":["english"],"general":["english"],"genius":["english"],"genre":["english"],"gentle":["english"],"genuine":["english"],"gesture":["english"],"ghost":["english"],"giant":["english"],"gift":["english"],"giggle":["english"],"ginger":["english"],"giraffe":["english"],"girl":["english"],"give":["english"],"glad":["english"],"glance":["english"],"glare":["english"],"glass":["english"],"glide":["english"],"glimpse":["english"],"globe":["english","french"],"gloom":["english"],"glory":["english"],"glove":["english"],"glow":["english"],"glue":["english"],"goat":["english"],"goddess":["english"],"gold":["english"],"good":["english"],"goose":["english"],"gorilla":["english"],"gospel":["english"],"gossip":["english"],"govern":["english"],"gown":["english"],"grab":["english"],"grace":["english"],"grain":["english"],"grant":["english"],"grape":["english"],"grass":["english"],"gravity":["english"],"great":["english"],"green":["english"],"grid":["english"],"grief":["english"],"grit":["english"],"grocery":["english"],"group":["english"],"grow":["english"],"grunt":["english"],"guard":["english"],"guess":["english"],"guide":["english","french"],"guilt":["english"],"guitar":["english"],"gun":["english"],"gym":["english"],"habit":["english"],"hair":["english"],"half":["english"],"hammer":["english"],"hamster":["english"],"hand":["english"],"happy":["english"],"harbor":["english"],"hard":["english"],"harsh":["english"],"harvest":["english"],"hat":["english"],"have":["english"],"hawk":["english"],"hazard":["english"],"head":["english"],"health":["english"],"heart":["english"],"heavy":["english"],"hedgehog":["english"],"height":["english"],"hello":["english"],"helmet":["english"],"help":["english"],"hen":["english"],"hero":["english"],"hidden":["english"],"high":["english"],"hill":["english"],"hint":["english"],"hip":["english"],"hire":["english"],"history":["english"],"hobby":["english"],"hockey":["english"],"hold":["english"],"hole":["english"],"holiday":["english"],"hollow":["english"],"home":["english"],"honey":["english"],"hood":["english"],"hope":["english"],"horn":["english"],"horror":["english"],"horse":["english"],"hospital":["english"],"host":["english"],"hotel":["english"],"hour":["english"],"hover":["english"],"hub":["english"],"huge":["english"],"human":["english"],"humble":["english","french"],"humor":["english"],"hundred":["english"],"hungry":["english"],"hunt":["english"],"hurdle":["english"],"hurry":["english"],"hurt":["english"],"husband":["english"],"hybrid":["english"],"ice":["english"],"icon":["english"],"idea":["english"],"identify":["english"],"idle":["english"],"ignore":["english"],"ill":["english"],"illegal":["english"],"illness":["english"],"image":["english","french"],"imitate":["english"],"immense":["english","french"],"immune":["english"],"impact":["english","french"],"impose":["english"],"improve":["english"],"impulse":["english"],"inch":["english"],"include":["english"],"income":["english"],"increase":["english"],"index":["english"],"indicate":["english"],"indoor":["english"],"industry":["english"],"infant":["english"],"inflict":["english"],"inform":["english"],"inhale":["english"],"inherit":["english"],"initial":["english"],"inject":["english"],"injury":["english"],"inmate":["english"],"inner":["english"],"innocent":["english","french"],"input":["english"],"inquiry":["english"],"insane":["english"],"insect":["english"],"inside":["english"],"inspire":["english"],"install":["english"],"intact":["english","french"],"interest":["english"],"into":["english"],"invest":["english"],"invite":["english"],"involve":["english"],"iron":["english"],"island":["english"],"isolate":["english"],"issue":["english"],"item":["english"],"ivory":["english"],"jacket":["english"],"jaguar":["english","french"],"jar":["english"],"jazz":["english"],"jealous":["english"],"jeans":["english"],"jelly":["english"],"jewel":["english"],"job":["english"],"join":["english"],"joke":["english"],"journey":["english"],"joy":["english"],"judge":["english"],"juice":["english"],"jump":["english"],"jungle":["english"],"junior":["english","french"],"junk":["english"],"just":["english"],"kangaroo":["english"],"keen":["english"],"keep":["english"],"ketchup":["english"],"key":["english"],"kick":["english"],"kid":["english"],"kidney":["english"],"kind":["english"],"kingdom":["english"],"kiss":["english"],"kit":["english"],"kitchen":["english"],"kite":["english"],"kitten":["english"],"kiwi":["english"],"knee":["english"],"knife":["english"],"knock":["english"],"know":["english"],"lab":["english"],"label":["english","french"],"labor":["english"],"ladder":["english"],"lady":["english"],"lake":["english"],"lamp":["english"],"language":["english"],"laptop":["english"],"large":["english"],"later":["english"],"latin":["english"],"laugh":["english"],"laundry":["english"],"lava":["english"],"law":["english"],"lawn":["english"],"lawsuit":["english"],"layer":["english"],"lazy":["english"],"leader":["english"],"leaf":["english"],"learn":["english"],"leave":["english"],"lecture":["english","french"],"left":["english"],"leg":["english"],"legal":["english"],"legend":["english"],"leisure":["english"],"lemon":["english"],"lend":["english"],"length":["english"],"lens":["english"],"leopard":["english"],"lesson":["english"],"letter":["english"],"level":["english"],"liar":["english"],"liberty":["english"],"library":["english"],"license":["english"],"life":["english"],"lift":["english"],"light":["english"],"like":["english"],"limb":["english"],"limit":["english"],"link":["english"],"lion":["english"],"liquid":["english"],"list":["english"],"little":["english"],"live":["english"],"lizard":["english"],"load":["english"],"loan":["english"],"lobster":["english"],"local":["english"],"lock":["english"],"logic":["english"],"lonely":["english"],"long":["english"],"loop":["english"],"lottery":["english"],"loud":["english"],"lounge":["english"],"love":["english"],"loyal":["english","french"],"lucky":["english"],"luggage":["english"],"lumber":["english"],"lunar":["english"],"lunch":["english"],"luxury":["english"],"lyrics":["english"],"machine":["english","french"],"mad":["english"],"magic":["english"],"magnet":["english"],"maid":["english"],"mail":["english"],"main":["english"],"major":["english"],"make":["english"],"mammal":["english"],"man":["english"],"manage":["english"],"mandate":["english"],"mango":["english"],"mansion":["english"],"manual":["english"],"maple":["english"],"marble":["english"],"march":["english"],"margin":["english"],"marine":["english"],"market":["english","turkish"],"marriage":["english"],"mask":["english"],"mass":["english"],"master":["english"],"match":["english"],"material":["english"],"math":["english"],"matrix":["english"],"matter":["english"],"maximum":["english"],"maze":["english"],"meadow":["english"],"mean":["english"],"measure":["english"],"meat":["english"],"mechanic":["english"],"medal":["english"],"media":["english"],"melody":["english"],"melt":["english"],"member":["english"],"memory":["english"],"mention":["english"],"menu":["english"],"mercy":["english"],"merge":["english"],"merit":["english"],"merry":["english"],"mesh":["english"],"message":["english"],"metal":["english"],"method":["english"],"middle":["english"],"midnight":["english"],"milk":["english"],"million":["english","french"],"mimic":["english"],"mind":["english"],"minimum":["english"],"minor":["english"],"minute":["english","french"],"miracle":["english","french"],"mirror":["english"],"misery":["english"],"miss":["english"],"mistake":["english"],"mix":["english"],"mixed":["english"],"mixture":["english"],"mobile":["english","french"],"model":["english","turkish"],"modify":["english"],"mom":["english"],"moment":["english"],"monitor":["english"],"monkey":["english"],"monster":["english"],"month":["english"],"moon":["english"],"moral":["english"],"more":["english"],"morning":["english"],"mosquito":["english"],"mother":["english"],"motion":["english"],"motor":["english","turkish"],"mountain":["english"],"mouse":["english"],"move":["english"],"movie":["english"],"much":["english"],"muffin":["english"],"mule":["english"],"multiply":["english"],"muscle":["english","french"],"museum":["english"],"mushroom":["english"],"music":["english"],"must":["english"],"mutual":["english"],"myself":["english"],"mystery":["english"],"myth":["english"],"naive":["english"],"name":["english"],"napkin":["english"],"narrow":["english"],"nasty":["english"],"nation":["english","french"],"nature":["english","french"],"near":["english"],"neck":["english"],"need":["english"],"negative":["english"],"neglect":["english"],"neither":["english"],"nephew":["english"],"nerve":["english"],"nest":["english"],"net":["english"],"network":["english"],"neutral":["english"],"never":["english"],"news":["english"],"next":["english"],"nice":["english"],"night":["english"],"noble":["english","french"],"noise":["english"],"nominee":["english"],"noodle":["english"],"normal":["english","turkish"],"north":["english"],"nose":["english"],"notable":["english","french"],"note":["english"],"nothing":["english"],"notice":["english"],"novel":["english"],"now":["english"],"nuclear":["english"],"number":["english"],"nurse":["english"],"nut":["english"],"oak":["english"],"obey":["english"],"object":["english"],"oblige":["english"],"obscure":["english"],"observe":["english"],"obtain":["english"],"obvious":["english"],"occur":["english"],"ocean":["english"],"october":["english"],"odor":["english"],"off":["english"],"offer":["english"],"office":["english"],"often":["english"],"oil":["english"],"okay":["english"],"old":["english"],"olive":["english"],"olympic":["english"],"omit":["english"],"once":["english"],"one":["english"],"onion":["english"],"online":["english"],"only":["english"],"open":["english"],"opera":["english","turkish"],"opinion":["english","french"],"oppose":["english"],"option":["english"],"orange":["english","french"],"orbit":["english"],"orchard":["english"],"order":["english"],"ordinary":["english"],"organ":["english"],"orient":["english"],"original":["english"],"orphan":["english"],"ostrich":["english"],"other":["english"],"outdoor":["english"],"outer":["english"],"output":["english"],"outside":["english"],"oval":["english"],"oven":["english"],"over":["english"],"own":["english"],"owner":["english"],"oxygen":["english"],"oyster":["english"],"ozone":["english","french"],"pact":["english"],"paddle":["english"],"page":["english"],"pair":["english"],"palace":["english","french"],"palm":["english"],"panda":["english","french","turkish"],"panel":["english","turkish"],"panic":["english"],"panther":["english"],"paper":["english"],"parade":["english"],"parent":["english"],"park":["english"],"parrot":["english"],"party":["english"],"pass":["english"],"patch":["english"],"path":["english"],"patient":["english"],"patrol":["english"],"pattern":["english"],"pause":["english"],"pave":["english"],"payment":["english"],"peace":["english"],"peanut":["english"],"pear":["english"],"peasant":["english"],"pelican":["english"],"pen":["english"],"penalty":["english"],"pencil":["english"],"people":["english"],"pepper":["english"],"perfect":["english"],"permit":["english"],"person":["english"],"pet":["english"],"phone":["english"],"photo":["english"],"phrase":["english","french"],"physical":["english"],"piano":["english","french"],"picnic":["english"],"picture":["english"],"piece":["english"],"pig":["english"],"pigeon":["english"],"pill":["english"],"pilot":["english","turkish"],"pink":["english"],"pioneer":["english"],"pipe":["english"],"pistol":["english"],"pitch":["english"],"pizza":["english","french"],"place":["english"],"planet":["english"],"plastic":["english"],"plate":["english"],"play":["english"],"please":["english"],"pledge":["english"],"pluck":["english"],"plug":["english"],"plunge":["english"],"poem":["english"],"poet":["english"],"point":["english"],"polar":["english"],"pole":["english"],"police":["english"],"pond":["english"],"pony":["english"],"pool":["english"],"popular":["english"],"portion":["english"],"position":["english","french"],"possible":["english"],"post":["english"],"potato":["english"],"pottery":["english"],"poverty":["english"],"powder":["english"],"power":["english"],"practice":["english"],"praise":["english"],"predict":["english"],"prefer":["english"],"prepare":["english"],"present":["english"],"pretty":["english"],"prevent":["english"],"price":["english"],"pride":["english"],"primary":["english"],"print":["english"],"priority":["english"],"prison":["english","french"],"private":["english"],"prize":["english"],"problem":["english","turkish"],"process":["english"],"produce":["english"],"profit":["english"],"program":["english","turkish"],"project":["english"],"promote":["english"],"proof":["english"],"property":["english"],"prosper":["english"],"protect":["english"],"proud":["english"],"provide":["english"],"public":["english","french"],"pudding":["english"],"pull":["english"],"pulp":["english"],"pulse":["english"],"pumpkin":["english"],"punch":["english"],"pupil":["english"],"puppy":["english"],"purchase":["english"],"purity":["english"],"purpose":["english"],"purse":["english"],"push":["english"],"put":["english"],"puzzle":["english","french"],"pyramid":["english"],"quality":["english"],"quantum":["english"],"quarter":["english"],"question":["english","french"],"quick":["english"],"quit":["english"],"quiz":["english"],"quote":["english"],"rabbit":["english"],"raccoon":["english"],"race":["english"],"rack":["english"],"radar":["english","turkish"],"radio":["english"],"rail":["english"],"rain":["english"],"raise":["english"],"rally":["english"],"ramp":["english"],"ranch":["english"],"random":["english"],"range":["english"],"rapid":["english"],"rare":["english"],"rate":["english"],"rather":["english"],"raven":["english"],"raw":["english"],"razor":["english"],"ready":["english"],"real":["english"],"reason":["english"],"rebel":["english"],"rebuild":["english"],"recall":["english"],"receive":["english"],"recipe":["english"],"record":["english"],"recycle":["english"],"reduce":["english"],"reflect":["english"],"reform":["english","turkish"],"refuse":["english"],"region":["english"],"regret":["english"],"regular":["english"],"reject":["english"],"relax":["english"],"release":["english"],"relief":["english","french"],"rely":["english"],"remain":["english"],"remember":["english"],"remind":["english"],"remove":["english"],"render":["english"],"renew":["english"],"rent":["english"],"reopen":["english"],"repair":["english"],"repeat":["english"],"replace":["english"],"report":["english"],"require":["english"],"rescue":["english"],"resemble":["english"],"resist":["english"],"resource":["english"],"response":["english"],"result":["english"],"retire":["english"],"retreat":["english"],"return":["english"],"reunion":["english"],"reveal":["english"],"review":["english"],"reward":["english"],"rhythm":["english"],"rib":["english"],"ribbon":["english"],"rice":["english"],"rich":["english"],"ride":["english"],"ridge":["english"],"rifle":["english"],"right":["english"],"rigid":["english"],"ring":["english"],"riot":["english"],"ripple":["english"],"risk":["english"],"ritual":["english"],"rival":["english","french"],"river":["english"],"road":["english"],"roast":["english"],"robot":["english","turkish"],"robust":["english"],"rocket":["english"],"romance":["english","french"],"roof":["english"],"rookie":["english"],"room":["english"],"rose":["english"],"rotate":["english"],"rough":["english"],"round":["english"],"route":["english"],"royal":["english"],"rubber":["english"],"rude":["english"],"rug":["english"],"rule":["english"],"run":["english"],"runway":["english"],"rural":["english"],"sad":["english"],"saddle":["english"],"sadness":["english"],"safe":["english"],"sail":["english"],"salad":["english"],"salmon":["english"],"salon":["english","french","turkish"],"salt":["english"],"salute":["english"],"same":["english"],"sample":["english"],"sand":["english"],"satisfy":["english"],"satoshi":["english"],"sauce":["english"],"sausage":["english"],"save":["english"],"say":["english"],"scale":["english"],"scan":["english"],"scare":["english"],"scatter":["english"],"scene":["english"],"scheme":["english"],"school":["english"],"science":["english","french"],"scissors":["english"],"scorpion":["english"],"scout":["english"],"scrap":["english"],"screen":["english"],"script":["english"],"scrub":["english"],"sea":["english"],"search":["english"],"season":["english"],"seat":["english"],"second":["english"],"secret":["english"],"section":["english"],"security":["english"],"seed":["english"],"seek":["english"],"segment":["english"],"select":["english"],"sell":["english"],"seminar":["english"],"senior":["english"],"sense":["english"],"sentence":["english","french"],"series":["english"],"service":["english","french"],"session":["english"],"settle":["english"],"setup":["english"],"seven":["english"],"shadow":["english"],"shaft":["english"],"shallow":["english"],"share":["english"],"shed":["english"],"shell":["english"],"sheriff":["english"],"shield":["english"],"shift":["english"],"shine":["english"],"ship":["english"],"shiver":["english"],"shock":["english"],"shoe":["english"],"shoot":["english"],"shop":["english"],"short":["english"],"shoulder":["english"],"shove":["english"],"shrimp":["english"],"shrug":["english"],"shuffle":["english"],"shy":["english"],"sibling":["english"],"sick":["english"],"side":["english"],"siege":["english"],"sight":["english"],"sign":["english"],"silent":["english"],"silk":["english"],"silly":["english"],"silver":["english"],"similar":["english"],"simple":["english","french"],"since":["english"],"sing":["english"],"siren":["english"],"sister":["english"],"situate":["english"],"six":["english"],"size":["english"],"skate":["english"],"sketch":["english"],"ski":["english"],"skill":["english"],"skin":["english"],"skirt":["english"],"skull":["english"],"slab":["english"],"slam":["english"],"sleep":["english"],"slender":["english"],"slice":["english"],"slide":["english"],"slight":["english"],"slim":["english"],"slogan":["english","turkish"],"slot":["english"],"slow":["english"],"slush":["english"],"small":["english"],"smart":["english"],"smile":["english"],"smoke":["english"],"smooth":["english"],"snack":["english"],"snake":["english"],"snap":["english"],"sniff":["english"],"snow":["english"],"soap":["english"],"soccer":["english"],"social":["english","french"],"sock":["english"],"soda":["english"],"soft":["english"],"solar":["english"],"soldier":["english"],"solid":["english"],"solution":["english"],"solve":["english"],"someone":["english"],"song":["english"],"soon":["english"],"sorry":["english"],"sort":["english"],"soul":["english"],"sound":["english"],"soup":["english"],"source":["english","french"],"south":["english"],"space":["english"],"spare":["english"],"spatial":["english","french"],"spawn":["english"],"speak":["english"],"special":["english"],"speed":["english"],"spell":["english"],"spend":["english"],"sphere":["english"],"spice":["english"],"spider":["english"],"spike":["english"],"spin":["english"],"spirit":["english"],"split":["english"],"spoil":["english"],"sponsor":["english","turkish"],"spoon":["english"],"sport":["english"],"spot":["english"],"spray":["english"],"spread":["english"],"spring":["english"],"spy":["english"],"square":["english"],"squeeze":["english"],"squirrel":["english"],"stable":["english","french"],"stadium":["english"],"staff":["english"],"stage":["english"],"stairs":["english"],"stamp":["english"],"stand":["english"],"start":["english"],"state":["english"],"stay":["english"],"steak":["english"],"steel":["english"],"stem":["english"],"step":["english"],"stereo":["english"],"stick":["english"],"still":["english"],"sting":["english"],"stock":["english"],"stomach":["english"],"stone":["english"],"stool":["english"],"story":["english"],"stove":["english"],"strategy":["english"],"street":["english"],"strike":["english"],"strong":["english"],"struggle":["english"],"student":["english"],"stuff":["english"],"stumble":["english"],"style":["english"],"subject":["english"],"submit":["english"],"subway":["english"],"success":["english"],"such":["english"],"sudden":["english"],"suffer":["english"],"sugar":["english"],"suggest":["english"],"suit":["english"],"summer":["english"],"sun":["english"],"sunny":["english"],"sunset":["english"],"super":["english"],"supply":["english"],"supreme":["english"],"sure":["english"],"surface":["english","french"],"surge":["english"],"surprise":["english","french"],"surround":["english"],"survey":["english"],"suspect":["english","french"],"sustain":["english"],"swallow":["english"],"swamp":["english"],"swap":["english"],"swarm":["english"],"swear":["english"],"sweet":["english"],"swift":["english"],"swim":["english"],"swing":["english"],"switch":["english"],"sword":["english"],"symbol":["english"],"symptom":["english"],"syrup":["english"],"system":["english"],"table":["english"],"tackle":["english"],"tag":["english"],"tail":["english"],"talent":["english","french"],"talk":["english"],"tank":["english"],"tape":["english"],"target":["english"],"task":["english"],"taste":["english"],"tattoo":["english"],"taxi":["english"],"teach":["english"],"team":["english"],"tell":["english"],"ten":["english"],"tenant":["english"],"tennis":["english"],"tent":["english"],"term":["english"],"test":["english"],"text":["english"],"thank":["english"],"that":["english"],"theme":["english"],"then":["english"],"theory":["english"],"there":["english"],"they":["english"],"thing":["english"],"this":["english"],"thought":["english"],"three":["english"],"thrive":["english"],"throw":["english"],"thumb":["english"],"thunder":["english"],"ticket":["english"],"tide":["english"],"tiger":["english"],"tilt":["english"],"timber":["english"],"time":["english"],"tiny":["english"],"tip":["english"],"tired":["english"],"tissue":["english"],"title":["english"],"toast":["english"],"tobacco":["english"],"today":["english"],"toddler":["english"],"toe":["english"],"together":["english"],"toilet":["english"],"token":["english"],"tomato":["english"],"tomorrow":["english"],"tone":["english"],"tongue":["english"],"tonight":["english"],"tool":["english"],"tooth":["english"],"top":["english"],"topic":["english"],"topple":["english"],"torch":["english"],"tornado":["english"],"tortoise":["english"],"toss":["english"],"total":["english"],"tourist":["english"],"toward":["english"],"tower":["english"],"town":["english"],"toy":["english"],"track":["english"],"trade":["english"],"traffic":["english"],"tragic":["english"],"train":["english","french"],"transfer":["english","turkish"],"trap":["english"],"trash":["english"],"travel":["english"],"tray":["english"],"treat":["english"],"tree":["english"],"trend":["english"],"trial":["english"],"tribe":["english"],"trick":["english"],"trigger":["english"],"trim":["english"],"trip":["english"],"trophy":["english"],"trouble":["english"],"truck":["english"],"true":["english"],"truly":["english"],"trumpet":["english"],"trust":["english"],"truth":["english"],"try":["english"],"tube":["english"],"tuition":["english"],"tumble":["english"],"tuna":["english"],"tunnel":["english","french"],"turkey":["english"],"turn":["english"],"turtle":["english"],"twelve":["english"],"twenty":["english"],"twice":["english"],"twin":["english"],"twist":["english"],"two":["english"],"type":["english"],"typical":["english"],"ugly":["english"],"umbrella":["english"],"unable":["english"],"unaware":["english"],"uncle":["english"],"uncover":["english"],"under":["english"],"undo":["english"],"unfair":["english"],"unfold":["english"],"unhappy":["english"],"uniform":["english"],"unique":["english","french"],"unit":["english"],"universe":["english"],"unknown":["english"],"unlock":["english"],"until":["english"],"unusual":["english"],"unveil":["english"],"update":["english"],"upgrade":["english"],"uphold":["english"],"upon":["english"],"upper":["english"],"upset":["english"],"urban":["english"],"urge":["english"],"usage":["english","french"],"use":["english"],"used":["english"],"useful":["english"],"useless":["english"],"usual":["english"],"utility":["english"],"vacant":["english"],"vacuum":["english"],"vague":["english","french"],"valid":["english"],"valley":["english"],"valve":["english","french"],"van":["english"],"vanish":["english"],"vapor":["english"],"various":["english"],"vast":["english"],"vault":["english"],"vehicle":["english"],"velvet":["english"],"vendor":["english"],"venture":["english"],"venue":["english"],"verb":["english"],"verify":["english"],"version":["english"],"very":["english"],"vessel":["english"],"veteran":["english"],"viable":["english"],"vibrant":["english"],"vicious":["english"],"victory":["english"],"video":["english"],"view":["english"],"village":["english","french"],"vintage":["english"],"violin":["english"],"virtual":["english"],"virus":["english","french"],"visa":["english"],"visit":["english"],"visual":["english"],"vital":["english","french"],"vivid":["english"],"vocal":["english"],"voice":["english"],"void":["english"],"volcano":["english"],"volume":["english","french"],"vote":["english"],"voyage":["english","french"],"wage":["english"],"wagon":["english","french"],"wait":["english"],"walk":["english"],"wall":["english"],"walnut":["english"],"want":["english"],"warfare":["english"],"warm":["english"],"warrior":["english"],"wash":["english"],"wasp":["english"],"waste":["english"],"water":["english"],"wave":["english"],"way":["english"],"wealth":["english"],"weapon":["english"],"wear":["english"],"weasel":["english"],"weather":["english"],"web":["english"],"wedding":["english"],"weekend":["english"],"weird":["english"],"welcome":["english"],"west":["english"],"wet":["english"],"whale":["english"],"what":["english"],"wheat":["english"],"wheel":["english"],"when":["english"],"where":["english"],"whip":["english"],"whisper":["english"],"wide":["english"],"width":["english"],"wife":["english"],"wild":["english"],"will":["english"],"win":["english"],"window":["english"],"wine":["english"],"wing":["english"],"wink":["english"],"winner":["english"],"winter":["english"],"wire":["english"],"wisdom":["english"],"wise":["english"],"wish":["english"],"witness":["english"],"wolf":["english"],"woman":["english"],"wonder":["english"],"wood":["english"],"wool":["english"],"word":["english"],"work":["english"],"world":["english"],"worry":["english"],"worth":["english"],"wrap":["english"],"wreck":["english"],"wrestle":["english"],"wrist":["english"],"write":["english"],"wrong":["english"],"yard":["english"],"year":["english"],"yellow":["english"],"you":["english"],"young":["english"],"youth":["english"],"zebra":["english"],"zero":["english"],"zone":["english"],"zoo":["english"],"abaisser":["french"],"abdiquer":["french"],"abeille":["french"],"abolir":["french"],"aborder":["french"],"aboutir":["french"],"aboyer":["french"],"abrasif":["french"],"abreuver":["french"],"abriter":["french"],"abroger":["french"],"abrupt":["french"],"absence":["french"],"absolu":["french"],"absurde":["french"],"abusif":["french"],"abyssal":["french"],"académie":["french"],"acajou":["french"],"acarien":["french"],"accabler":["french"],"accepter":["french"],"acclamer":["french"],"accolade":["french"],"accroche":["french"],"accuser":["french"],"acerbe":["french"],"achat":["french"],"acheter":["french"],"aciduler":["french"],"acier":["french"],"acompte":["french"],"acquérir":["french"],"acronyme":["french"],"acteur":["french"],"actif":["french"],"actuel":["french"],"adepte":["french"],"adéquat":["french"],"adhésif":["french"],"adjectif":["french"],"adjuger":["french"],"admettre":["french"],"admirer":["french"],"adopter":["french"],"adorer":["french"],"adoucir":["french"],"adresse":["french"],"adroit":["french"],"adulte":["french"],"adverbe":["french"],"aérer":["french"],"aéronef":["french"],"affaire":["french"],"affecter":["french"],"affiche":["french"],"affreux":["french"],"affubler":["french"],"agacer":["french"],"agencer":["french"],"agile":["french"],"agiter":["french"],"agrafer":["french"],"agréable":["french"],"agrume":["french"],"aider":["french"],"aiguille":["french"],"ailier":["french"],"aimable":["french"],"aisance":["french"],"ajouter":["french"],"ajuster":["french"],"alarmer":["french"],"alchimie":["french"],"alerte":["french"],"algèbre":["french"],"algue":["french"],"aliéner":["french"],"aliment":["french"],"alléger":["french"],"alliage":["french"],"allouer":["french"],"allumer":["french"],"alourdir":["french"],"alpaga":["french"],"altesse":["french"],"alvéole":["french"],"ambigu":["french"],"ambre":["french"],"aménager":["french"],"amertume":["french"],"amidon":["french"],"amiral":["french"],"amorcer":["french"],"amour":["french"],"amovible":["french"],"amphibie":["french"],"ampleur":["french"],"amusant":["french"],"analyse":["french"],"anaphore":["french"],"anarchie":["french"],"anatomie":["french"],"ancien":["french"],"anéantir":["french"],"angoisse":["french"],"anguleux":["french"],"annexer":["french"],"annonce":["french"],"annuel":["french"],"anodin":["french"],"anomalie":["french"],"anonyme":["french"],"anormal":["french"],"antenne":["french"],"antidote":["french"],"anxieux":["french"],"apaiser":["french"],"apéritif":["french"],"aplanir":["french"],"apologie":["french"],"appareil":["french"],"appeler":["french"],"apporter":["french"],"appuyer":["french"],"aquarium":["french"],"aqueduc":["french"],"arbitre":["french"],"arbuste":["french"],"ardeur":["french"],"ardoise":["french"],"argent":["french"],"arlequin":["french"],"armature":["french"],"armement":["french"],"armoire":["french"],"armure":["french"],"arpenter":["french"],"arracher":["french"],"arriver":["french"],"arroser":["french"],"arsenic":["french"],"artériel":["french"],"article":["french"],"asphalte":["french"],"aspirer":["french"],"assaut":["french"],"asservir":["french"],"assiette":["french"],"associer":["french"],"assurer":["french"],"asticot":["french"],"astre":["french"],"astuce":["french"],"atelier":["french"],"atome":["french"],"atrium":["french"],"atroce":["french"],"attaque":["french"],"attentif":["french"],"attirer":["french"],"attraper":["french"],"aubaine":["french"],"auberge":["french"],"audace":["french"],"audible":["french"],"augurer":["french"],"aurore":["french"],"automne":["french"],"autruche":["french"],"avaler":["french"],"avancer":["french"],"avarice":["french"],"avenir":["french"],"averse":["french"],"aveugle":["french"],"aviateur":["french"],"avide":["french"],"avion":["french"],"aviser":["french"],"avoine":["french"],"avouer":["french"],"avril":["french"],"axial":["french"],"axiome":["french"],"bafouer":["french"],"bagage":["french"],"baguette":["french"],"baignade":["french"],"balancer":["french"],"balcon":["french"],"baleine":["french"],"balisage":["french"],"bambin":["french"],"bancaire":["french"],"bandage":["french"],"banlieue":["french"],"bannière":["french"],"banquier":["french"],"barbier":["french"],"baril":["french"],"baron":["french"],"barque":["french"],"barrage":["french"],"bassin":["french"],"bastion":["french"],"bataille":["french"],"bateau":["french"],"batterie":["french"],"baudrier":["french"],"bavarder":["french"],"belette":["french"],"bélier":["french"],"belote":["french"],"bénéfice":["french"],"berceau":["french"],"berger":["french"],"berline":["french"],"bermuda":["french","turkish"],"besace":["french"],"besogne":["french"],"bétail":["french"],"beurre":["french"],"biberon":["french"],"bidule":["french"],"bijou":["french"],"bilan":["french"],"bilingue":["french"],"billard":["french"],"binaire":["french"],"biologie":["french"],"biopsie":["french"],"biotype":["french"],"biscuit":["french"],"bison":["french"],"bistouri":["french"],"bitume":["french"],"bizarre":["french"],"blafard":["french"],"blague":["french"],"blanchir":["french"],"blessant":["french"],"blinder":["french"],"blond":["french"],"bloquer":["french"],"blouson":["french"],"bobard":["french"],"bobine":["french"],"boire":["french"],"boiser":["french"],"bolide":["french"],"bonbon":["french"],"bondir":["french"],"bonheur":["french"],"bonifier":["french"],"bordure":["french"],"borne":["french"],"botte":["french"],"boucle":["french"],"boueux":["french"],"bougie":["french"],"boulon":["french"],"bouquin":["french"],"bourse":["french"],"boussole":["french"],"boutique":["french"],"boxeur":["french"],"branche":["french"],"brasier":["french"],"brebis":["french"],"brèche":["french"],"breuvage":["french"],"bricoler":["french"],"brigade":["french"],"brillant":["french"],"brioche":["french"],"brique":["french"],"brochure":["french"],"broder":["french"],"bronzer":["french"],"brousse":["french"],"broyeur":["french"],"brume":["french"],"brusque":["french"],"brutal":["french"],"bruyant":["french"],"buffle":["french"],"buisson":["french"],"bulletin":["french"],"bureau":["french"],"burin":["french"],"bustier":["french"],"butiner":["french"],"butoir":["french"],"buvable":["french"],"buvette":["french"],"cabanon":["french"],"cabine":["french"],"cachette":["french"],"cadeau":["french"],"cadre":["french"],"caféine":["french"],"caillou":["french"],"caisson":["french"],"calculer":["french"],"calepin":["french"],"calibre":["french"],"calmer":["french"],"calomnie":["french"],"calvaire":["french"],"camarade":["french"],"caméra":["french"],"camion":["french"],"campagne":["french"],"caneton":["french"],"canon":["french"],"cantine":["french"],"canular":["french"],"caporal":["french"],"caprice":["french"],"capsule":["french"],"capter":["french"],"capuche":["french"],"carabine":["french"],"carbone":["french"],"caresser":["french"],"caribou":["french"],"carnage":["french"],"carotte":["french"],"carreau":["french"],"carton":["french"],"cascade":["french"],"casier":["french"],"casque":["french"],"cassure":["french"],"causer":["french"],"cavalier":["french"],"caverne":["french"],"caviar":["french"],"cédille":["french"],"ceinture":["french"],"céleste":["french"],"cellule":["french"],"cendrier":["french"],"censurer":["french"],"central":["french"],"cercle":["french"],"cérébral":["french"],"cerise":["french"],"cerner":["french"],"cerveau":["french"],"cesser":["french"],"chagrin":["french"],"chaise":["french"],"chaleur":["french"],"chambre":["french"],"chance":["french"],"chapitre":["french"],"charbon":["french"],"chasseur":["french"],"chaton":["french"],"chausson":["french"],"chavirer":["french"],"chemise":["french"],"chenille":["french"],"chéquier":["french"],"chercher":["french"],"cheval":["french"],"chien":["french"],"chiffre":["french"],"chignon":["french"],"chimère":["french"],"chiot":["french"],"chlorure":["french"],"chocolat":["french"],"choisir":["french"],"chose":["french"],"chouette":["french"],"chrome":["french"],"chute":["french"],"cigare":["french"],"cigogne":["french"],"cimenter":["french"],"cinéma":["french"],"cintrer":["french"],"circuler":["french"],"cirer":["french"],"cirque":["french"],"citerne":["french"],"citoyen":["french"],"citron":["french"],"clairon":["french"],"clameur":["french"],"claquer":["french"],"classe":["french"],"clavier":["french"],"cligner":["french"],"climat":["french"],"clivage":["french"],"cloche":["french"],"clonage":["french"],"cloporte":["french"],"cobalt":["french"],"cobra":["french"],"cocasse":["french"],"cocotier":["french"],"coder":["french"],"codifier":["french"],"coffre":["french"],"cogner":["french"],"cohésion":["french"],"coiffer":["french"],"coincer":["french"],"colère":["french"],"colibri":["french"],"colline":["french"],"colmater":["french"],"colonel":["french"],"combat":["french"],"comédie":["french"],"commande":["french"],"compact":["french"],"conduire":["french"],"confier":["french"],"congeler":["french"],"connoter":["french"],"consonne":["french"],"contact":["french"],"convexe":["french"],"copain":["french"],"copie":["french"],"corail":["french"],"corbeau":["french"],"cordage":["french"],"corniche":["french"],"corpus":["french"],"cortège":["french"],"cosmique":["french"],"costume":["french"],"coton":["french"],"coude":["french"],"coupure":["french"],"courage":["french"],"couteau":["french"],"couvrir":["french"],"crabe":["french"],"crainte":["french"],"cravate":["french"],"crayon":["french"],"créature":["french"],"créditer":["french"],"crémeux":["french"],"creuser":["french"],"crevette":["french"],"cribler":["french"],"crier":["french"],"cristal":["french"],"critère":["french"],"croire":["french"],"croquer":["french"],"crotale":["french"],"crypter":["french"],"cubique":["french"],"cueillir":["french"],"cuillère":["french"],"cuisine":["french"],"cuivre":["french"],"culminer":["french"],"cultiver":["french"],"cumuler":["french"],"cupide":["french"],"curatif":["french"],"curseur":["french"],"cyanure":["french"],"cylindre":["french"],"cynique":["french"],"daigner":["french"],"damier":["french"],"danseur":["french"],"dauphin":["french"],"débattre":["french"],"débiter":["french"],"déborder":["french"],"débrider":["french"],"débutant":["french"],"décaler":["french"],"décembre":["french"],"déchirer":["french"],"décider":["french"],"déclarer":["french"],"décorer":["french"],"décrire":["french"],"décupler":["french"],"dédale":["french"],"déductif":["french"],"déesse":["french"],"défensif":["french"],"défiler":["french"],"défrayer":["french"],"dégager":["french"],"dégivrer":["french"],"déglutir":["french"],"dégrafer":["french"],"déjeuner":["french"],"délice":["french"],"déloger":["french"],"demander":["french"],"demeurer":["french"],"démolir":["french"],"dénicher":["french"],"dénouer":["french"],"dentelle":["french"],"dénuder":["french"],"départ":["french"],"dépenser":["french"],"déphaser":["french"],"déplacer":["french"],"déposer":["french"],"déranger":["french"],"dérober":["french"],"désastre":["french"],"descente":["french"],"désert":["french"],"désigner":["french"],"désobéir":["french"],"dessiner":["french"],"destrier":["french"],"détacher":["french"],"détester":["french"],"détourer":["french"],"détresse":["french"],"devancer":["french"],"devenir":["french"],"deviner":["french"],"devoir":["french"],"diable":["french"],"dialogue":["french"],"diamant":["french"],"dicter":["french"],"différer":["french"],"digérer":["french"],"digne":["french"],"diluer":["french"],"dimanche":["french"],"diminuer":["french"],"dioxyde":["french"],"directif":["french"],"diriger":["french"],"discuter":["french"],"disposer":["french"],"dissiper":["french"],"divertir":["french"],"diviser":["french"],"docile":["french"],"docteur":["french"],"dogme":["french"],"doigt":["french"],"domaine":["french"],"domicile":["french"],"dompter":["french"],"donateur":["french"],"donjon":["french"],"donner":["french"],"dopamine":["french"],"dortoir":["french"],"dorure":["french"],"dosage":["french"],"doseur":["french"],"dossier":["french"],"dotation":["french"],"douanier":["french"],"douceur":["french"],"douter":["french"],"doyen":["french"],"draper":["french"],"dresser":["french"],"dribbler":["french"],"droiture":["french"],"duperie":["french"],"duplexe":["french"],"durable":["french"],"durcir":["french"],"dynastie":["french"],"éblouir":["french"],"écarter":["french"],"écharpe":["french"],"échelle":["french"],"éclairer":["french"],"éclipse":["french"],"éclore":["french"],"écluse":["french"],"école":["french"],"économie":["french"],"écorce":["french"],"écouter":["french"],"écraser":["french"],"écrémer":["french"],"écrivain":["french"],"écrou":["french"],"écume":["french"],"écureuil":["french"],"édifier":["french"],"éduquer":["french"],"effacer":["french"],"effectif":["french"],"effigie":["french"],"effrayer":["french"],"effusion":["french"],"égaliser":["french"],"égarer":["french"],"éjecter":["french"],"élaborer":["french"],"élargir":["french"],"électron":["french"],"élégant":["french"],"éléphant":["french"],"élève":["french"],"éligible":["french"],"élitisme":["french"],"éloge":["french"],"élucider":["french"],"éluder":["french"],"emballer":["french"],"embellir":["french"],"embryon":["french"],"émeraude":["french"],"émission":["french"],"emmener":["french"],"émotion":["french"],"émouvoir":["french"],"empereur":["french"],"employer":["french"],"emporter":["french"],"emprise":["french"],"émulsion":["french"],"encadrer":["french"],"enchère":["french"],"enclave":["french"],"encoche":["french"],"endiguer":["french"],"endosser":["french"],"endroit":["french"],"enduire":["french"],"énergie":["french"],"enfance":["french"],"enfermer":["french"],"enfouir":["french"],"engager":["french"],"engin":["french","turkish"],"englober":["french"],"énigme":["french"],"enjamber":["french"],"enjeu":["french"],"enlever":["french"],"ennemi":["french"],"ennuyeux":["french"],"enrichir":["french"],"enrobage":["french"],"enseigne":["french"],"entasser":["french"],"entendre":["french"],"entier":["french"],"entourer":["french"],"entraver":["french"],"énumérer":["french"],"envahir":["french"],"enviable":["french"],"envoyer":["french"],"enzyme":["french"],"éolien":["french"],"épaissir":["french"],"épargne":["french"],"épatant":["french"],"épaule":["french"],"épicerie":["french"],"épidémie":["french"],"épier":["french"],"épilogue":["french"],"épine":["french"],"épisode":["french"],"épitaphe":["french"],"époque":["french"],"épreuve":["french"],"éprouver":["french"],"épuisant":["french"],"équerre":["french"],"équipe":["french"],"ériger":["french"],"érosion":["french"],"erreur":["french"],"éruption":["french"],"escalier":["french"],"espadon":["french"],"espèce":["french"],"espiègle":["french"],"espoir":["french"],"esprit":["french"],"esquiver":["french"],"essayer":["french"],"essieu":["french"],"essorer":["french"],"estime":["french"],"estomac":["french"],"estrade":["french"],"étagère":["french"],"étaler":["french"],"étanche":["french"],"étatique":["french"],"éteindre":["french"],"étendoir":["french"],"éternel":["french"],"éthanol":["french"],"éthique":["french"],"ethnie":["french"],"étirer":["french"],"étoffer":["french"],"étoile":["french"],"étonnant":["french"],"étourdir":["french"],"étrange":["french"],"étroit":["french"],"étude":["french"],"euphorie":["french"],"évaluer":["french"],"évasion":["french"],"éventail":["french"],"évidence":["french"],"éviter":["french"],"évolutif":["french"],"évoquer":["french"],"exagérer":["french"],"exaucer":["french"],"exceller":["french"],"excitant":["french"],"exclusif":["french"],"exécuter":["french"],"exemple":["french"],"exercer":["french"],"exhaler":["french"],"exhorter":["french"],"exigence":["french"],"exiler":["french"],"exister":["french"],"exotique":["french"],"expédier":["french"],"explorer":["french"],"exposer":["french"],"exprimer":["french"],"exquis":["french"],"extensif":["french"],"extraire":["french"],"exulter":["french"],"fable":["french"],"fabuleux":["french"],"facette":["french"],"facile":["french"],"facture":["french"],"faiblir":["french"],"falaise":["french"],"fameux":["french"],"famille":["french"],"farceur":["french"],"farfelu":["french"],"farine":["french"],"farouche":["french"],"fasciner":["french"],"faucon":["french"],"fautif":["french"],"faveur":["french"],"favori":["french","turkish"],"fébrile":["french"],"féconder":["french"],"fédérer":["french"],"félin":["french"],"femme":["french"],"fémur":["french"],"fendoir":["french"],"féodal":["french"],"fermer":["french"],"féroce":["french"],"ferveur":["french"],"feuille":["french"],"feutre":["french"],"février":["french"],"fiasco":["french"],"ficeler":["french"],"fictif":["french"],"fidèle":["french"],"filature":["french"],"filetage":["french"],"filière":["french"],"filleul":["french"],"filmer":["french"],"filou":["french"],"filtrer":["french"],"financer":["french"],"finir":["french"],"fiole":["french"],"firme":["french"],"fissure":["french"],"fixer":["french"],"flairer":["french"],"flamme":["french"],"flasque":["french"],"flatteur":["french"],"fléau":["french"],"flèche":["french"],"fleur":["french"],"flexion":["french"],"flocon":["french"],"flore":["french"],"fluctuer":["french"],"fluide":["french"],"fluvial":["french"],"folie":["french"],"fonderie":["french"],"fongible":["french"],"fontaine":["french"],"forcer":["french"],"forgeron":["french"],"formuler":["french"],"fossile":["french"],"foudre":["french"],"fougère":["french"],"fouiller":["french"],"foulure":["french"],"fourmi":["french"],"fraise":["french"],"franchir":["french"],"frapper":["french"],"frayeur":["french"],"frégate":["french"],"freiner":["french"],"frelon":["french"],"frémir":["french"],"frénésie":["french"],"frère":["french"],"friable":["french"],"friction":["french"],"frisson":["french"],"frivole":["french"],"froid":["french"],"fromage":["french"],"frontal":["french"],"frotter":["french"],"fugitif":["french"],"fuite":["french"],"fureur":["french"],"furieux":["french"],"furtif":["french"],"fusion":["french"],"futur":["french"],"gagner":["french"],"galaxie":["french"],"galerie":["french"],"gambader":["french"],"garantir":["french"],"gardien":["french"],"garnir":["french"],"garrigue":["french"],"gazelle":["french"],"gazon":["french"],"géant":["french"],"gélatine":["french"],"gélule":["french"],"gendarme":["french"],"général":["french"],"génie":["french"],"genou":["french"],"gentil":["french"],"géologie":["french"],"géomètre":["french"],"géranium":["french"],"germe":["french"],"gestuel":["french"],"geyser":["french"],"gibier":["french"],"gicler":["french"],"girafe":["french"],"givre":["french"],"glace":["french"],"glaive":["french"],"glisser":["french"],"gloire":["french"],"glorieux":["french"],"golfeur":["french"],"gomme":["french"],"gonfler":["french"],"gorge":["french"],"gorille":["french"],"goudron":["french"],"gouffre":["french"],"goulot":["french"],"goupille":["french"],"gourmand":["french"],"goutte":["french"],"graduel":["french"],"graffiti":["french"],"graine":["french"],"grand":["french"],"grappin":["french"],"gratuit":["french"],"gravir":["french"],"grenat":["french"],"griffure":["french"],"griller":["french"],"grimper":["french"],"grogner":["french"],"gronder":["french"],"grotte":["french"],"groupe":["french"],"gruger":["french"],"grutier":["french"],"gruyère":["french"],"guépard":["french"],"guerrier":["french"],"guimauve":["french"],"guitare":["french"],"gustatif":["french"],"gymnaste":["french"],"gyrostat":["french"],"habitude":["french"],"hachoir":["french"],"halte":["french"],"hameau":["french"],"hangar":["french","turkish"],"hanneton":["french"],"haricot":["french"],"harmonie":["french"],"harpon":["french"],"hasard":["french"],"hélium":["french"],"hématome":["french"],"herbe":["french"],"hérisson":["french"],"hermine":["french"],"héron":["french"],"hésiter":["french"],"heureux":["french"],"hiberner":["french"],"hibou":["french"],"hilarant":["french"],"histoire":["french"],"hiver":["french"],"homard":["french"],"hommage":["french"],"homogène":["french"],"honneur":["french"],"honorer":["french"],"honteux":["french"],"horde":["french"],"horizon":["french"],"horloge":["french"],"hormone":["french"],"horrible":["french"],"houleux":["french"],"housse":["french"],"hublot":["french"],"huileux":["french"],"humain":["french"],"humide":["french"],"humour":["french"],"hurler":["french"],"hydromel":["french"],"hygiène":["french"],"hymne":["french"],"hypnose":["french"],"idylle":["french"],"ignorer":["french"],"iguane":["french"],"illicite":["french"],"illusion":["french"],"imbiber":["french"],"imiter":["french"],"immobile":["french"],"immuable":["french"],"impérial":["french"],"implorer":["french"],"imposer":["french"],"imprimer":["french"],"imputer":["french"],"incarner":["french"],"incendie":["french"],"incident":["french"],"incliner":["french"],"incolore":["french"],"indexer":["french"],"indice":["french"],"inductif":["french"],"inédit":["french"],"ineptie":["french"],"inexact":["french"],"infini":["french"],"infliger":["french"],"informer":["french"],"infusion":["french"],"ingérer":["french"],"inhaler":["french"],"inhiber":["french"],"injecter":["french"],"injure":["french"],"inoculer":["french"],"inonder":["french"],"inscrire":["french"],"insecte":["french"],"insigne":["french"],"insolite":["french"],"inspirer":["french"],"instinct":["french"],"insulter":["french"],"intense":["french"],"intime":["french"],"intrigue":["french"],"intuitif":["french"],"inutile":["french"],"invasion":["french"],"inventer":["french"],"inviter":["french"],"invoquer":["french"],"ironique":["french"],"irradier":["french"],"irréel":["french"],"irriter":["french"],"isoler":["french"],"ivoire":["french"],"ivresse":["french"],"jaillir":["french"],"jambe":["french"],"janvier":["french"],"jardin":["french"],"jauger":["french"],"jaune":["french"],"javelot":["french"],"jetable":["french"],"jeton":["french"],"jeudi":["french"],"jeunesse":["french"],"joindre":["french"],"joncher":["french"],"jongler":["french"],"joueur":["french"],"jouissif":["french"],"journal":["french"],"jovial":["french"],"joyau":["french"],"joyeux":["french"],"jubiler":["french"],"jugement":["french"],"jupon":["french"],"juriste":["french"],"justice":["french"],"juteux":["french"],"juvénile":["french"],"kayak":["french"],"kimono":["french"],"kiosque":["french"],"labial":["french"],"labourer":["french"],"lacérer":["french"],"lactose":["french"],"lagune":["french"],"laine":["french"],"laisser":["french"],"laitier":["french"],"lambeau":["french"],"lamelle":["french"],"lampe":["french"],"lanceur":["french"],"langage":["french"],"lanterne":["french"],"lapin":["french"],"largeur":["french"],"larme":["french"],"laurier":["french"],"lavabo":["french"],"lavoir":["french"],"légal":["french"],"léger":["french"],"légume":["french"],"lessive":["french"],"lettre":["french"],"levier":["french"],"lexique":["french"],"lézard":["french"],"liasse":["french"],"libérer":["french"],"libre":["french"],"licence":["french"],"licorne":["french"],"liège":["french"],"lièvre":["french"],"ligature":["french"],"ligoter":["french"],"ligue":["french"],"limer":["french"],"limite":["french"],"limonade":["french"],"limpide":["french"],"linéaire":["french"],"lingot":["french"],"lionceau":["french"],"liquide":["french"],"lisière":["french"],"lister":["french"],"lithium":["french"],"litige":["french"],"littoral":["french"],"livreur":["french"],"logique":["french"],"lointain":["french"],"loisir":["french"],"lombric":["french"],"loterie":["french"],"louer":["french"],"lourd":["french"],"loutre":["french"],"louve":["french"],"lubie":["french"],"lucide":["french"],"lucratif":["french"],"lueur":["french"],"lugubre":["french"],"luisant":["french"],"lumière":["french"],"lunaire":["french"],"lundi":["french"],"luron":["french"],"lutter":["french"],"luxueux":["french"],"magasin":["french"],"magenta":["french"],"magique":["french"],"maigre":["french"],"maillon":["french"],"maintien":["french"],"mairie":["french"],"maison":["french"],"majorer":["french"],"malaxer":["french"],"maléfice":["french"],"malheur":["french"],"malice":["french"],"mallette":["french"],"mammouth":["french"],"mandater":["french"],"maniable":["french"],"manquant":["french"],"manteau":["french"],"manuel":["french"],"marathon":["french"],"marbre":["french"],"marchand":["french"],"mardi":["french"],"maritime":["french"],"marqueur":["french"],"marron":["french"],"marteler":["french"],"mascotte":["french"],"massif":["french"],"matériel":["french"],"matière":["french"],"matraque":["french"],"maudire":["french"],"maussade":["french"],"mauve":["french"],"maximal":["french"],"méchant":["french"],"méconnu":["french"],"médaille":["french"],"médecin":["french"],"méditer":["french"],"méduse":["french"],"meilleur":["french"],"mélange":["french"],"mélodie":["french"],"membre":["french"],"mémoire":["french"],"menacer":["french"],"mener":["french"],"menhir":["french"],"mensonge":["french"],"mentor":["french"],"mercredi":["french"],"mérite":["french"],"merle":["french"],"messager":["french"],"mesure":["french"],"métal":["french"],"météore":["french"],"méthode":["french"],"métier":["french"],"meuble":["french"],"miauler":["french"],"microbe":["french"],"miette":["french"],"mignon":["french"],"migrer":["french"],"milieu":["french"],"mimique":["french"],"mince":["french"],"minéral":["french"],"minimal":["french"],"minorer":["french"],"miroiter":["french"],"missile":["french"],"mixte":["french"],"moderne":["french"],"moelleux":["french"],"mondial":["french"],"moniteur":["french"],"monnaie":["french"],"monotone":["french"],"monstre":["french"],"montagne":["french"],"monument":["french"],"moqueur":["french"],"morceau":["french"],"morsure":["french"],"mortier":["french"],"moteur":["french"],"motif":["french"],"mouche":["french"],"moufle":["french"],"moulin":["french"],"mousson":["french"],"mouton":["french"],"mouvant":["french"],"multiple":["french"],"munition":["french"],"muraille":["french"],"murène":["french"],"murmure":["french"],"muséum":["french"],"musicien":["french"],"mutation":["french"],"muter":["french"],"mutuel":["french"],"myriade":["french"],"myrtille":["french"],"mystère":["french"],"mythique":["french"],"nageur":["french"],"nappe":["french"],"narquois":["french"],"narrer":["french"],"natation":["french"],"naufrage":["french"],"nautique":["french"],"navire":["french"],"nébuleux":["french"],"nectar":["french"],"néfaste":["french"],"négation":["french"],"négliger":["french"],"négocier":["french"],"neige":["french"],"nerveux":["french"],"nettoyer":["french"],"neurone":["french"],"neutron":["french"],"neveu":["french"],"niche":["french"],"nickel":["french"],"nitrate":["french"],"niveau":["french"],"nocif":["french"],"nocturne":["french"],"noirceur":["french"],"noisette":["french"],"nomade":["french"],"nombreux":["french"],"nommer":["french"],"normatif":["french"],"notifier":["french"],"notoire":["french"],"nourrir":["french"],"nouveau":["french"],"novateur":["french"],"novembre":["french"],"novice":["french"],"nuage":["french"],"nuancer":["french"],"nuire":["french"],"nuisible":["french"],"numéro":["french"],"nuptial":["french"],"nuque":["french"],"nutritif":["french"],"obéir":["french"],"objectif":["french"],"obliger":["french"],"obscur":["french"],"observer":["french"],"obstacle":["french"],"obtenir":["french"],"obturer":["french"],"occasion":["french"],"occuper":["french"],"océan":["french"],"octobre":["french"],"octroyer":["french"],"octupler":["french"],"oculaire":["french"],"odeur":["french"],"odorant":["french"],"offenser":["french"],"officier":["french"],"offrir":["french"],"ogive":["french"],"oiseau":["french"],"oisillon":["french"],"olfactif":["french"],"olivier":["french"],"ombrage":["french"],"omettre":["french"],"onctueux":["french"],"onduler":["french"],"onéreux":["french"],"onirique":["french"],"opale":["french"],"opaque":["french"],"opérer":["french"],"opportun":["french"],"opprimer":["french"],"opter":["french"],"optique":["french"],"orageux":["french"],"orbite":["french"],"ordonner":["french"],"oreille":["french"],"organe":["french"],"orgueil":["french"],"orifice":["french"],"ornement":["french"],"orque":["french"],"ortie":["french"],"osciller":["french"],"osmose":["french"],"ossature":["french"],"otarie":["french"],"ouragan":["french"],"ourson":["french"],"outil":["french"],"outrager":["french"],"ouvrage":["french"],"ovation":["french"],"oxyde":["french"],"oxygène":["french"],"paisible":["french"],"palmarès":["french"],"palourde":["french"],"palper":["french"],"panache":["french"],"pangolin":["french"],"paniquer":["french"],"panneau":["french"],"panorama":["french"],"pantalon":["french"],"papaye":["french"],"papier":["french"],"papoter":["french"],"papyrus":["french"],"paradoxe":["french"],"parcelle":["french"],"paresse":["french"],"parfumer":["french"],"parler":["french"],"parole":["french"],"parrain":["french"],"parsemer":["french"],"partager":["french"],"parure":["french"],"parvenir":["french"],"passion":["french"],"pastèque":["french"],"paternel":["french"],"patience":["french"],"patron":["french","turkish"],"pavillon":["french"],"pavoiser":["french"],"payer":["french"],"paysage":["french"],"peigne":["french"],"peintre":["french"],"pelage":["french"],"pélican":["french"],"pelle":["french"],"pelouse":["french"],"peluche":["french"],"pendule":["french"],"pénétrer":["french"],"pénible":["french"],"pensif":["french"],"pénurie":["french"],"pépite":["french"],"péplum":["french"],"perdrix":["french"],"perforer":["french"],"période":["french"],"permuter":["french"],"perplexe":["french"],"persil":["french"],"perte":["french"],"peser":["french"],"pétale":["french"],"petit":["french"],"pétrir":["french"],"peuple":["french"],"pharaon":["french"],"phobie":["french"],"phoque":["french"],"photon":["french"],"physique":["french"],"pictural":["french"],"pièce":["french"],"pierre":["french"],"pieuvre":["french"],"pilote":["french"],"pinceau":["french"],"pipette":["french"],"piquer":["french"],"pirogue":["french"],"piscine":["french"],"piston":["french"],"pivoter":["french"],"pixel":["french"],"placard":["french"],"plafond":["french"],"plaisir":["french"],"planer":["french"],"plaque":["french"],"plastron":["french"],"plateau":["french"],"pleurer":["french"],"plexus":["french"],"pliage":["french"],"plomb":["french"],"plonger":["french"],"pluie":["french"],"plumage":["french"],"pochette":["french"],"poésie":["french"],"poète":["french"],"pointe":["french"],"poirier":["french"],"poisson":["french"],"poivre":["french"],"polaire":["french"],"policier":["french"],"pollen":["french"],"polygone":["french"],"pommade":["french"],"pompier":["french"],"ponctuel":["french"],"pondérer":["french"],"poney":["french"],"portique":["french"],"posséder":["french"],"posture":["french"],"potager":["french"],"poteau":["french"],"potion":["french"],"pouce":["french"],"poulain":["french"],"poumon":["french"],"pourpre":["french"],"poussin":["french"],"pouvoir":["french"],"prairie":["french"],"pratique":["french"],"précieux":["french"],"prédire":["french"],"préfixe":["french"],"prélude":["french"],"prénom":["french"],"présence":["french"],"prétexte":["french"],"prévoir":["french"],"primitif":["french"],"prince":["french"],"priver":["french"],"problème":["french"],"procéder":["french"],"prodige":["french"],"profond":["french"],"progrès":["french"],"proie":["french"],"projeter":["french"],"prologue":["french"],"promener":["french"],"propre":["french"],"prospère":["french"],"protéger":["french"],"prouesse":["french"],"proverbe":["french"],"prudence":["french"],"pruneau":["french"],"psychose":["french"],"puceron":["french"],"puiser":["french"],"pulpe":["french"],"pulsar":["french"],"punaise":["french"],"punitif":["french"],"pupitre":["french"],"purifier":["french"],"pyramide":["french"],"quasar":["french"],"querelle":["french"],"quiétude":["french"],"quitter":["french"],"quotient":["french"],"racine":["french"],"raconter":["french"],"radieux":["french"],"ragondin":["french"],"raideur":["french"],"raisin":["french"],"ralentir":["french"],"rallonge":["french"],"ramasser":["french"],"rapide":["french"],"rasage":["french"],"ratisser":["french"],"ravager":["french"],"ravin":["french"],"rayonner":["french"],"réactif":["french"],"réagir":["french"],"réaliser":["french"],"réanimer":["french"],"recevoir":["french"],"réciter":["french"],"réclamer":["french"],"récolter":["french"],"recruter":["french"],"reculer":["french"],"recycler":["french"],"rédiger":["french"],"redouter":["french"],"refaire":["french"],"réflexe":["french"],"réformer":["french"],"refrain":["french"],"refuge":["french"],"régalien":["french"],"région":["french"],"réglage":["french"],"régulier":["french"],"réitérer":["french"],"rejeter":["french"],"rejouer":["french"],"relatif":["french"],"relever":["french"],"remarque":["french"],"remède":["french"],"remise":["french"],"remonter":["french"],"remplir":["french"],"remuer":["french"],"renard":["french"],"renfort":["french"],"renifler":["french"],"renoncer":["french"],"rentrer":["french"],"renvoi":["french"],"replier":["french"],"reporter":["french"],"reprise":["french"],"reptile":["french"],"requin":["french"],"réserve":["french"],"résineux":["french"],"résoudre":["french"],"respect":["french"],"rester":["french"],"résultat":["french"],"rétablir":["french"],"retenir":["french"],"réticule":["french"],"retomber":["french"],"retracer":["french"],"réunion":["french"],"réussir":["french"],"revanche":["french"],"revivre":["french"],"révolte":["french"],"révulsif":["french"],"richesse":["french"],"rideau":["french"],"rieur":["french"],"rigide":["french"],"rigoler":["french"],"rincer":["french"],"riposter":["french"],"risible":["french"],"risque":["french"],"rituel":["french"],"rivière":["french"],"rocheux":["french"],"rompre":["french"],"ronce":["french"],"rondin":["french"],"roseau":["french"],"rosier":["french"],"rotatif":["french"],"rotor":["french"],"rotule":["french"],"rouge":["french"],"rouille":["french"],"rouleau":["french"],"routine":["french"],"royaume":["french"],"ruban":["french"],"rubis":["french"],"ruche":["french"],"ruelle":["french"],"rugueux":["french"],"ruiner":["french"],"ruisseau":["french"],"ruser":["french"],"rustique":["french"],"rythme":["french"],"sabler":["french"],"saboter":["french"],"sabre":["french"],"sacoche":["french"],"safari":["french"],"sagesse":["french"],"saisir":["french"],"salade":["french"],"salive":["french"],"saluer":["french"],"samedi":["french"],"sanction":["french"],"sanglier":["french"],"sarcasme":["french"],"sardine":["french"],"saturer":["french"],"saugrenu":["french"],"saumon":["french"],"sauter":["french"],"sauvage":["french"],"savant":["french"],"savonner":["french"],"scalpel":["french"],"scandale":["french"],"scélérat":["french"],"scénario":["french"],"sceptre":["french"],"schéma":["french"],"scinder":["french"],"score":["french"],"scrutin":["french"],"sculpter":["french"],"séance":["french"],"sécable":["french"],"sécher":["french"],"secouer":["french"],"sécréter":["french"],"sédatif":["french"],"séduire":["french"],"seigneur":["french"],"séjour":["french"],"sélectif":["french"],"semaine":["french"],"sembler":["french"],"semence":["french"],"séminal":["french"],"sénateur":["french"],"sensible":["french"],"séparer":["french"],"séquence":["french"],"serein":["french"],"sergent":["french"],"sérieux":["french"],"serrure":["french"],"sérum":["french"],"sésame":["french"],"sévir":["french"],"sevrage":["french"],"sextuple":["french"],"sidéral":["french"],"siècle":["french"],"siéger":["french"],"siffler":["french"],"sigle":["french"],"signal":["french"],"silence":["french"],"silicium":["french"],"sincère":["french"],"sinistre":["french"],"siphon":["french"],"sirop":["french"],"sismique":["french"],"situer":["french"],"skier":["french"],"socle":["french"],"sodium":["french"],"soigneux":["french"],"soldat":["french"],"soleil":["french"],"solitude":["french"],"soluble":["french"],"sombre":["french"],"sommeil":["french"],"somnoler":["french"],"sonde":["french"],"songeur":["french"],"sonnette":["french"],"sonore":["french"],"sorcier":["french"],"sortir":["french"],"sosie":["french"],"sottise":["french"],"soucieux":["french"],"soudure":["french"],"souffle":["french"],"soulever":["french"],"soupape":["french"],"soutirer":["french"],"souvenir":["french"],"spacieux":["french"],"spécial":["french"],"sphère":["french"],"spiral":["french","turkish"],"station":["french"],"sternum":["french"],"stimulus":["french"],"stipuler":["french"],"strict":["french"],"studieux":["french"],"stupeur":["french"],"styliste":["french"],"sublime":["french"],"substrat":["french"],"subtil":["french"],"subvenir":["french"],"succès":["french"],"sucre":["french"],"suffixe":["french"],"suggérer":["french"],"suiveur":["french"],"sulfate":["french"],"superbe":["french"],"supplier":["french"],"suricate":["french"],"surmener":["french"],"sursaut":["french"],"survie":["french"],"syllabe":["french"],"symbole":["french"],"symétrie":["french"],"synapse":["french"],"syntaxe":["french"],"système":["french"],"tabac":["french"],"tablier":["french"],"tactile":["french"],"tailler":["french"],"talisman":["french"],"talonner":["french"],"tambour":["french"],"tamiser":["french"],"tangible":["french"],"tapis":["french"],"taquiner":["french"],"tarder":["french"],"tarif":["french"],"tartine":["french"],"tasse":["french"],"tatami":["french"],"tatouage":["french"],"taupe":["french"],"taureau":["french"],"taxer":["french"],"témoin":["french"],"temporel":["french"],"tenaille":["french"],"tendre":["french"],"teneur":["french"],"tenir":["french"],"tension":["french"],"terminer":["french"],"terne":["french"],"terrible":["french"],"tétine":["french"],"texte":["french"],"thème":["french"],"théorie":["french"],"thérapie":["french"],"thorax":["french"],"tibia":["french"],"tiède":["french"],"timide":["french"],"tirelire":["french"],"tiroir":["french"],"tissu":["french"],"titane":["french"],"titre":["french"],"tituber":["french"],"toboggan":["french"],"tolérant":["french"],"tomate":["french"],"tonique":["french"],"tonneau":["french"],"toponyme":["french"],"torche":["french"],"tordre":["french"],"tornade":["french"],"torpille":["french"],"torrent":["french"],"torse":["french"],"tortue":["french"],"totem":["french"],"toucher":["french"],"tournage":["french"],"tousser":["french"],"toxine":["french"],"traction":["french"],"trafic":["french"],"tragique":["french"],"trahir":["french"],"trancher":["french"],"travail":["french"],"trèfle":["french"],"tremper":["french"],"trésor":["french"],"treuil":["french"],"triage":["french"],"tribunal":["french"],"tricoter":["french"],"trilogie":["french"],"triomphe":["french"],"tripler":["french"],"triturer":["french"],"trivial":["french"],"trombone":["french"],"tronc":["french"],"tropical":["french"],"troupeau":["french"],"tuile":["french"],"tulipe":["french"],"tumulte":["french"],"turbine":["french"],"tuteur":["french"],"tutoyer":["french"],"tuyau":["french"],"tympan":["french"],"typhon":["french"],"typique":["french"],"tyran":["french"],"ubuesque":["french"],"ultime":["french"],"ultrason":["french"],"unanime":["french"],"unifier":["french"],"union":["french"],"unitaire":["french"],"univers":["french"],"uranium":["french"],"urbain":["french"],"urticant":["french"],"usine":["french"],"usuel":["french"],"usure":["french"],"utile":["french"],"utopie":["french"],"vacarme":["french"],"vaccin":["french"],"vagabond":["french"],"vaillant":["french"],"vaincre":["french"],"vaisseau":["french"],"valable":["french"],"valise":["french"],"vallon":["french"],"vampire":["french"],"vanille":["french"],"vapeur":["french"],"varier":["french"],"vaseux":["french"],"vassal":["french"],"vaste":["french"],"vecteur":["french"],"vedette":["french"],"végétal":["french"],"véhicule":["french"],"veinard":["french"],"véloce":["french"],"vendredi":["french"],"vénérer":["french"],"venger":["french"],"venimeux":["french"],"ventouse":["french"],"verdure":["french"],"vérin":["french"],"vernir":["french"],"verrou":["french"],"verser":["french"],"vertu":["french"],"veston":["french"],"vétéran":["french"],"vétuste":["french"],"vexant":["french"],"vexer":["french"],"viaduc":["french"],"viande":["french"],"victoire":["french"],"vidange":["french"],"vidéo":["french"],"vignette":["french"],"vigueur":["french"],"vilain":["french"],"vinaigre":["french"],"violon":["french"],"vipère":["french"],"virement":["french"],"virtuose":["french"],"visage":["french"],"viseur":["french"],"vision":["french"],"visqueux":["french"],"visuel":["french"],"vitesse":["french"],"viticole":["french"],"vitrine":["french"],"vivace":["french"],"vivipare":["french"],"vocation":["french"],"voguer":["french"],"voile":["french"],"voisin":["french"],"voiture":["french"],"volaille":["french"],"volcan":["french"],"voltiger":["french"],"vorace":["french"],"vortex":["french"],"voter":["french"],"vouloir":["french"],"voyelle":["french"],"xénon":["french"],"yacht":["french"],"zèbre":["french"],"zénith":["french"],"zeste":["french"],"zoologie":["french"],"abaco":["italian"],"abbaglio":["italian"],"abbinato":["italian"],"abete":["italian"],"abisso":["italian"],"abolire":["italian"],"abrasivo":["italian"],"abrogato":["italian"],"accadere":["italian"],"accenno":["italian"],"accusato":["italian"],"acetone":["italian"],"achille":["italian"],"acido":["italian"],"acqua":["italian"],"acre":["italian"],"acrilico":["italian"],"acrobata":["italian"],"acuto":["italian"],"adagio":["italian"],"addebito":["italian"],"addome":["italian"],"adeguato":["italian"],"aderire":["italian"],"adipe":["italian"],"adottare":["italian"],"adulare":["italian"],"affabile":["italian"],"affetto":["italian"],"affisso":["italian"],"affranto":["italian"],"aforisma":["italian"],"afoso":["italian"],"africano":["italian"],"agave":["italian"],"agente":["italian"],"agevole":["italian"],"aggancio":["italian"],"agire":["italian"],"agitare":["italian"],"agonismo":["italian"],"agricolo":["italian"],"agrumeto":["italian"],"aguzzo":["italian"],"alabarda":["italian"],"alato":["italian"],"albatro":["italian"],"alberato":["italian"],"albo":["italian"],"albume":["italian"],"alce":["italian"],"alcolico":["italian"],"alettone":["italian"],"alfa":["italian"],"algebra":["italian"],"aliante":["italian"],"alibi":["italian"],"alimento":["italian"],"allagato":["italian"],"allegro":["italian"],"allievo":["italian"],"allodola":["italian"],"allusivo":["italian"],"almeno":["italian"],"alogeno":["italian"],"alpaca":["italian"],"alpestre":["italian"],"altalena":["italian"],"alterno":["italian"],"alticcio":["italian"],"altrove":["italian"],"alunno":["italian"],"alveolo":["italian"],"alzare":["italian"],"amalgama":["italian"],"amanita":["italian"],"amarena":["italian"],"ambito":["italian"],"ambrato":["italian"],"ameba":["italian"],"america":["italian"],"ametista":["italian"],"amico":["italian"],"ammasso":["italian"],"ammenda":["italian"],"ammirare":["italian"],"ammonito":["italian"],"amore":["italian"],"ampio":["italian"],"ampliare":["italian"],"amuleto":["italian"],"anacardo":["italian"],"anagrafe":["italian"],"analista":["italian"],"anarchia":["italian"],"anatra":["italian"],"anca":["italian"],"ancella":["italian"],"ancora":["italian"],"andare":["italian"],"andrea":["italian"],"anello":["italian"],"angelo":["italian"],"angolare":["italian"],"angusto":["italian"],"anima":["italian"],"annegare":["italian"],"annidato":["italian"],"anno":["italian"],"annuncio":["italian"],"anonimo":["italian"],"anticipo":["italian"],"anzi":["italian"],"apatico":["italian"],"apertura":["italian"],"apode":["italian"],"apparire":["italian"],"appetito":["italian"],"appoggio":["italian"],"approdo":["italian"],"appunto":["italian"],"aprile":["italian"],"arabica":["italian"],"arachide":["italian"],"aragosta":["italian"],"araldica":["italian"],"arancio":["italian"],"aratura":["italian"],"arazzo":["italian"],"arbitro":["italian"],"archivio":["italian"],"ardito":["italian"],"arenile":["italian"],"argento":["italian"],"argine":["italian"],"arguto":["italian"],"aria":["italian"],"armonia":["italian"],"arnese":["italian"],"arredato":["italian"],"arringa":["italian"],"arrosto":["italian"],"arsenico":["italian"],"arso":["italian"],"artefice":["italian"],"arzillo":["italian"],"asciutto":["italian"],"ascolto":["italian"],"asepsi":["italian"],"asettico":["italian"],"asfalto":["italian"],"asino":["italian"],"asola":["italian"],"aspirato":["italian"],"aspro":["italian"],"assaggio":["italian"],"asse":["italian"],"assoluto":["italian"],"assurdo":["italian"],"asta":["italian"],"astenuto":["italian"],"astice":["italian"],"astratto":["italian"],"atavico":["italian"],"ateismo":["italian"],"atomico":["italian"],"atono":["italian"],"attesa":["italian"],"attivare":["italian"],"attorno":["italian"],"attrito":["italian"],"attuale":["italian"],"ausilio":["italian"],"austria":["italian"],"autista":["italian"],"autonomo":["italian"],"autunno":["italian"],"avanzato":["italian"],"avere":["italian"],"avvenire":["italian"],"avviso":["italian"],"avvolgere":["italian"],"azione":["italian"],"azoto":["italian"],"azzimo":["italian"],"azzurro":["italian"],"babele":["italian"],"baccano":["italian"],"bacino":["italian"],"baco":["italian"],"badessa":["italian"],"badilata":["italian"],"bagnato":["italian"],"baita":["italian"],"balcone":["italian"],"baldo":["italian"],"balena":["italian"],"ballata":["italian"],"balzano":["italian"],"bambino":["italian"],"bandire":["italian"],"baraonda":["italian"],"barbaro":["italian"],"barca":["italian"],"baritono":["italian"],"barlume":["italian"],"barocco":["italian"],"basilico":["italian"],"basso":["italian"],"batosta":["italian"],"battuto":["italian"],"baule":["italian"],"bava":["italian"],"bavosa":["italian"],"becco":["italian"],"beffa":["italian"],"belgio":["italian"],"belva":["italian"],"benda":["italian"],"benevole":["italian"],"benigno":["italian"],"benzina":["italian"],"bere":["italian"],"berlina":["italian"],"beta":["italian"],"bibita":["italian"],"bici":["italian"],"bidone":["italian"],"bifido":["italian"],"biga":["italian"],"bilancia":["italian"],"bimbo":["italian"],"binocolo":["italian"],"biologo":["italian"],"bipede":["italian"],"bipolare":["italian"],"birbante":["italian"],"birra":["italian"],"biscotto":["italian"],"bisesto":["italian"],"bisnonno":["italian"],"bisonte":["italian"],"bisturi":["italian"],"bizzarro":["italian"],"blando":["italian"],"blatta":["italian"],"bollito":["italian"],"bonifico":["italian"],"bordo":["italian"],"bosco":["italian"],"botanico":["italian"],"bottino":["italian"],"bozzolo":["italian"],"braccio":["italian"],"bradipo":["italian"],"brama":["italian"],"branca":["italian"],"bravura":["italian"],"bretella":["italian"],"brevetto":["italian"],"brezza":["italian"],"briglia":["italian"],"brillante":["italian"],"brindare":["italian"],"broccolo":["italian"],"brodo":["italian"],"bronzina":["italian"],"brullo":["italian"],"bruno":["italian"],"bubbone":["italian"],"buca":["italian"],"budino":["italian"],"buffone":["italian"],"buio":["italian"],"bulbo":["italian"],"buono":["italian"],"burlone":["italian"],"burrasca":["italian"],"bussola":["italian"],"busta":["italian"],"cadetto":["italian"],"caduco":["italian"],"calamaro":["italian"],"calcolo":["italian"],"calesse":["italian"],"calibro":["italian"],"calmo":["italian"],"caloria":["italian"],"cambusa":["italian"],"camerata":["italian"],"camicia":["italian"],"cammino":["italian"],"camola":["italian"],"campale":["italian"],"canapa":["italian"],"candela":["italian"],"cane":["italian"],"canino":["italian"],"canotto":["italian"],"cantina":["italian"],"capace":["italian"],"capello":["italian"],"capitolo":["italian"],"capogiro":["italian"],"cappero":["italian"],"capra":["italian"],"capsula":["italian"],"carapace":["italian"],"carcassa":["italian"],"cardo":["italian"],"carisma":["italian"],"carovana":["italian"],"carretto":["italian"],"cartolina":["italian"],"casaccio":["italian"],"cascata":["italian"],"caserma":["italian"],"caso":["italian"],"cassone":["italian"],"castello":["italian"],"casuale":["italian"],"catasta":["italian"],"catena":["italian"],"catrame":["italian"],"cauto":["italian"],"cavillo":["italian"],"cedibile":["italian"],"cedrata":["italian"],"cefalo":["italian"],"celebre":["italian"],"cellulare":["italian"],"cena":["italian"],"cenone":["italian"],"centesimo":["italian"],"ceramica":["italian"],"cercare":["italian"],"certo":["italian"],"cerume":["italian"],"cervello":["italian"],"cesoia":["italian"],"cespo":["italian"],"ceto":["italian"],"chela":["italian"],"chiaro":["italian"],"chicca":["italian"],"chiedere":["italian"],"chimera":["italian"],"china":["italian"],"chirurgo":["italian"],"chitarra":["italian"],"ciao":["italian"],"ciclismo":["italian"],"cifrare":["italian"],"cigno":["italian"],"cilindro":["italian"],"ciottolo":["italian"],"circa":["italian"],"cirrosi":["italian"],"citrico":["italian"],"cittadino":["italian"],"ciuffo":["italian"],"civetta":["italian"],"civile":["italian"],"classico":["italian"],"clinica":["italian"],"cloro":["italian"],"cocco":["italian"],"codardo":["italian"],"codice":["italian"],"coerente":["italian"],"cognome":["italian"],"collare":["italian"],"colmato":["italian"],"colore":["italian"],"colposo":["italian"],"coltivato":["italian"],"colza":["italian"],"coma":["italian"],"cometa":["italian"],"commando":["italian"],"comodo":["italian"],"computer":["italian"],"comune":["italian"],"conciso":["italian"],"condurre":["italian"],"conferma":["italian"],"congelare":["italian"],"coniuge":["italian"],"connesso":["italian"],"conoscere":["italian"],"consumo":["italian"],"continuo":["italian"],"convegno":["italian"],"coperto":["italian"],"copione":["italian"],"coppia":["italian"],"copricapo":["italian"],"corazza":["italian"],"cordata":["italian"],"coricato":["italian"],"cornice":["italian"],"corolla":["italian"],"corpo":["italian"],"corredo":["italian"],"corsia":["italian"],"cortese":["italian"],"cosmico":["italian"],"costante":["italian"],"cottura":["italian"],"covato":["italian"],"cratere":["italian"],"cravatta":["italian"],"creato":["italian"],"credere":["italian"],"cremoso":["italian"],"crescita":["italian"],"creta":["italian"],"criceto":["italian"],"crinale":["italian"],"crisi":["italian"],"critico":["italian"],"croce":["italian"],"cronaca":["italian"],"crostata":["italian"],"cruciale":["italian"],"crusca":["italian"],"cucire":["italian"],"cuculo":["italian"],"cugino":["italian"],"cullato":["italian"],"cupola":["italian"],"curatore":["italian"],"cursore":["italian"],"curvo":["italian"],"cuscino":["italian"],"custode":["italian"],"dado":["italian"],"daino":["italian"],"dalmata":["italian"],"damerino":["italian"],"daniela":["italian"],"dannoso":["italian"],"danzare":["italian"],"datato":["italian"],"davanti":["italian"],"davvero":["italian"],"debutto":["italian"],"decennio":["italian"],"deciso":["italian"],"declino":["italian"],"decollo":["italian"],"decreto":["italian"],"dedicato":["italian"],"definito":["italian"],"deforme":["italian"],"degno":["italian"],"delegare":["italian"],"delfino":["italian"],"delirio":["italian"],"delta":["italian"],"demenza":["italian"],"denotato":["italian"],"dentro":["italian"],"deposito":["italian"],"derapata":["italian"],"derivare":["italian"],"deroga":["italian"],"descritto":["italian"],"deserto":["italian"],"desiderio":["italian"],"desumere":["italian"],"detersivo":["italian"],"devoto":["italian"],"diametro":["italian"],"dicembre":["italian"],"diedro":["italian"],"difeso":["italian"],"diffuso":["italian"],"digerire":["italian"],"digitale":["italian"],"diluvio":["italian"],"dinamico":["italian"],"dinnanzi":["italian"],"dipinto":["italian"],"diploma":["italian"],"dipolo":["italian"],"diradare":["italian"],"dire":["italian"],"dirotto":["italian"],"dirupo":["italian"],"disagio":["italian"],"discreto":["italian"],"disfare":["italian"],"disgelo":["italian"],"disposto":["italian"],"distanza":["italian"],"disumano":["italian"],"dito":["italian"],"divano":["italian"],"divelto":["italian"],"dividere":["italian"],"divorato":["italian"],"doblone":["italian"],"docente":["italian"],"doganale":["italian"],"dogma":["italian"],"dolce":["italian"],"domato":["italian"],"domenica":["italian"],"dominare":["italian"],"dondolo":["italian"],"dono":["italian"],"dormire":["italian"],"dote":["italian"],"dottore":["italian"],"dovuto":["italian"],"dozzina":["italian"],"drago":["italian"],"druido":["italian"],"dubbio":["italian"],"dubitare":["italian"],"ducale":["italian"],"duna":["italian"],"duomo":["italian"],"duplice":["italian"],"duraturo":["italian"],"ebano":["italian"],"eccesso":["italian"],"ecco":["italian"],"eclissi":["italian"],"economia":["italian"],"edera":["italian"],"edicola":["italian"],"edile":["italian"],"editoria":["italian"],"educare":["italian"],"egemonia":["italian"],"egli":["italian"],"egoismo":["italian"],"egregio":["italian"],"elaborato":["italian"],"elargire":["italian"],"elegante":["italian"],"elencato":["italian"],"eletto":["italian"],"elevare":["italian"],"elfico":["italian"],"elica":["italian"],"elmo":["italian"],"elsa":["italian"],"eluso":["italian"],"emanato":["italian"],"emblema":["italian"],"emesso":["italian"],"emiro":["italian"],"emotivo":["italian"],"emozione":["italian"],"empirico":["italian"],"emulo":["italian"],"endemico":["italian"],"enduro":["italian"],"energia":["italian"],"enfasi":["italian"],"enoteca":["italian"],"entrare":["italian"],"enzima":["italian"],"epatite":["italian"],"epilogo":["italian"],"episodio":["italian"],"epocale":["italian"],"eppure":["italian"],"equatore":["italian"],"erario":["italian"],"erba":["italian"],"erboso":["italian"],"erede":["italian"],"eremita":["italian"],"erigere":["italian"],"ermetico":["italian"],"eroe":["italian"],"erosivo":["italian"],"errante":["italian"],"esagono":["italian"],"esame":["italian"],"esanime":["italian"],"esaudire":["italian"],"esca":["italian"],"esempio":["italian"],"esercito":["italian"],"esibito":["italian"],"esigente":["italian"],"esistere":["italian"],"esito":["italian"],"esofago":["italian"],"esortato":["italian"],"esoso":["italian"],"espanso":["italian"],"espresso":["italian"],"essenza":["italian"],"esso":["italian"],"esteso":["italian"],"estimare":["italian"],"estonia":["italian"],"estroso":["italian"],"esultare":["italian"],"etilico":["italian"],"etnico":["italian"],"etrusco":["italian"],"etto":["italian"],"euclideo":["italian"],"europa":["italian"],"evaso":["italian"],"evidenza":["italian"],"evitato":["italian"],"evoluto":["italian"],"evviva":["italian"],"fabbrica":["italian"],"faccenda":["italian"],"fachiro":["italian"],"falco":["italian"],"famiglia":["italian"],"fanale":["italian"],"fanfara":["italian"],"fango":["italian"],"fantasma":["italian"],"fare":["italian"],"farfalla":["italian"],"farinoso":["italian"],"farmaco":["italian"],"fascia":["italian"],"fastoso":["italian"],"fasullo":["italian"],"faticare":["italian"],"fato":["italian"],"favoloso":["italian"],"febbre":["italian"],"fecola":["italian"],"fede":["italian"],"fegato":["italian"],"felpa":["italian"],"feltro":["italian"],"femmina":["italian"],"fendere":["italian"],"fenomeno":["italian"],"fermento":["italian"],"ferro":["italian"],"fertile":["italian"],"fessura":["italian"],"festivo":["italian"],"fetta":["italian"],"feudo":["italian"],"fiaba":["italian"],"fiducia":["italian"],"fifa":["italian"],"figurato":["italian"],"filo":["italian","turkish"],"finanza":["italian"],"finestra":["italian"],"finire":["italian"],"fiore":["italian"],"fiscale":["italian"],"fisico":["italian"],"fiume":["italian"],"flacone":["italian"],"flamenco":["italian"],"flebo":["italian"],"flemma":["italian"],"florido":["italian"],"fluente":["italian"],"fluoro":["italian"],"fobico":["italian"],"focaccia":["italian"],"focoso":["italian"],"foderato":["italian"],"foglio":["italian"],"folata":["italian"],"folclore":["italian"],"folgore":["italian"],"fondente":["italian"],"fonetico":["italian"],"fonia":["italian"],"fontana":["italian"],"forbito":["italian"],"forchetta":["italian"],"foresta":["italian"],"formica":["italian"],"fornaio":["italian"],"foro":["italian"],"fortezza":["italian"],"forzare":["italian"],"fosfato":["italian"],"fosso":["italian"],"fracasso":["italian"],"frana":["italian"],"frassino":["italian"],"fratello":["italian"],"freccetta":["italian"],"frenata":["italian"],"fresco":["italian"],"frigo":["italian"],"frollino":["italian"],"fronde":["italian"],"frugale":["italian"],"frutta":["italian"],"fucilata":["italian"],"fucsia":["italian"],"fuggente":["italian"],"fulmine":["italian"],"fulvo":["italian"],"fumante":["italian"],"fumetto":["italian"],"fumoso":["italian"],"fune":["italian"],"funzione":["italian"],"fuoco":["italian"],"furbo":["italian"],"furgone":["italian"],"furore":["italian"],"fuso":["italian"],"futile":["italian"],"gabbiano":["italian"],"gaffe":["italian"],"galateo":["italian"],"gallina":["italian"],"galoppo":["italian"],"gambero":["italian"],"gamma":["italian"],"garanzia":["italian"],"garbo":["italian"],"garofano":["italian"],"garzone":["italian"],"gasdotto":["italian"],"gasolio":["italian"],"gastrico":["italian"],"gatto":["italian"],"gaudio":["italian"],"gazebo":["italian"],"gazzella":["italian"],"geco":["italian"],"gelatina":["italian"],"gelso":["italian"],"gemello":["italian"],"gemmato":["italian"],"gene":["italian"],"genitore":["italian"],"gennaio":["italian"],"genotipo":["italian"],"gergo":["italian"],"ghepardo":["italian"],"ghiaccio":["italian"],"ghisa":["italian"],"giallo":["italian"],"gilda":["italian"],"ginepro":["italian"],"giocare":["italian"],"gioiello":["italian"],"giorno":["italian"],"giove":["italian"],"girato":["italian"],"girone":["italian"],"gittata":["italian"],"giudizio":["italian"],"giurato":["italian"],"giusto":["italian"],"globulo":["italian"],"glutine":["italian"],"gnomo":["italian"],"gobba":["italian"],"golf":["italian"],"gomito":["italian"],"gommone":["italian"],"gonfio":["italian"],"gonna":["italian"],"governo":["italian"],"gracile":["italian"],"grado":["italian"],"grafico":["italian"],"grammo":["italian"],"grande":["italian"],"grattare":["italian"],"gravoso":["italian"],"grazia":["italian"],"greca":["italian"],"gregge":["italian"],"grifone":["italian"],"grigio":["italian"],"grinza":["italian"],"grotta":["italian"],"gruppo":["italian"],"guadagno":["italian"],"guaio":["italian"],"guanto":["italian"],"guardare":["italian"],"gufo":["italian"],"guidare":["italian"],"ibernato":["italian"],"icona":["italian"],"identico":["italian"],"idillio":["italian"],"idolo":["italian"],"idra":["italian"],"idrico":["italian"],"idrogeno":["italian"],"igiene":["italian"],"ignaro":["italian"],"ignorato":["italian"],"ilare":["italian"],"illeso":["italian"],"illogico":["italian"],"illudere":["italian"],"imballo":["italian"],"imbevuto":["italian"],"imbocco":["italian"],"imbuto":["italian"],"immane":["italian"],"immerso":["italian"],"immolato":["italian"],"impacco":["italian"],"impeto":["italian"],"impiego":["italian"],"importo":["italian"],"impronta":["italian"],"inalare":["italian"],"inarcare":["italian"],"inattivo":["italian"],"incanto":["italian"],"incendio":["italian"],"inchino":["italian"],"incisivo":["italian"],"incluso":["italian"],"incontro":["italian"],"incrocio":["italian"],"incubo":["italian"],"indagine":["italian"],"india":["italian"],"indole":["italian"],"inedito":["italian"],"infatti":["italian"],"infilare":["italian"],"inflitto":["italian"],"ingaggio":["italian"],"ingegno":["italian"],"inglese":["italian"],"ingordo":["italian"],"ingrosso":["italian"],"innesco":["italian"],"inodore":["italian"],"inoltrare":["italian"],"inondato":["italian"],"insano":["italian"],"insetto":["italian"],"insieme":["italian"],"insonnia":["italian"],"insulina":["italian"],"intasato":["italian"],"intero":["italian"],"intonaco":["italian"],"intuito":["italian"],"inumidire":["italian"],"invalido":["italian"],"invece":["italian"],"invito":["italian"],"iperbole":["italian"],"ipnotico":["italian"],"ipotesi":["italian"],"ippica":["italian"],"iride":["italian"],"irlanda":["italian"],"ironico":["italian"],"irrigato":["italian"],"irrorare":["italian"],"isolato":["italian"],"isotopo":["italian"],"isterico":["italian"],"istituto":["italian"],"istrice":["italian"],"italia":["italian"],"iterare":["italian"],"labbro":["italian"],"labirinto":["italian"],"lacca":["italian"],"lacerato":["italian"],"lacrima":["italian"],"lacuna":["italian"],"laddove":["italian"],"lago":["italian"],"lampo":["italian"],"lancetta":["italian"],"lanterna":["italian"],"lardoso":["italian"],"larga":["italian"],"laringe":["italian"],"lastra":["italian"],"latenza":["italian"],"latino":["italian"],"lattuga":["italian"],"lavagna":["italian"],"lavoro":["italian"],"legale":["italian"],"leggero":["italian"],"lembo":["italian"],"lentezza":["italian"],"lenza":["italian"],"leone":["italian"],"lepre":["italian"],"lesivo":["italian"],"lessato":["italian"],"lesto":["italian"],"letterale":["italian"],"leva":["italian"],"levigato":["italian"],"libero":["italian"],"lido":["italian"],"lievito":["italian"],"lilla":["italian"],"limatura":["italian"],"limitare":["italian"],"limpido":["italian"],"lineare":["italian"],"lingua":["italian"],"liquido":["italian"],"lira":["italian"],"lirica":["italian"],"lisca":["italian"],"lite":["italian"],"litigio":["italian"],"livrea":["italian"],"locanda":["italian"],"lode":["italian"],"logica":["italian"],"lombare":["italian"],"londra":["italian"],"longevo":["italian"],"loquace":["italian"],"lorenzo":["italian"],"loto":["italian"],"lotteria":["italian"],"luce":["italian"],"lucidato":["italian"],"lumaca":["italian"],"luminoso":["italian"],"lungo":["italian"],"lupo":["italian"],"luppolo":["italian"],"lusinga":["italian"],"lusso":["italian"],"lutto":["italian"],"macabro":["italian"],"macchina":["italian"],"macero":["italian"],"macinato":["italian"],"madama":["italian"],"magico":["italian"],"maglia":["italian"],"magnete":["italian"],"magro":["italian"],"maiolica":["italian"],"malafede":["italian"],"malgrado":["italian"],"malinteso":["italian"],"malsano":["italian"],"malto":["italian"],"malumore":["italian"],"mana":["italian"],"mancia":["italian"],"mandorla":["italian"],"mangiare":["italian"],"manifesto":["italian"],"mannaro":["italian"],"manovra":["italian"],"mansarda":["italian"],"mantide":["italian"],"manubrio":["italian"],"mappa":["italian"],"maratona":["italian"],"marcire":["italian"],"maretta":["italian"],"marmo":["italian"],"marsupio":["italian"],"maschera":["italian"],"massaia":["italian"],"mastino":["italian"],"materasso":["italian"],"matricola":["italian"],"mattone":["italian"],"maturo":["italian"],"mazurca":["italian"],"meandro":["italian"],"meccanico":["italian"],"mecenate":["italian"],"medesimo":["italian"],"meditare":["italian"],"mega":["italian"],"melassa":["italian"],"melis":["italian"],"melodia":["italian"],"meninge":["italian"],"meno":["italian"],"mensola":["italian"],"mercurio":["italian"],"merenda":["italian"],"merlo":["italian"],"meschino":["italian"],"mese":["italian"],"messere":["italian"],"mestolo":["italian"],"metallo":["italian"],"metodo":["italian"],"mettere":["italian"],"miagolare":["italian"],"mica":["italian"],"micelio":["italian"],"michele":["italian"],"microbo":["italian"],"midollo":["italian"],"miele":["italian"],"migliore":["italian"],"milano":["italian"],"milite":["italian"],"mimosa":["italian"],"minerale":["italian"],"mini":["italian"],"minore":["italian"],"mirino":["italian"],"mirtillo":["italian"],"miscela":["italian"],"missiva":["italian"],"misto":["italian"],"misurare":["italian"],"mitezza":["italian"],"mitigare":["italian"],"mitra":["italian"],"mittente":["italian"],"mnemonico":["italian"],"modello":["italian"],"modifica":["italian"],"modulo":["italian"],"mogano":["italian"],"mogio":["italian"],"mole":["italian"],"molosso":["italian"],"monastero":["italian"],"monco":["italian"],"mondina":["italian"],"monetario":["italian"],"monile":["italian"],"monotono":["italian"],"monsone":["italian"],"montato":["italian"],"monviso":["italian"],"mora":["italian"],"mordere":["italian"],"morsicato":["italian"],"mostro":["italian"],"motivato":["italian"],"motosega":["italian"],"motto":["italian"],"movenza":["italian"],"movimento":["italian"],"mozzo":["italian"],"mucca":["italian"],"mucosa":["italian"],"muffa":["italian"],"mughetto":["italian"],"mugnaio":["italian"],"mulatto":["italian"],"mulinello":["italian"],"multiplo":["italian"],"mummia":["italian"],"munto":["italian"],"muovere":["italian"],"murale":["italian"],"musa":["italian"],"muscolo":["italian"],"musica":["italian"],"mutevole":["italian"],"muto":["italian"],"nababbo":["italian"],"nafta":["italian"],"nanometro":["italian"],"narciso":["italian"],"narice":["italian"],"narrato":["italian"],"nascere":["italian"],"nastrare":["italian"],"naturale":["italian"],"nautica":["italian"],"naviglio":["italian"],"nebulosa":["italian"],"necrosi":["italian"],"negativo":["italian"],"negozio":["italian"],"nemmeno":["italian"],"neofita":["italian"],"neretto":["italian"],"nervo":["italian"],"nessuno":["italian"],"nettuno":["italian"],"neutrale":["italian"],"neve":["italian"],"nevrotico":["italian"],"nicchia":["italian"],"ninfa":["italian"],"nitido":["italian"],"nobile":["italian"],"nocivo":["italian"],"nodo":["italian"],"nome":["italian"],"nomina":["italian"],"nordico":["italian"],"normale":["italian"],"norvegese":["italian"],"nostrano":["italian"],"notare":["italian"],"notizia":["italian"],"notturno":["italian"],"novella":["italian"],"nucleo":["italian"],"nulla":["italian"],"numero":["italian"],"nuovo":["italian"],"nutrire":["italian"],"nuvola":["italian"],"nuziale":["italian"],"oasi":["italian"],"obbedire":["italian"],"obbligo":["italian"],"obelisco":["italian"],"oblio":["italian"],"obolo":["italian"],"obsoleto":["italian"],"occasione":["italian"],"occhio":["italian"],"occidente":["italian"],"occorrere":["italian"],"occultare":["italian"],"ocra":["italian"],"oculato":["italian"],"odierno":["italian"],"odorare":["italian"],"offerta":["italian"],"offrire":["italian"],"offuscato":["italian"],"oggetto":["italian"],"oggi":["italian"],"ognuno":["italian"],"olandese":["italian"],"olfatto":["italian"],"oliato":["italian"],"oliva":["italian"],"ologramma":["italian"],"oltre":["italian"],"omaggio":["italian"],"ombelico":["italian"],"ombra":["italian"],"omega":["italian"],"omissione":["italian"],"ondoso":["italian"],"onere":["italian"],"onice":["italian"],"onnivoro":["italian"],"onorevole":["italian"],"onta":["italian"],"operato":["italian"],"opinione":["italian"],"opposto":["italian"],"oracolo":["italian"],"orafo":["italian"],"ordine":["italian"],"orecchino":["italian"],"orefice":["italian"],"orfano":["italian"],"organico":["italian"],"origine":["italian"],"orizzonte":["italian"],"orma":["italian"],"ormeggio":["italian"],"ornativo":["italian"],"orologio":["italian"],"orrendo":["italian"],"orribile":["italian"],"ortensia":["italian"],"ortica":["italian"],"orzata":["italian"],"orzo":["italian"],"osare":["italian"],"oscurare":["italian"],"osmosi":["italian"],"ospedale":["italian"],"ospite":["italian"],"ossa":["italian"],"ossidare":["italian"],"ostacolo":["italian"],"oste":["italian"],"otite":["italian"],"otre":["italian"],"ottagono":["italian"],"ottimo":["italian"],"ottobre":["italian"],"ovale":["italian"],"ovest":["italian"],"ovino":["italian"],"oviparo":["italian"],"ovocito":["italian"],"ovunque":["italian"],"ovviare":["italian"],"ozio":["italian"],"pacchetto":["italian"],"pace":["italian"],"pacifico":["italian"],"padella":["italian"],"padrone":["italian"],"paese":["italian"],"paga":["italian"],"pagina":["italian"],"palazzina":["italian"],"palesare":["italian"],"pallido":["italian"],"palo":["italian"],"palude":["italian"],"pandoro":["italian"],"pannello":["italian"],"paolo":["italian"],"paonazzo":["italian"],"paprica":["italian"],"parabola":["italian"],"parcella":["italian"],"parere":["italian"],"pargolo":["italian"],"pari":["italian"],"parlato":["italian"],"parola":["italian"],"partire":["italian"],"parvenza":["italian"],"parziale":["italian"],"passivo":["italian"],"pasticca":["italian"],"patacca":["italian"],"patologia":["italian"],"pattume":["italian"],"pavone":["italian"],"peccato":["italian"],"pedalare":["italian"],"pedonale":["italian"],"peggio":["italian"],"peloso":["italian"],"penare":["italian"],"pendice":["italian"],"penisola":["italian"],"pennuto":["italian"],"penombra":["italian"],"pensare":["italian"],"pentola":["italian"],"pepe":["italian"],"pepita":["italian"],"perbene":["italian"],"percorso":["italian"],"perdonato":["italian"],"perforare":["italian"],"pergamena":["italian"],"periodo":["italian"],"permesso":["italian"],"perno":["italian"],"perplesso":["italian"],"persuaso":["italian"],"pertugio":["italian"],"pervaso":["italian"],"pesatore":["italian"],"pesista":["italian"],"peso":["italian"],"pestifero":["italian"],"petalo":["italian"],"pettine":["italian"],"petulante":["italian"],"pezzo":["italian"],"piacere":["italian"],"pianta":["italian"],"piattino":["italian"],"piccino":["italian"],"picozza":["italian"],"piega":["italian"],"pietra":["italian"],"piffero":["italian"],"pigiama":["italian"],"pigolio":["italian"],"pigro":["italian"],"pila":["italian"],"pilifero":["italian"],"pillola":["italian"],"pilota":["italian"],"pimpante":["italian"],"pineta":["italian"],"pinna":["italian"],"pinolo":["italian"],"pioggia":["italian"],"piombo":["italian"],"piramide":["italian"],"piretico":["italian"],"pirite":["italian"],"pirolisi":["italian"],"pitone":["italian"],"pizzico":["italian"],"placebo":["italian"],"planare":["italian"],"plasma":["italian"],"platano":["italian"],"plenario":["italian"],"pochezza":["italian"],"poderoso":["italian"],"podismo":["italian"],"poesia":["italian"],"poggiare":["italian"],"polenta":["italian"],"poligono":["italian"],"pollice":["italian"],"polmonite":["italian"],"polpetta":["italian"],"polso":["italian"],"poltrona":["italian"],"polvere":["italian"],"pomice":["italian"],"pomodoro":["italian"],"ponte":["italian"],"popoloso":["italian"],"porfido":["italian"],"poroso":["italian"],"porpora":["italian"],"porre":["italian"],"portata":["italian"],"posa":["italian","turkish"],"positivo":["italian"],"possesso":["italian"],"postulato":["italian"],"potassio":["italian"],"potere":["italian"],"pranzo":["italian"],"prassi":["italian"],"pratica":["italian"],"precluso":["italian"],"predica":["italian"],"prefisso":["italian"],"pregiato":["italian"],"prelievo":["italian"],"premere":["italian"],"prenotare":["italian"],"preparato":["italian"],"presenza":["italian"],"pretesto":["italian"],"prevalso":["italian"],"prima":["italian"],"principe":["italian"],"privato":["italian"],"problema":["italian"],"procura":["italian"],"produrre":["italian"],"profumo":["italian"],"progetto":["italian"],"prolunga":["italian"],"promessa":["italian"],"pronome":["italian"],"proposta":["italian"],"proroga":["italian"],"proteso":["italian"],"prova":["italian","turkish"],"prudente":["italian"],"prugna":["italian"],"prurito":["italian"],"psiche":["italian"],"pubblico":["italian"],"pudica":["italian"],"pugilato":["italian"],"pugno":["italian"],"pulce":["italian"],"pulito":["italian"],"pulsante":["italian"],"puntare":["italian"],"pupazzo":["italian"],"pupilla":["italian"],"puro":["italian"],"quadro":["italian"],"qualcosa":["italian"],"quasi":["italian"],"querela":["italian"],"quota":["italian"],"raccolto":["italian"],"raddoppio":["italian"],"radicale":["italian"],"radunato":["italian"],"raffica":["italian"],"ragazzo":["italian"],"ragione":["italian"],"ragno":["italian"],"ramarro":["italian"],"ramingo":["italian"],"ramo":["italian"],"randagio":["italian"],"rantolare":["italian"],"rapato":["italian"],"rapina":["italian"],"rappreso":["italian"],"rasatura":["italian"],"raschiato":["italian"],"rasente":["italian"],"rassegna":["italian"],"rastrello":["italian"],"rata":["italian"],"ravveduto":["italian"],"reale":["italian"],"recepire":["italian"],"recinto":["italian"],"recluta":["italian"],"recondito":["italian"],"recupero":["italian"],"reddito":["italian"],"redimere":["italian"],"regalato":["italian"],"registro":["italian"],"regola":["italian"],"regresso":["italian"],"relazione":["italian"],"remare":["italian"],"remoto":["italian"],"renna":["italian"],"replica":["italian"],"reprimere":["italian"],"reputare":["italian"],"resa":["italian"],"residente":["italian"],"responso":["italian"],"restauro":["italian"],"rete":["italian"],"retina":["italian"],"retorica":["italian"],"rettifica":["italian"],"revocato":["italian"],"riassunto":["italian"],"ribadire":["italian"],"ribelle":["italian"],"ribrezzo":["italian"],"ricarica":["italian"],"ricco":["italian"],"ricevere":["italian"],"riciclato":["italian"],"ricordo":["italian"],"ricreduto":["italian"],"ridicolo":["italian"],"ridurre":["italian"],"rifasare":["italian"],"riflesso":["italian"],"riforma":["italian"],"rifugio":["italian"],"rigare":["italian"],"rigettato":["italian"],"righello":["italian"],"rilassato":["italian"],"rilevato":["italian"],"rimanere":["italian"],"rimbalzo":["italian"],"rimedio":["italian"],"rimorchio":["italian"],"rinascita":["italian"],"rincaro":["italian"],"rinforzo":["italian"],"rinnovo":["italian"],"rinomato":["italian"],"rinsavito":["italian"],"rintocco":["italian"],"rinuncia":["italian"],"rinvenire":["italian"],"riparato":["italian"],"ripetuto":["italian"],"ripieno":["italian"],"riportare":["italian"],"ripresa":["italian"],"ripulire":["italian"],"risata":["italian"],"rischio":["italian"],"riserva":["italian"],"risibile":["italian"],"riso":["italian"],"rispetto":["italian"],"ristoro":["italian"],"risultato":["italian"],"risvolto":["italian"],"ritardo":["italian"],"ritegno":["italian"],"ritmico":["italian"],"ritrovo":["italian"],"riunione":["italian"],"riva":["italian"],"riverso":["italian"],"rivincita":["italian"],"rivolto":["italian"],"rizoma":["italian"],"roba":["italian"],"robotico":["italian"],"robusto":["italian"],"roccia":["italian"],"roco":["italian"],"rodaggio":["italian"],"rodere":["italian"],"roditore":["italian"],"rogito":["italian"],"rollio":["italian"],"romantico":["italian"],"rompere":["italian"],"ronzio":["italian"],"rosolare":["italian"],"rospo":["italian"],"rotante":["italian"],"rotondo":["italian"],"rotula":["italian"],"rovescio":["italian"],"rubizzo":["italian"],"rubrica":["italian"],"ruga":["italian"],"rullino":["italian"],"rumine":["italian"],"rumoroso":["italian"],"ruolo":["italian"],"rupe":["italian"],"russare":["italian"],"rustico":["italian"],"sabato":["italian"],"sabbiare":["italian"],"sabotato":["italian"],"sagoma":["italian"],"salasso":["italian"],"saldatura":["italian"],"salgemma":["italian"],"salivare":["italian"],"salmone":["italian"],"salone":["italian"],"saltare":["italian"],"saluto":["italian"],"salvo":["italian"],"sapere":["italian"],"sapido":["italian"],"saporito":["italian"],"saraceno":["italian"],"sarcasmo":["italian"],"sarto":["italian"],"sassoso":["italian"],"satellite":["italian"],"satira":["italian"],"satollo":["italian"],"saturno":["italian"],"savana":["italian"],"savio":["italian"],"saziato":["italian"],"sbadiglio":["italian"],"sbalzo":["italian"],"sbancato":["italian"],"sbarra":["italian"],"sbattere":["italian"],"sbavare":["italian"],"sbendare":["italian"],"sbirciare":["italian"],"sbloccato":["italian"],"sbocciato":["italian"],"sbrinare":["italian"],"sbruffone":["italian"],"sbuffare":["italian"],"scabroso":["italian"],"scadenza":["italian"],"scala":["italian"],"scambiare":["italian"],"scandalo":["italian"],"scapola":["italian"],"scarso":["italian"],"scatenare":["italian"],"scavato":["italian"],"scelto":["italian"],"scenico":["italian"],"scettro":["italian"],"scheda":["italian"],"schiena":["italian"],"sciarpa":["italian"],"scienza":["italian"],"scindere":["italian"],"scippo":["italian"],"sciroppo":["italian"],"scivolo":["italian"],"sclerare":["italian"],"scodella":["italian"],"scolpito":["italian"],"scomparto":["italian"],"sconforto":["italian"],"scoprire":["italian"],"scorta":["italian"],"scossone":["italian"],"scozzese":["italian"],"scriba":["italian"],"scrollare":["italian"],"scrutinio":["italian"],"scuderia":["italian"],"scultore":["italian"],"scuola":["italian"],"scuro":["italian"],"scusare":["italian"],"sdebitare":["italian"],"sdoganare":["italian"],"seccatura":["italian"],"secondo":["italian"],"sedano":["italian"],"seggiola":["italian"],"segnalato":["italian"],"segregato":["italian"],"seguito":["italian"],"selciato":["italian"],"selettivo":["italian"],"sella":["italian"],"selvaggio":["italian"],"semaforo":["italian"],"sembrare":["italian"],"seme":["italian"],"seminato":["italian"],"sempre":["italian"],"senso":["italian"],"sentire":["italian"],"sepolto":["italian"],"sequenza":["italian"],"serata":["italian"],"serbato":["italian"],"sereno":["italian"],"serio":["italian"],"serpente":["italian"],"serraglio":["italian"],"servire":["italian"],"sestina":["italian"],"setola":["italian"],"settimana":["italian"],"sfacelo":["italian"],"sfaldare":["italian"],"sfamato":["italian"],"sfarzoso":["italian"],"sfaticato":["italian"],"sfera":["italian"],"sfida":["italian"],"sfilato":["italian"],"sfinge":["italian"],"sfocato":["italian"],"sfoderare":["italian"],"sfogo":["italian"],"sfoltire":["italian"],"sforzato":["italian"],"sfratto":["italian"],"sfruttato":["italian"],"sfuggito":["italian"],"sfumare":["italian"],"sfuso":["italian"],"sgabello":["italian"],"sgarbato":["italian"],"sgonfiare":["italian"],"sgorbio":["italian"],"sgrassato":["italian"],"sguardo":["italian"],"sibilo":["italian"],"siccome":["italian"],"sierra":["italian"],"sigla":["italian"],"signore":["italian"],"silenzio":["italian"],"sillaba":["italian"],"simbolo":["italian"],"simpatico":["italian"],"simulato":["italian"],"sinfonia":["italian"],"singolo":["italian"],"sinistro":["italian"],"sino":["italian"],"sintesi":["italian"],"sinusoide":["italian"],"sipario":["italian"],"sisma":["italian"],"sistole":["italian"],"situato":["italian"],"slitta":["italian"],"slogatura":["italian"],"sloveno":["italian"],"smarrito":["italian"],"smemorato":["italian"],"smentito":["italian"],"smeraldo":["italian"],"smilzo":["italian"],"smontare":["italian"],"smottato":["italian"],"smussato":["italian"],"snellire":["italian"],"snervato":["italian"],"snodo":["italian"],"sobbalzo":["italian"],"sobrio":["italian"],"soccorso":["italian"],"sociale":["italian"],"sodale":["italian"],"soffitto":["italian"],"sogno":["italian"],"soldato":["italian"],"solenne":["italian"],"solido":["italian"],"sollazzo":["italian"],"solo":["italian"],"solubile":["italian"],"solvente":["italian"],"somatico":["italian"],"somma":["italian"],"sonda":["italian"],"sonetto":["italian"],"sonnifero":["italian"],"sopire":["italian"],"soppeso":["italian"],"sopra":["italian"],"sorgere":["italian"],"sorpasso":["italian"],"sorriso":["italian"],"sorso":["italian"],"sorteggio":["italian"],"sorvolato":["italian"],"sospiro":["italian"],"sosta":["italian"],"sottile":["italian"],"spada":["italian"],"spalla":["italian"],"spargere":["italian"],"spatola":["italian"],"spavento":["italian"],"spazzola":["italian"],"specie":["italian"],"spedire":["italian"],"spegnere":["italian"],"spelatura":["italian"],"speranza":["italian"],"spessore":["italian"],"spettrale":["italian"],"spezzato":["italian"],"spia":["italian"],"spigoloso":["italian"],"spillato":["italian"],"spinoso":["italian"],"spirale":["italian"],"splendido":["italian"],"sportivo":["italian"],"sposo":["italian"],"spranga":["italian"],"sprecare":["italian"],"spronato":["italian"],"spruzzo":["italian"],"spuntino":["italian"],"squillo":["italian"],"sradicare":["italian"],"srotolato":["italian"],"stabile":["italian"],"stacco":["italian"],"staffa":["italian"],"stagnare":["italian"],"stampato":["italian"],"stantio":["italian"],"starnuto":["italian"],"stasera":["italian"],"statuto":["italian"],"stelo":["italian"],"steppa":["italian"],"sterzo":["italian"],"stiletto":["italian"],"stima":["italian"],"stirpe":["italian"],"stivale":["italian"],"stizzoso":["italian"],"stonato":["italian"],"storico":["italian"],"strappo":["italian"],"stregato":["italian"],"stridulo":["italian"],"strozzare":["italian"],"strutto":["italian"],"stuccare":["italian"],"stufo":["italian"],"stupendo":["italian"],"subentro":["italian"],"succoso":["italian"],"sudore":["italian"],"suggerito":["italian"],"sugo":["italian"],"sultano":["italian"],"suonare":["italian"],"superbo":["italian"],"supporto":["italian"],"surgelato":["italian"],"surrogato":["italian"],"sussurro":["italian"],"sutura":["italian"],"svagare":["italian"],"svedese":["italian"],"sveglio":["italian"],"svelare":["italian"],"svenuto":["italian"],"svezia":["italian"],"sviluppo":["italian"],"svista":["italian"],"svizzera":["italian"],"svolta":["italian"],"svuotare":["italian"],"tabacco":["italian"],"tabulato":["italian"],"tacciare":["italian"],"taciturno":["italian"],"tale":["italian"],"talismano":["italian"],"tampone":["italian"],"tannino":["italian"],"tara":["italian"],"tardivo":["italian"],"targato":["italian"],"tariffa":["italian"],"tarpare":["italian"],"tartaruga":["italian"],"tasto":["italian"],"tattico":["italian"],"taverna":["italian"],"tavolata":["italian"],"tazza":["italian"],"teca":["italian"],"tecnico":["italian"],"telefono":["italian"],"temerario":["italian"],"tempo":["italian","turkish"],"temuto":["italian"],"tendone":["italian"],"tenero":["italian"],"tensione":["italian"],"tentacolo":["italian"],"teorema":["italian"],"terme":["italian"],"terrazzo":["italian"],"terzetto":["italian"],"tesi":["italian"],"tesserato":["italian"],"testato":["italian"],"tetro":["italian"],"tettoia":["italian"],"tifare":["italian"],"tigella":["italian"],"timbro":["italian"],"tinto":["italian"],"tipico":["italian"],"tipografo":["italian"],"tiraggio":["italian"],"tiro":["italian"],"titanio":["italian"],"titolo":["italian"],"titubante":["italian"],"tizio":["italian"],"tizzone":["italian"],"toccare":["italian"],"tollerare":["italian"],"tolto":["italian"],"tombola":["italian"],"tomo":["italian"],"tonfo":["italian"],"tonsilla":["italian"],"topazio":["italian"],"topologia":["italian"],"toppa":["italian"],"torba":["italian"],"tornare":["italian"],"torrone":["italian"],"tortora":["italian"],"toscano":["italian"],"tossire":["italian"],"tostatura":["italian"],"totano":["italian"],"trabocco":["italian"],"trachea":["italian"],"trafila":["italian"],"tragedia":["italian"],"tralcio":["italian"],"tramonto":["italian"],"transito":["italian"],"trapano":["italian"],"trarre":["italian"],"trasloco":["italian"],"trattato":["italian"],"trave":["italian"],"treccia":["italian"],"tremolio":["italian"],"trespolo":["italian"],"tributo":["italian"],"tricheco":["italian"],"trifoglio":["italian"],"trillo":["italian"],"trincea":["italian"],"trio":["italian"],"tristezza":["italian"],"triturato":["italian"],"trivella":["italian"],"tromba":["italian"],"trono":["italian"],"troppo":["italian"],"trottola":["italian"],"trovare":["italian"],"truccato":["italian"],"tubatura":["italian"],"tuffato":["italian"],"tulipano":["italian"],"tumulto":["italian"],"tunisia":["italian"],"turbare":["italian"],"turchino":["italian"],"tuta":["italian"],"tutela":["italian"],"ubicato":["italian"],"uccello":["italian"],"uccisore":["italian"],"udire":["italian"],"uditivo":["italian"],"uffa":["italian"],"ufficio":["italian"],"uguale":["italian"],"ulisse":["italian"],"ultimato":["italian"],"umano":["italian"],"umile":["italian"],"umorismo":["italian"],"uncinetto":["italian"],"ungere":["italian"],"ungherese":["italian"],"unicorno":["italian"],"unificato":["italian"],"unisono":["italian"],"unitario":["italian"],"unte":["italian"],"uovo":["italian"],"upupa":["italian"],"uragano":["italian"],"urgenza":["italian"],"urlo":["italian"],"usanza":["italian"],"usato":["italian"],"uscito":["italian"],"usignolo":["italian"],"usuraio":["italian"],"utensile":["italian"],"utilizzo":["italian"],"utopia":["italian"],"vacante":["italian"],"vaccinato":["italian"],"vagabondo":["italian"],"vagliato":["italian"],"valanga":["italian"],"valgo":["italian"],"valico":["italian"],"valletta":["italian"],"valoroso":["italian"],"valutare":["italian"],"valvola":["italian"],"vampata":["italian"],"vangare":["italian"],"vanitoso":["italian"],"vano":["italian"],"vantaggio":["italian"],"vanvera":["italian"],"vapore":["italian"],"varano":["italian"],"varcato":["italian"],"variante":["italian"],"vasca":["italian"],"vedetta":["italian"],"vedova":["italian"],"veduto":["italian"],"vegetale":["italian"],"veicolo":["italian"],"velcro":["italian"],"velina":["italian"],"velluto":["italian"],"veloce":["italian"],"venato":["italian"],"vendemmia":["italian"],"vento":["italian"],"verace":["italian"],"verbale":["italian"],"vergogna":["italian"],"verifica":["italian"],"vero":["italian"],"verruca":["italian"],"verticale":["italian"],"vescica":["italian"],"vessillo":["italian"],"vestale":["italian"],"veterano":["italian"],"vetrina":["italian"],"vetusto":["italian"],"viandante":["italian"],"vibrante":["italian"],"vicenda":["italian"],"vichingo":["italian"],"vicinanza":["italian"],"vidimare":["italian"],"vigilia":["italian"],"vigneto":["italian"],"vigore":["italian"],"vile":["italian"],"villano":["italian"],"vimini":["italian"],"vincitore":["italian"],"viola":["italian"],"vipera":["italian"],"virgola":["italian"],"virologo":["italian"],"virulento":["italian"],"viscoso":["italian"],"visione":["italian"],"vispo":["italian"],"vissuto":["italian"],"visura":["italian"],"vita":["italian"],"vitello":["italian"],"vittima":["italian"],"vivanda":["italian"],"vivido":["italian"],"viziare":["italian"],"voce":["italian"],"voga":["italian"],"volatile":["italian"],"volere":["italian"],"volpe":["italian"],"voragine":["italian"],"vulcano":["italian"],"zampogna":["italian"],"zanna":["italian"],"zappato":["italian"],"zattera":["italian"],"zavorra":["italian"],"zefiro":["italian"],"zelante":["italian"],"zelo":["italian"],"zenzero":["italian"],"zerbino":["italian"],"zibetto":["italian"],"zinco":["italian"],"zircone":["italian"],"zitto":["italian"],"zolla":["italian"],"zotico":["italian"],"zucchero":["italian"],"zufolo":["italian"],"zulu":["italian"],"zuppa":["italian"],"あいこくしん":["japanese"],"あいさつ":["japanese"],"あいだ":["japanese"],"あおぞら":["japanese"],"あかちゃん":["japanese"],"あきる":["japanese"],"あけがた":["japanese"],"あける":["japanese"],"あこがれる":["japanese"],"あさい":["japanese"],"あさひ":["japanese"],"あしあと":["japanese"],"あじわう":["japanese"],"あずかる":["japanese"],"あずき":["japanese"],"あそぶ":["japanese"],"あたえる":["japanese"],"あたためる":["japanese"],"あたりまえ":["japanese"],"あたる":["japanese"],"あつい":["japanese"],"あつかう":["japanese"],"あっしゅく":["japanese"],"あつまり":["japanese"],"あつめる":["japanese"],"あてな":["japanese"],"あてはまる":["japanese"],"あひる":["japanese"],"あぶら":["japanese"],"あぶる":["japanese"],"あふれる":["japanese"],"あまい":["japanese"],"あまど":["japanese"],"あまやかす":["japanese"],"あまり":["japanese"],"あみもの":["japanese"],"あめりか":["japanese"],"あやまる":["japanese"],"あゆむ":["japanese"],"あらいぐま":["japanese"],"あらし":["japanese"],"あらすじ":["japanese"],"あらためる":["japanese"],"あらゆる":["japanese"],"あらわす":["japanese"],"ありがとう":["japanese"],"あわせる":["japanese"],"あわてる":["japanese"],"あんい":["japanese"],"あんがい":["japanese"],"あんこ":["japanese"],"あんぜん":["japanese"],"あんてい":["japanese"],"あんない":["japanese"],"あんまり":["japanese"],"いいだす":["japanese"],"いおん":["japanese"],"いがい":["japanese"],"いがく":["japanese"],"いきおい":["japanese"],"いきなり":["japanese"],"いきもの":["japanese"],"いきる":["japanese"],"いくじ":["japanese"],"いくぶん":["japanese"],"いけばな":["japanese"],"いけん":["japanese"],"いこう":["japanese"],"いこく":["japanese"],"いこつ":["japanese"],"いさましい":["japanese"],"いさん":["japanese"],"いしき":["japanese"],"いじゅう":["japanese"],"いじょう":["japanese"],"いじわる":["japanese"],"いずみ":["japanese"],"いずれ":["japanese"],"いせい":["japanese"],"いせえび":["japanese"],"いせかい":["japanese"],"いせき":["japanese"],"いぜん":["japanese"],"いそうろう":["japanese"],"いそがしい":["japanese"],"いだい":["japanese"],"いだく":["japanese"],"いたずら":["japanese"],"いたみ":["japanese"],"いたりあ":["japanese"],"いちおう":["japanese"],"いちじ":["japanese"],"いちど":["japanese"],"いちば":["japanese"],"いちぶ":["japanese"],"いちりゅう":["japanese"],"いつか":["japanese"],"いっしゅん":["japanese"],"いっせい":["japanese"],"いっそう":["japanese"],"いったん":["japanese"],"いっち":["japanese"],"いってい":["japanese"],"いっぽう":["japanese"],"いてざ":["japanese"],"いてん":["japanese"],"いどう":["japanese"],"いとこ":["japanese"],"いない":["japanese"],"いなか":["japanese"],"いねむり":["japanese"],"いのち":["japanese"],"いのる":["japanese"],"いはつ":["japanese"],"いばる":["japanese"],"いはん":["japanese"],"いびき":["japanese"],"いひん":["japanese"],"いふく":["japanese"],"いへん":["japanese"],"いほう":["japanese"],"いみん":["japanese"],"いもうと":["japanese"],"いもたれ":["japanese"],"いもり":["japanese"],"いやがる":["japanese"],"いやす":["japanese"],"いよかん":["japanese"],"いよく":["japanese"],"いらい":["japanese"],"いらすと":["japanese"],"いりぐち":["japanese"],"いりょう":["japanese"],"いれい":["japanese"],"いれもの":["japanese"],"いれる":["japanese"],"いろえんぴつ":["japanese"],"いわい":["japanese"],"いわう":["japanese"],"いわかん":["japanese"],"いわば":["japanese"],"いわゆる":["japanese"],"いんげんまめ":["japanese"],"いんさつ":["japanese"],"いんしょう":["japanese"],"いんよう":["japanese"],"うえき":["japanese"],"うえる":["japanese"],"うおざ":["japanese"],"うがい":["japanese"],"うかぶ":["japanese"],"うかべる":["japanese"],"うきわ":["japanese"],"うくらいな":["japanese"],"うくれれ":["japanese"],"うけたまわる":["japanese"],"うけつけ":["japanese"],"うけとる":["japanese"],"うけもつ":["japanese"],"うける":["japanese"],"うごかす":["japanese"],"うごく":["japanese"],"うこん":["japanese"],"うさぎ":["japanese"],"うしなう":["japanese"],"うしろがみ":["japanese"],"うすい":["japanese"],"うすぎ":["japanese"],"うすぐらい":["japanese"],"うすめる":["japanese"],"うせつ":["japanese"],"うちあわせ":["japanese"],"うちがわ":["japanese"],"うちき":["japanese"],"うちゅう":["japanese"],"うっかり":["japanese"],"うつくしい":["japanese"],"うったえる":["japanese"],"うつる":["japanese"],"うどん":["japanese"],"うなぎ":["japanese"],"うなじ":["japanese"],"うなずく":["japanese"],"うなる":["japanese"],"うねる":["japanese"],"うのう":["japanese"],"うぶげ":["japanese"],"うぶごえ":["japanese"],"うまれる":["japanese"],"うめる":["japanese"],"うもう":["japanese"],"うやまう":["japanese"],"うよく":["japanese"],"うらがえす":["japanese"],"うらぐち":["japanese"],"うらない":["japanese"],"うりあげ":["japanese"],"うりきれ":["japanese"],"うるさい":["japanese"],"うれしい":["japanese"],"うれゆき":["japanese"],"うれる":["japanese"],"うろこ":["japanese"],"うわき":["japanese"],"うわさ":["japanese"],"うんこう":["japanese"],"うんちん":["japanese"],"うんてん":["japanese"],"うんどう":["japanese"],"えいえん":["japanese"],"えいが":["japanese"],"えいきょう":["japanese"],"えいご":["japanese"],"えいせい":["japanese"],"えいぶん":["japanese"],"えいよう":["japanese"],"えいわ":["japanese"],"えおり":["japanese"],"えがお":["japanese"],"えがく":["japanese"],"えきたい":["japanese"],"えくせる":["japanese"],"えしゃく":["japanese"],"えすて":["japanese"],"えつらん":["japanese"],"えのぐ":["japanese"],"えほうまき":["japanese"],"えほん":["japanese"],"えまき":["japanese"],"えもじ":["japanese"],"えもの":["japanese"],"えらい":["japanese"],"えらぶ":["japanese"],"えりあ":["japanese"],"えんえん":["japanese"],"えんかい":["japanese"],"えんぎ":["japanese"],"えんげき":["japanese"],"えんしゅう":["japanese"],"えんぜつ":["japanese"],"えんそく":["japanese"],"えんちょう":["japanese"],"えんとつ":["japanese"],"おいかける":["japanese"],"おいこす":["japanese"],"おいしい":["japanese"],"おいつく":["japanese"],"おうえん":["japanese"],"おうさま":["japanese"],"おうじ":["japanese"],"おうせつ":["japanese"],"おうたい":["japanese"],"おうふく":["japanese"],"おうべい":["japanese"],"おうよう":["japanese"],"おえる":["japanese"],"おおい":["japanese"],"おおう":["japanese"],"おおどおり":["japanese"],"おおや":["japanese"],"おおよそ":["japanese"],"おかえり":["japanese"],"おかず":["japanese"],"おがむ":["japanese"],"おかわり":["japanese"],"おぎなう":["japanese"],"おきる":["japanese"],"おくさま":["japanese"],"おくじょう":["japanese"],"おくりがな":["japanese"],"おくる":["japanese"],"おくれる":["japanese"],"おこす":["japanese"],"おこなう":["japanese"],"おこる":["japanese"],"おさえる":["japanese"],"おさない":["japanese"],"おさめる":["japanese"],"おしいれ":["japanese"],"おしえる":["japanese"],"おじぎ":["japanese"],"おじさん":["japanese"],"おしゃれ":["japanese"],"おそらく":["japanese"],"おそわる":["japanese"],"おたがい":["japanese"],"おたく":["japanese"],"おだやか":["japanese"],"おちつく":["japanese"],"おっと":["japanese"],"おつり":["japanese"],"おでかけ":["japanese"],"おとしもの":["japanese"],"おとなしい":["japanese"],"おどり":["japanese"],"おどろかす":["japanese"],"おばさん":["japanese"],"おまいり":["japanese"],"おめでとう":["japanese"],"おもいで":["japanese"],"おもう":["japanese"],"おもたい":["japanese"],"おもちゃ":["japanese"],"おやつ":["japanese"],"おやゆび":["japanese"],"およぼす":["japanese"],"おらんだ":["japanese"],"おろす":["japanese"],"おんがく":["japanese"],"おんけい":["japanese"],"おんしゃ":["japanese"],"おんせん":["japanese"],"おんだん":["japanese"],"おんちゅう":["japanese"],"おんどけい":["japanese"],"かあつ":["japanese"],"かいが":["japanese"],"がいき":["japanese"],"がいけん":["japanese"],"がいこう":["japanese"],"かいさつ":["japanese"],"かいしゃ":["japanese"],"かいすいよく":["japanese"],"かいぜん":["japanese"],"かいぞうど":["japanese"],"かいつう":["japanese"],"かいてん":["japanese"],"かいとう":["japanese"],"かいふく":["japanese"],"がいへき":["japanese"],"かいほう":["japanese"],"かいよう":["japanese"],"がいらい":["japanese"],"かいわ":["japanese"],"かえる":["japanese"],"かおり":["japanese"],"かかえる":["japanese"],"かがく":["japanese"],"かがし":["japanese"],"かがみ":["japanese"],"かくご":["japanese"],"かくとく":["japanese"],"かざる":["japanese"],"がぞう":["japanese"],"かたい":["japanese"],"かたち":["japanese"],"がちょう":["japanese"],"がっきゅう":["japanese"],"がっこう":["japanese"],"がっさん":["japanese"],"がっしょう":["japanese"],"かなざわし":["japanese"],"かのう":["japanese"],"がはく":["japanese"],"かぶか":["japanese"],"かほう":["japanese"],"かほご":["japanese"],"かまう":["japanese"],"かまぼこ":["japanese"],"かめれおん":["japanese"],"かゆい":["japanese"],"かようび":["japanese"],"からい":["japanese"],"かるい":["japanese"],"かろう":["japanese"],"かわく":["japanese"],"かわら":["japanese"],"がんか":["japanese"],"かんけい":["japanese"],"かんこう":["japanese"],"かんしゃ":["japanese"],"かんそう":["japanese"],"かんたん":["japanese"],"かんち":["japanese"],"がんばる":["japanese"],"きあい":["japanese"],"きあつ":["japanese"],"きいろ":["japanese"],"ぎいん":["japanese"],"きうい":["japanese"],"きうん":["japanese"],"きえる":["japanese"],"きおう":["japanese"],"きおく":["japanese"],"きおち":["japanese"],"きおん":["japanese"],"きかい":["japanese"],"きかく":["japanese"],"きかんしゃ":["japanese"],"ききて":["japanese"],"きくばり":["japanese"],"きくらげ":["japanese"],"きけんせい":["japanese"],"きこう":["japanese"],"きこえる":["japanese"],"きこく":["japanese"],"きさい":["japanese"],"きさく":["japanese"],"きさま":["japanese"],"きさらぎ":["japanese"],"ぎじかがく":["japanese"],"ぎしき":["japanese"],"ぎじたいけん":["japanese"],"ぎじにってい":["japanese"],"ぎじゅつしゃ":["japanese"],"きすう":["japanese"],"きせい":["japanese"],"きせき":["japanese"],"きせつ":["japanese"],"きそう":["japanese"],"きぞく":["japanese"],"きぞん":["japanese"],"きたえる":["japanese"],"きちょう":["japanese"],"きつえん":["japanese"],"ぎっちり":["japanese"],"きつつき":["japanese"],"きつね":["japanese"],"きてい":["japanese"],"きどう":["japanese"],"きどく":["japanese"],"きない":["japanese"],"きなが":["japanese"],"きなこ":["japanese"],"きぬごし":["japanese"],"きねん":["japanese"],"きのう":["japanese"],"きのした":["japanese"],"きはく":["japanese"],"きびしい":["japanese"],"きひん":["japanese"],"きふく":["japanese"],"きぶん":["japanese"],"きぼう":["japanese"],"きほん":["japanese"],"きまる":["japanese"],"きみつ":["japanese"],"きむずかしい":["japanese"],"きめる":["japanese"],"きもだめし":["japanese"],"きもち":["japanese"],"きもの":["japanese"],"きゃく":["japanese"],"きやく":["japanese"],"ぎゅうにく":["japanese"],"きよう":["japanese"],"きょうりゅう":["japanese"],"きらい":["japanese"],"きらく":["japanese"],"きりん":["japanese"],"きれい":["japanese"],"きれつ":["japanese"],"きろく":["japanese"],"ぎろん":["japanese"],"きわめる":["japanese"],"ぎんいろ":["japanese"],"きんかくじ":["japanese"],"きんじょ":["japanese"],"きんようび":["japanese"],"ぐあい":["japanese"],"くいず":["japanese"],"くうかん":["japanese"],"くうき":["japanese"],"くうぐん":["japanese"],"くうこう":["japanese"],"ぐうせい":["japanese"],"くうそう":["japanese"],"ぐうたら":["japanese"],"くうふく":["japanese"],"くうぼ":["japanese"],"くかん":["japanese"],"くきょう":["japanese"],"くげん":["japanese"],"ぐこう":["japanese"],"くさい":["japanese"],"くさき":["japanese"],"くさばな":["japanese"],"くさる":["japanese"],"くしゃみ":["japanese"],"くしょう":["japanese"],"くすのき":["japanese"],"くすりゆび":["japanese"],"くせげ":["japanese"],"くせん":["japanese"],"ぐたいてき":["japanese"],"くださる":["japanese"],"くたびれる":["japanese"],"くちこみ":["japanese"],"くちさき":["japanese"],"くつした":["japanese"],"ぐっすり":["japanese"],"くつろぐ":["japanese"],"くとうてん":["japanese"],"くどく":["japanese"],"くなん":["japanese"],"くねくね":["japanese"],"くのう":["japanese"],"くふう":["japanese"],"くみあわせ":["japanese"],"くみたてる":["japanese"],"くめる":["japanese"],"くやくしょ":["japanese"],"くらす":["japanese"],"くらべる":["japanese"],"くるま":["japanese"],"くれる":["japanese"],"くろう":["japanese"],"くわしい":["japanese"],"ぐんかん":["japanese"],"ぐんしょく":["japanese"],"ぐんたい":["japanese"],"ぐんて":["japanese"],"けあな":["japanese"],"けいかく":["japanese"],"けいけん":["japanese"],"けいこ":["japanese"],"けいさつ":["japanese"],"げいじゅつ":["japanese"],"けいたい":["japanese"],"げいのうじん":["japanese"],"けいれき":["japanese"],"けいろ":["japanese"],"けおとす":["japanese"],"けおりもの":["japanese"],"げきか":["japanese"],"げきげん":["japanese"],"げきだん":["japanese"],"げきちん":["japanese"],"げきとつ":["japanese"],"げきは":["japanese"],"げきやく":["japanese"],"げこう":["japanese"],"げこくじょう":["japanese"],"げざい":["japanese"],"けさき":["japanese"],"げざん":["japanese"],"けしき":["japanese"],"けしごむ":["japanese"],"けしょう":["japanese"],"げすと":["japanese"],"けたば":["japanese"],"けちゃっぷ":["japanese"],"けちらす":["japanese"],"けつあつ":["japanese"],"けつい":["japanese"],"けつえき":["japanese"],"けっこん":["japanese"],"けつじょ":["japanese"],"けっせき":["japanese"],"けってい":["japanese"],"けつまつ":["japanese"],"げつようび":["japanese"],"げつれい":["japanese"],"けつろん":["japanese"],"げどく":["japanese"],"けとばす":["japanese"],"けとる":["japanese"],"けなげ":["japanese"],"けなす":["japanese"],"けなみ":["japanese"],"けぬき":["japanese"],"げねつ":["japanese"],"けねん":["japanese"],"けはい":["japanese"],"げひん":["japanese"],"けぶかい":["japanese"],"げぼく":["japanese"],"けまり":["japanese"],"けみかる":["japanese"],"けむし":["japanese"],"けむり":["japanese"],"けもの":["japanese"],"けらい":["japanese"],"けろけろ":["japanese"],"けわしい":["japanese"],"けんい":["japanese"],"けんえつ":["japanese"],"けんお":["japanese"],"けんか":["japanese"],"げんき":["japanese"],"けんげん":["japanese"],"けんこう":["japanese"],"けんさく":["japanese"],"けんしゅう":["japanese"],"けんすう":["japanese"],"げんそう":["japanese"],"けんちく":["japanese"],"けんてい":["japanese"],"けんとう":["japanese"],"けんない":["japanese"],"けんにん":["japanese"],"げんぶつ":["japanese"],"けんま":["japanese"],"けんみん":["japanese"],"けんめい":["japanese"],"けんらん":["japanese"],"けんり":["japanese"],"こあくま":["japanese"],"こいぬ":["japanese"],"こいびと":["japanese"],"ごうい":["japanese"],"こうえん":["japanese"],"こうおん":["japanese"],"こうかん":["japanese"],"ごうきゅう":["japanese"],"ごうけい":["japanese"],"こうこう":["japanese"],"こうさい":["japanese"],"こうじ":["japanese"],"こうすい":["japanese"],"ごうせい":["japanese"],"こうそく":["japanese"],"こうたい":["japanese"],"こうちゃ":["japanese"],"こうつう":["japanese"],"こうてい":["japanese"],"こうどう":["japanese"],"こうない":["japanese"],"こうはい":["japanese"],"ごうほう":["japanese"],"ごうまん":["japanese"],"こうもく":["japanese"],"こうりつ":["japanese"],"こえる":["japanese"],"こおり":["japanese"],"ごかい":["japanese"],"ごがつ":["japanese"],"ごかん":["japanese"],"こくご":["japanese"],"こくさい":["japanese"],"こくとう":["japanese"],"こくない":["japanese"],"こくはく":["japanese"],"こぐま":["japanese"],"こけい":["japanese"],"こける":["japanese"],"ここのか":["japanese"],"こころ":["japanese"],"こさめ":["japanese"],"こしつ":["japanese"],"こすう":["japanese"],"こせい":["japanese"],"こせき":["japanese"],"こぜん":["japanese"],"こそだて":["japanese"],"こたい":["japanese"],"こたえる":["japanese"],"こたつ":["japanese"],"こちょう":["japanese"],"こっか":["japanese"],"こつこつ":["japanese"],"こつばん":["japanese"],"こつぶ":["japanese"],"こてい":["japanese"],"こてん":["japanese"],"ことがら":["japanese"],"ことし":["japanese"],"ことば":["japanese"],"ことり":["japanese"],"こなごな":["japanese"],"こねこね":["japanese"],"このまま":["japanese"],"このみ":["japanese"],"このよ":["japanese"],"ごはん":["japanese"],"こひつじ":["japanese"],"こふう":["japanese"],"こふん":["japanese"],"こぼれる":["japanese"],"ごまあぶら":["japanese"],"こまかい":["japanese"],"ごますり":["japanese"],"こまつな":["japanese"],"こまる":["japanese"],"こむぎこ":["japanese"],"こもじ":["japanese"],"こもち":["japanese"],"こもの":["japanese"],"こもん":["japanese"],"こやく":["japanese"],"こやま":["japanese"],"こゆう":["japanese"],"こゆび":["japanese"],"こよい":["japanese"],"こよう":["japanese"],"こりる":["japanese"],"これくしょん":["japanese"],"ころっけ":["japanese"],"こわもて":["japanese"],"こわれる":["japanese"],"こんいん":["japanese"],"こんかい":["japanese"],"こんき":["japanese"],"こんしゅう":["japanese"],"こんすい":["japanese"],"こんだて":["japanese"],"こんとん":["japanese"],"こんなん":["japanese"],"こんびに":["japanese"],"こんぽん":["japanese"],"こんまけ":["japanese"],"こんや":["japanese"],"こんれい":["japanese"],"こんわく":["japanese"],"ざいえき":["japanese"],"さいかい":["japanese"],"さいきん":["japanese"],"ざいげん":["japanese"],"ざいこ":["japanese"],"さいしょ":["japanese"],"さいせい":["japanese"],"ざいたく":["japanese"],"ざいちゅう":["japanese"],"さいてき":["japanese"],"ざいりょう":["japanese"],"さうな":["japanese"],"さかいし":["japanese"],"さがす":["japanese"],"さかな":["japanese"],"さかみち":["japanese"],"さがる":["japanese"],"さぎょう":["japanese"],"さくし":["japanese"],"さくひん":["japanese"],"さくら":["japanese"],"さこく":["japanese"],"さこつ":["japanese"],"さずかる":["japanese"],"ざせき":["japanese"],"さたん":["japanese"],"さつえい":["japanese"],"ざつおん":["japanese"],"ざっか":["japanese"],"ざつがく":["japanese"],"さっきょく":["japanese"],"ざっし":["japanese"],"さつじん":["japanese"],"ざっそう":["japanese"],"さつたば":["japanese"],"さつまいも":["japanese"],"さてい":["japanese"],"さといも":["japanese"],"さとう":["japanese"],"さとおや":["japanese"],"さとし":["japanese"],"さとる":["japanese"],"さのう":["japanese"],"さばく":["japanese"],"さびしい":["japanese"],"さべつ":["japanese"],"さほう":["japanese"],"さほど":["japanese"],"さます":["japanese"],"さみしい":["japanese"],"さみだれ":["japanese"],"さむけ":["japanese"],"さめる":["japanese"],"さやえんどう":["japanese"],"さゆう":["japanese"],"さよう":["japanese"],"さよく":["japanese"],"さらだ":["japanese"],"ざるそば":["japanese"],"さわやか":["japanese"],"さわる":["japanese"],"さんいん":["japanese"],"さんか":["japanese"],"さんきゃく":["japanese"],"さんこう":["japanese"],"さんさい":["japanese"],"ざんしょ":["japanese"],"さんすう":["japanese"],"さんせい":["japanese"],"さんそ":["japanese"],"さんち":["japanese"],"さんま":["japanese"],"さんみ":["japanese"],"さんらん":["japanese"],"しあい":["japanese"],"しあげ":["japanese"],"しあさって":["japanese"],"しあわせ":["japanese"],"しいく":["japanese"],"しいん":["japanese"],"しうち":["japanese"],"しえい":["japanese"],"しおけ":["japanese"],"しかい":["japanese"],"しかく":["japanese"],"じかん":["japanese"],"しごと":["japanese"],"しすう":["japanese"],"じだい":["japanese"],"したうけ":["japanese"],"したぎ":["japanese"],"したて":["japanese"],"したみ":["japanese"],"しちょう":["japanese"],"しちりん":["japanese"],"しっかり":["japanese"],"しつじ":["japanese"],"しつもん":["japanese"],"してい":["japanese"],"してき":["japanese"],"してつ":["japanese"],"じてん":["japanese"],"じどう":["japanese"],"しなぎれ":["japanese"],"しなもの":["japanese"],"しなん":["japanese"],"しねま":["japanese"],"しねん":["japanese"],"しのぐ":["japanese"],"しのぶ":["japanese"],"しはい":["japanese"],"しばかり":["japanese"],"しはつ":["japanese"],"しはらい":["japanese"],"しはん":["japanese"],"しひょう":["japanese"],"しふく":["japanese"],"じぶん":["japanese"],"しへい":["japanese"],"しほう":["japanese"],"しほん":["japanese"],"しまう":["japanese"],"しまる":["japanese"],"しみん":["japanese"],"しむける":["japanese"],"じむしょ":["japanese"],"しめい":["japanese"],"しめる":["japanese"],"しもん":["japanese"],"しゃいん":["japanese"],"しゃうん":["japanese"],"しゃおん":["japanese"],"じゃがいも":["japanese"],"しやくしょ":["japanese"],"しゃくほう":["japanese"],"しゃけん":["japanese"],"しゃこ":["japanese"],"しゃざい":["japanese"],"しゃしん":["japanese"],"しゃせん":["japanese"],"しゃそう":["japanese"],"しゃたい":["japanese"],"しゃちょう":["japanese"],"しゃっきん":["japanese"],"じゃま":["japanese"],"しゃりん":["japanese"],"しゃれい":["japanese"],"じゆう":["japanese"],"じゅうしょ":["japanese"],"しゅくはく":["japanese"],"じゅしん":["japanese"],"しゅっせき":["japanese"],"しゅみ":["japanese"],"しゅらば":["japanese"],"じゅんばん":["japanese"],"しょうかい":["japanese"],"しょくたく":["japanese"],"しょっけん":["japanese"],"しょどう":["japanese"],"しょもつ":["japanese"],"しらせる":["japanese"],"しらべる":["japanese"],"しんか":["japanese"],"しんこう":["japanese"],"じんじゃ":["japanese"],"しんせいじ":["japanese"],"しんちく":["japanese"],"しんりん":["japanese"],"すあげ":["japanese"],"すあし":["japanese"],"すあな":["japanese"],"ずあん":["japanese"],"すいえい":["japanese"],"すいか":["japanese"],"すいとう":["japanese"],"ずいぶん":["japanese"],"すいようび":["japanese"],"すうがく":["japanese"],"すうじつ":["japanese"],"すうせん":["japanese"],"すおどり":["japanese"],"すきま":["japanese"],"すくう":["japanese"],"すくない":["japanese"],"すける":["japanese"],"すごい":["japanese"],"すこし":["japanese"],"ずさん":["japanese"],"すずしい":["japanese"],"すすむ":["japanese"],"すすめる":["japanese"],"すっかり":["japanese"],"ずっしり":["japanese"],"ずっと":["japanese"],"すてき":["japanese"],"すてる":["japanese"],"すねる":["japanese"],"すのこ":["japanese"],"すはだ":["japanese"],"すばらしい":["japanese"],"ずひょう":["japanese"],"ずぶぬれ":["japanese"],"すぶり":["japanese"],"すふれ":["japanese"],"すべて":["japanese"],"すべる":["japanese"],"ずほう":["japanese"],"すぼん":["japanese"],"すまい":["japanese"],"すめし":["japanese"],"すもう":["japanese"],"すやき":["japanese"],"すらすら":["japanese"],"するめ":["japanese"],"すれちがう":["japanese"],"すろっと":["japanese"],"すわる":["japanese"],"すんぜん":["japanese"],"すんぽう":["japanese"],"せあぶら":["japanese"],"せいかつ":["japanese"],"せいげん":["japanese"],"せいじ":["japanese"],"せいよう":["japanese"],"せおう":["japanese"],"せかいかん":["japanese"],"せきにん":["japanese"],"せきむ":["japanese"],"せきゆ":["japanese"],"せきらんうん":["japanese"],"せけん":["japanese"],"せこう":["japanese"],"せすじ":["japanese"],"せたい":["japanese"],"せたけ":["japanese"],"せっかく":["japanese"],"せっきゃく":["japanese"],"ぜっく":["japanese"],"せっけん":["japanese"],"せっこつ":["japanese"],"せっさたくま":["japanese"],"せつぞく":["japanese"],"せつだん":["japanese"],"せつでん":["japanese"],"せっぱん":["japanese"],"せつび":["japanese"],"せつぶん":["japanese"],"せつめい":["japanese"],"せつりつ":["japanese"],"せなか":["japanese"],"せのび":["japanese"],"せはば":["japanese"],"せびろ":["japanese"],"せぼね":["japanese"],"せまい":["japanese"],"せまる":["japanese"],"せめる":["japanese"],"せもたれ":["japanese"],"せりふ":["japanese"],"ぜんあく":["japanese"],"せんい":["japanese"],"せんえい":["japanese"],"せんか":["japanese"],"せんきょ":["japanese"],"せんく":["japanese"],"せんげん":["japanese"],"ぜんご":["japanese"],"せんさい":["japanese"],"せんしゅ":["japanese"],"せんすい":["japanese"],"せんせい":["japanese"],"せんぞ":["japanese"],"せんたく":["japanese"],"せんちょう":["japanese"],"せんてい":["japanese"],"せんとう":["japanese"],"せんぬき":["japanese"],"せんねん":["japanese"],"せんぱい":["japanese"],"ぜんぶ":["japanese"],"ぜんぽう":["japanese"],"せんむ":["japanese"],"せんめんじょ":["japanese"],"せんもん":["japanese"],"せんやく":["japanese"],"せんゆう":["japanese"],"せんよう":["japanese"],"ぜんら":["japanese"],"ぜんりゃく":["japanese"],"せんれい":["japanese"],"せんろ":["japanese"],"そあく":["japanese"],"そいとげる":["japanese"],"そいね":["japanese"],"そうがんきょう":["japanese"],"そうき":["japanese"],"そうご":["japanese"],"そうしん":["japanese"],"そうだん":["japanese"],"そうなん":["japanese"],"そうび":["japanese"],"そうめん":["japanese"],"そうり":["japanese"],"そえもの":["japanese"],"そえん":["japanese"],"そがい":["japanese"],"そげき":["japanese"],"そこう":["japanese"],"そこそこ":["japanese"],"そざい":["japanese"],"そしな":["japanese"],"そせい":["japanese"],"そせん":["japanese"],"そそぐ":["japanese"],"そだてる":["japanese"],"そつう":["japanese"],"そつえん":["japanese"],"そっかん":["japanese"],"そつぎょう":["japanese"],"そっけつ":["japanese"],"そっこう":["japanese"],"そっせん":["japanese"],"そっと":["japanese"],"そとがわ":["japanese"],"そとづら":["japanese"],"そなえる":["japanese"],"そなた":["japanese"],"そふぼ":["japanese"],"そぼく":["japanese"],"そぼろ":["japanese"],"そまつ":["japanese"],"そまる":["japanese"],"そむく":["japanese"],"そむりえ":["japanese"],"そめる":["japanese"],"そもそも":["japanese"],"そよかぜ":["japanese"],"そらまめ":["japanese"],"そろう":["japanese"],"そんかい":["japanese"],"そんけい":["japanese"],"そんざい":["japanese"],"そんしつ":["japanese"],"そんぞく":["japanese"],"そんちょう":["japanese"],"ぞんび":["japanese"],"ぞんぶん":["japanese"],"そんみん":["japanese"],"たあい":["japanese"],"たいいん":["japanese"],"たいうん":["japanese"],"たいえき":["japanese"],"たいおう":["japanese"],"だいがく":["japanese"],"たいき":["japanese"],"たいぐう":["japanese"],"たいけん":["japanese"],"たいこ":["japanese"],"たいざい":["japanese"],"だいじょうぶ":["japanese"],"だいすき":["japanese"],"たいせつ":["japanese"],"たいそう":["japanese"],"だいたい":["japanese"],"たいちょう":["japanese"],"たいてい":["japanese"],"だいどころ":["japanese"],"たいない":["japanese"],"たいねつ":["japanese"],"たいのう":["japanese"],"たいはん":["japanese"],"だいひょう":["japanese"],"たいふう":["japanese"],"たいへん":["japanese"],"たいほ":["japanese"],"たいまつばな":["japanese"],"たいみんぐ":["japanese"],"たいむ":["japanese"],"たいめん":["japanese"],"たいやき":["japanese"],"たいよう":["japanese"],"たいら":["japanese"],"たいりょく":["japanese"],"たいる":["japanese"],"たいわん":["japanese"],"たうえ":["japanese"],"たえる":["japanese"],"たおす":["japanese"],"たおる":["japanese"],"たおれる":["japanese"],"たかい":["japanese"],"たかね":["japanese"],"たきび":["japanese"],"たくさん":["japanese"],"たこく":["japanese"],"たこやき":["japanese"],"たさい":["japanese"],"たしざん":["japanese"],"だじゃれ":["japanese"],"たすける":["japanese"],"たずさわる":["japanese"],"たそがれ":["japanese"],"たたかう":["japanese"],"たたく":["japanese"],"ただしい":["japanese"],"たたみ":["japanese"],"たちばな":["japanese"],"だっかい":["japanese"],"だっきゃく":["japanese"],"だっこ":["japanese"],"だっしゅつ":["japanese"],"だったい":["japanese"],"たてる":["japanese"],"たとえる":["japanese"],"たなばた":["japanese"],"たにん":["japanese"],"たぬき":["japanese"],"たのしみ":["japanese"],"たはつ":["japanese"],"たぶん":["japanese"],"たべる":["japanese"],"たぼう":["japanese"],"たまご":["japanese"],"たまる":["japanese"],"だむる":["japanese"],"ためいき":["japanese"],"ためす":["japanese"],"ためる":["japanese"],"たもつ":["japanese"],"たやすい":["japanese"],"たよる":["japanese"],"たらす":["japanese"],"たりきほんがん":["japanese"],"たりょう":["japanese"],"たりる":["japanese"],"たると":["japanese"],"たれる":["japanese"],"たれんと":["japanese"],"たろっと":["japanese"],"たわむれる":["japanese"],"だんあつ":["japanese"],"たんい":["japanese"],"たんおん":["japanese"],"たんか":["japanese"],"たんき":["japanese"],"たんけん":["japanese"],"たんご":["japanese"],"たんさん":["japanese"],"たんじょうび":["japanese"],"だんせい":["japanese"],"たんそく":["japanese"],"たんたい":["japanese"],"だんち":["japanese"],"たんてい":["japanese"],"たんとう":["japanese"],"だんな":["japanese"],"たんにん":["japanese"],"だんねつ":["japanese"],"たんのう":["japanese"],"たんぴん":["japanese"],"だんぼう":["japanese"],"たんまつ":["japanese"],"たんめい":["japanese"],"だんれつ":["japanese"],"だんろ":["japanese"],"だんわ":["japanese"],"ちあい":["japanese"],"ちあん":["japanese"],"ちいき":["japanese"],"ちいさい":["japanese"],"ちえん":["japanese"],"ちかい":["japanese"],"ちから":["japanese"],"ちきゅう":["japanese"],"ちきん":["japanese"],"ちけいず":["japanese"],"ちけん":["japanese"],"ちこく":["japanese"],"ちさい":["japanese"],"ちしき":["japanese"],"ちしりょう":["japanese"],"ちせい":["japanese"],"ちそう":["japanese"],"ちたい":["japanese"],"ちたん":["japanese"],"ちちおや":["japanese"],"ちつじょ":["japanese"],"ちてき":["japanese"],"ちてん":["japanese"],"ちぬき":["japanese"],"ちぬり":["japanese"],"ちのう":["japanese"],"ちひょう":["japanese"],"ちへいせん":["japanese"],"ちほう":["japanese"],"ちまた":["japanese"],"ちみつ":["japanese"],"ちみどろ":["japanese"],"ちめいど":["japanese"],"ちゃんこなべ":["japanese"],"ちゅうい":["japanese"],"ちゆりょく":["japanese"],"ちょうし":["japanese"],"ちょさくけん":["japanese"],"ちらし":["japanese"],"ちらみ":["japanese"],"ちりがみ":["japanese"],"ちりょう":["japanese"],"ちるど":["japanese"],"ちわわ":["japanese"],"ちんたい":["japanese"],"ちんもく":["japanese"],"ついか":["japanese"],"ついたち":["japanese"],"つうか":["japanese"],"つうじょう":["japanese"],"つうはん":["japanese"],"つうわ":["japanese"],"つかう":["japanese"],"つかれる":["japanese"],"つくね":["japanese"],"つくる":["japanese"],"つけね":["japanese"],"つける":["japanese"],"つごう":["japanese"],"つたえる":["japanese"],"つづく":["japanese"],"つつじ":["japanese"],"つつむ":["japanese"],"つとめる":["japanese"],"つながる":["japanese"],"つなみ":["japanese"],"つねづね":["japanese"],"つのる":["japanese"],"つぶす":["japanese"],"つまらない":["japanese"],"つまる":["japanese"],"つみき":["japanese"],"つめたい":["japanese"],"つもり":["japanese"],"つもる":["japanese"],"つよい":["japanese"],"つるぼ":["japanese"],"つるみく":["japanese"],"つわもの":["japanese"],"つわり":["japanese"],"てあし":["japanese"],"てあて":["japanese"],"てあみ":["japanese"],"ていおん":["japanese"],"ていか":["japanese"],"ていき":["japanese"],"ていけい":["japanese"],"ていこく":["japanese"],"ていさつ":["japanese"],"ていし":["japanese"],"ていせい":["japanese"],"ていたい":["japanese"],"ていど":["japanese"],"ていねい":["japanese"],"ていひょう":["japanese"],"ていへん":["japanese"],"ていぼう":["japanese"],"てうち":["japanese"],"ておくれ":["japanese"],"てきとう":["japanese"],"てくび":["japanese"],"でこぼこ":["japanese"],"てさぎょう":["japanese"],"てさげ":["japanese"],"てすり":["japanese"],"てそう":["japanese"],"てちがい":["japanese"],"てちょう":["japanese"],"てつがく":["japanese"],"てつづき":["japanese"],"でっぱ":["japanese"],"てつぼう":["japanese"],"てつや":["japanese"],"でぬかえ":["japanese"],"てぬき":["japanese"],"てぬぐい":["japanese"],"てのひら":["japanese"],"てはい":["japanese"],"てぶくろ":["japanese"],"てふだ":["japanese"],"てほどき":["japanese"],"てほん":["japanese"],"てまえ":["japanese"],"てまきずし":["japanese"],"てみじか":["japanese"],"てみやげ":["japanese"],"てらす":["japanese"],"てれび":["japanese"],"てわけ":["japanese"],"てわたし":["japanese"],"でんあつ":["japanese"],"てんいん":["japanese"],"てんかい":["japanese"],"てんき":["japanese"],"てんぐ":["japanese"],"てんけん":["japanese"],"てんごく":["japanese"],"てんさい":["japanese"],"てんし":["japanese"],"てんすう":["japanese"],"でんち":["japanese"],"てんてき":["japanese"],"てんとう":["japanese"],"てんない":["japanese"],"てんぷら":["japanese"],"てんぼうだい":["japanese"],"てんめつ":["japanese"],"てんらんかい":["japanese"],"でんりょく":["japanese"],"でんわ":["japanese"],"どあい":["japanese"],"といれ":["japanese"],"どうかん":["japanese"],"とうきゅう":["japanese"],"どうぐ":["japanese"],"とうし":["japanese"],"とうむぎ":["japanese"],"とおい":["japanese"],"とおか":["japanese"],"とおく":["japanese"],"とおす":["japanese"],"とおる":["japanese"],"とかい":["japanese"],"とかす":["japanese"],"ときおり":["japanese"],"ときどき":["japanese"],"とくい":["japanese"],"とくしゅう":["japanese"],"とくてん":["japanese"],"とくに":["japanese"],"とくべつ":["japanese"],"とけい":["japanese"],"とける":["japanese"],"とこや":["japanese"],"とさか":["japanese"],"としょかん":["japanese"],"とそう":["japanese"],"とたん":["japanese"],"とちゅう":["japanese"],"とっきゅう":["japanese"],"とっくん":["japanese"],"とつぜん":["japanese"],"とつにゅう":["japanese"],"とどける":["japanese"],"ととのえる":["japanese"],"とない":["japanese"],"となえる":["japanese"],"となり":["japanese"],"とのさま":["japanese"],"とばす":["japanese"],"どぶがわ":["japanese"],"とほう":["japanese"],"とまる":["japanese"],"とめる":["japanese"],"ともだち":["japanese"],"ともる":["japanese"],"どようび":["japanese"],"とらえる":["japanese"],"とんかつ":["japanese"],"どんぶり":["japanese"],"ないかく":["japanese"],"ないこう":["japanese"],"ないしょ":["japanese"],"ないす":["japanese"],"ないせん":["japanese"],"ないそう":["japanese"],"なおす":["japanese"],"ながい":["japanese"],"なくす":["japanese"],"なげる":["japanese"],"なこうど":["japanese"],"なさけ":["japanese"],"なたでここ":["japanese"],"なっとう":["japanese"],"なつやすみ":["japanese"],"ななおし":["japanese"],"なにごと":["japanese"],"なにもの":["japanese"],"なにわ":["japanese"],"なのか":["japanese"],"なふだ":["japanese"],"なまいき":["japanese"],"なまえ":["japanese"],"なまみ":["japanese"],"なみだ":["japanese"],"なめらか":["japanese"],"なめる":["japanese"],"なやむ":["japanese"],"ならう":["japanese"],"ならび":["japanese"],"ならぶ":["japanese"],"なれる":["japanese"],"なわとび":["japanese"],"なわばり":["japanese"],"にあう":["japanese"],"にいがた":["japanese"],"にうけ":["japanese"],"におい":["japanese"],"にかい":["japanese"],"にがて":["japanese"],"にきび":["japanese"],"にくしみ":["japanese"],"にくまん":["japanese"],"にげる":["japanese"],"にさんかたんそ":["japanese"],"にしき":["japanese"],"にせもの":["japanese"],"にちじょう":["japanese"],"にちようび":["japanese"],"にっか":["japanese"],"にっき":["japanese"],"にっけい":["japanese"],"にっこう":["japanese"],"にっさん":["japanese"],"にっしょく":["japanese"],"にっすう":["japanese"],"にっせき":["japanese"],"にってい":["japanese"],"になう":["japanese"],"にほん":["japanese"],"にまめ":["japanese"],"にもつ":["japanese"],"にやり":["japanese"],"にゅういん":["japanese"],"にりんしゃ":["japanese"],"にわとり":["japanese"],"にんい":["japanese"],"にんか":["japanese"],"にんき":["japanese"],"にんげん":["japanese"],"にんしき":["japanese"],"にんずう":["japanese"],"にんそう":["japanese"],"にんたい":["japanese"],"にんち":["japanese"],"にんてい":["japanese"],"にんにく":["japanese"],"にんぷ":["japanese"],"にんまり":["japanese"],"にんむ":["japanese"],"にんめい":["japanese"],"にんよう":["japanese"],"ぬいくぎ":["japanese"],"ぬかす":["japanese"],"ぬぐいとる":["japanese"],"ぬぐう":["japanese"],"ぬくもり":["japanese"],"ぬすむ":["japanese"],"ぬまえび":["japanese"],"ぬめり":["japanese"],"ぬらす":["japanese"],"ぬんちゃく":["japanese"],"ねあげ":["japanese"],"ねいき":["japanese"],"ねいる":["japanese"],"ねいろ":["japanese"],"ねぐせ":["japanese"],"ねくたい":["japanese"],"ねくら":["japanese"],"ねこぜ":["japanese"],"ねこむ":["japanese"],"ねさげ":["japanese"],"ねすごす":["japanese"],"ねそべる":["japanese"],"ねだん":["japanese"],"ねつい":["japanese"],"ねっしん":["japanese"],"ねつぞう":["japanese"],"ねったいぎょ":["japanese"],"ねぶそく":["japanese"],"ねふだ":["japanese"],"ねぼう":["japanese"],"ねほりはほり":["japanese"],"ねまき":["japanese"],"ねまわし":["japanese"],"ねみみ":["japanese"],"ねむい":["japanese"],"ねむたい":["japanese"],"ねもと":["japanese"],"ねらう":["japanese"],"ねわざ":["japanese"],"ねんいり":["japanese"],"ねんおし":["japanese"],"ねんかん":["japanese"],"ねんきん":["japanese"],"ねんぐ":["japanese"],"ねんざ":["japanese"],"ねんし":["japanese"],"ねんちゃく":["japanese"],"ねんど":["japanese"],"ねんぴ":["japanese"],"ねんぶつ":["japanese"],"ねんまつ":["japanese"],"ねんりょう":["japanese"],"ねんれい":["japanese"],"のいず":["japanese"],"のおづま":["japanese"],"のがす":["japanese"],"のきなみ":["japanese"],"のこぎり":["japanese"],"のこす":["japanese"],"のこる":["japanese"],"のせる":["japanese"],"のぞく":["japanese"],"のぞむ":["japanese"],"のたまう":["japanese"],"のちほど":["japanese"],"のっく":["japanese"],"のばす":["japanese"],"のはら":["japanese"],"のべる":["japanese"],"のぼる":["japanese"],"のみもの":["japanese"],"のやま":["japanese"],"のらいぬ":["japanese"],"のらねこ":["japanese"],"のりもの":["japanese"],"のりゆき":["japanese"],"のれん":["japanese"],"のんき":["japanese"],"ばあい":["japanese"],"はあく":["japanese"],"ばあさん":["japanese"],"ばいか":["japanese"],"ばいく":["japanese"],"はいけん":["japanese"],"はいご":["japanese"],"はいしん":["japanese"],"はいすい":["japanese"],"はいせん":["japanese"],"はいそう":["japanese"],"はいち":["japanese"],"ばいばい":["japanese"],"はいれつ":["japanese"],"はえる":["japanese"],"はおる":["japanese"],"はかい":["japanese"],"ばかり":["japanese"],"はかる":["japanese"],"はくしゅ":["japanese"],"はけん":["japanese"],"はこぶ":["japanese"],"はさみ":["japanese"],"はさん":["japanese"],"はしご":["japanese"],"ばしょ":["japanese"],"はしる":["japanese"],"はせる":["japanese"],"ぱそこん":["japanese"],"はそん":["japanese"],"はたん":["japanese"],"はちみつ":["japanese"],"はつおん":["japanese"],"はっかく":["japanese"],"はづき":["japanese"],"はっきり":["japanese"],"はっくつ":["japanese"],"はっけん":["japanese"],"はっこう":["japanese"],"はっさん":["japanese"],"はっしん":["japanese"],"はったつ":["japanese"],"はっちゅう":["japanese"],"はってん":["japanese"],"はっぴょう":["japanese"],"はっぽう":["japanese"],"はなす":["japanese"],"はなび":["japanese"],"はにかむ":["japanese"],"はぶらし":["japanese"],"はみがき":["japanese"],"はむかう":["japanese"],"はめつ":["japanese"],"はやい":["japanese"],"はやし":["japanese"],"はらう":["japanese"],"はろうぃん":["japanese"],"はわい":["japanese"],"はんい":["japanese"],"はんえい":["japanese"],"はんおん":["japanese"],"はんかく":["japanese"],"はんきょう":["japanese"],"ばんぐみ":["japanese"],"はんこ":["japanese"],"はんしゃ":["japanese"],"はんすう":["japanese"],"はんだん":["japanese"],"ぱんち":["japanese"],"ぱんつ":["japanese"],"はんてい":["japanese"],"はんとし":["japanese"],"はんのう":["japanese"],"はんぱ":["japanese"],"はんぶん":["japanese"],"はんぺん":["japanese"],"はんぼうき":["japanese"],"はんめい":["japanese"],"はんらん":["japanese"],"はんろん":["japanese"],"ひいき":["japanese"],"ひうん":["japanese"],"ひえる":["japanese"],"ひかく":["japanese"],"ひかり":["japanese"],"ひかる":["japanese"],"ひかん":["japanese"],"ひくい":["japanese"],"ひけつ":["japanese"],"ひこうき":["japanese"],"ひこく":["japanese"],"ひさい":["japanese"],"ひさしぶり":["japanese"],"ひさん":["japanese"],"びじゅつかん":["japanese"],"ひしょ":["japanese"],"ひそか":["japanese"],"ひそむ":["japanese"],"ひたむき":["japanese"],"ひだり":["japanese"],"ひたる":["japanese"],"ひつぎ":["japanese"],"ひっこし":["japanese"],"ひっし":["japanese"],"ひつじゅひん":["japanese"],"ひっす":["japanese"],"ひつぜん":["japanese"],"ぴったり":["japanese"],"ぴっちり":["japanese"],"ひつよう":["japanese"],"ひてい":["japanese"],"ひとごみ":["japanese"],"ひなまつり":["japanese"],"ひなん":["japanese"],"ひねる":["japanese"],"ひはん":["japanese"],"ひびく":["japanese"],"ひひょう":["japanese"],"ひほう":["japanese"],"ひまわり":["japanese"],"ひまん":["japanese"],"ひみつ":["japanese"],"ひめい":["japanese"],"ひめじし":["japanese"],"ひやけ":["japanese"],"ひやす":["japanese"],"ひよう":["japanese"],"びょうき":["japanese"],"ひらがな":["japanese"],"ひらく":["japanese"],"ひりつ":["japanese"],"ひりょう":["japanese"],"ひるま":["japanese"],"ひるやすみ":["japanese"],"ひれい":["japanese"],"ひろい":["japanese"],"ひろう":["japanese"],"ひろき":["japanese"],"ひろゆき":["japanese"],"ひんかく":["japanese"],"ひんけつ":["japanese"],"ひんこん":["japanese"],"ひんしゅ":["japanese"],"ひんそう":["japanese"],"ぴんち":["japanese"],"ひんぱん":["japanese"],"びんぼう":["japanese"],"ふあん":["japanese"],"ふいうち":["japanese"],"ふうけい":["japanese"],"ふうせん":["japanese"],"ぷうたろう":["japanese"],"ふうとう":["japanese"],"ふうふ":["japanese"],"ふえる":["japanese"],"ふおん":["japanese"],"ふかい":["japanese"],"ふきん":["japanese"],"ふくざつ":["japanese"],"ふくぶくろ":["japanese"],"ふこう":["japanese"],"ふさい":["japanese"],"ふしぎ":["japanese"],"ふじみ":["japanese"],"ふすま":["japanese"],"ふせい":["japanese"],"ふせぐ":["japanese"],"ふそく":["japanese"],"ぶたにく":["japanese"],"ふたん":["japanese"],"ふちょう":["japanese"],"ふつう":["japanese"],"ふつか":["japanese"],"ふっかつ":["japanese"],"ふっき":["japanese"],"ふっこく":["japanese"],"ぶどう":["japanese"],"ふとる":["japanese"],"ふとん":["japanese"],"ふのう":["japanese"],"ふはい":["japanese"],"ふひょう":["japanese"],"ふへん":["japanese"],"ふまん":["japanese"],"ふみん":["japanese"],"ふめつ":["japanese"],"ふめん":["japanese"],"ふよう":["japanese"],"ふりこ":["japanese"],"ふりる":["japanese"],"ふるい":["japanese"],"ふんいき":["japanese"],"ぶんがく":["japanese"],"ぶんぐ":["japanese"],"ふんしつ":["japanese"],"ぶんせき":["japanese"],"ふんそう":["japanese"],"ぶんぽう":["japanese"],"へいあん":["japanese"],"へいおん":["japanese"],"へいがい":["japanese"],"へいき":["japanese"],"へいげん":["japanese"],"へいこう":["japanese"],"へいさ":["japanese"],"へいしゃ":["japanese"],"へいせつ":["japanese"],"へいそ":["japanese"],"へいたく":["japanese"],"へいてん":["japanese"],"へいねつ":["japanese"],"へいわ":["japanese"],"へきが":["japanese"],"へこむ":["japanese"],"べにいろ":["japanese"],"べにしょうが":["japanese"],"へらす":["japanese"],"へんかん":["japanese"],"べんきょう":["japanese"],"べんごし":["japanese"],"へんさい":["japanese"],"へんたい":["japanese"],"べんり":["japanese"],"ほあん":["japanese"],"ほいく":["japanese"],"ぼうぎょ":["japanese"],"ほうこく":["japanese"],"ほうそう":["japanese"],"ほうほう":["japanese"],"ほうもん":["japanese"],"ほうりつ":["japanese"],"ほえる":["japanese"],"ほおん":["japanese"],"ほかん":["japanese"],"ほきょう":["japanese"],"ぼきん":["japanese"],"ほくろ":["japanese"],"ほけつ":["japanese"],"ほけん":["japanese"],"ほこう":["japanese"],"ほこる":["japanese"],"ほしい":["japanese"],"ほしつ":["japanese"],"ほしゅ":["japanese"],"ほしょう":["japanese"],"ほせい":["japanese"],"ほそい":["japanese"],"ほそく":["japanese"],"ほたて":["japanese"],"ほたる":["japanese"],"ぽちぶくろ":["japanese"],"ほっきょく":["japanese"],"ほっさ":["japanese"],"ほったん":["japanese"],"ほとんど":["japanese"],"ほめる":["japanese"],"ほんい":["japanese"],"ほんき":["japanese"],"ほんけ":["japanese"],"ほんしつ":["japanese"],"ほんやく":["japanese"],"まいにち":["japanese"],"まかい":["japanese"],"まかせる":["japanese"],"まがる":["japanese"],"まける":["japanese"],"まこと":["japanese"],"まさつ":["japanese"],"まじめ":["japanese"],"ますく":["japanese"],"まぜる":["japanese"],"まつり":["japanese"],"まとめ":["japanese"],"まなぶ":["japanese"],"まぬけ":["japanese"],"まねく":["japanese"],"まほう":["japanese"],"まもる":["japanese"],"まゆげ":["japanese"],"まよう":["japanese"],"まろやか":["japanese"],"まわす":["japanese"],"まわり":["japanese"],"まわる":["japanese"],"まんが":["japanese"],"まんきつ":["japanese"],"まんぞく":["japanese"],"まんなか":["japanese"],"みいら":["japanese"],"みうち":["japanese"],"みえる":["japanese"],"みがく":["japanese"],"みかた":["japanese"],"みかん":["japanese"],"みけん":["japanese"],"みこん":["japanese"],"みじかい":["japanese"],"みすい":["japanese"],"みすえる":["japanese"],"みせる":["japanese"],"みっか":["japanese"],"みつかる":["japanese"],"みつける":["japanese"],"みてい":["japanese"],"みとめる":["japanese"],"みなと":["japanese"],"みなみかさい":["japanese"],"みねらる":["japanese"],"みのう":["japanese"],"みのがす":["japanese"],"みほん":["japanese"],"みもと":["japanese"],"みやげ":["japanese"],"みらい":["japanese"],"みりょく":["japanese"],"みわく":["japanese"],"みんか":["japanese"],"みんぞく":["japanese"],"むいか":["japanese"],"むえき":["japanese"],"むえん":["japanese"],"むかい":["japanese"],"むかう":["japanese"],"むかえ":["japanese"],"むかし":["japanese"],"むぎちゃ":["japanese"],"むける":["japanese"],"むげん":["japanese"],"むさぼる":["japanese"],"むしあつい":["japanese"],"むしば":["japanese"],"むじゅん":["japanese"],"むしろ":["japanese"],"むすう":["japanese"],"むすこ":["japanese"],"むすぶ":["japanese"],"むすめ":["japanese"],"むせる":["japanese"],"むせん":["japanese"],"むちゅう":["japanese"],"むなしい":["japanese"],"むのう":["japanese"],"むやみ":["japanese"],"むよう":["japanese"],"むらさき":["japanese"],"むりょう":["japanese"],"むろん":["japanese"],"めいあん":["japanese"],"めいうん":["japanese"],"めいえん":["japanese"],"めいかく":["japanese"],"めいきょく":["japanese"],"めいさい":["japanese"],"めいし":["japanese"],"めいそう":["japanese"],"めいぶつ":["japanese"],"めいれい":["japanese"],"めいわく":["japanese"],"めぐまれる":["japanese"],"めざす":["japanese"],"めした":["japanese"],"めずらしい":["japanese"],"めだつ":["japanese"],"めまい":["japanese"],"めやす":["japanese"],"めんきょ":["japanese"],"めんせき":["japanese"],"めんどう":["japanese"],"もうしあげる":["japanese"],"もうどうけん":["japanese"],"もえる":["japanese"],"もくし":["japanese"],"もくてき":["japanese"],"もくようび":["japanese"],"もちろん":["japanese"],"もどる":["japanese"],"もらう":["japanese"],"もんく":["japanese"],"もんだい":["japanese"],"やおや":["japanese"],"やける":["japanese"],"やさい":["japanese"],"やさしい":["japanese"],"やすい":["japanese"],"やすたろう":["japanese"],"やすみ":["japanese"],"やせる":["japanese"],"やそう":["japanese"],"やたい":["japanese"],"やちん":["japanese"],"やっと":["japanese"],"やっぱり":["japanese"],"やぶる":["japanese"],"やめる":["japanese"],"ややこしい":["japanese"],"やよい":["japanese"],"やわらかい":["japanese"],"ゆうき":["japanese"],"ゆうびんきょく":["japanese"],"ゆうべ":["japanese"],"ゆうめい":["japanese"],"ゆけつ":["japanese"],"ゆしゅつ":["japanese"],"ゆせん":["japanese"],"ゆそう":["japanese"],"ゆたか":["japanese"],"ゆちゃく":["japanese"],"ゆでる":["japanese"],"ゆにゅう":["japanese"],"ゆびわ":["japanese"],"ゆらい":["japanese"],"ゆれる":["japanese"],"ようい":["japanese"],"ようか":["japanese"],"ようきゅう":["japanese"],"ようじ":["japanese"],"ようす":["japanese"],"ようちえん":["japanese"],"よかぜ":["japanese"],"よかん":["japanese"],"よきん":["japanese"],"よくせい":["japanese"],"よくぼう":["japanese"],"よけい":["japanese"],"よごれる":["japanese"],"よさん":["japanese"],"よしゅう":["japanese"],"よそう":["japanese"],"よそく":["japanese"],"よっか":["japanese"],"よてい":["japanese"],"よどがわく":["japanese"],"よねつ":["japanese"],"よやく":["japanese"],"よゆう":["japanese"],"よろこぶ":["japanese"],"よろしい":["japanese"],"らいう":["japanese"],"らくがき":["japanese"],"らくご":["japanese"],"らくさつ":["japanese"],"らくだ":["japanese"],"らしんばん":["japanese"],"らせん":["japanese"],"らぞく":["japanese"],"らたい":["japanese"],"らっか":["japanese"],"られつ":["japanese"],"りえき":["japanese"],"りかい":["japanese"],"りきさく":["japanese"],"りきせつ":["japanese"],"りくぐん":["japanese"],"りくつ":["japanese"],"りけん":["japanese"],"りこう":["japanese"],"りせい":["japanese"],"りそう":["japanese"],"りそく":["japanese"],"りてん":["japanese"],"りねん":["japanese"],"りゆう":["japanese"],"りゅうがく":["japanese"],"りよう":["japanese"],"りょうり":["japanese"],"りょかん":["japanese"],"りょくちゃ":["japanese"],"りょこう":["japanese"],"りりく":["japanese"],"りれき":["japanese"],"りろん":["japanese"],"りんご":["japanese"],"るいけい":["japanese"],"るいさい":["japanese"],"るいじ":["japanese"],"るいせき":["japanese"],"るすばん":["japanese"],"るりがわら":["japanese"],"れいかん":["japanese"],"れいぎ":["japanese"],"れいせい":["japanese"],"れいぞうこ":["japanese"],"れいとう":["japanese"],"れいぼう":["japanese"],"れきし":["japanese"],"れきだい":["japanese"],"れんあい":["japanese"],"れんけい":["japanese"],"れんこん":["japanese"],"れんさい":["japanese"],"れんしゅう":["japanese"],"れんぞく":["japanese"],"れんらく":["japanese"],"ろうか":["japanese"],"ろうご":["japanese"],"ろうじん":["japanese"],"ろうそく":["japanese"],"ろくが":["japanese"],"ろこつ":["japanese"],"ろじうら":["japanese"],"ろしゅつ":["japanese"],"ろせん":["japanese"],"ろてん":["japanese"],"ろめん":["japanese"],"ろれつ":["japanese"],"ろんぎ":["japanese"],"ろんぱ":["japanese"],"ろんぶん":["japanese"],"ろんり":["japanese"],"わかす":["japanese"],"わかめ":["japanese"],"わかやま":["japanese"],"わかれる":["japanese"],"わしつ":["japanese"],"わじまし":["japanese"],"わすれもの":["japanese"],"わらう":["japanese"],"われる":["japanese"],"가격":["korean"],"가끔":["korean"],"가난":["korean"],"가능":["korean"],"가득":["korean"],"가르침":["korean"],"가뭄":["korean"],"가방":["korean"],"가상":["korean"],"가슴":["korean"],"가운데":["korean"],"가을":["korean"],"가이드":["korean"],"가입":["korean"],"가장":["korean"],"가정":["korean"],"가족":["korean"],"가죽":["korean"],"각오":["korean"],"각자":["korean"],"간격":["korean"],"간부":["korean"],"간섭":["korean"],"간장":["korean"],"간접":["korean"],"간판":["korean"],"갈등":["korean"],"갈비":["korean"],"갈색":["korean"],"갈증":["korean"],"감각":["korean"],"감기":["korean"],"감소":["korean"],"감수성":["korean"],"감자":["korean"],"감정":["korean"],"갑자기":["korean"],"강남":["korean"],"강당":["korean"],"강도":["korean"],"강력히":["korean"],"강변":["korean"],"강북":["korean"],"강사":["korean"],"강수량":["korean"],"강아지":["korean"],"강원도":["korean"],"강의":["korean"],"강제":["korean"],"강조":["korean"],"같이":["korean"],"개구리":["korean"],"개나리":["korean"],"개방":["korean"],"개별":["korean"],"개선":["korean"],"개성":["korean"],"개인":["korean"],"객관적":["korean"],"거실":["korean"],"거액":["korean"],"거울":["korean"],"거짓":["korean"],"거품":["korean"],"걱정":["korean"],"건강":["korean"],"건물":["korean"],"건설":["korean"],"건조":["korean"],"건축":["korean"],"걸음":["korean"],"검사":["korean"],"검토":["korean"],"게시판":["korean"],"게임":["korean"],"겨울":["korean"],"견해":["korean"],"결과":["korean"],"결국":["korean"],"결론":["korean"],"결석":["korean"],"결승":["korean"],"결심":["korean"],"결정":["korean"],"결혼":["korean"],"경계":["korean"],"경고":["korean"],"경기":["korean"],"경력":["korean"],"경복궁":["korean"],"경비":["korean"],"경상도":["korean"],"경영":["korean"],"경우":["korean"],"경쟁":["korean"],"경제":["korean"],"경주":["korean"],"경찰":["korean"],"경치":["korean"],"경향":["korean"],"경험":["korean"],"계곡":["korean"],"계단":["korean"],"계란":["korean"],"계산":["korean"],"계속":["korean"],"계약":["korean"],"계절":["korean"],"계층":["korean"],"계획":["korean"],"고객":["korean"],"고구려":["korean"],"고궁":["korean"],"고급":["korean"],"고등학생":["korean"],"고무신":["korean"],"고민":["korean"],"고양이":["korean"],"고장":["korean"],"고전":["korean"],"고집":["korean"],"고춧가루":["korean"],"고통":["korean"],"고향":["korean"],"곡식":["korean"],"골목":["korean"],"골짜기":["korean"],"골프":["korean"],"공간":["korean"],"공개":["korean"],"공격":["korean"],"공군":["korean"],"공급":["korean"],"공기":["korean"],"공동":["korean"],"공무원":["korean"],"공부":["korean"],"공사":["korean"],"공식":["korean"],"공업":["korean"],"공연":["korean"],"공원":["korean"],"공장":["korean"],"공짜":["korean"],"공책":["korean"],"공통":["korean"],"공포":["korean"],"공항":["korean"],"공휴일":["korean"],"과목":["korean"],"과일":["korean"],"과장":["korean"],"과정":["korean"],"과학":["korean"],"관객":["korean"],"관계":["korean"],"관광":["korean"],"관념":["korean"],"관람":["korean"],"관련":["korean"],"관리":["korean"],"관습":["korean"],"관심":["korean"],"관점":["korean"],"관찰":["korean"],"광경":["korean"],"광고":["korean"],"광장":["korean"],"광주":["korean"],"괴로움":["korean"],"굉장히":["korean"],"교과서":["korean"],"교문":["korean"],"교복":["korean"],"교실":["korean"],"교양":["korean"],"교육":["korean"],"교장":["korean"],"교직":["korean"],"교통":["korean"],"교환":["korean"],"교훈":["korean"],"구경":["korean"],"구름":["korean"],"구멍":["korean"],"구별":["korean"],"구분":["korean"],"구석":["korean"],"구성":["korean"],"구속":["korean"],"구역":["korean"],"구입":["korean"],"구청":["korean"],"구체적":["korean"],"국가":["korean"],"국기":["korean"],"국내":["korean"],"국립":["korean"],"국물":["korean"],"국민":["korean"],"국수":["korean"],"국어":["korean"],"국왕":["korean"],"국적":["korean"],"국제":["korean"],"국회":["korean"],"군대":["korean"],"군사":["korean"],"군인":["korean"],"궁극적":["korean"],"권리":["korean"],"권위":["korean"],"권투":["korean"],"귀국":["korean"],"귀신":["korean"],"규정":["korean"],"규칙":["korean"],"균형":["korean"],"그날":["korean"],"그냥":["korean"],"그늘":["korean"],"그러나":["korean"],"그룹":["korean"],"그릇":["korean"],"그림":["korean"],"그제서야":["korean"],"그토록":["korean"],"극복":["korean"],"극히":["korean"],"근거":["korean"],"근교":["korean"],"근래":["korean"],"근로":["korean"],"근무":["korean"],"근본":["korean"],"근원":["korean"],"근육":["korean"],"근처":["korean"],"글씨":["korean"],"글자":["korean"],"금강산":["korean"],"금고":["korean"],"금년":["korean"],"금메달":["korean"],"금액":["korean"],"금연":["korean"],"금요일":["korean"],"금지":["korean"],"긍정적":["korean"],"기간":["korean"],"기관":["korean"],"기념":["korean"],"기능":["korean"],"기독교":["korean"],"기둥":["korean"],"기록":["korean"],"기름":["korean"],"기법":["korean"],"기본":["korean"],"기분":["korean"],"기쁨":["korean"],"기숙사":["korean"],"기술":["korean"],"기억":["korean"],"기업":["korean"],"기온":["korean"],"기운":["korean"],"기원":["korean"],"기적":["korean"],"기준":["korean"],"기침":["korean"],"기혼":["korean"],"기획":["korean"],"긴급":["korean"],"긴장":["korean"],"길이":["korean"],"김밥":["korean"],"김치":["korean"],"김포공항":["korean"],"깍두기":["korean"],"깜빡":["korean"],"깨달음":["korean"],"깨소금":["korean"],"껍질":["korean"],"꼭대기":["korean"],"꽃잎":["korean"],"나들이":["korean"],"나란히":["korean"],"나머지":["korean"],"나물":["korean"],"나침반":["korean"],"나흘":["korean"],"낙엽":["korean"],"난방":["korean"],"날개":["korean"],"날씨":["korean"],"날짜":["korean"],"남녀":["korean"],"남대문":["korean"],"남매":["korean"],"남산":["korean"],"남자":["korean"],"남편":["korean"],"남학생":["korean"],"낭비":["korean"],"낱말":["korean"],"내년":["korean"],"내용":["korean"],"내일":["korean"],"냄비":["korean"],"냄새":["korean"],"냇물":["korean"],"냉동":["korean"],"냉면":["korean"],"냉방":["korean"],"냉장고":["korean"],"넥타이":["korean"],"넷째":["korean"],"노동":["korean"],"노란색":["korean"],"노력":["korean"],"노인":["korean"],"녹음":["korean"],"녹차":["korean"],"녹화":["korean"],"논리":["korean"],"논문":["korean"],"논쟁":["korean"],"놀이":["korean"],"농구":["korean"],"농담":["korean"],"농민":["korean"],"농부":["korean"],"농업":["korean"],"농장":["korean"],"농촌":["korean"],"높이":["korean"],"눈동자":["korean"],"눈물":["korean"],"눈썹":["korean"],"뉴욕":["korean"],"느낌":["korean"],"늑대":["korean"],"능동적":["korean"],"능력":["korean"],"다방":["korean"],"다양성":["korean"],"다음":["korean"],"다이어트":["korean"],"다행":["korean"],"단계":["korean"],"단골":["korean"],"단독":["korean"],"단맛":["korean"],"단순":["korean"],"단어":["korean"],"단위":["korean"],"단점":["korean"],"단체":["korean"],"단추":["korean"],"단편":["korean"],"단풍":["korean"],"달걀":["korean"],"달러":["korean"],"달력":["korean"],"달리":["korean"],"닭고기":["korean"],"담당":["korean"],"담배":["korean"],"담요":["korean"],"담임":["korean"],"답변":["korean"],"답장":["korean"],"당근":["korean"],"당분간":["korean"],"당연히":["korean"],"당장":["korean"],"대규모":["korean"],"대낮":["korean"],"대단히":["korean"],"대답":["korean"],"대도시":["korean"],"대략":["korean"],"대량":["korean"],"대륙":["korean"],"대문":["korean"],"대부분":["korean"],"대신":["korean"],"대응":["korean"],"대장":["korean"],"대전":["korean"],"대접":["korean"],"대중":["korean"],"대책":["korean"],"대출":["korean"],"대충":["korean"],"대통령":["korean"],"대학":["korean"],"대한민국":["korean"],"대합실":["korean"],"대형":["korean"],"덩어리":["korean"],"데이트":["korean"],"도대체":["korean"],"도덕":["korean"],"도둑":["korean"],"도망":["korean"],"도서관":["korean"],"도심":["korean"],"도움":["korean"],"도입":["korean"],"도자기":["korean"],"도저히":["korean"],"도전":["korean"],"도중":["korean"],"도착":["korean"],"독감":["korean"],"독립":["korean"],"독서":["korean"],"독일":["korean"],"독창적":["korean"],"동화책":["korean"],"뒷모습":["korean"],"뒷산":["korean"],"딸아이":["korean"],"마누라":["korean"],"마늘":["korean"],"마당":["korean"],"마라톤":["korean"],"마련":["korean"],"마무리":["korean"],"마사지":["korean"],"마약":["korean"],"마요네즈":["korean"],"마을":["korean"],"마음":["korean"],"마이크":["korean"],"마중":["korean"],"마지막":["korean"],"마찬가지":["korean"],"마찰":["korean"],"마흔":["korean"],"막걸리":["korean"],"막내":["korean"],"막상":["korean"],"만남":["korean"],"만두":["korean"],"만세":["korean"],"만약":["korean"],"만일":["korean"],"만점":["korean"],"만족":["korean"],"만화":["korean"],"많이":["korean"],"말기":["korean"],"말씀":["korean"],"말투":["korean"],"맘대로":["korean"],"망원경":["korean"],"매년":["korean"],"매달":["korean"],"매력":["korean"],"매번":["korean"],"매스컴":["korean"],"매일":["korean"],"매장":["korean"],"맥주":["korean"],"먹이":["korean"],"먼저":["korean"],"먼지":["korean"],"멀리":["korean"],"메일":["korean"],"며느리":["korean"],"며칠":["korean"],"면담":["korean"],"멸치":["korean"],"명단":["korean"],"명령":["korean"],"명예":["korean"],"명의":["korean"],"명절":["korean"],"명칭":["korean"],"명함":["korean"],"모금":["korean"],"모니터":["korean"],"모델":["korean"],"모든":["korean"],"모범":["korean"],"모습":["korean"],"모양":["korean"],"모임":["korean"],"모조리":["korean"],"모집":["korean"],"모퉁이":["korean"],"목걸이":["korean"],"목록":["korean"],"목사":["korean"],"목소리":["korean"],"목숨":["korean"],"목적":["korean"],"목표":["korean"],"몰래":["korean"],"몸매":["korean"],"몸무게":["korean"],"몸살":["korean"],"몸속":["korean"],"몸짓":["korean"],"몸통":["korean"],"몹시":["korean"],"무관심":["korean"],"무궁화":["korean"],"무더위":["korean"],"무덤":["korean"],"무릎":["korean"],"무슨":["korean"],"무엇":["korean"],"무역":["korean"],"무용":["korean"],"무조건":["korean"],"무지개":["korean"],"무척":["korean"],"문구":["korean"],"문득":["korean"],"문법":["korean"],"문서":["korean"],"문제":["korean"],"문학":["korean"],"문화":["korean"],"물가":["korean"],"물건":["korean"],"물결":["korean"],"물고기":["korean"],"물론":["korean"],"물리학":["korean"],"물음":["korean"],"물질":["korean"],"물체":["korean"],"미국":["korean"],"미디어":["korean"],"미사일":["korean"],"미술":["korean"],"미역":["korean"],"미용실":["korean"],"미움":["korean"],"미인":["korean"],"미팅":["korean"],"미혼":["korean"],"민간":["korean"],"민족":["korean"],"민주":["korean"],"믿음":["korean"],"밀가루":["korean"],"밀리미터":["korean"],"밑바닥":["korean"],"바가지":["korean"],"바구니":["korean"],"바나나":["korean"],"바늘":["korean"],"바닥":["korean"],"바닷가":["korean"],"바람":["korean"],"바이러스":["korean"],"바탕":["korean"],"박물관":["korean"],"박사":["korean"],"박수":["korean"],"반대":["korean"],"반드시":["korean"],"반말":["korean"],"반발":["korean"],"반성":["korean"],"반응":["korean"],"반장":["korean"],"반죽":["korean"],"반지":["korean"],"반찬":["korean"],"받침":["korean"],"발가락":["korean"],"발걸음":["korean"],"발견":["korean"],"발달":["korean"],"발레":["korean"],"발목":["korean"],"발바닥":["korean"],"발생":["korean"],"발음":["korean"],"발자국":["korean"],"발전":["korean"],"발톱":["korean"],"발표":["korean"],"밤하늘":["korean"],"밥그릇":["korean"],"밥맛":["korean"],"밥상":["korean"],"밥솥":["korean"],"방금":["korean"],"방면":["korean"],"방문":["korean"],"방바닥":["korean"],"방법":["korean"],"방송":["korean"],"방식":["korean"],"방안":["korean"],"방울":["korean"],"방지":["korean"],"방학":["korean"],"방해":["korean"],"방향":["korean"],"배경":["korean"],"배꼽":["korean"],"배달":["korean"],"배드민턴":["korean"],"백두산":["korean"],"백색":["korean"],"백성":["korean"],"백인":["korean"],"백제":["korean"],"백화점":["korean"],"버릇":["korean"],"버섯":["korean"],"버튼":["korean"],"번개":["korean"],"번역":["korean"],"번지":["korean"],"번호":["korean"],"벌금":["korean"],"벌레":["korean"],"벌써":["korean"],"범위":["korean"],"범인":["korean"],"범죄":["korean"],"법률":["korean"],"법원":["korean"],"법적":["korean"],"법칙":["korean"],"베이징":["korean"],"벨트":["korean"],"변경":["korean"],"변동":["korean"],"변명":["korean"],"변신":["korean"],"변호사":["korean"],"변화":["korean"],"별도":["korean"],"별명":["korean"],"별일":["korean"],"병실":["korean"],"병아리":["korean"],"병원":["korean"],"보관":["korean"],"보너스":["korean"],"보라색":["korean"],"보람":["korean"],"보름":["korean"],"보상":["korean"],"보안":["korean"],"보자기":["korean"],"보장":["korean"],"보전":["korean"],"보존":["korean"],"보통":["korean"],"보편적":["korean"],"보험":["korean"],"복도":["korean"],"복사":["korean"],"복숭아":["korean"],"복습":["korean"],"볶음":["korean"],"본격적":["korean"],"본래":["korean"],"본부":["korean"],"본사":["korean"],"본성":["korean"],"본인":["korean"],"본질":["korean"],"볼펜":["korean"],"봉사":["korean"],"봉지":["korean"],"봉투":["korean"],"부근":["korean"],"부끄러움":["korean"],"부담":["korean"],"부동산":["korean"],"부문":["korean"],"부분":["korean"],"부산":["korean"],"부상":["korean"],"부엌":["korean"],"부인":["korean"],"부작용":["korean"],"부장":["korean"],"부정":["korean"],"부족":["korean"],"부지런히":["korean"],"부친":["korean"],"부탁":["korean"],"부품":["korean"],"부회장":["korean"],"북부":["korean"],"북한":["korean"],"분노":["korean"],"분량":["korean"],"분리":["korean"],"분명":["korean"],"분석":["korean"],"분야":["korean"],"분위기":["korean"],"분필":["korean"],"분홍색":["korean"],"불고기":["korean"],"불과":["korean"],"불교":["korean"],"불꽃":["korean"],"불만":["korean"],"불법":["korean"],"불빛":["korean"],"불안":["korean"],"불이익":["korean"],"불행":["korean"],"브랜드":["korean"],"비극":["korean"],"비난":["korean"],"비닐":["korean"],"비둘기":["korean"],"비디오":["korean"],"비로소":["korean"],"비만":["korean"],"비명":["korean"],"비밀":["korean"],"비바람":["korean"],"비빔밥":["korean"],"비상":["korean"],"비용":["korean"],"비율":["korean"],"비중":["korean"],"비타민":["korean"],"비판":["korean"],"빌딩":["korean"],"빗물":["korean"],"빗방울":["korean"],"빗줄기":["korean"],"빛깔":["korean"],"빨간색":["korean"],"빨래":["korean"],"빨리":["korean"],"사건":["korean"],"사계절":["korean"],"사나이":["korean"],"사냥":["korean"],"사람":["korean"],"사랑":["korean"],"사립":["korean"],"사모님":["korean"],"사물":["korean"],"사방":["korean"],"사상":["korean"],"사생활":["korean"],"사설":["korean"],"사슴":["korean"],"사실":["korean"],"사업":["korean"],"사용":["korean"],"사월":["korean"],"사장":["korean"],"사전":["korean"],"사진":["korean"],"사촌":["korean"],"사춘기":["korean"],"사탕":["korean"],"사투리":["korean"],"사흘":["korean"],"산길":["korean"],"산부인과":["korean"],"산업":["korean"],"산책":["korean"],"살림":["korean"],"살인":["korean"],"살짝":["korean"],"삼계탕":["korean"],"삼국":["korean"],"삼십":["korean"],"삼월":["korean"],"삼촌":["korean"],"상관":["korean"],"상금":["korean"],"상대":["korean"],"상류":["korean"],"상반기":["korean"],"상상":["korean"],"상식":["korean"],"상업":["korean"],"상인":["korean"],"상자":["korean"],"상점":["korean"],"상처":["korean"],"상추":["korean"],"상태":["korean"],"상표":["korean"],"상품":["korean"],"상황":["korean"],"새벽":["korean"],"색깔":["korean"],"색연필":["korean"],"생각":["korean"],"생명":["korean"],"생물":["korean"],"생방송":["korean"],"생산":["korean"],"생선":["korean"],"생신":["korean"],"생일":["korean"],"생활":["korean"],"서랍":["korean"],"서른":["korean"],"서명":["korean"],"서민":["korean"],"서비스":["korean"],"서양":["korean"],"서울":["korean"],"서적":["korean"],"서점":["korean"],"서쪽":["korean"],"서클":["korean"],"석사":["korean"],"석유":["korean"],"선거":["korean"],"선물":["korean"],"선배":["korean"],"선생":["korean"],"선수":["korean"],"선원":["korean"],"선장":["korean"],"선전":["korean"],"선택":["korean"],"선풍기":["korean"],"설거지":["korean"],"설날":["korean"],"설렁탕":["korean"],"설명":["korean"],"설문":["korean"],"설사":["korean"],"설악산":["korean"],"설치":["korean"],"설탕":["korean"],"섭씨":["korean"],"성공":["korean"],"성당":["korean"],"성명":["korean"],"성별":["korean"],"성인":["korean"],"성장":["korean"],"성적":["korean"],"성질":["korean"],"성함":["korean"],"세금":["korean"],"세미나":["korean"],"세상":["korean"],"세월":["korean"],"세종대왕":["korean"],"세탁":["korean"],"센터":["korean"],"센티미터":["korean"],"셋째":["korean"],"소규모":["korean"],"소극적":["korean"],"소금":["korean"],"소나기":["korean"],"소년":["korean"],"소득":["korean"],"소망":["korean"],"소문":["korean"],"소설":["korean"],"소속":["korean"],"소아과":["korean"],"소용":["korean"],"소원":["korean"],"소음":["korean"],"소중히":["korean"],"소지품":["korean"],"소질":["korean"],"소풍":["korean"],"소형":["korean"],"속담":["korean"],"속도":["korean"],"속옷":["korean"],"손가락":["korean"],"손길":["korean"],"손녀":["korean"],"손님":["korean"],"손등":["korean"],"손목":["korean"],"손뼉":["korean"],"손실":["korean"],"손질":["korean"],"손톱":["korean"],"손해":["korean"],"솔직히":["korean"],"솜씨":["korean"],"송아지":["korean"],"송이":["korean"],"송편":["korean"],"쇠고기":["korean"],"쇼핑":["korean"],"수건":["korean"],"수년":["korean"],"수단":["korean"],"수돗물":["korean"],"수동적":["korean"],"수면":["korean"],"수명":["korean"],"수박":["korean"],"수상":["korean"],"수석":["korean"],"수술":["korean"],"수시로":["korean"],"수업":["korean"],"수염":["korean"],"수영":["korean"],"수입":["korean"],"수준":["korean"],"수집":["korean"],"수출":["korean"],"수컷":["korean"],"수필":["korean"],"수학":["korean"],"수험생":["korean"],"수화기":["korean"],"숙녀":["korean"],"숙소":["korean"],"숙제":["korean"],"순간":["korean"],"순서":["korean"],"순수":["korean"],"순식간":["korean"],"순위":["korean"],"숟가락":["korean"],"술병":["korean"],"술집":["korean"],"숫자":["korean"],"스님":["korean"],"스물":["korean"],"스스로":["korean"],"스승":["korean"],"스웨터":["korean"],"스위치":["korean"],"스케이트":["korean"],"스튜디오":["korean"],"스트레스":["korean"],"스포츠":["korean"],"슬쩍":["korean"],"슬픔":["korean"],"습관":["korean"],"습기":["korean"],"승객":["korean"],"승리":["korean"],"승부":["korean"],"승용차":["korean"],"승진":["korean"],"시각":["korean"],"시간":["korean"],"시골":["korean"],"시금치":["korean"],"시나리오":["korean"],"시댁":["korean"],"시리즈":["korean"],"시멘트":["korean"],"시민":["korean"],"시부모":["korean"],"시선":["korean"],"시설":["korean"],"시스템":["korean"],"시아버지":["korean"],"시어머니":["korean"],"시월":["korean"],"시인":["korean"],"시일":["korean"],"시작":["korean"],"시장":["korean"],"시절":["korean"],"시점":["korean"],"시중":["korean"],"시즌":["korean"],"시집":["korean"],"시청":["korean"],"시합":["korean"],"시험":["korean"],"식구":["korean"],"식기":["korean"],"식당":["korean"],"식량":["korean"],"식료품":["korean"],"식물":["korean"],"식빵":["korean"],"식사":["korean"],"식생활":["korean"],"식초":["korean"],"식탁":["korean"],"식품":["korean"],"신고":["korean"],"신규":["korean"],"신념":["korean"],"신문":["korean"],"신발":["korean"],"신비":["korean"],"신사":["korean"],"신세":["korean"],"신용":["korean"],"신제품":["korean"],"신청":["korean"],"신체":["korean"],"신화":["korean"],"실감":["korean"],"실내":["korean"],"실력":["korean"],"실례":["korean"],"실망":["korean"],"실수":["korean"],"실습":["korean"],"실시":["korean"],"실장":["korean"],"실정":["korean"],"실질적":["korean"],"실천":["korean"],"실체":["korean"],"실컷":["korean"],"실태":["korean"],"실패":["korean"],"실험":["korean"],"실현":["korean"],"심리":["korean"],"심부름":["korean"],"심사":["korean"],"심장":["korean"],"심정":["korean"],"심판":["korean"],"쌍둥이":["korean"],"씨름":["korean"],"씨앗":["korean"],"아가씨":["korean"],"아나운서":["korean"],"아드님":["korean"],"아들":["korean"],"아쉬움":["korean"],"아스팔트":["korean"],"아시아":["korean"],"아울러":["korean"],"아저씨":["korean"],"아줌마":["korean"],"아직":["korean"],"아침":["korean"],"아파트":["korean"],"아프리카":["korean"],"아픔":["korean"],"아홉":["korean"],"아흔":["korean"],"악기":["korean"],"악몽":["korean"],"악수":["korean"],"안개":["korean"],"안경":["korean"],"안과":["korean"],"안내":["korean"],"안녕":["korean"],"안동":["korean"],"안방":["korean"],"안부":["korean"],"안주":["korean"],"알루미늄":["korean"],"알코올":["korean"],"암시":["korean"],"암컷":["korean"],"압력":["korean"],"앞날":["korean"],"앞문":["korean"],"애인":["korean"],"애정":["korean"],"액수":["korean"],"앨범":["korean"],"야간":["korean"],"야단":["korean"],"야옹":["korean"],"약간":["korean"],"약국":["korean"],"약속":["korean"],"약수":["korean"],"약점":["korean"],"약품":["korean"],"약혼녀":["korean"],"양념":["korean"],"양력":["korean"],"양말":["korean"],"양배추":["korean"],"양주":["korean"],"양파":["korean"],"어둠":["korean"],"어려움":["korean"],"어른":["korean"],"어젯밤":["korean"],"어쨌든":["korean"],"어쩌다가":["korean"],"어쩐지":["korean"],"언니":["korean"],"언덕":["korean"],"언론":["korean"],"언어":["korean"],"얼굴":["korean"],"얼른":["korean"],"얼음":["korean"],"얼핏":["korean"],"엄마":["korean"],"업무":["korean"],"업종":["korean"],"업체":["korean"],"엉덩이":["korean"],"엉망":["korean"],"엉터리":["korean"],"엊그제":["korean"],"에너지":["korean"],"에어컨":["korean"],"엔진":["korean"],"여건":["korean"],"여고생":["korean"],"여관":["korean"],"여군":["korean"],"여권":["korean"],"여대생":["korean"],"여덟":["korean"],"여동생":["korean"],"여든":["korean"],"여론":["korean"],"여름":["korean"],"여섯":["korean"],"여성":["korean"],"여왕":["korean"],"여인":["korean"],"여전히":["korean"],"여직원":["korean"],"여학생":["korean"],"여행":["korean"],"역사":["korean"],"역시":["korean"],"역할":["korean"],"연결":["korean"],"연구":["korean"],"연극":["korean"],"연기":["korean"],"연락":["korean"],"연설":["korean"],"연세":["korean"],"연속":["korean"],"연습":["korean"],"연애":["korean"],"연예인":["korean"],"연인":["korean"],"연장":["korean"],"연주":["korean"],"연출":["korean"],"연필":["korean"],"연합":["korean"],"연휴":["korean"],"열기":["korean"],"열매":["korean"],"열쇠":["korean"],"열심히":["korean"],"열정":["korean"],"열차":["korean"],"열흘":["korean"],"염려":["korean"],"엽서":["korean"],"영국":["korean"],"영남":["korean"],"영상":["korean"],"영양":["korean"],"영역":["korean"],"영웅":["korean"],"영원히":["korean"],"영하":["korean"],"영향":["korean"],"영혼":["korean"],"영화":["korean"],"옆구리":["korean"],"옆방":["korean"],"옆집":["korean"],"예감":["korean"],"예금":["korean"],"예방":["korean"],"예산":["korean"],"예상":["korean"],"예선":["korean"],"예술":["korean"],"예습":["korean"],"예식장":["korean"],"예약":["korean"],"예전":["korean"],"예절":["korean"],"예정":["korean"],"예컨대":["korean"],"옛날":["korean"],"오늘":["korean"],"오락":["korean"],"오랫동안":["korean"],"오렌지":["korean"],"오로지":["korean"],"오른발":["korean"],"오븐":["korean"],"오십":["korean"],"오염":["korean"],"오월":["korean"],"오전":["korean"],"오직":["korean"],"오징어":["korean"],"오페라":["korean"],"오피스텔":["korean"],"오히려":["korean"],"옥상":["korean"],"옥수수":["korean"],"온갖":["korean"],"온라인":["korean"],"온몸":["korean"],"온종일":["korean"],"온통":["korean"],"올가을":["korean"],"올림픽":["korean"],"올해":["korean"],"옷차림":["korean"],"와이셔츠":["korean"],"와인":["korean"],"완성":["korean"],"완전":["korean"],"왕비":["korean"],"왕자":["korean"],"왜냐하면":["korean"],"왠지":["korean"],"외갓집":["korean"],"외국":["korean"],"외로움":["korean"],"외삼촌":["korean"],"외출":["korean"],"외침":["korean"],"외할머니":["korean"],"왼발":["korean"],"왼손":["korean"],"왼쪽":["korean"],"요금":["korean"],"요일":["korean"],"요즘":["korean"],"요청":["korean"],"용기":["korean"],"용서":["korean"],"용어":["korean"],"우산":["korean"],"우선":["korean"],"우승":["korean"],"우연히":["korean"],"우정":["korean"],"우체국":["korean"],"우편":["korean"],"운동":["korean"],"운명":["korean"],"운반":["korean"],"운전":["korean"],"운행":["korean"],"울산":["korean"],"울음":["korean"],"움직임":["korean"],"웃어른":["korean"],"웃음":["korean"],"워낙":["korean"],"원고":["korean"],"원래":["korean"],"원서":["korean"],"원숭이":["korean"],"원인":["korean"],"원장":["korean"],"원피스":["korean"],"월급":["korean"],"월드컵":["korean"],"월세":["korean"],"월요일":["korean"],"웨이터":["korean"],"위반":["korean"],"위법":["korean"],"위성":["korean"],"위원":["korean"],"위험":["korean"],"위협":["korean"],"윗사람":["korean"],"유난히":["korean"],"유럽":["korean"],"유명":["korean"],"유물":["korean"],"유산":["korean"],"유적":["korean"],"유치원":["korean"],"유학":["korean"],"유행":["korean"],"유형":["korean"],"육군":["korean"],"육상":["korean"],"육십":["korean"],"육체":["korean"],"은행":["korean"],"음력":["korean"],"음료":["korean"],"음반":["korean"],"음성":["korean"],"음식":["korean"],"음악":["korean"],"음주":["korean"],"의견":["korean"],"의논":["korean"],"의문":["korean"],"의복":["korean"],"의식":["korean"],"의심":["korean"],"의외로":["korean"],"의욕":["korean"],"의원":["korean"],"의학":["korean"],"이것":["korean"],"이곳":["korean"],"이념":["korean"],"이놈":["korean"],"이달":["korean"],"이대로":["korean"],"이동":["korean"],"이렇게":["korean"],"이력서":["korean"],"이론적":["korean"],"이름":["korean"],"이민":["korean"],"이발소":["korean"],"이별":["korean"],"이불":["korean"],"이빨":["korean"],"이상":["korean"],"이성":["korean"],"이슬":["korean"],"이야기":["korean"],"이용":["korean"],"이웃":["korean"],"이월":["korean"],"이윽고":["korean"],"이익":["korean"],"이전":["korean"],"이중":["korean"],"이튿날":["korean"],"이틀":["korean"],"이혼":["korean"],"인간":["korean"],"인격":["korean"],"인공":["korean"],"인구":["korean"],"인근":["korean"],"인기":["korean"],"인도":["korean"],"인류":["korean"],"인물":["korean"],"인생":["korean"],"인쇄":["korean"],"인연":["korean"],"인원":["korean"],"인재":["korean"],"인종":["korean"],"인천":["korean"],"인체":["korean"],"인터넷":["korean"],"인하":["korean"],"인형":["korean"],"일곱":["korean"],"일기":["korean"],"일단":["korean"],"일대":["korean"],"일등":["korean"],"일반":["korean"],"일본":["korean"],"일부":["korean"],"일상":["korean"],"일생":["korean"],"일손":["korean"],"일요일":["korean"],"일월":["korean"],"일정":["korean"],"일종":["korean"],"일주일":["korean"],"일찍":["korean"],"일체":["korean"],"일치":["korean"],"일행":["korean"],"일회용":["korean"],"임금":["korean"],"임무":["korean"],"입대":["korean"],"입력":["korean"],"입맛":["korean"],"입사":["korean"],"입술":["korean"],"입시":["korean"],"입원":["korean"],"입장":["korean"],"입학":["korean"],"자가용":["korean"],"자격":["korean"],"자극":["korean"],"자동":["korean"],"자랑":["korean"],"자부심":["korean"],"자식":["korean"],"자신":["korean"],"자연":["korean"],"자원":["korean"],"자율":["korean"],"자전거":["korean"],"자정":["korean"],"자존심":["korean"],"자판":["korean"],"작가":["korean"],"작년":["korean"],"작성":["korean"],"작업":["korean"],"작용":["korean"],"작은딸":["korean"],"작품":["korean"],"잔디":["korean"],"잔뜩":["korean"],"잔치":["korean"],"잘못":["korean"],"잠깐":["korean"],"잠수함":["korean"],"잠시":["korean"],"잠옷":["korean"],"잠자리":["korean"],"잡지":["korean"],"장관":["korean"],"장군":["korean"],"장기간":["korean"],"장래":["korean"],"장례":["korean"],"장르":["korean"],"장마":["korean"],"장면":["korean"],"장모":["korean"],"장미":["korean"],"장비":["korean"],"장사":["korean"],"장소":["korean"],"장식":["korean"],"장애인":["korean"],"장인":["korean"],"장점":["korean"],"장차":["korean"],"장학금":["korean"],"재능":["korean"],"재빨리":["korean"],"재산":["korean"],"재생":["korean"],"재작년":["korean"],"재정":["korean"],"재채기":["korean"],"재판":["korean"],"재학":["korean"],"재활용":["korean"],"저것":["korean"],"저고리":["korean"],"저곳":["korean"],"저녁":["korean"],"저런":["korean"],"저렇게":["korean"],"저번":["korean"],"저울":["korean"],"저절로":["korean"],"저축":["korean"],"적극":["korean"],"적당히":["korean"],"적성":["korean"],"적용":["korean"],"적응":["korean"],"전개":["korean"],"전공":["korean"],"전기":["korean"],"전달":["korean"],"전라도":["korean"],"전망":["korean"],"전문":["korean"],"전반":["korean"],"전부":["korean"],"전세":["korean"],"전시":["korean"],"전용":["korean"],"전자":["korean"],"전쟁":["korean"],"전주":["korean"],"전철":["korean"],"전체":["korean"],"전통":["korean"],"전혀":["korean"],"전후":["korean"],"절대":["korean"],"절망":["korean"],"절반":["korean"],"절약":["korean"],"절차":["korean"],"점검":["korean"],"점수":["korean"],"점심":["korean"],"점원":["korean"],"점점":["korean"],"점차":["korean"],"접근":["korean"],"접시":["korean"],"접촉":["korean"],"젓가락":["korean"],"정거장":["korean"],"정도":["korean"],"정류장":["korean"],"정리":["korean"],"정말":["korean"],"정면":["korean"],"정문":["korean"],"정반대":["korean"],"정보":["korean"],"정부":["korean"],"정비":["korean"],"정상":["korean"],"정성":["korean"],"정오":["korean"],"정원":["korean"],"정장":["korean"],"정지":["korean"],"정치":["korean"],"정확히":["korean"],"제공":["korean"],"제과점":["korean"],"제대로":["korean"],"제목":["korean"],"제발":["korean"],"제법":["korean"],"제삿날":["korean"],"제안":["korean"],"제일":["korean"],"제작":["korean"],"제주도":["korean"],"제출":["korean"],"제품":["korean"],"제한":["korean"],"조각":["korean"],"조건":["korean"],"조금":["korean"],"조깅":["korean"],"조명":["korean"],"조미료":["korean"],"조상":["korean"],"조선":["korean"],"조용히":["korean"],"조절":["korean"],"조정":["korean"],"조직":["korean"],"존댓말":["korean"],"존재":["korean"],"졸업":["korean"],"졸음":["korean"],"종교":["korean"],"종로":["korean"],"종류":["korean"],"종소리":["korean"],"종업원":["korean"],"종종":["korean"],"종합":["korean"],"좌석":["korean"],"죄인":["korean"],"주관적":["korean"],"주름":["korean"],"주말":["korean"],"주머니":["korean"],"주먹":["korean"],"주문":["korean"],"주민":["korean"],"주방":["korean"],"주변":["korean"],"주식":["korean"],"주인":["korean"],"주일":["korean"],"주장":["korean"],"주전자":["korean"],"주택":["korean"],"준비":["korean"],"줄거리":["korean"],"줄기":["korean"],"줄무늬":["korean"],"중간":["korean"],"중계방송":["korean"],"중국":["korean"],"중년":["korean"],"중단":["korean"],"중독":["korean"],"중반":["korean"],"중부":["korean"],"중세":["korean"],"중소기업":["korean"],"중순":["korean"],"중앙":["korean"],"중요":["korean"],"중학교":["korean"],"즉석":["korean"],"즉시":["korean"],"즐거움":["korean"],"증가":["korean"],"증거":["korean"],"증권":["korean"],"증상":["korean"],"증세":["korean"],"지각":["korean"],"지갑":["korean"],"지경":["korean"],"지극히":["korean"],"지금":["korean"],"지급":["korean"],"지능":["korean"],"지름길":["korean"],"지리산":["korean"],"지방":["korean"],"지붕":["korean"],"지식":["korean"],"지역":["korean"],"지우개":["korean"],"지원":["korean"],"지적":["korean"],"지점":["korean"],"지진":["korean"],"지출":["korean"],"직선":["korean"],"직업":["korean"],"직원":["korean"],"직장":["korean"],"진급":["korean"],"진동":["korean"],"진로":["korean"],"진료":["korean"],"진리":["korean"],"진짜":["korean"],"진찰":["korean"],"진출":["korean"],"진통":["korean"],"진행":["korean"],"질문":["korean"],"질병":["korean"],"질서":["korean"],"짐작":["korean"],"집단":["korean"],"집안":["korean"],"집중":["korean"],"짜증":["korean"],"찌꺼기":["korean"],"차남":["korean"],"차라리":["korean"],"차량":["korean"],"차림":["korean"],"차별":["korean"],"차선":["korean"],"차츰":["korean"],"착각":["korean"],"찬물":["korean"],"찬성":["korean"],"참가":["korean"],"참기름":["korean"],"참새":["korean"],"참석":["korean"],"참여":["korean"],"참외":["korean"],"참조":["korean"],"찻잔":["korean"],"창가":["korean"],"창고":["korean"],"창구":["korean"],"창문":["korean"],"창밖":["korean"],"창작":["korean"],"창조":["korean"],"채널":["korean"],"채점":["korean"],"책가방":["korean"],"책방":["korean"],"책상":["korean"],"책임":["korean"],"챔피언":["korean"],"처벌":["korean"],"처음":["korean"],"천국":["korean"],"천둥":["korean"],"천장":["korean"],"천재":["korean"],"천천히":["korean"],"철도":["korean"],"철저히":["korean"],"철학":["korean"],"첫날":["korean"],"첫째":["korean"],"청년":["korean"],"청바지":["korean"],"청소":["korean"],"청춘":["korean"],"체계":["korean"],"체력":["korean"],"체온":["korean"],"체육":["korean"],"체중":["korean"],"체험":["korean"],"초등학생":["korean"],"초반":["korean"],"초밥":["korean"],"초상화":["korean"],"초순":["korean"],"초여름":["korean"],"초원":["korean"],"초저녁":["korean"],"초점":["korean"],"초청":["korean"],"초콜릿":["korean"],"촛불":["korean"],"총각":["korean"],"총리":["korean"],"총장":["korean"],"촬영":["korean"],"최근":["korean"],"최상":["korean"],"최선":["korean"],"최신":["korean"],"최악":["korean"],"최종":["korean"],"추석":["korean"],"추억":["korean"],"추진":["korean"],"추천":["korean"],"추측":["korean"],"축구":["korean"],"축소":["korean"],"축제":["korean"],"축하":["korean"],"출근":["korean"],"출발":["korean"],"출산":["korean"],"출신":["korean"],"출연":["korean"],"출입":["korean"],"출장":["korean"],"출판":["korean"],"충격":["korean"],"충고":["korean"],"충돌":["korean"],"충분히":["korean"],"충청도":["korean"],"취업":["korean"],"취직":["korean"],"취향":["korean"],"치약":["korean"],"친구":["korean"],"친척":["korean"],"칠십":["korean"],"칠월":["korean"],"칠판":["korean"],"침대":["korean"],"침묵":["korean"],"침실":["korean"],"칫솔":["korean"],"칭찬":["korean"],"카메라":["korean"],"카운터":["korean"],"칼국수":["korean"],"캐릭터":["korean"],"캠퍼스":["korean"],"캠페인":["korean"],"커튼":["korean"],"컨디션":["korean"],"컬러":["korean"],"컴퓨터":["korean"],"코끼리":["korean"],"코미디":["korean"],"콘서트":["korean"],"콜라":["korean"],"콤플렉스":["korean"],"콩나물":["korean"],"쾌감":["korean"],"쿠데타":["korean"],"크림":["korean"],"큰길":["korean"],"큰딸":["korean"],"큰소리":["korean"],"큰아들":["korean"],"큰어머니":["korean"],"큰일":["korean"],"큰절":["korean"],"클래식":["korean"],"클럽":["korean"],"킬로":["korean"],"타입":["korean"],"타자기":["korean"],"탁구":["korean"],"탁자":["korean"],"탄생":["korean"],"태권도":["korean"],"태양":["korean"],"태풍":["korean"],"택시":["korean"],"탤런트":["korean"],"터널":["korean"],"터미널":["korean"],"테니스":["korean"],"테스트":["korean"],"테이블":["korean"],"텔레비전":["korean"],"토론":["korean"],"토마토":["korean"],"토요일":["korean"],"통계":["korean"],"통과":["korean"],"통로":["korean"],"통신":["korean"],"통역":["korean"],"통일":["korean"],"통장":["korean"],"통제":["korean"],"통증":["korean"],"통합":["korean"],"통화":["korean"],"퇴근":["korean"],"퇴원":["korean"],"퇴직금":["korean"],"튀김":["korean"],"트럭":["korean"],"특급":["korean"],"특별":["korean"],"특성":["korean"],"특수":["korean"],"특징":["korean"],"특히":["korean"],"튼튼히":["korean"],"티셔츠":["korean"],"파란색":["korean"],"파일":["korean"],"파출소":["korean"],"판결":["korean"],"판단":["korean"],"판매":["korean"],"판사":["korean"],"팔십":["korean"],"팔월":["korean"],"팝송":["korean"],"패션":["korean"],"팩스":["korean"],"팩시밀리":["korean"],"팬티":["korean"],"퍼센트":["korean"],"페인트":["korean"],"편견":["korean"],"편의":["korean"],"편지":["korean"],"편히":["korean"],"평가":["korean"],"평균":["korean"],"평생":["korean"],"평소":["korean"],"평양":["korean"],"평일":["korean"],"평화":["korean"],"포스터":["korean"],"포인트":["korean"],"포장":["korean"],"포함":["korean"],"표면":["korean"],"표정":["korean"],"표준":["korean"],"표현":["korean"],"품목":["korean"],"품질":["korean"],"풍경":["korean"],"풍속":["korean"],"풍습":["korean"],"프랑스":["korean"],"프린터":["korean"],"플라스틱":["korean"],"피곤":["korean"],"피망":["korean"],"피아노":["korean"],"필름":["korean"],"필수":["korean"],"필요":["korean"],"필자":["korean"],"필통":["korean"],"핑계":["korean"],"하느님":["korean"],"하늘":["korean"],"하드웨어":["korean"],"하룻밤":["korean"],"하반기":["korean"],"하숙집":["korean"],"하순":["korean"],"하여튼":["korean"],"하지만":["korean"],"하천":["korean"],"하품":["korean"],"하필":["korean"],"학과":["korean"],"학교":["korean"],"학급":["korean"],"학기":["korean"],"학년":["korean"],"학력":["korean"],"학번":["korean"],"학부모":["korean"],"학비":["korean"],"학생":["korean"],"학술":["korean"],"학습":["korean"],"학용품":["korean"],"학원":["korean"],"학위":["korean"],"학자":["korean"],"학점":["korean"],"한계":["korean"],"한글":["korean"],"한꺼번에":["korean"],"한낮":["korean"],"한눈":["korean"],"한동안":["korean"],"한때":["korean"],"한라산":["korean"],"한마디":["korean"],"한문":["korean"],"한번":["korean"],"한복":["korean"],"한식":["korean"],"한여름":["korean"],"한쪽":["korean"],"할머니":["korean"],"할아버지":["korean"],"할인":["korean"],"함께":["korean"],"함부로":["korean"],"합격":["korean"],"합리적":["korean"],"항공":["korean"],"항구":["korean"],"항상":["korean"],"항의":["korean"],"해결":["korean"],"해군":["korean"],"해답":["korean"],"해당":["korean"],"해물":["korean"],"해석":["korean"],"해설":["korean"],"해수욕장":["korean"],"해안":["korean"],"핵심":["korean"],"핸드백":["korean"],"햄버거":["korean"],"햇볕":["korean"],"햇살":["korean"],"행동":["korean"],"행복":["korean"],"행사":["korean"],"행운":["korean"],"행위":["korean"],"향기":["korean"],"향상":["korean"],"향수":["korean"],"허락":["korean"],"허용":["korean"],"헬기":["korean"],"현관":["korean"],"현금":["korean"],"현대":["korean"],"현상":["korean"],"현실":["korean"],"현장":["korean"],"현재":["korean"],"현지":["korean"],"혈액":["korean"],"협력":["korean"],"형부":["korean"],"형사":["korean"],"형수":["korean"],"형식":["korean"],"형제":["korean"],"형태":["korean"],"형편":["korean"],"혜택":["korean"],"호기심":["korean"],"호남":["korean"],"호랑이":["korean"],"호박":["korean"],"호텔":["korean"],"호흡":["korean"],"혹시":["korean"],"홀로":["korean"],"홈페이지":["korean"],"홍보":["korean"],"홍수":["korean"],"홍차":["korean"],"화면":["korean"],"화분":["korean"],"화살":["korean"],"화요일":["korean"],"화장":["korean"],"화학":["korean"],"확보":["korean"],"확인":["korean"],"확장":["korean"],"확정":["korean"],"환갑":["korean"],"환경":["korean"],"환영":["korean"],"환율":["korean"],"환자":["korean"],"활기":["korean"],"활동":["korean"],"활발히":["korean"],"활용":["korean"],"활짝":["korean"],"회견":["korean"],"회관":["korean"],"회복":["korean"],"회색":["korean"],"회원":["korean"],"회장":["korean"],"회전":["korean"],"횟수":["korean"],"횡단보도":["korean"],"효율적":["korean"],"후반":["korean"],"후춧가루":["korean"],"훈련":["korean"],"훨씬":["korean"],"휴식":["korean"],"휴일":["korean"],"흉내":["korean"],"흐름":["korean"],"흑백":["korean"],"흑인":["korean"],"흔적":["korean"],"흔히":["korean"],"흥미":["korean"],"흥분":["korean"],"희곡":["korean"],"희망":["korean"],"희생":["korean"],"흰색":["korean"],"힘껏":["korean"],"abacate":["portuguese"],"abaixo":["portuguese"],"abalar":["portuguese"],"abater":["portuguese"],"abduzir":["portuguese"],"abelha":["portuguese"],"aberto":["portuguese"],"abismo":["portuguese"],"abotoar":["portuguese"],"abranger":["portuguese"],"abreviar":["portuguese"],"abrigar":["portuguese"],"abrupto":["portuguese"],"absinto":["portuguese"],"absoluto":["portuguese"],"absurdo":["portuguese"],"abutre":["portuguese"],"acabado":["portuguese"],"acalmar":["portuguese"],"acampar":["portuguese"],"acanhar":["portuguese"],"acaso":["portuguese"],"aceitar":["portuguese"],"acelerar":["portuguese"],"acenar":["portuguese"],"acervo":["portuguese"],"acessar":["portuguese"],"acetona":["portuguese"],"achatar":["portuguese"],"acidez":["portuguese"],"acima":["portuguese"],"acionado":["portuguese"],"acirrar":["portuguese"],"aclamar":["portuguese"],"aclive":["portuguese"],"acolhida":["portuguese"],"acomodar":["portuguese"],"acoplar":["portuguese"],"acordar":["portuguese"],"acumular":["portuguese"],"acusador":["portuguese"],"adaptar":["portuguese"],"adega":["portuguese"],"adentro":["portuguese"],"adepto":["portuguese"],"adequar":["portuguese"],"aderente":["portuguese"],"adesivo":["portuguese"],"adeus":["portuguese"],"adiante":["portuguese"],"aditivo":["portuguese"],"adjetivo":["portuguese"],"adjunto":["portuguese"],"admirar":["portuguese"],"adorar":["portuguese"],"adquirir":["portuguese"],"adubo":["portuguese"],"adverso":["portuguese"],"advogado":["portuguese"],"aeronave":["portuguese"],"afastar":["portuguese"],"aferir":["portuguese"],"afetivo":["portuguese"],"afinador":["portuguese"],"afivelar":["portuguese"],"aflito":["portuguese"],"afluente":["portuguese"],"afrontar":["portuguese"],"agachar":["portuguese"],"agarrar":["portuguese"],"agasalho":["portuguese"],"agenciar":["portuguese"],"agilizar":["portuguese"],"agiota":["portuguese"],"agitado":["portuguese"],"agora":["portuguese"],"agradar":["portuguese"],"agreste":["portuguese"],"agrupar":["portuguese"],"aguardar":["portuguese"],"agulha":["portuguese"],"ajoelhar":["portuguese"],"ajudar":["portuguese"],"ajustar":["portuguese"],"alameda":["portuguese"],"alarme":["portuguese"],"alastrar":["portuguese"],"alavanca":["portuguese"],"albergue":["portuguese"],"albino":["portuguese"],"alcatra":["portuguese"],"aldeia":["portuguese"],"alecrim":["portuguese"],"alegria":["portuguese"],"alertar":["portuguese"],"alface":["portuguese"],"alfinete":["portuguese"],"algum":["portuguese"],"alheio":["portuguese"],"aliar":["portuguese"],"alicate":["portuguese"],"alienar":["portuguese"],"alinhar":["portuguese"],"aliviar":["portuguese"],"almofada":["portuguese"],"alocar":["portuguese"],"alpiste":["portuguese"],"alterar":["portuguese"],"altitude":["portuguese"],"alucinar":["portuguese"],"alugar":["portuguese"],"aluno":["portuguese"],"alusivo":["portuguese"],"alvo":["portuguese"],"amaciar":["portuguese"],"amador":["portuguese"],"amarelo":["portuguese"],"amassar":["portuguese"],"ambas":["portuguese"],"ambiente":["portuguese"],"ameixa":["portuguese"],"amenizar":["portuguese"],"amido":["portuguese"],"amistoso":["portuguese"],"amizade":["portuguese"],"amolador":["portuguese"],"amontoar":["portuguese"],"amoroso":["portuguese"],"amostra":["portuguese"],"amparar":["portuguese"],"ampliar":["portuguese"],"ampola":["portuguese"],"anagrama":["portuguese"],"analisar":["portuguese"],"anarquia":["portuguese"],"anatomia":["portuguese"],"andaime":["portuguese"],"anel":["portuguese"],"anexo":["portuguese"],"angular":["portuguese"],"animar":["portuguese"],"anjo":["portuguese"],"anomalia":["portuguese"],"anotado":["portuguese"],"ansioso":["portuguese"],"anterior":["portuguese"],"anuidade":["portuguese"],"anunciar":["portuguese"],"anzol":["portuguese"],"apagador":["portuguese"],"apalpar":["portuguese"],"apanhado":["portuguese"],"apego":["portuguese"],"apelido":["portuguese"],"apertada":["portuguese"],"apesar":["portuguese"],"apetite":["portuguese"],"apito":["portuguese"],"aplauso":["portuguese"],"aplicada":["portuguese"],"apoio":["portuguese"],"apontar":["portuguese"],"aposta":["portuguese"],"aprendiz":["portuguese"],"aprovar":["portuguese"],"aquecer":["portuguese"],"arame":["portuguese"],"aranha":["portuguese"],"arara":["portuguese"],"arcada":["portuguese"],"ardente":["portuguese"],"areia":["portuguese"],"arejar":["portuguese"],"arenito":["portuguese"],"aresta":["portuguese"],"argiloso":["portuguese"],"argola":["portuguese"],"arma":["portuguese"],"arquivo":["portuguese"],"arraial":["portuguese"],"arrebate":["portuguese"],"arriscar":["portuguese"],"arroba":["portuguese"],"arrumar":["portuguese"],"arsenal":["portuguese"],"arterial":["portuguese"],"artigo":["portuguese"],"arvoredo":["portuguese"],"asfaltar":["portuguese"],"asilado":["portuguese"],"aspirar":["portuguese"],"assador":["portuguese"],"assinar":["portuguese"],"assoalho":["portuguese"],"assunto":["portuguese"],"astral":["portuguese"],"atacado":["portuguese"],"atadura":["portuguese"],"atalho":["portuguese"],"atarefar":["portuguese"],"atear":["portuguese"],"atender":["portuguese"],"aterro":["portuguese"],"ateu":["portuguese"],"atingir":["portuguese"],"atirador":["portuguese"],"ativo":["portuguese"],"atoleiro":["portuguese"],"atracar":["portuguese"],"atrevido":["portuguese"],"atriz":["portuguese"],"atual":["portuguese"],"atum":["portuguese"],"auditor":["portuguese"],"aumentar":["portuguese"],"aura":["portuguese"],"aurora":["portuguese"],"autismo":["portuguese"],"autoria":["portuguese"],"autuar":["portuguese"],"avaliar":["portuguese"],"avante":["portuguese"],"avaria":["portuguese"],"avental":["portuguese"],"avesso":["portuguese"],"aviador":["portuguese"],"avisar":["portuguese"],"avulso":["portuguese"],"axila":["portuguese"],"azarar":["portuguese"],"azedo":["portuguese"],"azeite":["portuguese"],"azulejo":["portuguese"],"babar":["portuguese"],"babosa":["portuguese"],"bacalhau":["portuguese"],"bacharel":["portuguese"],"bacia":["portuguese"],"bagagem":["portuguese"],"baiano":["portuguese"],"bailar":["portuguese"],"baioneta":["portuguese"],"bairro":["portuguese"],"baixista":["portuguese"],"bajular":["portuguese"],"baleia":["portuguese"],"baliza":["portuguese"],"balsa":["portuguese"],"banal":["portuguese"],"bandeira":["portuguese"],"banho":["portuguese"],"banir":["portuguese"],"banquete":["portuguese"],"barato":["portuguese"],"barbado":["portuguese"],"baronesa":["portuguese"],"barraca":["portuguese"],"barulho":["portuguese"],"baseado":["portuguese"],"bastante":["portuguese"],"batata":["portuguese"],"batedor":["portuguese"],"batida":["portuguese"],"batom":["portuguese"],"batucar":["portuguese"],"baunilha":["portuguese"],"beber":["portuguese"],"beijo":["portuguese"],"beirada":["portuguese"],"beisebol":["portuguese"],"beldade":["portuguese"],"beleza":["portuguese"],"belga":["portuguese"],"beliscar":["portuguese"],"bendito":["portuguese"],"bengala":["portuguese"],"benzer":["portuguese","turkish"],"berimbau":["portuguese"],"berlinda":["portuguese"],"berro":["portuguese"],"besouro":["portuguese"],"bexiga":["portuguese"],"bezerro":["portuguese"],"bico":["portuguese"],"bicudo":["portuguese"],"bienal":["portuguese"],"bifocal":["portuguese"],"bifurcar":["portuguese"],"bigorna":["portuguese"],"bilhete":["portuguese"],"bimestre":["portuguese"],"bimotor":["portuguese"],"biologia":["portuguese"],"biombo":["portuguese"],"biosfera":["portuguese"],"bipolar":["portuguese"],"birrento":["portuguese"],"biscoito":["portuguese"],"bisneto":["portuguese"],"bispo":["portuguese"],"bissexto":["portuguese"],"bitola":["portuguese"],"bizarro":["portuguese"],"blindado":["portuguese"],"bloco":["portuguese"],"bloquear":["portuguese"],"boato":["portuguese"],"bobagem":["portuguese"],"bocado":["portuguese"],"bocejo":["portuguese"],"bochecha":["portuguese"],"boicotar":["portuguese"],"bolada":["portuguese"],"boletim":["portuguese"],"bolha":["portuguese"],"bolo":["portuguese"],"bombeiro":["portuguese"],"bonde":["portuguese"],"boneco":["portuguese"],"bonita":["portuguese"],"borbulha":["portuguese"],"borda":["portuguese"],"boreal":["portuguese"],"borracha":["portuguese"],"bovino":["portuguese"],"boxeador":["portuguese"],"branco":["portuguese"],"brasa":["portuguese"],"braveza":["portuguese"],"breu":["portuguese"],"briga":["portuguese"],"brilho":["portuguese"],"brincar":["portuguese"],"broa":["portuguese"],"brochura":["portuguese"],"bronzear":["portuguese"],"broto":["portuguese"],"bruxo":["portuguese"],"bucha":["portuguese"],"budismo":["portuguese"],"bufar":["portuguese"],"bule":["portuguese"],"buraco":["portuguese"],"busca":["portuguese"],"busto":["portuguese"],"buzina":["portuguese"],"cabana":["portuguese"],"cabelo":["portuguese"],"cabide":["portuguese"],"cabo":["portuguese"],"cabrito":["portuguese"],"cacau":["portuguese"],"cacetada":["portuguese"],"cachorro":["portuguese"],"cacique":["portuguese"],"cadastro":["portuguese"],"cadeado":["portuguese"],"cafezal":["portuguese"],"caiaque":["portuguese"],"caipira":["portuguese"],"caixote":["portuguese"],"cajado":["portuguese"],"caju":["portuguese"],"calafrio":["portuguese"],"calcular":["portuguese"],"caldeira":["portuguese"],"calibrar":["portuguese"],"calmante":["portuguese"],"calota":["portuguese"],"camada":["portuguese"],"cambista":["portuguese"],"camisa":["portuguese"],"camomila":["portuguese"],"campanha":["portuguese"],"camuflar":["portuguese"],"canavial":["portuguese"],"cancelar":["portuguese"],"caneta":["portuguese"],"canguru":["portuguese"],"canhoto":["portuguese"],"canivete":["portuguese"],"canoa":["portuguese"],"cansado":["portuguese"],"cantar":["portuguese"],"canudo":["portuguese"],"capacho":["portuguese"],"capela":["portuguese"],"capinar":["portuguese"],"capotar":["portuguese"],"capricho":["portuguese"],"captador":["portuguese"],"capuz":["portuguese"],"caracol":["portuguese"],"carbono":["portuguese"],"cardeal":["portuguese"],"careca":["portuguese"],"carimbar":["portuguese"],"carneiro":["portuguese"],"carpete":["portuguese"],"carreira":["portuguese"],"cartaz":["portuguese"],"carvalho":["portuguese"],"casaco":["portuguese"],"casca":["portuguese"],"casebre":["portuguese"],"castelo":["portuguese"],"casulo":["portuguese"],"catarata":["portuguese"],"cativar":["portuguese"],"caule":["portuguese"],"causador":["portuguese"],"cautelar":["portuguese"],"cavalo":["portuguese"],"caverna":["portuguese"],"cebola":["portuguese"],"cedilha":["portuguese"],"cegonha":["portuguese"],"celebrar":["portuguese"],"celular":["portuguese"],"cenoura":["portuguese"],"censo":["portuguese"],"centeio":["portuguese"],"cercar":["portuguese"],"cerrado":["portuguese"],"certeiro":["portuguese"],"cerveja":["portuguese"],"cetim":["portuguese"],"cevada":["portuguese"],"chacota":["portuguese"],"chaleira":["portuguese"],"chamado":["portuguese"],"chapada":["portuguese"],"charme":["portuguese"],"chatice":["portuguese"],"chave":["portuguese"],"chefe":["portuguese"],"chegada":["portuguese"],"cheiro":["portuguese"],"cheque":["portuguese"],"chicote":["portuguese"],"chifre":["portuguese"],"chinelo":["portuguese"],"chocalho":["portuguese"],"chover":["portuguese"],"chumbo":["portuguese"],"chutar":["portuguese"],"chuva":["portuguese"],"cicatriz":["portuguese"],"ciclone":["portuguese"],"cidade":["portuguese"],"cidreira":["portuguese"],"ciente":["portuguese"],"cigana":["portuguese"],"cimento":["portuguese"],"cinto":["portuguese"],"cinza":["portuguese"],"ciranda":["portuguese"],"circuito":["portuguese"],"cirurgia":["portuguese"],"citar":["portuguese"],"clareza":["portuguese"],"clero":["portuguese"],"clicar":["portuguese"],"clone":["portuguese"],"clube":["portuguese"],"coado":["portuguese"],"coagir":["portuguese"],"cobaia":["portuguese"],"cobertor":["portuguese"],"cobrar":["portuguese"],"cocada":["portuguese"],"coelho":["portuguese"],"coentro":["portuguese"],"coeso":["portuguese"],"cogumelo":["portuguese"],"coibir":["portuguese"],"coifa":["portuguese"],"coiote":["portuguese"],"colar":["portuguese"],"coleira":["portuguese"],"colher":["portuguese"],"colidir":["portuguese"],"colmeia":["portuguese"],"colono":["portuguese"],"coluna":["portuguese"],"comando":["portuguese"],"combinar":["portuguese"],"comentar":["portuguese"],"comitiva":["portuguese"],"comover":["portuguese"],"complexo":["portuguese"],"comum":["portuguese"],"concha":["portuguese"],"condor":["portuguese"],"conectar":["portuguese"],"confuso":["portuguese"],"congelar":["portuguese"],"conhecer":["portuguese"],"conjugar":["portuguese"],"consumir":["portuguese"],"contrato":["portuguese"],"convite":["portuguese"],"cooperar":["portuguese"],"copeiro":["portuguese"],"copiador":["portuguese"],"copo":["portuguese"],"coquetel":["portuguese"],"coragem":["portuguese"],"cordial":["portuguese"],"corneta":["portuguese"],"coronha":["portuguese"],"corporal":["portuguese"],"correio":["portuguese"],"cortejo":["portuguese"],"coruja":["portuguese"],"corvo":["portuguese"],"cosseno":["portuguese"],"costela":["portuguese"],"cotonete":["portuguese"],"couro":["portuguese"],"couve":["portuguese"],"covil":["portuguese"],"cozinha":["portuguese"],"cratera":["portuguese"],"cravo":["portuguese"],"creche":["portuguese"],"credor":["portuguese"],"creme":["portuguese"],"crer":["portuguese"],"crespo":["portuguese"],"criada":["portuguese"],"criminal":["portuguese"],"crioulo":["portuguese"],"crise":["portuguese"],"criticar":["portuguese"],"crosta":["portuguese"],"crua":["portuguese"],"cruzeiro":["portuguese"],"cubano":["portuguese"],"cueca":["portuguese"],"cuidado":["portuguese"],"cujo":["portuguese"],"culatra":["portuguese"],"culminar":["portuguese"],"culpar":["portuguese"],"cultura":["portuguese"],"cumprir":["portuguese"],"cunhado":["portuguese"],"cupido":["portuguese"],"curativo":["portuguese"],"curral":["portuguese"],"cursar":["portuguese"],"curto":["portuguese"],"cuspir":["portuguese"],"custear":["portuguese"],"cutelo":["portuguese"],"damasco":["portuguese"],"datar":["portuguese"],"debater":["portuguese"],"debitar":["portuguese"],"deboche":["portuguese"],"debulhar":["portuguese"],"decalque":["portuguese"],"decimal":["portuguese"],"declive":["portuguese"],"decote":["portuguese"],"decretar":["portuguese"],"dedal":["portuguese"],"dedicado":["portuguese"],"deduzir":["portuguese"],"defesa":["portuguese"],"defumar":["portuguese"],"degelo":["portuguese"],"degrau":["portuguese"],"degustar":["portuguese"],"deitado":["portuguese"],"deixar":["portuguese"],"delator":["portuguese"],"delegado":["portuguese"],"delinear":["portuguese"],"delonga":["portuguese"],"demanda":["portuguese"],"demitir":["portuguese"],"demolido":["portuguese"],"dentista":["portuguese"],"depenado":["portuguese"],"depilar":["portuguese"],"depois":["portuguese"],"depressa":["portuguese"],"depurar":["portuguese"],"deriva":["portuguese"],"derramar":["portuguese"],"desafio":["portuguese"],"desbotar":["portuguese"],"descanso":["portuguese"],"desenho":["portuguese"],"desfiado":["portuguese"],"desgaste":["portuguese"],"desigual":["portuguese"],"deslize":["portuguese"],"desmamar":["portuguese"],"desova":["portuguese"],"despesa":["portuguese"],"destaque":["portuguese"],"desviar":["portuguese"],"detalhar":["portuguese"],"detentor":["portuguese"],"detonar":["portuguese"],"detrito":["portuguese"],"deusa":["portuguese"],"dever":["portuguese"],"devido":["portuguese"],"devotado":["portuguese"],"dezena":["portuguese"],"diagrama":["portuguese"],"dialeto":["portuguese"],"didata":["portuguese"],"difuso":["portuguese"],"digitar":["portuguese"],"dilatado":["portuguese"],"diluente":["portuguese"],"diminuir":["portuguese"],"dinastia":["portuguese"],"dinheiro":["portuguese"],"diocese":["portuguese"],"direto":["portuguese"],"discreta":["portuguese"],"disfarce":["portuguese"],"disparo":["portuguese"],"disquete":["portuguese"],"dissipar":["portuguese"],"distante":["portuguese"],"ditador":["portuguese"],"diurno":["portuguese"],"diverso":["portuguese"],"divisor":["portuguese"],"divulgar":["portuguese"],"dizer":["portuguese"],"dobrador":["portuguese"],"dolorido":["portuguese"],"domador":["portuguese"],"dominado":["portuguese"],"donativo":["portuguese"],"donzela":["portuguese"],"dormente":["portuguese"],"dorsal":["portuguese"],"dosagem":["portuguese"],"dourado":["portuguese"],"doutor":["portuguese"],"drenagem":["portuguese"],"drible":["portuguese"],"drogaria":["portuguese"],"duelar":["portuguese"],"duende":["portuguese"],"dueto":["portuguese"],"duplo":["portuguese"],"duquesa":["portuguese"],"durante":["portuguese"],"duvidoso":["portuguese"],"eclodir":["portuguese"],"ecoar":["portuguese"],"ecologia":["portuguese"],"edificar":["portuguese"],"edital":["portuguese"],"educado":["portuguese"],"efeito":["portuguese"],"efetivar":["portuguese"],"ejetar":["portuguese"],"elaborar":["portuguese"],"eleger":["portuguese"],"eleitor":["portuguese"],"elenco":["portuguese"],"elevador":["portuguese"],"eliminar":["portuguese"],"elogiar":["portuguese"],"embargo":["portuguese"],"embolado":["portuguese"],"embrulho":["portuguese"],"embutido":["portuguese"],"emenda":["portuguese"],"emergir":["portuguese"],"emissor":["portuguese"],"empatia":["portuguese"],"empenho":["portuguese"],"empinado":["portuguese"],"empolgar":["portuguese"],"emprego":["portuguese"],"empurrar":["portuguese"],"emulador":["portuguese"],"encaixe":["portuguese"],"encenado":["portuguese"],"enchente":["portuguese"],"encontro":["portuguese"],"endeusar":["portuguese"],"endossar":["portuguese"],"enfaixar":["portuguese"],"enfeite":["portuguese"],"enfim":["portuguese"],"engajado":["portuguese"],"engenho":["portuguese"],"englobar":["portuguese"],"engomado":["portuguese"],"engraxar":["portuguese"],"enguia":["portuguese"],"enjoar":["portuguese"],"enlatar":["portuguese"],"enquanto":["portuguese"],"enraizar":["portuguese"],"enrolado":["portuguese"],"enrugar":["portuguese"],"ensaio":["portuguese"],"enseada":["portuguese"],"ensino":["portuguese"],"ensopado":["portuguese"],"entanto":["portuguese"],"enteado":["portuguese"],"entidade":["portuguese"],"entortar":["portuguese"],"entrada":["portuguese"],"entulho":["portuguese"],"envergar":["portuguese"],"enviado":["portuguese"],"envolver":["portuguese"],"enxame":["portuguese"],"enxerto":["portuguese"],"enxofre":["portuguese"],"enxuto":["portuguese"],"epiderme":["portuguese"],"equipar":["portuguese"],"ereto":["portuguese"],"erguido":["portuguese"],"errata":["portuguese"],"erva":["portuguese"],"ervilha":["portuguese"],"esbanjar":["portuguese"],"esbelto":["portuguese"],"escama":["portuguese"],"escola":["portuguese"],"escrita":["portuguese"],"escuta":["portuguese"],"esfinge":["portuguese"],"esfolar":["portuguese"],"esfregar":["portuguese"],"esfumado":["portuguese"],"esgrima":["portuguese"],"esmalte":["portuguese"],"espanto":["portuguese"],"espelho":["portuguese"],"espiga":["portuguese"],"esponja":["portuguese"],"espreita":["portuguese"],"espumar":["portuguese"],"esquerda":["portuguese"],"estaca":["portuguese"],"esteira":["portuguese"],"esticar":["portuguese"],"estofado":["portuguese"],"estrela":["portuguese"],"estudo":["portuguese"],"esvaziar":["portuguese"],"etanol":["portuguese"],"etiqueta":["portuguese"],"euforia":["portuguese"],"europeu":["portuguese"],"evacuar":["portuguese"],"evaporar":["portuguese"],"evasivo":["portuguese"],"eventual":["portuguese"],"evidente":["portuguese"],"evoluir":["portuguese"],"exagero":["portuguese"],"exalar":["portuguese"],"examinar":["portuguese"],"exato":["portuguese"],"exausto":["portuguese"],"excesso":["portuguese"],"excitar":["portuguese"],"exclamar":["portuguese"],"executar":["portuguese"],"exemplo":["portuguese"],"exibir":["portuguese"],"exigente":["portuguese"],"exonerar":["portuguese"],"expandir":["portuguese"],"expelir":["portuguese"],"expirar":["portuguese"],"explanar":["portuguese"],"exposto":["portuguese"],"expresso":["portuguese"],"expulsar":["portuguese"],"externo":["portuguese"],"extinto":["portuguese"],"extrato":["portuguese"],"fabricar":["portuguese"],"fabuloso":["portuguese"],"faceta":["portuguese"],"facial":["portuguese"],"fada":["portuguese"],"fadiga":["portuguese"],"faixa":["portuguese"],"falar":["portuguese"],"falta":["portuguese"],"familiar":["portuguese"],"fandango":["portuguese"],"fanfarra":["portuguese"],"fantoche":["portuguese"],"fardado":["portuguese"],"farelo":["portuguese"],"farinha":["portuguese"],"farofa":["portuguese"],"farpa":["portuguese"],"fartura":["portuguese"],"fatia":["portuguese"],"fator":["portuguese"],"favorita":["portuguese"],"faxina":["portuguese"],"fazenda":["portuguese"],"fechado":["portuguese"],"feijoada":["portuguese"],"feirante":["portuguese"],"felino":["portuguese"],"feminino":["portuguese"],"fenda":["portuguese"],"feno":["portuguese"],"fera":["portuguese"],"feriado":["portuguese"],"ferrugem":["portuguese"],"ferver":["portuguese"],"festejar":["portuguese"],"fetal":["portuguese"],"feudal":["portuguese"],"fiapo":["portuguese"],"fibrose":["portuguese"],"ficar":["portuguese"],"ficheiro":["portuguese"],"figurado":["portuguese"],"fileira":["portuguese"],"filho":["portuguese"],"filme":["portuguese"],"filtrar":["portuguese"],"firmeza":["portuguese"],"fisgada":["portuguese"],"fissura":["portuguese"],"fita":["portuguese"],"fivela":["portuguese"],"fixador":["portuguese"],"fixo":["portuguese"],"flacidez":["portuguese"],"flamingo":["portuguese"],"flanela":["portuguese"],"flechada":["portuguese"],"flora":["portuguese"],"flutuar":["portuguese"],"fluxo":["portuguese"],"focal":["portuguese"],"focinho":["portuguese"],"fofocar":["portuguese"],"fogo":["portuguese"],"foguete":["portuguese"],"foice":["portuguese"],"folgado":["portuguese"],"folheto":["portuguese"],"forjar":["portuguese"],"formiga":["portuguese"],"forno":["portuguese"],"forte":["portuguese"],"fosco":["portuguese"],"fossa":["portuguese"],"fragata":["portuguese"],"fralda":["portuguese"],"frango":["portuguese"],"frasco":["portuguese"],"fraterno":["portuguese"],"freira":["portuguese"],"frente":["portuguese"],"fretar":["portuguese"],"frieza":["portuguese"],"friso":["portuguese"],"fritura":["portuguese"],"fronha":["portuguese"],"frustrar":["portuguese"],"fruteira":["portuguese"],"fugir":["portuguese"],"fulano":["portuguese"],"fuligem":["portuguese"],"fundar":["portuguese"],"fungo":["portuguese"],"funil":["portuguese"],"furador":["portuguese"],"furioso":["portuguese"],"futebol":["portuguese"],"gabarito":["portuguese"],"gabinete":["portuguese"],"gado":["portuguese"],"gaiato":["portuguese"],"gaiola":["portuguese"],"gaivota":["portuguese"],"galega":["portuguese"],"galho":["portuguese"],"galinha":["portuguese"],"galocha":["portuguese"],"ganhar":["portuguese"],"garagem":["portuguese"],"garfo":["portuguese"],"gargalo":["portuguese"],"garimpo":["portuguese"],"garoupa":["portuguese"],"garrafa":["portuguese"],"gasoduto":["portuguese"],"gasto":["portuguese"],"gata":["portuguese"],"gatilho":["portuguese"],"gaveta":["portuguese"],"gazela":["portuguese"],"gelado":["portuguese"],"geleia":["portuguese"],"gelo":["portuguese"],"gemada":["portuguese"],"gemer":["portuguese"],"gemido":["portuguese"],"generoso":["portuguese"],"gengiva":["portuguese"],"genial":["portuguese"],"genoma":["portuguese"],"genro":["portuguese"],"geologia":["portuguese"],"gerador":["portuguese"],"germinar":["portuguese"],"gesso":["portuguese"],"gestor":["portuguese"],"ginasta":["portuguese"],"gincana":["portuguese"],"gingado":["portuguese"],"girafa":["portuguese"],"girino":["portuguese"],"glacial":["portuguese"],"glicose":["portuguese"],"global":["portuguese"],"glorioso":["portuguese"],"goela":["portuguese"],"goiaba":["portuguese"],"golfe":["portuguese"],"golpear":["portuguese"],"gordura":["portuguese"],"gorjeta":["portuguese"],"gorro":["portuguese"],"gostoso":["portuguese"],"goteira":["portuguese"],"governar":["portuguese"],"gracejo":["portuguese"],"gradual":["portuguese"],"grafite":["portuguese"],"gralha":["portuguese"],"grampo":["portuguese"],"granada":["portuguese"],"gratuito":["portuguese"],"graveto":["portuguese"],"graxa":["portuguese"],"grego":["portuguese"],"grelhar":["portuguese"],"greve":["portuguese"],"grilo":["portuguese"],"grisalho":["portuguese"],"gritaria":["portuguese"],"grosso":["portuguese"],"grotesco":["portuguese"],"grudado":["portuguese"],"grunhido":["portuguese"],"gruta":["portuguese"],"guache":["portuguese"],"guarani":["portuguese"],"guaxinim":["portuguese"],"guerrear":["portuguese"],"guiar":["portuguese"],"guincho":["portuguese"],"guisado":["portuguese"],"gula":["portuguese"],"guloso":["portuguese"],"guru":["portuguese"],"habitar":["portuguese"],"harmonia":["portuguese"],"haste":["portuguese"],"haver":["portuguese"],"hectare":["portuguese"],"herdar":["portuguese"],"heresia":["portuguese"],"hesitar":["portuguese"],"hiato":["portuguese"],"hibernar":["portuguese"],"hidratar":["portuguese"],"hiena":["portuguese"],"hino":["portuguese"],"hipismo":["portuguese"],"hipnose":["portuguese"],"hipoteca":["portuguese"],"hoje":["portuguese"],"holofote":["portuguese"],"homem":["portuguese"],"honesto":["portuguese"],"honrado":["portuguese"],"hormonal":["portuguese"],"hospedar":["portuguese"],"humorado":["portuguese"],"iate":["portuguese"],"ideia":["portuguese"],"idoso":["portuguese"],"ignorado":["portuguese"],"igreja":["portuguese"],"iguana":["portuguese"],"ileso":["portuguese"],"ilha":["portuguese"],"iludido":["portuguese"],"iluminar":["portuguese"],"ilustrar":["portuguese"],"imagem":["portuguese"],"imediato":["portuguese"],"imenso":["portuguese"],"imersivo":["portuguese"],"iminente":["portuguese"],"imitador":["portuguese"],"imortal":["portuguese"],"impacto":["portuguese"],"impedir":["portuguese"],"implante":["portuguese"],"impor":["portuguese"],"imprensa":["portuguese"],"impune":["portuguese"],"imunizar":["portuguese"],"inalador":["portuguese"],"inapto":["portuguese"],"inativo":["portuguese"],"incenso":["portuguese"],"inchar":["portuguese"],"incidir":["portuguese"],"incluir":["portuguese"],"incolor":["portuguese"],"indeciso":["portuguese"],"indireto":["portuguese"],"indutor":["portuguese"],"ineficaz":["portuguese"],"inerente":["portuguese"],"infantil":["portuguese"],"infestar":["portuguese"],"infinito":["portuguese"],"inflamar":["portuguese"],"informal":["portuguese"],"infrator":["portuguese"],"ingerir":["portuguese"],"inibido":["portuguese"],"inicial":["portuguese"],"inimigo":["portuguese"],"injetar":["portuguese"],"inocente":["portuguese"],"inodoro":["portuguese"],"inovador":["portuguese"],"inox":["portuguese"],"inquieto":["portuguese"],"inscrito":["portuguese"],"inseto":["portuguese"],"insistir":["portuguese"],"inspetor":["portuguese"],"instalar":["portuguese"],"insulto":["portuguese"],"intacto":["portuguese"],"integral":["portuguese"],"intimar":["portuguese"],"intocado":["portuguese"],"intriga":["portuguese"],"invasor":["portuguese"],"inverno":["portuguese"],"invicto":["portuguese"],"invocar":["portuguese"],"iogurte":["portuguese"],"iraniano":["portuguese"],"ironizar":["portuguese"],"irreal":["portuguese"],"irritado":["portuguese"],"isca":["portuguese"],"isento":["portuguese"],"isolado":["portuguese"],"isqueiro":["portuguese"],"italiano":["portuguese"],"janeiro":["portuguese"],"jangada":["portuguese"],"janta":["portuguese"],"jararaca":["portuguese"],"jardim":["portuguese"],"jarro":["portuguese"],"jasmim":["portuguese"],"jato":["portuguese"],"javali":["portuguese"],"jazida":["portuguese"],"jejum":["portuguese"],"joaninha":["portuguese"],"joelhada":["portuguese"],"jogador":["portuguese"],"joia":["portuguese"],"jornal":["portuguese"],"jorrar":["portuguese"],"jovem":["portuguese"],"juba":["portuguese"],"judeu":["portuguese"],"judoca":["portuguese"],"juiz":["portuguese"],"julgador":["portuguese"],"julho":["portuguese"],"jurado":["portuguese"],"jurista":["portuguese"],"juro":["portuguese"],"justa":["portuguese"],"labareda":["portuguese"],"laboral":["portuguese"],"lacre":["portuguese"],"lactante":["portuguese"],"ladrilho":["portuguese"],"lagarta":["portuguese"],"lagoa":["portuguese"],"laje":["portuguese"],"lamber":["portuguese"],"lamentar":["portuguese"],"laminar":["portuguese"],"lampejo":["portuguese"],"lanche":["portuguese"],"lapidar":["portuguese"],"lapso":["portuguese"],"laranja":["portuguese"],"lareira":["portuguese"],"largura":["portuguese"],"lasanha":["portuguese"],"lastro":["portuguese"],"lateral":["portuguese"],"latido":["portuguese"],"lavanda":["portuguese"],"lavoura":["portuguese"],"lavrador":["portuguese"],"laxante":["portuguese"],"lazer":["portuguese"],"lealdade":["portuguese"],"lebre":["portuguese"],"legado":["portuguese"],"legendar":["portuguese"],"legista":["portuguese"],"leigo":["portuguese"],"leiloar":["portuguese"],"leitura":["portuguese"],"lembrete":["portuguese"],"leme":["portuguese"],"lenhador":["portuguese"],"lentilha":["portuguese"],"leoa":["portuguese"],"lesma":["portuguese"],"leste":["portuguese"],"letivo":["portuguese"],"letreiro":["portuguese"],"levar":["portuguese"],"leveza":["portuguese"],"levitar":["portuguese"],"liberal":["portuguese"],"libido":["portuguese"],"liderar":["portuguese"],"ligar":["portuguese"],"ligeiro":["portuguese"],"limitar":["portuguese"],"limoeiro":["portuguese"],"limpador":["portuguese"],"linda":["portuguese"],"linear":["portuguese"],"linhagem":["portuguese"],"liquidez":["portuguese"],"listagem":["portuguese"],"lisura":["portuguese"],"litoral":["portuguese"],"livro":["portuguese"],"lixa":["portuguese"],"lixeira":["portuguese"],"locador":["portuguese"],"locutor":["portuguese"],"lojista":["portuguese"],"lombo":["portuguese"],"lona":["portuguese"],"longe":["portuguese"],"lontra":["portuguese"],"lorde":["portuguese"],"lotado":["portuguese"],"loteria":["portuguese"],"loucura":["portuguese"],"lousa":["portuguese"],"louvar":["portuguese"],"luar":["portuguese"],"lucidez":["portuguese"],"lucro":["portuguese"],"luneta":["portuguese"],"lustre":["portuguese"],"lutador":["portuguese"],"luva":["portuguese"],"macaco":["portuguese"],"macete":["portuguese"],"machado":["portuguese"],"macio":["portuguese"],"madeira":["portuguese"],"madrinha":["portuguese"],"magnata":["portuguese"],"magreza":["portuguese"],"maior":["portuguese"],"mais":["portuguese"],"malandro":["portuguese"],"malha":["portuguese"],"malote":["portuguese"],"maluco":["portuguese"],"mamilo":["portuguese"],"mamoeiro":["portuguese"],"mamute":["portuguese"],"manada":["portuguese"],"mancha":["portuguese"],"mandato":["portuguese"],"manequim":["portuguese"],"manhoso":["portuguese"],"manivela":["portuguese"],"manobrar":["portuguese"],"mansa":["portuguese"],"manter":["portuguese"],"manusear":["portuguese"],"mapeado":["portuguese"],"maquinar":["portuguese"],"marcador":["portuguese"],"maresia":["portuguese"],"marfim":["portuguese"],"margem":["portuguese"],"marinho":["portuguese"],"marmita":["portuguese"],"maroto":["portuguese"],"marquise":["portuguese"],"marreco":["portuguese"],"martelo":["portuguese"],"marujo":["portuguese"],"mascote":["portuguese"],"masmorra":["portuguese"],"massagem":["portuguese"],"mastigar":["portuguese"],"matagal":["portuguese"],"materno":["portuguese"],"matinal":["portuguese"],"matutar":["portuguese"],"maxilar":["portuguese"],"medalha":["portuguese"],"medida":["portuguese"],"medusa":["portuguese"],"megafone":["portuguese"],"meiga":["portuguese"],"melancia":["portuguese"],"melhor":["portuguese"],"membro":["portuguese"],"memorial":["portuguese"],"menino":["portuguese"],"menos":["portuguese"],"mensagem":["portuguese"],"mental":["portuguese"],"merecer":["portuguese"],"mergulho":["portuguese"],"mesada":["portuguese"],"mesclar":["portuguese"],"mesmo":["portuguese"],"mesquita":["portuguese"],"mestre":["portuguese"],"metade":["portuguese"],"meteoro":["portuguese"],"metragem":["portuguese"],"mexer":["portuguese"],"mexicano":["portuguese"],"micro":["portuguese"],"migalha":["portuguese"],"migrar":["portuguese"],"milagre":["portuguese"],"milenar":["portuguese"],"milhar":["portuguese"],"mimado":["portuguese"],"minerar":["portuguese"],"minhoca":["portuguese"],"ministro":["portuguese"],"minoria":["portuguese"],"miolo":["portuguese"],"mirante":["portuguese"],"mirtilo":["portuguese"],"misturar":["portuguese"],"mocidade":["portuguese"],"moderno":["portuguese"],"modular":["portuguese"],"moeda":["portuguese"],"moer":["portuguese"],"moinho":["portuguese"],"moita":["portuguese"],"moldura":["portuguese"],"moleza":["portuguese"],"molho":["portuguese"],"molinete":["portuguese"],"molusco":["portuguese"],"montanha":["portuguese"],"moqueca":["portuguese"],"morango":["portuguese"],"morcego":["portuguese"],"mordomo":["portuguese"],"morena":["portuguese"],"mosaico":["portuguese"],"mosquete":["portuguese"],"mostarda":["portuguese"],"motel":["portuguese"],"motim":["portuguese"],"moto":["portuguese"],"motriz":["portuguese"],"muda":["portuguese"],"muito":["portuguese"],"mulata":["portuguese"],"mulher":["portuguese"],"multar":["portuguese"],"mundial":["portuguese"],"munido":["portuguese"],"muralha":["portuguese"],"murcho":["portuguese"],"muscular":["portuguese"],"museu":["portuguese"],"musical":["portuguese"],"nacional":["portuguese"],"nadador":["portuguese"],"naja":["portuguese"],"namoro":["portuguese"],"narina":["portuguese"],"narrado":["portuguese"],"nascer":["portuguese"],"nativa":["portuguese"],"natureza":["portuguese"],"navalha":["portuguese"],"navegar":["portuguese"],"navio":["portuguese"],"neblina":["portuguese"],"nebuloso":["portuguese"],"negativa":["portuguese"],"negociar":["portuguese"],"negrito":["portuguese"],"nervoso":["portuguese"],"neta":["portuguese"],"neural":["portuguese"],"nevasca":["portuguese"],"nevoeiro":["portuguese"],"ninar":["portuguese"],"ninho":["portuguese"],"nitidez":["portuguese"],"nivelar":["portuguese"],"nobreza":["portuguese"],"noite":["portuguese"],"noiva":["portuguese"],"nomear":["portuguese"],"nominal":["portuguese"],"nordeste":["portuguese"],"nortear":["portuguese"],"notar":["portuguese"],"noticiar":["portuguese"],"noturno":["portuguese"],"novelo":["portuguese"],"novilho":["portuguese"],"novo":["portuguese"],"nublado":["portuguese"],"nudez":["portuguese"],"numeral":["portuguese"],"nupcial":["portuguese"],"nutrir":["portuguese"],"nuvem":["portuguese"],"obcecado":["portuguese"],"obedecer":["portuguese"],"objetivo":["portuguese"],"obrigado":["portuguese"],"obscuro":["portuguese"],"obstetra":["portuguese"],"obter":["portuguese"],"obturar":["portuguese"],"ocidente":["portuguese"],"ocioso":["portuguese"],"ocorrer":["portuguese"],"oculista":["portuguese"],"ocupado":["portuguese"],"ofegante":["portuguese"],"ofensiva":["portuguese"],"oferenda":["portuguese"],"oficina":["portuguese"],"ofuscado":["portuguese"],"ogiva":["portuguese"],"olaria":["portuguese"],"oleoso":["portuguese"],"olhar":["portuguese"],"oliveira":["portuguese"],"ombro":["portuguese"],"omelete":["portuguese"],"omisso":["portuguese"],"omitir":["portuguese"],"ondulado":["portuguese"],"oneroso":["portuguese"],"ontem":["portuguese"],"opcional":["portuguese"],"operador":["portuguese"],"oponente":["portuguese"],"oportuno":["portuguese"],"oposto":["portuguese"],"orar":["portuguese"],"orbitar":["portuguese"],"ordem":["portuguese"],"ordinal":["portuguese"],"orfanato":["portuguese"],"orgasmo":["portuguese"],"orgulho":["portuguese"],"oriental":["portuguese"],"origem":["portuguese"],"oriundo":["portuguese"],"orla":["portuguese"],"ortodoxo":["portuguese"],"orvalho":["portuguese"],"oscilar":["portuguese"],"ossada":["portuguese"],"osso":["portuguese"],"ostentar":["portuguese"],"otimismo":["portuguese"],"ousadia":["portuguese"],"outono":["portuguese"],"outubro":["portuguese"],"ouvido":["portuguese"],"ovelha":["portuguese"],"ovular":["portuguese"],"oxidar":["portuguese"],"oxigenar":["portuguese"],"pacato":["portuguese"],"paciente":["portuguese"],"pacote":["portuguese"],"pactuar":["portuguese"],"padaria":["portuguese"],"padrinho":["portuguese"],"pagar":["portuguese"],"pagode":["portuguese"],"painel":["portuguese"],"pairar":["portuguese"],"paisagem":["portuguese"],"palavra":["portuguese"],"palestra":["portuguese"],"palheta":["portuguese"],"palito":["portuguese"],"palmada":["portuguese"],"palpitar":["portuguese"],"pancada":["portuguese"],"panela":["portuguese"],"panfleto":["portuguese"],"panqueca":["portuguese"],"pantanal":["portuguese"],"papagaio":["portuguese"],"papelada":["portuguese"],"papiro":["portuguese"],"parafina":["portuguese"],"parcial":["portuguese"],"pardal":["portuguese"],"parede":["portuguese"],"partida":["portuguese"],"pasmo":["portuguese"],"passado":["portuguese"],"pastel":["portuguese"],"patamar":["portuguese"],"patente":["portuguese"],"patinar":["portuguese"],"patrono":["portuguese"],"paulada":["portuguese"],"pausar":["portuguese"],"peculiar":["portuguese"],"pedalar":["portuguese"],"pedestre":["portuguese"],"pediatra":["portuguese"],"pedra":["portuguese"],"pegada":["portuguese"],"peitoral":["portuguese"],"peixe":["portuguese"],"pele":["portuguese"],"pelicano":["portuguese"],"penca":["portuguese"],"pendurar":["portuguese"],"peneira":["portuguese"],"penhasco":["portuguese"],"pensador":["portuguese"],"pente":["portuguese"],"perceber":["portuguese"],"perfeito":["portuguese"],"pergunta":["portuguese"],"perito":["portuguese"],"permitir":["portuguese"],"perna":["portuguese"],"perplexo":["portuguese"],"persiana":["portuguese"],"pertence":["portuguese"],"peruca":["portuguese"],"pescado":["portuguese"],"pesquisa":["portuguese"],"pessoa":["portuguese"],"petiscar":["portuguese"],"piada":["portuguese"],"picado":["portuguese"],"piedade":["portuguese"],"pigmento":["portuguese"],"pilastra":["portuguese"],"pilhado":["portuguese"],"pilotar":["portuguese"],"pimenta":["portuguese"],"pincel":["portuguese"],"pinguim":["portuguese"],"pinha":["portuguese"],"pinote":["portuguese"],"pintar":["portuguese"],"pioneiro":["portuguese"],"pipoca":["portuguese"],"piquete":["portuguese"],"piranha":["portuguese"],"pires":["portuguese"],"pirueta":["portuguese"],"piscar":["portuguese"],"pistola":["portuguese"],"pitanga":["portuguese"],"pivete":["portuguese"],"planta":["portuguese"],"plaqueta":["portuguese"],"platina":["portuguese"],"plebeu":["portuguese"],"plumagem":["portuguese"],"pluvial":["portuguese"],"pneu":["portuguese"],"poda":["portuguese"],"poeira":["portuguese"],"poetisa":["portuguese"],"polegada":["portuguese"],"policiar":["portuguese"],"poluente":["portuguese"],"polvilho":["portuguese"],"pomar":["portuguese"],"pomba":["portuguese"],"ponderar":["portuguese"],"pontaria":["portuguese"],"populoso":["portuguese"],"porta":["portuguese"],"possuir":["portuguese"],"postal":["portuguese"],"pote":["portuguese"],"poupar":["portuguese"],"pouso":["portuguese"],"povoar":["portuguese"],"praia":["portuguese"],"prancha":["portuguese"],"prato":["portuguese"],"praxe":["portuguese"],"prece":["portuguese"],"predador":["portuguese"],"prefeito":["portuguese"],"premiar":["portuguese"],"prensar":["portuguese"],"preparar":["portuguese"],"presilha":["portuguese"],"pretexto":["portuguese"],"prevenir":["portuguese"],"prezar":["portuguese"],"primata":["portuguese"],"princesa":["portuguese"],"prisma":["portuguese"],"privado":["portuguese"],"processo":["portuguese"],"produto":["portuguese"],"profeta":["portuguese"],"proibido":["portuguese"],"projeto":["portuguese"],"prometer":["portuguese"],"propagar":["portuguese"],"prosa":["portuguese"],"protetor":["portuguese"],"provador":["portuguese"],"publicar":["portuguese"],"pudim":["portuguese"],"pular":["portuguese"],"pulmonar":["portuguese"],"pulseira":["portuguese"],"punhal":["portuguese"],"punir":["portuguese"],"pupilo":["portuguese"],"pureza":["portuguese"],"puxador":["portuguese"],"quadra":["portuguese"],"quantia":["portuguese"],"quarto":["portuguese"],"quase":["portuguese"],"quebrar":["portuguese"],"queda":["portuguese"],"queijo":["portuguese"],"quente":["portuguese"],"querido":["portuguese"],"quimono":["portuguese"],"quina":["portuguese"],"quiosque":["portuguese"],"rabanada":["portuguese"],"rabisco":["portuguese"],"rachar":["portuguese"],"racionar":["portuguese"],"radial":["portuguese"],"raiar":["portuguese"],"rainha":["portuguese"],"raio":["portuguese"],"raiva":["portuguese"],"rajada":["portuguese"],"ralado":["portuguese"],"ramal":["portuguese"],"ranger":["portuguese"],"ranhura":["portuguese"],"rapadura":["portuguese"],"rapel":["portuguese"],"rapidez":["portuguese"],"raposa":["portuguese"],"raquete":["portuguese"],"raridade":["portuguese"],"rasante":["portuguese"],"rascunho":["portuguese"],"rasgar":["portuguese"],"raspador":["portuguese"],"rasteira":["portuguese"],"rasurar":["portuguese"],"ratazana":["portuguese"],"ratoeira":["portuguese"],"realeza":["portuguese"],"reanimar":["portuguese"],"reaver":["portuguese"],"rebaixar":["portuguese"],"rebelde":["portuguese"],"rebolar":["portuguese"],"recado":["portuguese"],"recente":["portuguese"],"recheio":["portuguese"],"recibo":["portuguese"],"recordar":["portuguese"],"recrutar":["portuguese"],"recuar":["portuguese"],"rede":["portuguese"],"redimir":["portuguese"],"redonda":["portuguese"],"reduzida":["portuguese"],"reenvio":["portuguese"],"refinar":["portuguese"],"refletir":["portuguese"],"refogar":["portuguese"],"refresco":["portuguese"],"refugiar":["portuguese"],"regalia":["portuguese"],"regime":["portuguese"],"regra":["portuguese"],"reinado":["portuguese"],"reitor":["portuguese"],"rejeitar":["portuguese"],"relativo":["portuguese"],"remador":["portuguese"],"remendo":["portuguese"],"remorso":["portuguese"],"renovado":["portuguese"],"reparo":["portuguese"],"repelir":["portuguese"],"repleto":["portuguese"],"repolho":["portuguese"],"represa":["portuguese"],"repudiar":["portuguese"],"requerer":["portuguese"],"resenha":["portuguese"],"resfriar":["portuguese"],"resgatar":["portuguese"],"residir":["portuguese"],"resolver":["portuguese"],"respeito":["portuguese"],"ressaca":["portuguese"],"restante":["portuguese"],"resumir":["portuguese"],"retalho":["portuguese"],"reter":["portuguese"],"retirar":["portuguese"],"retomada":["portuguese"],"retratar":["portuguese"],"revelar":["portuguese"],"revisor":["portuguese"],"revolta":["portuguese"],"riacho":["portuguese"],"rica":["portuguese"],"rigidez":["portuguese"],"rigoroso":["portuguese"],"rimar":["portuguese"],"ringue":["portuguese"],"risada":["portuguese"],"risco":["portuguese"],"risonho":["portuguese"],"robalo":["portuguese"],"rochedo":["portuguese"],"rodada":["portuguese"],"rodeio":["portuguese"],"rodovia":["portuguese"],"roedor":["portuguese"],"roleta":["portuguese"],"romano":["portuguese"],"roncar":["portuguese"],"rosado":["portuguese"],"roseira":["portuguese"],"rosto":["portuguese"],"rota":["portuguese","turkish"],"roteiro":["portuguese"],"rotina":["portuguese"],"rotular":["portuguese"],"rouco":["portuguese"],"roupa":["portuguese"],"roxo":["portuguese"],"rubro":["portuguese"],"rugido":["portuguese"],"rugoso":["portuguese"],"ruivo":["portuguese"],"rumo":["portuguese"],"rupestre":["portuguese"],"russo":["portuguese"],"sabor":["portuguese"],"saciar":["portuguese"],"sacola":["portuguese"],"sacudir":["portuguese"],"sadio":["portuguese"],"safira":["portuguese"],"saga":["portuguese"],"sagrada":["portuguese"],"saibro":["portuguese"],"salada":["portuguese"],"saleiro":["portuguese"],"salgado":["portuguese"],"saliva":["portuguese"],"salpicar":["portuguese"],"salsicha":["portuguese"],"saltar":["portuguese"],"salvador":["portuguese"],"sambar":["portuguese"],"samurai":["portuguese"],"sanar":["portuguese"],"sanfona":["portuguese"],"sangue":["portuguese"],"sanidade":["portuguese"],"sapato":["portuguese"],"sarda":["portuguese"],"sargento":["portuguese"],"sarjeta":["portuguese"],"saturar":["portuguese"],"saudade":["portuguese"],"saxofone":["portuguese"],"sazonal":["portuguese"],"secar":["portuguese"],"secular":["portuguese"],"seda":["portuguese","turkish"],"sedento":["portuguese"],"sediado":["portuguese"],"sedoso":["portuguese"],"sedutor":["portuguese"],"segmento":["portuguese"],"segredo":["portuguese"],"segundo":["portuguese"],"seiva":["portuguese"],"seleto":["portuguese"],"selvagem":["portuguese"],"semanal":["portuguese"],"semente":["portuguese"],"senador":["portuguese"],"senhor":["portuguese"],"sensual":["portuguese"],"sentado":["portuguese"],"separado":["portuguese"],"sereia":["portuguese"],"seringa":["portuguese"],"serra":["portuguese"],"servo":["portuguese"],"setembro":["portuguese"],"setor":["portuguese"],"sigilo":["portuguese"],"silhueta":["portuguese"],"silicone":["portuguese"],"simetria":["portuguese"],"simpatia":["portuguese"],"simular":["portuguese"],"sinal":["portuguese"],"sincero":["portuguese"],"singular":["portuguese"],"sinopse":["portuguese"],"sintonia":["portuguese"],"sirene":["portuguese"],"siri":["portuguese"],"situado":["portuguese"],"soberano":["portuguese"],"sobra":["portuguese"],"socorro":["portuguese"],"sogro":["portuguese"],"soja":["portuguese"],"solda":["portuguese"],"soletrar":["portuguese"],"solteiro":["portuguese"],"sombrio":["portuguese"],"sonata":["portuguese"],"sondar":["portuguese"],"sonegar":["portuguese"],"sonhador":["portuguese"],"sono":["portuguese"],"soprano":["portuguese"],"soquete":["portuguese"],"sorrir":["portuguese"],"sorteio":["portuguese"],"sossego":["portuguese"],"sotaque":["portuguese"],"soterrar":["portuguese"],"sovado":["portuguese"],"sozinho":["portuguese"],"suavizar":["portuguese"],"subida":["portuguese"],"submerso":["portuguese"],"subsolo":["portuguese"],"subtrair":["portuguese"],"sucata":["portuguese"],"sucesso":["portuguese"],"suco":["portuguese"],"sudeste":["portuguese"],"sufixo":["portuguese"],"sugador":["portuguese"],"sugerir":["portuguese"],"sujeito":["portuguese"],"sulfato":["portuguese"],"sumir":["portuguese"],"suor":["portuguese"],"superior":["portuguese"],"suplicar":["portuguese"],"suposto":["portuguese"],"suprimir":["portuguese"],"surdina":["portuguese"],"surfista":["portuguese"],"surpresa":["portuguese"],"surreal":["portuguese"],"surtir":["portuguese"],"suspiro":["portuguese"],"sustento":["portuguese"],"tabela":["portuguese","turkish"],"tablete":["portuguese"],"tabuada":["portuguese"],"tacho":["portuguese"],"tagarela":["portuguese"],"talher":["portuguese"],"talo":["portuguese"],"talvez":["portuguese"],"tamanho":["portuguese"],"tamborim":["portuguese"],"tampa":["portuguese"],"tangente":["portuguese"],"tanto":["portuguese"],"tapar":["portuguese"],"tapioca":["portuguese"],"tardio":["portuguese"],"tarefa":["portuguese"],"tarja":["portuguese"],"tarraxa":["portuguese"],"tatuagem":["portuguese"],"taurino":["portuguese"],"taxativo":["portuguese"],"taxista":["portuguese"],"teatral":["portuguese"],"tecer":["portuguese"],"tecido":["portuguese"],"teclado":["portuguese"],"tedioso":["portuguese"],"teia":["portuguese"],"teimar":["portuguese"],"telefone":["portuguese"],"telhado":["portuguese"],"tempero":["portuguese"],"tenente":["portuguese"],"tensor":["portuguese"],"tentar":["portuguese"],"termal":["portuguese"],"terno":["portuguese"],"terreno":["portuguese"],"tese":["portuguese"],"tesoura":["portuguese"],"testado":["portuguese"],"teto":["portuguese"],"textura":["portuguese"],"texugo":["portuguese"],"tiara":["portuguese"],"tigela":["portuguese"],"tijolo":["portuguese"],"timbrar":["portuguese"],"timidez":["portuguese"],"tingido":["portuguese"],"tinteiro":["portuguese"],"tiragem":["portuguese"],"titular":["portuguese"],"toalha":["portuguese"],"tocha":["portuguese"],"tolerar":["portuguese"],"tolice":["portuguese"],"tomada":["portuguese"],"tomilho":["portuguese"],"tonel":["portuguese"],"tontura":["portuguese"],"topete":["portuguese"],"tora":["portuguese"],"torcido":["portuguese"],"torneio":["portuguese"],"torque":["portuguese"],"torrada":["portuguese"],"torto":["portuguese"],"tostar":["portuguese"],"touca":["portuguese"],"toupeira":["portuguese"],"toxina":["portuguese"],"trabalho":["portuguese"],"tracejar":["portuguese"],"tradutor":["portuguese"],"trafegar":["portuguese"],"trajeto":["portuguese"],"trama":["portuguese"],"trancar":["portuguese"],"trapo":["portuguese"],"traseiro":["portuguese"],"tratador":["portuguese"],"travar":["portuguese"],"treino":["portuguese"],"tremer":["portuguese"],"trepidar":["portuguese"],"trevo":["portuguese"],"triagem":["portuguese"],"tribo":["portuguese"],"triciclo":["portuguese"],"tridente":["portuguese"],"trilogia":["portuguese"],"trindade":["portuguese"],"triplo":["portuguese"],"triturar":["portuguese"],"triunfal":["portuguese"],"trocar":["portuguese"],"trombeta":["portuguese"],"trova":["portuguese"],"trunfo":["portuguese"],"truque":["portuguese"],"tubular":["portuguese"],"tucano":["portuguese"],"tudo":["portuguese"],"tulipa":["portuguese"],"tupi":["portuguese"],"turbo":["portuguese"],"turma":["portuguese"],"turquesa":["portuguese"],"tutelar":["portuguese"],"tutorial":["portuguese"],"uivar":["portuguese"],"umbigo":["portuguese"],"unha":["portuguese"],"unidade":["portuguese"],"uniforme":["portuguese"],"urologia":["portuguese"],"urso":["portuguese"],"urtiga":["portuguese"],"urubu":["portuguese"],"usado":["portuguese"],"usina":["portuguese"],"usufruir":["portuguese"],"vacina":["portuguese"],"vadiar":["portuguese"],"vagaroso":["portuguese"],"vaidoso":["portuguese"],"vala":["portuguese"],"valente":["portuguese"],"validade":["portuguese"],"valores":["portuguese"],"vantagem":["portuguese"],"vaqueiro":["portuguese"],"varanda":["portuguese"],"vareta":["portuguese"],"varrer":["portuguese"],"vascular":["portuguese"],"vasilha":["portuguese"],"vassoura":["portuguese"],"vazar":["portuguese"],"vazio":["portuguese"],"veado":["portuguese"],"vedar":["portuguese"],"vegetar":["portuguese"],"veicular":["portuguese"],"veleiro":["portuguese"],"velhice":["portuguese"],"veludo":["portuguese"],"vencedor":["portuguese"],"vendaval":["portuguese"],"venerar":["portuguese"],"ventre":["portuguese"],"verbal":["portuguese"],"verdade":["portuguese"],"vereador":["portuguese"],"vergonha":["portuguese"],"vermelho":["portuguese"],"verniz":["portuguese"],"versar":["portuguese"],"vertente":["portuguese"],"vespa":["portuguese"],"vestido":["portuguese"],"vetorial":["portuguese"],"viaduto":["portuguese"],"viagem":["portuguese"],"viajar":["portuguese"],"viatura":["portuguese"],"vibrador":["portuguese"],"videira":["portuguese"],"vidraria":["portuguese"],"viela":["portuguese"],"viga":["portuguese"],"vigente":["portuguese"],"vigiar":["portuguese"],"vigorar":["portuguese"],"vilarejo":["portuguese"],"vinco":["portuguese"],"vinheta":["portuguese"],"vinil":["portuguese"],"violeta":["portuguese"],"virada":["portuguese"],"virtude":["portuguese"],"visitar":["portuguese"],"visto":["portuguese"],"vitral":["portuguese"],"viveiro":["portuguese"],"vizinho":["portuguese"],"voador":["portuguese"],"voar":["portuguese"],"vogal":["portuguese"],"volante":["portuguese"],"voleibol":["portuguese"],"voltagem":["portuguese"],"volumoso":["portuguese"],"vontade":["portuguese"],"vulto":["portuguese"],"vuvuzela":["portuguese"],"xadrez":["portuguese"],"xarope":["portuguese"],"xeque":["portuguese"],"xeretar":["portuguese"],"xerife":["portuguese"],"xingar":["portuguese"],"zangado":["portuguese"],"zarpar":["portuguese"],"zebu":["portuguese"],"zelador":["portuguese"],"zombar":["portuguese"],"zoologia":["portuguese"],"zumbido":["portuguese"],"абзац":["russian"],"абонент":["russian"],"абсурд":["russian"],"авангард":["russian"],"авария":["russian"],"август":["russian"],"авиация":["russian"],"автор":["russian"],"агент":["russian"],"агитация":["russian"],"агрегат":["russian"],"адвокат":["russian"],"адмирал":["russian"],"адрес":["russian"],"азарт":["russian"],"азот":["russian"],"академия":["russian"],"аквариум":["russian"],"аксиома":["russian"],"акула":["russian"],"акцент":["russian"],"акция":["russian"],"аллея":["russian"],"алмаз":["russian"],"алтарь":["russian"],"альбом":["russian"],"альянс":["russian"],"амбиция":["russian"],"анализ":["russian"],"анекдот":["russian"],"анкета":["russian"],"ансамбль":["russian"],"антенна":["russian"],"апельсин":["russian"],"аппарат":["russian"],"аппетит":["russian"],"апрель":["russian"],"аптека":["russian"],"арбуз":["russian"],"аргумент":["russian"],"аренда":["russian"],"арест":["russian"],"армия":["russian"],"аромат":["russian"],"арсенал":["russian"],"артерия":["russian"],"артист":["russian"],"архив":["russian"],"аспирант":["russian"],"асфальт":["russian"],"атака":["russian"],"атомный":["russian"],"атрибут":["russian"],"аукцион":["russian"],"афиша":["russian"],"аэропорт":["russian"],"бабочка":["russian"],"бабушка":["russian"],"багаж":["russian"],"база":["russian"],"бактерия":["russian"],"баланс":["russian"],"балерина":["russian"],"балкон":["russian"],"бандит":["russian"],"банк":["russian"],"барабан":["russian"],"барон":["russian"],"барышня":["russian"],"барьер":["russian"],"бассейн":["russian"],"батарея":["russian"],"башмак":["russian"],"башня":["russian"],"бедный":["russian"],"беженец":["russian"],"бездна":["russian"],"белка":["russian"],"белый":["russian"],"бензин":["russian"],"берег":["russian"],"беседа":["russian"],"бешеный":["russian"],"билет":["russian"],"бинокль":["russian"],"биржа":["russian"],"битва":["russian"],"благо":["russian"],"блеск":["russian"],"близкий":["russian"],"блин":["russian"],"блок":["russian"],"блюдо":["russian"],"богатый":["russian"],"бодрый":["russian"],"боец":["russian"],"бокал":["russian"],"боковой":["russian"],"бокс":["russian"],"более":["russian"],"болото":["russian"],"болтать":["russian"],"большой":["russian"],"бомба":["russian"],"борт":["russian"],"борьба":["russian"],"босой":["russian"],"ботинок":["russian"],"бояться":["russian"],"брак":["russian"],"брать":["russian"],"бревно":["russian"],"бред":["russian"],"бригада":["russian"],"бродяга":["russian"],"броня":["russian"],"бросить":["russian"],"брызги":["russian"],"брюки":["russian"],"брюхо":["russian"],"бугор":["russian"],"будка":["russian"],"будни":["russian"],"будущее":["russian"],"буква":["russian"],"букет":["russian"],"бульвар":["russian"],"бумага":["russian"],"бунт":["russian"],"бурный":["russian"],"буря":["russian"],"бутылка":["russian"],"бухта":["russian"],"бывший":["russian"],"быстро":["russian"],"бытовой":["russian"],"быть":["russian"],"бюджет":["russian"],"бюро":["russian"],"бюст":["russian"],"вагон":["russian"],"важный":["russian"],"вакцина":["russian"],"валенок":["russian"],"вальс":["russian"],"валюта":["russian"],"ванная":["russian"],"варенье":["russian"],"вариант":["russian"],"вблизи":["russian"],"вверх":["russian"],"вводить":["russian"],"вдали":["russian"],"вдвое":["russian"],"вдова":["russian"],"вдоль":["russian"],"вдруг":["russian"],"ведро":["russian"],"ведущий":["russian"],"ведьма":["russian"],"вежливо":["russian"],"везде":["russian"],"веко":["russian"],"вексель":["russian"],"велеть":["russian"],"великий":["russian"],"венец":["russian"],"веник":["russian"],"веранда":["russian"],"верблюд":["russian"],"верить":["russian"],"верный":["russian"],"версия":["russian"],"вертеть":["russian"],"верхний":["russian"],"вершина":["russian"],"весело":["russian"],"весна":["russian"],"весомый":["russian"],"вести":["russian"],"весь":["russian"],"ветеран":["russian"],"ветхий":["russian"],"вечер":["russian"],"вечно":["russian"],"вешалка":["russian"],"вещество":["russian"],"взамен":["russian"],"взгляд":["russian"],"вздох":["russian"],"взнос":["russian"],"взойти":["russian"],"взор":["russian"],"взрыв":["russian"],"взять":["russian"],"видеть":["russian"],"видимо":["russian"],"визг":["russian"],"визит":["russian"],"вилка":["russian"],"вина":["russian"],"вирус":["russian"],"висок":["russian"],"витамин":["russian"],"витрина":["russian"],"вихрь":["russian"],"вишня":["russian"],"вкус":["russian"],"влага":["russian"],"владелец":["russian"],"власть":["russian"],"влево":["russian"],"влияние":["russian"],"вложить":["russian"],"вместе":["russian"],"внешний":["russian"],"вникать":["russian"],"внимание":["russian"],"вновь":["russian"],"внук":["russian"],"внутри":["russian"],"внучка":["russian"],"внушать":["russian"],"вовлечь":["russian"],"вовремя":["russian"],"вовсю":["russian"],"вода":["russian"],"водород":["russian"],"водяной":["russian"],"воевать":["russian"],"возврат":["russian"],"возглас":["russian"],"воздух":["russian"],"возить":["russian"],"возле":["russian"],"возня":["russian"],"возраст":["russian"],"война":["russian"],"войско":["russian"],"вокзал":["russian"],"волос":["russian"],"волчий":["russian"],"вольный":["russian"],"воля":["russian"],"вообще":["russian"],"вопль":["russian"],"вопрос":["russian"],"ворота":["russian"],"восемь":["russian"],"восток":["russian"],"вплоть":["russian"],"вполне":["russian"],"вправе":["russian"],"впредь":["russian"],"впрочем":["russian"],"врач":["russian"],"вредный":["russian"],"время":["russian"],"вручить":["russian"],"всадник":["russian"],"всегда":["russian"],"вскоре":["russian"],"вскрыть":["russian"],"всплеск":["russian"],"вспышка":["russian"],"встреча":["russian"],"всюду":["russian"],"всякий":["russian"],"второй":["russian"],"вход":["russian"],"вчера":["russian"],"выбор":["russian"],"вывод":["russian"],"выгнать":["russian"],"выдать":["russian"],"выехать":["russian"],"вызов":["russian"],"выйти":["russian"],"выкуп":["russian"],"вылезти":["russian"],"вымыть":["russian"],"выпасть":["russian"],"выпить":["russian"],"выплата":["russian"],"выпуск":["russian"],"вырасти":["russian"],"выручка":["russian"],"выслать":["russian"],"высокий":["russian"],"выставка":["russian"],"вышка":["russian"],"вязать":["russian"],"вялый":["russian"],"газета":["russian"],"газовый":["russian"],"галерея":["russian"],"галстук":["russian"],"гамма":["russian"],"гарантия":["russian"],"гармония":["russian"],"гарнизон":["russian"],"гастроли":["russian"],"гвардия":["russian"],"гвоздь":["russian"],"гектар":["russian"],"генерал":["russian"],"гений":["russian"],"геном":["russian"],"геолог":["russian"],"герб":["russian"],"герой":["russian"],"гибкий":["russian"],"гигант":["russian"],"гимн":["russian"],"гипотеза":["russian"],"гитара":["russian"],"главный":["russian"],"глагол":["russian"],"гладить":["russian"],"глаз":["russian"],"глина":["russian"],"глоток":["russian"],"глубокий":["russian"],"глупый":["russian"],"глухой":["russian"],"глыба":["russian"],"глядеть":["russian"],"гнев":["russian"],"гнездо":["russian"],"гнилой":["russian"],"годовой":["russian"],"голова":["russian"],"голубой":["russian"],"голый":["russian"],"гонорар":["russian"],"гордость":["russian"],"горизонт":["russian"],"горло":["russian"],"горный":["russian"],"город":["russian"],"горшок":["russian"],"горький":["russian"],"горючее":["russian"],"горячий":["russian"],"готовый":["russian"],"градус":["russian"],"грамм":["russian"],"граница":["russian"],"граф":["russian"],"гребень":["russian"],"гриб":["russian"],"гримаса":["russian"],"грозить":["russian"],"грохот":["russian"],"грош":["russian"],"грубый":["russian"],"грудь":["russian"],"груз":["russian"],"грунт":["russian"],"группа":["russian"],"груша":["russian"],"грязный":["russian"],"губа":["russian"],"гудок":["russian"],"гулкий":["russian"],"гулять":["russian"],"гусеница":["russian"],"густо":["russian"],"гусь":["russian"],"давление":["russian"],"давно":["russian"],"даже":["russian"],"дальний":["russian"],"данный":["russian"],"дарить":["russian"],"датчик":["russian"],"дать":["russian"],"дача":["russian"],"двадцать":["russian"],"дважды":["russian"],"дверь":["russian"],"двигать":["russian"],"движение":["russian"],"двойной":["russian"],"двор":["russian"],"дебют":["russian"],"девятый":["russian"],"дежурный":["russian"],"действие":["russian"],"декабрь":["russian"],"деление":["russian"],"дело":["russian"],"дельфин":["russian"],"день":["russian"],"дерево":["russian"],"держать":["russian"],"дерзкий":["russian"],"десять":["russian"],"деталь":["russian"],"детский":["russian"],"дефект":["russian"],"дефицит":["russian"],"деятель":["russian"],"джаз":["russian"],"джинсы":["russian"],"джунгли":["russian"],"диагноз":["russian"],"диалог":["russian"],"диапазон":["russian"],"диван":["russian"],"дивизия":["russian"],"дивный":["russian"],"диета":["russian"],"дизайн":["russian"],"дикарь":["russian"],"дилер":["russian"],"динамика":["russian"],"диплом":["russian"],"директор":["russian"],"дитя":["russian"],"длинный":["russian"],"дневник":["russian"],"добрый":["russian"],"добыча":["russian"],"доверие":["russian"],"догадка":["russian"],"догнать":["russian"],"дождь":["russian"],"доклад":["russian"],"доктор":["russian"],"документ":["russian"],"долго":["russian"],"должен":["russian"],"долина":["russian"],"донос":["russian"],"дорога":["russian"],"досада":["russian"],"доска":["russian"],"достать":["russian"],"досуг":["russian"],"доход":["russian"],"доцент":["russian"],"дощатый":["russian"],"драка":["russian"],"древний":["russian"],"дремать":["russian"],"дробный":["russian"],"дрова":["russian"],"дрожать":["russian"],"другой":["russian"],"дружба":["russian"],"дубовый":["russian"],"дуга":["russian"],"думать":["russian"],"дурной":["russian"],"духи":["russian"],"душный":["russian"],"дуэль":["russian"],"дуэт":["russian"],"дыра":["russian"],"дыхание":["russian"],"дюжина":["russian"],"дядя":["russian"],"едва":["russian"],"единый":["russian"],"ерунда":["russian"],"если":["russian"],"ехать":["russian"],"жадный":["russian"],"жажда":["russian"],"жалеть":["russian"],"жалоба":["russian"],"жанр":["russian"],"жареный":["russian"],"жаркий":["russian"],"жгучий":["russian"],"жевать":["russian"],"желание":["russian"],"желудок":["russian"],"жена":["russian"],"женщина":["russian"],"жертва":["russian"],"жест":["russian"],"жидкость":["russian"],"житель":["russian"],"жить":["russian"],"жрец":["russian"],"жулик":["russian"],"журнал":["russian"],"жуткий":["russian"],"забрать":["russian"],"забыть":["russian"],"завести":["russian"],"завод":["russian"],"завтра":["russian"],"загадка":["russian"],"загнать":["russian"],"заговор":["russian"],"задача":["russian"],"задеть":["russian"],"задний":["russian"],"задолго":["russian"],"заехать":["russian"],"заказ":["russian"],"закон":["russian"],"закрыть":["russian"],"закуска":["russian"],"залезть":["russian"],"залить":["russian"],"залп":["russian"],"замок":["russian"],"замуж":["russian"],"замысел":["russian"],"занавес":["russian"],"заново":["russian"],"занять":["russian"],"заодно":["russian"],"запись":["russian"],"запрос":["russian"],"запуск":["russian"],"запястье":["russian"],"заранее":["russian"],"заросль":["russian"],"зарплата":["russian"],"заря":["russian"],"засада":["russian"],"заслуга":["russian"],"заснуть":["russian"],"застать":["russian"],"затвор":["russian"],"затеять":["russian"],"затрата":["russian"],"затылок":["russian"],"захват":["russian"],"зачем":["russian"],"защита":["russian"],"заявить":["russian"],"заяц":["russian"],"звезда":["russian"],"звено":["russian"],"звонить":["russian"],"здесь":["russian"],"зелень":["russian"],"земля":["russian"],"зеркало":["russian"],"зерно":["russian"],"зима":["russian"],"злой":["russian"],"змея":["russian"],"знамя":["russian"],"знание":["russian"],"значит":["russian"],"золотой":["russian"],"зона":["russian"],"зонтик":["russian"],"зоопарк":["russian"],"зрачок":["russian"],"зрение":["russian"],"зритель":["russian"],"зубной":["russian"],"зубр":["russian"],"игла":["russian"],"идеал":["russian"],"идеолог":["russian"],"идея":["russian"],"идол":["russian"],"идти":["russian"],"изба":["russian"],"избить":["russian"],"избрать":["russian"],"избыток":["russian"],"извлечь":["russian"],"извне":["russian"],"изгиб":["russian"],"изгнать":["russian"],"издание":["russian"],"изделие":["russian"],"изнутри":["russian"],"изобилие":["russian"],"изоляция":["russian"],"изредка":["russian"],"изрядно":["russian"],"изучение":["russian"],"изъять":["russian"],"изящный":["russian"],"икона":["russian"],"икра":["russian"],"иллюзия":["russian"],"именно":["russian"],"иметь":["russian"],"имидж":["russian"],"империя":["russian"],"импульс":["russian"],"иначе":["russian"],"инвалид":["russian"],"индекс":["russian"],"индивид":["russian"],"инерция":["russian"],"инженер":["russian"],"иногда":["russian"],"иной":["russian"],"институт":["russian"],"интерес":["russian"],"интрига":["russian"],"интуиция":["russian"],"инфаркт":["russian"],"инцидент":["russian"],"ирония":["russian"],"искать":["russian"],"испуг":["russian"],"история":["russian"],"итог":["russian"],"июнь":["russian"],"кабель":["russian"],"кабинет":["russian"],"каблук":["russian"],"кавалер":["russian"],"кадр":["russian"],"каждый":["russian"],"кажется":["russian"],"казино":["russian"],"калитка":["russian"],"камень":["russian"],"камин":["russian"],"канал":["russian"],"кандидат":["russian"],"каникулы":["russian"],"канон":["russian"],"капитан":["russian"],"капля":["russian"],"капот":["russian"],"капуста":["russian"],"карандаш":["russian"],"карета":["russian"],"каркас":["russian"],"карман":["russian"],"картина":["russian"],"карьера":["russian"],"каска":["russian"],"кассета":["russian"],"кастрюля":["russian"],"каталог":["russian"],"катер":["russian"],"каток":["russian"],"катушка":["russian"],"кафедра":["russian"],"качество":["russian"],"каша":["russian"],"кашлять":["russian"],"каюта":["russian"],"квадрат":["russian"],"квартира":["russian"],"квота":["russian"],"кепка":["russian"],"кивнуть":["russian"],"километр":["russian"],"кино":["russian"],"киоск":["russian"],"кипяток":["russian"],"кирпич":["russian"],"кислота":["russian"],"кисть":["russian"],"клавиша":["russian"],"клапан":["russian"],"класс":["russian"],"клей":["russian"],"клетка":["russian"],"клиент":["russian"],"климат":["russian"],"клиника":["russian"],"кличка":["russian"],"клоун":["russian"],"клочок":["russian"],"клуб":["russian"],"клумба":["russian"],"ключ":["russian"],"книга":["russian"],"кнопка":["russian"],"кнут":["russian"],"княгиня":["russian"],"князь":["russian"],"кобура":["russian"],"когда":["russian"],"кодекс":["russian"],"кожа":["russian"],"коктейль":["russian"],"колено":["russian"],"коллега":["russian"],"колонна":["russian"],"колпак":["russian"],"кольцо":["russian"],"колючий":["russian"],"коляска":["russian"],"команда":["russian"],"комедия":["russian"],"комиссия":["russian"],"коммуна":["russian"],"комната":["russian"],"комок":["russian"],"компания":["russian"],"комфорт":["russian"],"конвейер":["russian"],"конгресс":["russian"],"конечно":["russian"],"конкурс":["russian"],"контроль":["russian"],"концерт":["russian"],"конь":["russian"],"конюшня":["russian"],"копать":["russian"],"копейка":["russian"],"копыто":["russian"],"корабль":["russian"],"корень":["russian"],"корзина":["russian"],"коридор":["russian"],"кормить":["russian"],"корпус":["russian"],"космос":["russian"],"костюм":["russian"],"косяк":["russian"],"котел":["russian"],"котлета":["russian"],"который":["russian"],"коттедж":["russian"],"кофе":["russian"],"кофта":["russian"],"кошка":["russian"],"кража":["russian"],"край":["russian"],"красный":["russian"],"краткий":["russian"],"кредит":["russian"],"крем":["russian"],"крепкий":["russian"],"кресло":["russian"],"кривой":["russian"],"кризис":["russian"],"кристалл":["russian"],"критерий":["russian"],"кричать":["russian"],"кровь":["russian"],"крокодил":["russian"],"кролик":["russian"],"кроме":["russian"],"крона":["russian"],"круг":["russian"],"кружка":["russian"],"крупный":["russian"],"крутой":["russian"],"крушение":["russian"],"крыло":["russian"],"крыша":["russian"],"крючок":["russian"],"кстати":["russian"],"кубик":["russian"],"куда":["russian"],"кузов":["russian"],"кукла":["russian"],"кулак":["russian"],"кулиса":["russian"],"культура":["russian"],"кумир":["russian"],"купе":["russian"],"купить":["russian"],"купол":["russian"],"купюра":["russian"],"курица":["russian"],"курорт":["russian"],"курс":["russian"],"куртка":["russian"],"кусок":["russian"],"куст":["russian"],"кухня":["russian"],"кушать":["russian"],"лабиринт":["russian"],"лавка":["russian"],"лагерь":["russian"],"ладно":["russian"],"ладонь":["russian"],"лапа":["russian"],"лауреат":["russian"],"лгать":["russian"],"лебедь":["russian"],"левый":["russian"],"легенда":["russian"],"легкий":["russian"],"ледяной":["russian"],"лежать":["russian"],"лезвие":["russian"],"лезть":["russian"],"лекция":["russian"],"ленивый":["russian"],"лента":["russian"],"лепесток":["russian"],"лесной":["russian"],"лестница":["russian"],"лететь":["russian"],"лето":["russian"],"лечить":["russian"],"лига":["russian"],"лидер":["russian"],"лиловый":["russian"],"лимон":["russian"],"линия":["russian"],"липкий":["russian"],"лист":["russian"],"литр":["russian"],"лихой":["russian"],"лицо":["russian"],"лишить":["russian"],"лишний":["russian"],"ловить":["russian"],"логика":["russian"],"лодка":["russian"],"ложь":["russian"],"лозунг":["russian"],"локоть":["russian"],"лопата":["russian"],"лошадь":["russian"],"лукавый":["russian"],"луна":["russian"],"лучший":["russian"],"лысый":["russian"],"льгота":["russian"],"любить":["russian"],"любой":["russian"],"людской":["russian"],"люстра":["russian"],"лютый":["russian"],"лягушка":["russian"],"магазин":["russian"],"магия":["russian"],"майор":["russian"],"майский":["russian"],"максимум":["russian"],"макушка":["russian"],"мало":["russian"],"мальчик":["russian"],"мама":["russian"],"манера":["russian"],"марка":["russian"],"март":["russian"],"маршрут":["russian"],"масса":["russian"],"мастер":["russian"],"масштаб":["russian"],"материал":["russian"],"матч":["russian"],"махать":["russian"],"машина":["russian"],"маяк":["russian"],"мебель":["russian"],"медаль":["russian"],"медведь":["russian"],"медицина":["russian"],"медь":["russian"],"между":["russian"],"мелкий":["russian"],"мелочь":["russian"],"мемуары":["russian"],"меньше":["russian"],"меню":["russian"],"менять":["russian"],"мера":["russian"],"мерцать":["russian"],"место":["russian"],"месяц":["russian"],"металл":["russian"],"метод":["russian"],"метр":["russian"],"механизм":["russian"],"меховой":["russian"],"мечтать":["russian"],"мешать":["russian"],"мешок":["russian"],"миграция":["russian"],"микрофон":["russian"],"милиция":["russian"],"миллион":["russian"],"милость":["russian"],"миля":["russian"],"мимо":["russian"],"минерал":["russian"],"министр":["russian"],"минута":["russian"],"мирный":["russian"],"миска":["russian"],"миссия":["russian"],"митинг":["russian"],"мишень":["russian"],"младший":["russian"],"мнение":["russian"],"мнимый":["russian"],"много":["russian"],"могучий":["russian"],"модель":["russian"],"может":["russian"],"мозг":["russian"],"мокрый":["russian"],"молекула":["russian"],"молния":["russian"],"молодой":["russian"],"молчать":["russian"],"момент":["russian"],"монета":["russian"],"монитор":["russian"],"монолог":["russian"],"монстр":["russian"],"монтаж":["russian"],"мораль":["russian"],"море":["russian"],"морковь":["russian"],"мороз":["russian"],"морщина":["russian"],"мостовая":["russian"],"мотать":["russian"],"мотив":["russian"],"мотор":["russian"],"мохнатый":["russian"],"мрамор":["russian"],"мрачный":["russian"],"мстить":["russian"],"мудрый":["russian"],"мужество":["russian"],"мужчина":["russian"],"музей":["russian"],"музыка":["russian"],"мундир":["russian"],"муравей":["russian"],"мусор":["russian"],"муха":["russian"],"мчаться":["russian"],"мысль":["russian"],"мыться":["russian"],"мышца":["russian"],"мышь":["russian"],"мюзикл":["russian"],"мягкий":["russian"],"мясо":["russian"],"набор":["russian"],"навык":["russian"],"наглый":["russian"],"нагрузка":["russian"],"надежда":["russian"],"надзор":["russian"],"надо":["russian"],"наедине":["russian"],"назад":["russian"],"название":["russian"],"назло":["russian"],"наивный":["russian"],"найти":["russian"],"наконец":["russian"],"налево":["russian"],"наличие":["russian"],"налог":["russian"],"намерен":["russian"],"нанести":["russian"],"напасть":["russian"],"например":["russian"],"народ":["russian"],"наследие":["russian"],"натура":["russian"],"наука":["russian"],"наутро":["russian"],"начать":["russian"],"небо":["russian"],"неважно":["russian"],"невеста":["russian"],"негодяй":["russian"],"недавно":["russian"],"неделя":["russian"],"недолго":["russian"],"недра":["russian"],"недуг":["russian"],"нежный":["russian"],"незачем":["russian"],"некто":["russian"],"нелепый":["russian"],"неловко":["russian"],"нельзя":["russian"],"немало":["russian"],"немой":["russian"],"неплохо":["russian"],"нервный":["russian"],"нередко":["russian"],"нестись":["russian"],"неудача":["russian"],"неужели":["russian"],"нефть":["russian"],"неясный":["russian"],"нигде":["russian"],"низкий":["russian"],"никакой":["russian"],"никогда":["russian"],"никуда":["russian"],"ничто":["russian"],"ничуть":["russian"],"ниша":["russian"],"нищий":["russian"],"новость":["russian"],"новый":["russian"],"нога":["russian"],"ноготь":["russian"],"ножницы":["russian"],"ноздря":["russian"],"номер":["russian"],"носить":["russian"],"носок":["russian"],"ночь":["russian"],"ноябрь":["russian"],"нрав":["russian"],"нуль":["russian"],"нынче":["russian"],"нырять":["russian"],"нюанс":["russian"],"няня":["russian"],"обаяние":["russian"],"обед":["russian"],"обезьяна":["russian"],"обещать":["russian"],"обжечь":["russian"],"обзор":["russian"],"обилие":["russian"],"обитать":["russian"],"область":["russian"],"облик":["russian"],"обложка":["russian"],"обмен":["russian"],"обморок":["russian"],"обожать":["russian"],"обои":["russian"],"оболочка":["russian"],"оборона":["russian"],"обочина":["russian"],"образ":["russian"],"обрести":["russian"],"обрыв":["russian"],"обувь":["russian"],"обучение":["russian"],"обход":["russian"],"общество":["russian"],"общий":["russian"],"объект":["russian"],"обыск":["russian"],"обычно":["russian"],"обязать":["russian"],"овощи":["russian"],"овраг":["russian"],"овца":["russian"],"оговорка":["russian"],"ограда":["russian"],"огурец":["russian"],"одежда":["russian"],"одеяло":["russian"],"один":["russian"],"однако":["russian"],"одолеть":["russian"],"ожидать":["russian"],"озеро":["russian"],"океан":["russian"],"окно":["russian"],"около":["russian"],"окоп":["russian"],"окраина":["russian"],"октябрь":["russian"],"опасный":["russian"],"опека":["russian"],"операция":["russian"],"описание":["russian"],"оплата":["russian"],"опора":["russian"],"оппонент":["russian"],"оптимизм":["russian"],"оптовый":["russian"],"опухоль":["russian"],"опыт":["russian"],"оратор":["russian"],"орбита":["russian"],"орган":["russian"],"орден":["russian"],"орел":["russian"],"оригинал":["russian"],"ориентир":["russian"],"оркестр":["russian"],"оружие":["russian"],"осенний":["russian"],"осколок":["russian"],"осмотр":["russian"],"остров":["russian"],"отбор":["russian"],"отбыть":["russian"],"отвлечь":["russian"],"отдать":["russian"],"отдел":["russian"],"отдых":["russian"],"отель":["russian"],"отец":["russian"],"отзыв":["russian"],"отказ":["russian"],"отклик":["russian"],"открыть":["russian"],"откуда":["russian"],"отличие":["russian"],"отныне":["russian"],"отойти":["russian"],"отпуск":["russian"],"отрасль":["russian"],"отросток":["russian"],"отрывок":["russian"],"отряд":["russian"],"отсек":["russian"],"отставка":["russian"],"отсюда":["russian"],"оттенок":["russian"],"оттого":["russian"],"отчего":["russian"],"отъезд":["russian"],"офис":["russian"],"офицер":["russian"],"охота":["russian"],"охрана":["russian"],"оценка":["russian"],"очаг":["russian"],"очень":["russian"],"очередь":["russian"],"очищать":["russian"],"ошибка":["russian"],"ощущение":["russian"],"павильон":["russian"],"падать":["russian"],"пазуха":["russian"],"пакет":["russian"],"палата":["russian"],"палец":["russian"],"палуба":["russian"],"пальто":["russian"],"память":["russian"],"панель":["russian"],"паника":["russian"],"пара":["russian"],"парень":["russian"],"пароход":["russian"],"партия":["russian"],"парус":["russian"],"паспорт":["russian"],"пассажир":["russian"],"пастух":["russian"],"патент":["russian"],"патрон":["russian"],"пауза":["russian"],"паук":["russian"],"паутина":["russian"],"пафос":["russian"],"пахнуть":["russian"],"пациент":["russian"],"пачка":["russian"],"певец":["russian"],"педагог":["russian"],"пейзаж":["russian"],"пенсия":["russian"],"пепел":["russian"],"первый":["russian"],"перед":["russian"],"период":["russian"],"перо":["russian"],"перрон":["russian"],"персонаж":["russian"],"перчатка":["russian"],"песня":["russian"],"песок":["russian"],"петля":["russian"],"петрушка":["russian"],"петух":["russian"],"пехота":["russian"],"печать":["russian"],"печень":["russian"],"пешком":["russian"],"пещера":["russian"],"пианист":["russian"],"пиджак":["russian"],"пилот":["russian"],"пионер":["russian"],"пирамида":["russian"],"пирожок":["russian"],"письмо":["russian"],"пища":["russian"],"плавание":["russian"],"плакать":["russian"],"пламя":["russian"],"план":["russian"],"пласт":["russian"],"платить":["russian"],"пленный":["russian"],"плечо":["russian"],"плита":["russian"],"плод":["russian"],"плоский":["russian"],"плотный":["russian"],"плохой":["russian"],"площадь":["russian"],"плыть":["russian"],"плюс":["russian"],"пляж":["russian"],"плясать":["russian"],"победа":["russian"],"повар":["russian"],"повод":["russian"],"повсюду":["russian"],"повязка":["russian"],"погода":["russian"],"погреб":["russian"],"подбор":["russian"],"подвиг":["russian"],"подделка":["russian"],"поджать":["russian"],"поднос":["russian"],"подпись":["russian"],"подруга":["russian"],"подход":["russian"],"подчас":["russian"],"подъезд":["russian"],"поединок":["russian"],"поезд":["russian"],"поесть":["russian"],"поехать":["russian"],"пожалуй":["russian"],"пожилой":["russian"],"позади":["russian"],"позвать":["russian"],"поздний":["russian"],"позиция":["russian"],"позор":["russian"],"поиск":["russian"],"поймать":["russian"],"пойти":["russian"],"поклон":["russian"],"покой":["russian"],"покрыть":["russian"],"полдень":["russian"],"полезный":["russian"],"ползти":["russian"],"полк":["russian"],"полный":["russian"],"половина":["russian"],"полтора":["russian"],"польза":["russian"],"поляна":["russian"],"помидор":["russian"],"помнить":["russian"],"помощь":["russian"],"попасть":["russian"],"поперек":["russian"],"поплыть":["russian"],"пополам":["russian"],"поправка":["russian"],"попугай":["russian"],"попытка":["russian"],"порог":["russian"],"портрет":["russian"],"порция":["russian"],"порыв":["russian"],"порядок":["russian"],"после":["russian"],"посол":["russian"],"посреди":["russian"],"постель":["russian"],"посуда":["russian"],"потом":["russian"],"похвала":["russian"],"похожий":["russian"],"поцелуй":["russian"],"почва":["russian"],"почему":["russian"],"пошлина":["russian"],"поэма":["russian"],"поэтому":["russian"],"право":["russian"],"праздник":["russian"],"практика":["russian"],"прах":["russian"],"преграда":["russian"],"предмет":["russian"],"прежде":["russian"],"прелесть":["russian"],"премия":["russian"],"препарат":["russian"],"пресса":["russian"],"прибыть":["russian"],"прижать":["russian"],"прийти":["russian"],"приказ":["russian"],"прилавок":["russian"],"пример":["russian"],"принять":["russian"],"природа":["russian"],"притом":["russian"],"прихожая":["russian"],"прицел":["russian"],"причина":["russian"],"приют":["russian"],"прогноз":["russian"],"продукт":["russian"],"проект":["russian"],"прожить":["russian"],"прокат":["russian"],"промысел":["russian"],"пропуск":["russian"],"просто":["russian"],"против":["russian"],"профиль":["russian"],"процесс":["russian"],"прочий":["russian"],"прошлый":["russian"],"прощать":["russian"],"пружина":["russian"],"прут":["russian"],"прыжок":["russian"],"прямой":["russian"],"птица":["russian"],"публика":["russian"],"пугать":["russian"],"пуговица":["russian"],"пузырь":["russian"],"пульт":["russian"],"пуля":["russian"],"пункт":["russian"],"пускать":["russian"],"пустой":["russian"],"путь":["russian"],"пухлый":["russian"],"пучок":["russian"],"пушистый":["russian"],"пушка":["russian"],"пчела":["russian"],"пшеница":["russian"],"пылать":["russian"],"пыль":["russian"],"пышный":["russian"],"пьеса":["russian"],"пятка":["russian"],"пятно":["russian"],"пятый":["russian"],"пятьсот":["russian"],"работа":["russian"],"равнина":["russian"],"ради":["russian"],"радость":["russian"],"радуга":["russian"],"разбить":["russian"],"развитие":["russian"],"разговор":["russian"],"раздел":["russian"],"различие":["russian"],"размер":["russian"],"разный":["russian"],"разрыв":["russian"],"разум":["russian"],"район":["russian"],"ракета":["russian"],"раковина":["russian"],"рамка":["russian"],"рано":["russian"],"рапорт":["russian"],"распад":["russian"],"рассказ":["russian"],"расти":["russian"],"расход":["russian"],"расцвет":["russian"],"рация":["russian"],"рвануть":["russian"],"рваться":["russian"],"реакция":["russian"],"ребро":["russian"],"реветь":["russian"],"редактор":["russian"],"редкий":["russian"],"реестр":["russian"],"режим":["russian"],"резать":["russian"],"резерв":["russian"],"резина":["russian"],"резко":["russian"],"резной":["russian"],"рейс":["russian"],"реклама":["russian"],"рекорд":["russian"],"религия":["russian"],"рельс":["russian"],"ремень":["russian"],"ремонт":["russian"],"реплика":["russian"],"репортаж":["russian"],"ресница":["russian"],"ресторан":["russian"],"реформа":["russian"],"рецепт":["russian"],"речь":["russian"],"решение":["russian"],"ржавый":["russian"],"риск":["russian"],"рисунок":["russian"],"ритуал":["russian"],"рифма":["russian"],"робко":["russian"],"робот":["russian"],"ровесник":["russian"],"ровно":["russian"],"родной":["russian"],"рождение":["russian"],"роза":["russian"],"розовый":["russian"],"розыск":["russian"],"роль":["russian"],"роман":["russian"],"роскошь":["russian"],"роспись":["russian"],"рост":["russian"],"рубашка":["russian"],"рубеж":["russian"],"рубить":["russian"],"рубрика":["russian"],"рудник":["russian"],"рука":["russian"],"рукопись":["russian"],"румяный":["russian"],"русло":["russian"],"рухнуть":["russian"],"ручей":["russian"],"ручной":["russian"],"рыба":["russian"],"рыжий":["russian"],"рынок":["russian"],"рыхлый":["russian"],"рыцарь":["russian"],"рычаг":["russian"],"рюкзак":["russian"],"рядом":["russian"],"садовый":["russian"],"сажать":["russian"],"салон":["russian"],"салфетка":["russian"],"салют":["russian"],"самец":["russian"],"самовар":["russian"],"самый":["russian"],"сани":["russian"],"санкция":["russian"],"сапог":["russian"],"сарай":["russian"],"сатира":["russian"],"сахар":["russian"],"сбить":["russian"],"сбоку":["russian"],"сборная":["russian"],"сбыт":["russian"],"свадьба":["russian"],"свалка":["russian"],"сварить":["russian"],"свежий":["russian"],"сверху":["russian"],"свет":["russian"],"свеча":["russian"],"свинья":["russian"],"свист":["russian"],"свитер":["russian"],"свобода":["russian"],"сводка":["russian"],"свой":["russian"],"свыше":["russian"],"связь":["russian"],"сдаться":["russian"],"сделать":["russian"],"сегмент":["russian"],"сегодня":["russian"],"седло":["russian"],"седой":["russian"],"седьмой":["russian"],"сезон":["russian"],"сейф":["russian"],"сейчас":["russian"],"секрет":["russian"],"сектор":["russian"],"секунда":["russian"],"семинар":["russian"],"семья":["russian"],"сенатор":["russian"],"сено":["russian"],"сенсация":["russian"],"сентябрь":["russian"],"сервис":["russian"],"сердце":["russian"],"середина":["russian"],"сержант":["russian"],"серия":["russian"],"серый":["russian"],"сессия":["russian"],"сесть":["russian"],"сетевой":["russian"],"сжатый":["russian"],"сжечь":["russian"],"сзади":["russian"],"сигнал":["russian"],"сиденье":["russian"],"сила":["russian"],"силуэт":["russian"],"сильный":["russian"],"символ":["russian"],"симпатия":["russian"],"симфония":["russian"],"синий":["russian"],"синтез":["russian"],"синяк":["russian"],"сирень":["russian"],"система":["russian"],"ситуация":["russian"],"сияние":["russian"],"сказать":["russian"],"скала":["russian"],"скамейка":["russian"],"скандал":["russian"],"скатерть":["russian"],"скачок":["russian"],"скважина":["russian"],"сквер":["russian"],"сквозь":["russian"],"скелет":["russian"],"скидка":["russian"],"склад":["russian"],"сколько":["russian"],"скорый":["russian"],"скосить":["russian"],"скот":["russian"],"скрипка":["russian"],"скудный":["russian"],"скука":["russian"],"слабый":["russian"],"слава":["russian"],"сладкий":["russian"],"слегка":["russian"],"след":["russian"],"слеза":["russian"],"слепой":["russian"],"слесарь":["russian"],"слишком":["russian"],"слово":["russian"],"слог":["russian"],"сложный":["russian"],"сломать":["russian"],"служба":["russian"],"слух":["russian"],"случай":["russian"],"слышать":["russian"],"слюна":["russian"],"смежный":["russian"],"смелый":["russian"],"сменить":["russian"],"смесь":["russian"],"сметана":["russian"],"смех":["russian"],"смола":["russian"],"смуглый":["russian"],"смутный":["russian"],"смущать":["russian"],"смысл":["russian"],"снайпер":["russian"],"снаряд":["russian"],"сначала":["russian"],"снег":["russian"],"снизу":["russian"],"сниться":["russian"],"сно��а":["russian"],"снять":["russian"],"собака":["russian"],"соблазн":["russian"],"собрание":["russian"],"событие":["russian"],"совесть":["russian"],"совсем":["russian"],"согласие":["russian"],"создать":["russian"],"сознание":["russian"],"созреть":["russian"],"сойтись":["russian"],"сокол":["russian"],"солдат":["russian"],"соленый":["russian"],"солнце":["russian"],"солома":["russian"],"сомнение":["russian"],"сонный":["russian"],"соперник":["russian"],"соратник":["russian"],"сорвать":["russian"],"сосед":["russian"],"сосиска":["russian"],"состав":["russian"],"сотня":["russian"],"соус":["russian"],"союз":["russian"],"спад":["russian"],"спальня":["russian"],"спасти":["russian"],"спектр":["russian"],"сперва":["russian"],"спешить":["russian"],"спина":["russian"],"спирт":["russian"],"список":["russian"],"спичка":["russian"],"сплав":["russian"],"спонсор":["russian"],"спор":["russian"],"способ":["russian"],"справка":["russian"],"спустя":["russian"],"спутник":["russian"],"сразу":["russian"],"средство":["russian"],"срок":["russian"],"срыв":["russian"],"ссора":["russian"],"ссылка":["russian"],"ставить":["russian"],"стадия":["russian"],"стакан":["russian"],"станция":["russian"],"старый":["russian"],"стая":["russian"],"стебель":["russian"],"стекло":["russian"],"стена":["russian"],"степень":["russian"],"стереть":["russian"],"стиль":["russian"],"стимул":["russian"],"стирать":["russian"],"стихи":["russian"],"стоить":["russian"],"стойка":["russian"],"стол":["russian"],"стонать":["russian"],"стопа":["russian"],"сторона":["russian"],"стоянка":["russian"],"страна":["russian"],"стричь":["russian"],"строгий":["russian"],"струя":["russian"],"студент":["russian"],"стук":["russian"],"ступня":["russian"],"стыдно":["russian"],"суббота":["russian"],"субъект":["russian"],"сувенир":["russian"],"сугроб":["russian"],"сугубо":["russian"],"судить":["russian"],"судно":["russian"],"судьба":["russian"],"суета":["russian"],"суметь":["russian"],"сумма":["russian"],"сумрак":["russian"],"сундук":["russian"],"супруг":["russian"],"суровый":["russian"],"сутки":["russian"],"сухой":["russian"],"суша":["russian"],"существо":["russian"],"сфера":["russian"],"схема":["russian"],"схожий":["russian"],"сценарий":["russian"],"счастье":["russian"],"считать":["russian"],"съезд":["russian"],"сыграть":["russian"],"сырой":["russian"],"сытый":["russian"],"сыщик":["russian"],"сюда":["russian"],"сюжет":["russian"],"сюрприз":["russian"],"тайна":["russian"],"также":["russian"],"такой":["russian"],"такси":["russian"],"тактика":["russian"],"талия":["russian"],"таможня":["russian"],"танец":["russian"],"таракан":["russian"],"тарелка":["russian"],"тариф":["russian"],"тащить":["russian"],"таять":["russian"],"тварь":["russian"],"театр":["russian"],"тезис":["russian"],"текст":["russian"],"текущий":["russian"],"телефон":["russian"],"тема":["russian"],"темнота":["russian"],"теневой":["russian"],"теннис":["russian"],"теория":["russian"],"теперь":["russian"],"тепло":["russian"],"терапия":["russian"],"терзать":["russian"],"термин":["russian"],"терпеть":["russian"],"терраса":["russian"],"терять":["russian"],"тесный":["russian"],"тетрадь":["russian"],"техника":["russian"],"течение":["russian"],"тигр":["russian"],"типовой":["russian"],"тираж":["russian"],"титул":["russian"],"тихий":["russian"],"ткань":["russian"],"товарищ":["russian"],"тоже":["russian"],"толпа":["russian"],"толстый":["russian"],"толчок":["russian"],"толщина":["russian"],"только":["russian"],"тонкий":["russian"],"тонна":["russian"],"топить":["russian"],"топор":["russian"],"торговля":["russian"],"тормоз":["russian"],"торчать":["russian"],"тотчас":["russian"],"точка":["russian"],"точно":["russian"],"тощий":["russian"],"трава":["russian"],"традиция":["russian"],"трактор":["russian"],"трамвай":["russian"],"траншея":["russian"],"трасса":["russian"],"тревога":["russian"],"трезвый":["russian"],"тренер":["russian"],"трепет":["russian"],"треск":["russian"],"третий":["russian"],"трещина":["russian"],"трибуна":["russian"],"тридцать":["russian"],"триста":["russian"],"триумф":["russian"],"трогать":["russian"],"тройка":["russian"],"тронуть":["russian"],"тропа":["russian"],"тротуар":["russian"],"трубка":["russian"],"труд":["russian"],"трюк":["russian"],"тряпка":["russian"],"туго":["russian"],"туловище":["russian"],"туман":["russian"],"тумбочка":["russian"],"тундра":["russian"],"тупик":["russian"],"турист":["russian"],"турнир":["russian"],"тусклый":["russian"],"туфля":["russian"],"туча":["russian"],"тысяча":["russian"],"тяга":["russian"],"тяжело":["russian"],"убежать":["russian"],"убогий":["russian"],"уборка":["russian"],"уважение":["russian"],"увезти":["russian"],"уволить":["russian"],"угадать":["russian"],"угол":["russian"],"угощать":["russian"],"угроза":["russian"],"угрюмый":["russian"],"удар":["russian"],"удачный":["russian"],"уделять":["russian"],"удивить":["russian"],"удобный":["russian"],"удочка":["russian"],"уезжать":["russian"],"ужин":["russian"],"узел":["russian"],"узкий":["russian"],"уйти":["russian"],"указание":["russian"],"уклон":["russian"],"украсть":["russian"],"укусить":["russian"],"улетать":["russian"],"улица":["russian"],"улыбка":["russian"],"умело":["russian"],"умение":["russian"],"умный":["russian"],"умолять":["russian"],"унести":["russian"],"унижать":["russian"],"унылый":["russian"],"упаковка":["russian"],"упасть":["russian"],"упорно":["russian"],"упрек":["russian"],"урна":["russian"],"уровень":["russian"],"урожай":["russian"],"уронить":["russian"],"усадьба":["russian"],"усатый":["russian"],"усвоить":["russian"],"усилие":["russian"],"условие":["russian"],"услуга":["russian"],"усмешка":["russian"],"успеть":["russian"],"устав":["russian"],"устоять":["russian"],"утечка":["russian"],"утешать":["russian"],"утро":["russian"],"уцелеть":["russian"],"участие":["russian"],"ученик":["russian"],"учесть":["russian"],"ущелье":["russian"],"ущерб":["russian"],"уютный":["russian"],"фабрика":["russian"],"фаворит":["russian"],"факел":["russian"],"факт":["russian"],"фамилия":["russian"],"фантазия":["russian"],"фасад":["russian"],"февраль":["russian"],"феномен":["russian"],"фермер":["russian"],"фигура":["russian"],"физика":["russian"],"филиал":["russian"],"философ":["russian"],"фильм":["russian"],"финал":["russian"],"флаг":["russian"],"флот":["russian"],"фойе":["russian"],"фокус":["russian"],"фонарь":["russian"],"фонд":["russian"],"фонтан":["russian"],"форма":["russian"],"форум":["russian"],"фото":["russian"],"фрагмент":["russian"],"фраза":["russian"],"фракция":["russian"],"фронт":["russian"],"фрукт":["russian"],"функция":["russian"],"фуражка":["russian"],"футбол":["russian"],"футляр":["russian"],"халат":["russian"],"хаос":["russian"],"характер":["russian"],"хата":["russian"],"хвалить":["russian"],"хватать":["russian"],"хвойный":["russian"],"хвост":["russian"],"химия":["russian"],"хирург":["russian"],"хитрый":["russian"],"хищник":["russian"],"хлеб":["russian"],"хлынуть":["russian"],"хмурый":["russian"],"ходить":["russian"],"хозяин":["russian"],"хоккей":["russian"],"холм":["russian"],"холст":["russian"],"хорошо":["russian"],"хотеть":["russian"],"храбрый":["russian"],"храм":["russian"],"хранить":["russian"],"хребет":["russian"],"хрен":["russian"],"хрипло":["russian"],"хроника":["russian"],"хрупкий":["russian"],"художник":["russian"],"худший":["russian"],"хулиган":["russian"],"хутор":["russian"],"царь":["russian"],"цветок":["russian"],"целевой":["russian"],"целиком":["russian"],"целое":["russian"],"цель":["russian"],"цензура":["russian"],"ценить":["russian"],"центр":["russian"],"цепной":["russian"],"цикл":["russian"],"цилиндр":["russian"],"цирк":["russian"],"цитата":["russian"],"цифра":["russian"],"чайник":["russian"],"часы":["russian"],"чашка":["russian"],"человек":["russian"],"челюсть":["russian"],"чемодан":["russian"],"чемпион":["russian"],"чепуха":["russian"],"червь":["russian"],"чердак":["russian"],"через":["russian"],"чернила":["russian"],"черта":["russian"],"чеснок":["russian"],"честно":["russian"],"четверть":["russian"],"четыре":["russian"],"число":["russian"],"чистый":["russian"],"читатель":["russian"],"чтение":["russian"],"чтобы":["russian"],"чувство":["russian"],"чудак":["russian"],"чудный":["russian"],"чудо":["russian"],"чужой":["russian"],"чулок":["russian"],"чума":["russian"],"чушь":["russian"],"чуять":["russian"],"шагать":["russian"],"шанс":["russian"],"шапка":["russian"],"шарик":["russian"],"шарф":["russian"],"шахматы":["russian"],"шашлык":["russian"],"шедевр":["russian"],"шептать":["russian"],"шерсть":["russian"],"шестой":["russian"],"шинель":["russian"],"ширина":["russian"],"шишка":["russian"],"шкаф":["russian"],"школа":["russian"],"шкура":["russian"],"шланг":["russian"],"шлем":["russian"],"шнур":["russian"],"шоколад":["russian"],"шорох":["russian"],"шоссе":["russian"],"шпион":["russian"],"шприц":["russian"],"штаб":["russian"],"штамм":["russian"],"штаны":["russian"],"штатный":["russian"],"штора":["russian"],"штраф":["russian"],"штурм":["russian"],"штык":["russian"],"шумно":["russian"],"шуршать":["russian"],"шутить":["russian"],"шутка":["russian"],"щедрый":["russian"],"щека":["russian"],"щенок":["russian"],"экзамен":["russian"],"экипаж":["russian"],"экономия":["russian"],"экран":["russian"],"эксперт":["russian"],"элемент":["russian"],"элитный":["russian"],"эмоция":["russian"],"энергия":["russian"],"эпизод":["russian"],"эпоха":["russian"],"эскиз":["russian"],"эстрада":["russian"],"этап":["russian"],"этика":["russian"],"этот":["russian"],"эфир":["russian"],"эффект":["russian"],"эшелон":["russian"],"юбилей":["russian"],"юбка":["russian"],"южный":["russian"],"юмор":["russian"],"юность":["russian"],"юрист":["russian"],"юстиция":["russian"],"яблоко":["russian"],"явление":["russian"],"ягода":["russian"],"ядро":["russian"],"язык":["russian"],"яйцо":["russian"],"якобы":["russian"],"якорь":["russian"],"январь":["russian"],"яркий":["russian"],"ярмарка":["russian"],"ярость":["russian"],"ясный":["russian"],"яхта":["russian"],"ячейка":["russian"],"ящик":["russian"],"ábaco":["spanish"],"abdomen":["spanish"],"abeja":["spanish"],"abierto":["spanish"],"abogado":["spanish"],"abono":["spanish"],"aborto":["spanish"],"abrazo":["spanish"],"abrir":["spanish"],"abuelo":["spanish"],"abuso":["spanish"],"acabar":["spanish"],"academia":["spanish"],"acceso":["spanish"],"acción":["spanish"],"aceite":["spanish"],"acelga":["spanish"],"acento":["spanish"],"aceptar":["spanish"],"ácido":["spanish"],"aclarar":["spanish"],"acné":["spanish"],"acoger":["spanish"],"acoso":["spanish"],"activo":["spanish"],"acto":["spanish"],"actriz":["spanish"],"actuar":["spanish"],"acudir":["spanish"],"acuerdo":["spanish"],"acusar":["spanish"],"adicto":["spanish"],"admitir":["spanish"],"adoptar":["spanish"],"adorno":["spanish"],"aduana":["spanish"],"adulto":["spanish"],"aéreo":["spanish"],"afectar":["spanish"],"afición":["spanish"],"afinar":["spanish"],"afirmar":["spanish"],"ágil":["spanish"],"agitar":["spanish"],"agonía":["spanish"],"agosto":["spanish"],"agotar":["spanish"],"agregar":["spanish"],"agrio":["spanish"],"agua":["spanish"],"agudo":["spanish"],"águila":["spanish"],"aguja":["spanish"],"ahogo":["spanish"],"ahorro":["spanish"],"aire":["spanish"],"aislar":["spanish"],"ajedrez":["spanish"],"ajeno":["spanish"],"ajuste":["spanish"],"alacrán":["spanish"],"alambre":["spanish"],"alarma":["spanish"],"alba":["spanish"],"álbum":["spanish"],"alcalde":["spanish"],"aldea":["spanish"],"alegre":["spanish"],"alejar":["spanish"],"alerta":["spanish"],"aleta":["spanish"],"alfiler":["spanish"],"alga":["spanish"],"algodón":["spanish"],"aliado":["spanish"],"aliento":["spanish"],"alivio":["spanish"],"alma":["spanish"],"almeja":["spanish"],"almíbar":["spanish"],"altar":["spanish"],"alteza":["spanish"],"altivo":["spanish"],"alto":["spanish"],"altura":["spanish"],"alumno":["spanish"],"alzar":["spanish"],"amable":["spanish"],"amante":["spanish"],"amapola":["spanish"],"amargo":["spanish"],"amasar":["spanish"],"ámbar":["spanish"],"ámbito":["spanish"],"ameno":["spanish"],"amigo":["spanish","turkish"],"amistad":["spanish"],"amor":["spanish"],"amparo":["spanish"],"amplio":["spanish"],"ancho":["spanish"],"anciano":["spanish"],"ancla":["spanish"],"andar":["spanish"],"andén":["spanish"],"anemia":["spanish"],"ángulo":["spanish"],"anillo":["spanish"],"ánimo":["spanish"],"anís":["spanish"],"anotar":["spanish"],"antena":["spanish"],"antiguo":["spanish"],"antojo":["spanish"],"anual":["spanish"],"anular":["spanish"],"anuncio":["spanish"],"añadir":["spanish"],"añejo":["spanish"],"año":["spanish"],"apagar":["spanish"],"aparato":["spanish"],"apetito":["spanish"],"apio":["spanish"],"aplicar":["spanish"],"apodo":["spanish"],"aporte":["spanish"],"apoyo":["spanish"],"aprender":["spanish"],"aprobar":["spanish"],"apuesta":["spanish"],"apuro":["spanish"],"arado":["spanish"],"araña":["spanish"],"arar":["spanish"],"árbitro":["spanish"],"árbol":["spanish"],"arbusto":["spanish"],"archivo":["spanish"],"arco":["spanish"],"arder":["spanish"],"ardilla":["spanish"],"arduo":["spanish"],"área":["spanish"],"árido":["spanish"],"aries":["spanish"],"armonía":["spanish"],"arnés":["spanish"],"aroma":["spanish","turkish"],"arpa":["spanish"],"arpón":["spanish"],"arreglo":["spanish"],"arroz":["spanish"],"arruga":["spanish"],"arte":["spanish"],"artista":["spanish"],"asa":["spanish"],"asado":["spanish"],"asalto":["spanish"],"ascenso":["spanish"],"asegurar":["spanish"],"aseo":["spanish"],"asesor":["spanish"],"asiento":["spanish"],"asilo":["spanish"],"asistir":["spanish"],"asno":["spanish"],"asombro":["spanish"],"áspero":["spanish"],"astilla":["spanish"],"astro":["spanish"],"astuto":["spanish"],"asumir":["spanish"],"asunto":["spanish"],"atajo":["spanish"],"ataque":["spanish"],"atar":["spanish"],"atento":["spanish"],"ateo":["spanish"],"ático":["spanish"],"atleta":["spanish"],"átomo":["spanish"],"atraer":["spanish"],"atroz":["spanish"],"atún":["spanish"],"audaz":["spanish"],"audio":["spanish"],"auge":["spanish"],"aula":["spanish"],"aumento":["spanish"],"ausente":["spanish"],"autor":["spanish"],"aval":["spanish"],"avance":["spanish"],"avaro":["spanish"],"ave":["spanish"],"avellana":["spanish"],"avena":["spanish"],"avestruz":["spanish"],"avión":["spanish"],"aviso":["spanish"],"ayer":["spanish"],"ayuda":["spanish"],"ayuno":["spanish"],"azafrán":["spanish"],"azar":["spanish"],"azote":["spanish"],"azúcar":["spanish"],"azufre":["spanish"],"azul":["spanish"],"baba":["spanish"],"babor":["spanish"],"bache":["spanish"],"bahía":["spanish"],"baile":["spanish"],"bajar":["spanish"],"balanza":["spanish"],"balcón":["spanish"],"balde":["spanish"],"bambú":["spanish"],"banco":["spanish"],"banda":["spanish"],"baño":["spanish"],"barba":["spanish"],"barco":["spanish"],"barniz":["spanish"],"barro":["spanish"],"báscula":["spanish"],"bastón":["spanish"],"basura":["spanish"],"batalla":["spanish"],"batería":["spanish"],"batir":["spanish"],"batuta":["spanish"],"baúl":["spanish"],"bazar":["spanish"],"bebé":["spanish"],"bebida":["spanish"],"bello":["spanish"],"besar":["spanish"],"beso":["spanish"],"bestia":["spanish"],"bicho":["spanish"],"bien":["spanish"],"bingo":["spanish"],"blanco":["spanish"],"bloque":["spanish"],"blusa":["spanish"],"boa":["spanish"],"bobina":["spanish"],"bobo":["spanish"],"boca":["spanish"],"bocina":["spanish"],"boda":["spanish"],"bodega":["spanish"],"boina":["spanish"],"bola":["spanish"],"bolero":["spanish","turkish"],"bolsa":["spanish"],"bomba":["spanish"],"bondad":["spanish"],"bonito":["spanish"],"bono":["spanish"],"bonsái":["spanish"],"borde":["spanish"],"borrar":["spanish"],"bosque":["spanish"],"bote":["spanish"],"botín":["spanish"],"bóveda":["spanish"],"bozal":["spanish"],"bravo":["spanish"],"brazo":["spanish"],"brecha":["spanish"],"breve":["spanish"],"brillo":["spanish"],"brinco":["spanish"],"brisa":["spanish"],"broca":["spanish"],"broma":["spanish"],"bronce":["spanish"],"brote":["spanish"],"bruja":["spanish"],"brusco":["spanish"],"bruto":["spanish"],"buceo":["spanish"],"bucle":["spanish"],"bueno":["spanish"],"buey":["spanish"],"bufanda":["spanish"],"bufón":["spanish"],"búho":["spanish"],"buitre":["spanish"],"bulto":["spanish"],"burbuja":["spanish"],"burla":["spanish"],"burro":["spanish"],"buscar":["spanish"],"butaca":["spanish"],"buzón":["spanish"],"caballo":["spanish"],"cabeza":["spanish"],"cabina":["spanish"],"cabra":["spanish"],"cacao":["spanish"],"cadáver":["spanish"],"cadena":["spanish"],"caer":["spanish"],"café":["spanish"],"caída":["spanish"],"caimán":["spanish"],"caja":["spanish"],"cajón":["spanish"],"cal":["spanish"],"calamar":["spanish"],"calcio":["spanish"],"caldo":["spanish"],"calidad":["spanish"],"calle":["spanish"],"calma":["spanish"],"calor":["spanish"],"calvo":["spanish"],"cama":["spanish"],"cambio":["spanish"],"camello":["spanish"],"camino":["spanish"],"campo":["spanish"],"cáncer":["spanish"],"candil":["spanish"],"canela":["spanish"],"canguro":["spanish"],"canica":["spanish"],"canto":["spanish"],"caña":["spanish"],"cañón":["spanish"],"caoba":["spanish"],"caos":["spanish"],"capaz":["spanish"],"capitán":["spanish"],"capote":["spanish"],"captar":["spanish"],"capucha":["spanish"],"cara":["spanish"],"carbón":["spanish"],"cárcel":["spanish"],"careta":["spanish"],"carga":["spanish"],"cariño":["spanish"],"carne":["spanish"],"carpeta":["spanish"],"carro":["spanish"],"carta":["spanish"],"casa":["spanish"],"casco":["spanish"],"casero":["spanish"],"caspa":["spanish"],"castor":["spanish"],"catorce":["spanish"],"catre":["spanish"],"caudal":["spanish"],"causa":["spanish"],"cazo":["spanish"],"cebolla":["spanish"],"ceder":["spanish"],"cedro":["spanish"],"celda":["spanish"],"célebre":["spanish"],"celoso":["spanish"],"célula":["spanish"],"cemento":["spanish"],"ceniza":["spanish"],"centro":["spanish"],"cerca":["spanish"],"cerdo":["spanish"],"cereza":["spanish"],"cero":["spanish"],"cerrar":["spanish"],"certeza":["spanish"],"césped":["spanish"],"cetro":["spanish"],"chacal":["spanish"],"chaleco":["spanish"],"champú":["spanish"],"chancla":["spanish"],"chapa":["spanish"],"charla":["spanish"],"chico":["spanish"],"chiste":["spanish"],"chivo":["spanish"],"choque":["spanish"],"choza":["spanish"],"chuleta":["spanish"],"chupar":["spanish"],"ciclón":["spanish"],"ciego":["spanish"],"cielo":["spanish"],"cien":["spanish"],"cierto":["spanish"],"cifra":["spanish"],"cigarro":["spanish"],"cima":["spanish"],"cinco":["spanish"],"cine":["spanish"],"cinta":["spanish"],"ciprés":["spanish"],"circo":["spanish"],"ciruela":["spanish"],"cisne":["spanish"],"cita":["spanish"],"ciudad":["spanish"],"clamor":["spanish"],"clan":["spanish"],"claro":["spanish"],"clase":["spanish"],"clave":["spanish"],"cliente":["spanish"],"clima":["spanish"],"clínica":["spanish"],"cobre":["spanish"],"cocción":["spanish"],"cochino":["spanish"],"cocina":["spanish"],"coco":["spanish"],"código":["spanish"],"codo":["spanish"],"cofre":["spanish"],"coger":["spanish"],"cohete":["spanish"],"cojín":["spanish"],"cojo":["spanish"],"cola":["spanish"],"colcha":["spanish"],"colegio":["spanish"],"colgar":["spanish"],"colina":["spanish"],"collar":["spanish"],"colmo":["spanish"],"columna":["spanish"],"combate":["spanish"],"comer":["spanish"],"comida":["spanish"],"cómodo":["spanish"],"compra":["spanish"],"conde":["spanish"],"conejo":["spanish"],"conga":["spanish"],"conocer":["spanish"],"consejo":["spanish"],"contar":["spanish"],"copa":["spanish"],"copia":["spanish"],"corazón":["spanish"],"corbata":["spanish"],"corcho":["spanish"],"cordón":["spanish"],"corona":["spanish"],"correr":["spanish"],"coser":["spanish"],"cosmos":["spanish"],"costa":["spanish"],"cráneo":["spanish"],"cráter":["spanish"],"crear":["spanish"],"crecer":["spanish"],"creído":["spanish"],"crema":["spanish"],"cría":["spanish"],"crimen":["spanish"],"cripta":["spanish"],"crisis":["spanish"],"cromo":["spanish"],"crónica":["spanish"],"croqueta":["spanish"],"crudo":["spanish"],"cruz":["spanish"],"cuadro":["spanish"],"cuarto":["spanish"],"cuatro":["spanish"],"cubo":["spanish"],"cubrir":["spanish"],"cuchara":["spanish"],"cuello":["spanish"],"cuento":["spanish"],"cuerda":["spanish"],"cuesta":["spanish"],"cueva":["spanish"],"cuidar":["spanish"],"culebra":["spanish"],"culpa":["spanish"],"culto":["spanish"],"cumbre":["spanish"],"cumplir":["spanish"],"cuna":["spanish"],"cuneta":["spanish"],"cuota":["spanish"],"cupón":["spanish"],"cúpula":["spanish"],"curar":["spanish"],"curioso":["spanish"],"curso":["spanish"],"curva":["spanish"],"cutis":["spanish"],"dama":["spanish"],"danza":["spanish"],"dar":["spanish"],"dardo":["spanish"],"dátil":["spanish"],"deber":["spanish"],"débil":["spanish"],"década":["spanish"],"decir":["spanish"],"dedo":["spanish"],"defensa":["spanish"],"definir":["spanish"],"dejar":["spanish"],"delfín":["spanish"],"delgado":["spanish"],"delito":["spanish"],"demora":["spanish"],"denso":["spanish"],"dental":["spanish"],"deporte":["spanish"],"derecho":["spanish"],"derrota":["spanish"],"desayuno":["spanish"],"deseo":["spanish"],"desfile":["spanish"],"desnudo":["spanish"],"destino":["spanish"],"desvío":["spanish"],"detalle":["spanish"],"detener":["spanish"],"deuda":["spanish"],"día":["spanish"],"diablo":["spanish"],"diadema":["spanish"],"diamante":["spanish"],"diana":["spanish"],"diario":["spanish"],"dibujo":["spanish"],"dictar":["spanish"],"diente":["spanish"],"dieta":["spanish"],"diez":["spanish"],"difícil":["spanish"],"digno":["spanish"],"dilema":["spanish"],"diluir":["spanish"],"dinero":["spanish"],"directo":["spanish"],"dirigir":["spanish"],"disco":["spanish"],"diseño":["spanish"],"disfraz":["spanish"],"diva":["spanish"],"divino":["spanish"],"doble":["spanish"],"doce":["spanish"],"dolor":["spanish"],"domingo":["spanish"],"don":["spanish"],"donar":["spanish"],"dorado":["spanish"],"dormir":["spanish"],"dorso":["spanish"],"dos":["spanish"],"dosis":["spanish"],"dragón":["spanish"],"droga":["spanish"],"ducha":["spanish"],"duda":["spanish"],"duelo":["spanish"],"dueño":["spanish"],"dulce":["spanish"],"dúo":["spanish"],"duque":["spanish"],"durar":["spanish"],"dureza":["spanish"],"duro":["spanish"],"ébano":["spanish"],"ebrio":["spanish"],"echar":["spanish"],"eco":["spanish"],"ecuador":["spanish"],"edad":["spanish"],"edición":["spanish"],"edificio":["spanish"],"editor":["spanish"],"educar":["spanish"],"efecto":["spanish"],"eficaz":["spanish"],"eje":["spanish"],"ejemplo":["spanish"],"elefante":["spanish"],"elegir":["spanish"],"elemento":["spanish"],"elevar":["spanish"],"elipse":["spanish"],"élite":["spanish"],"elixir":["spanish"],"elogio":["spanish"],"eludir":["spanish"],"embudo":["spanish"],"emitir":["spanish"],"emoción":["spanish"],"empate":["spanish"],"empeño":["spanish"],"empleo":["spanish"],"empresa":["spanish"],"enano":["spanish"],"encargo":["spanish"],"enchufe":["spanish"],"encía":["spanish"],"enemigo":["spanish"],"enero":["spanish"],"enfado":["spanish"],"enfermo":["spanish"],"engaño":["spanish"],"enigma":["spanish"],"enlace":["spanish"],"enorme":["spanish"],"enredo":["spanish"],"ensayo":["spanish"],"enseñar":["spanish"],"entero":["spanish"],"entrar":["spanish"],"envase":["spanish"],"envío":["spanish"],"época":["spanish"],"equipo":["spanish"],"erizo":["spanish"],"escala":["spanish"],"escena":["spanish"],"escolar":["spanish"],"escribir":["spanish"],"escudo":["spanish"],"esencia":["spanish"],"esfera":["spanish"],"esfuerzo":["spanish"],"espada":["spanish"],"espejo":["spanish"],"espía":["spanish"],"esposa":["spanish"],"espuma":["spanish"],"esquí":["spanish"],"estar":["spanish"],"este":["spanish"],"estilo":["spanish"],"estufa":["spanish"],"etapa":["spanish"],"eterno":["spanish"],"ética":["spanish"],"etnia":["spanish"],"evadir":["spanish"],"evaluar":["spanish"],"evento":["spanish"],"evitar":["spanish"],"exacto":["spanish"],"examen":["spanish"],"exceso":["spanish"],"excusa":["spanish"],"exento":["spanish"],"exigir":["spanish"],"exilio":["spanish"],"existir":["spanish"],"éxito":["spanish"],"experto":["spanish"],"explicar":["spanish"],"exponer":["spanish"],"extremo":["spanish"],"fábrica":["spanish"],"fábula":["spanish"],"fachada":["spanish"],"fácil":["spanish"],"factor":["spanish"],"faena":["spanish"],"faja":["spanish"],"falda":["spanish"],"fallo":["spanish"],"falso":["spanish"],"faltar":["spanish"],"fama":["spanish"],"familia":["spanish"],"famoso":["spanish"],"faraón":["spanish"],"farmacia":["spanish"],"farol":["spanish"],"farsa":["spanish"],"fase":["spanish"],"fatiga":["spanish"],"fauna":["spanish","turkish"],"favor":["spanish"],"fax":["spanish"],"febrero":["spanish"],"fecha":["spanish"],"feliz":["spanish"],"feo":["spanish"],"feria":["spanish"],"feroz":["spanish"],"fértil":["spanish"],"fervor":["spanish"],"festín":["spanish"],"fiable":["spanish"],"fianza":["spanish"],"fiar":["spanish"],"fibra":["spanish"],"ficción":["spanish"],"ficha":["spanish"],"fideo":["spanish"],"fiebre":["spanish"],"fiel":["spanish"],"fiera":["spanish"],"fiesta":["spanish"],"figura":["spanish"],"fijar":["spanish"],"fijo":["spanish"],"fila":["spanish"],"filete":["spanish"],"filial":["spanish"],"filtro":["spanish"],"fin":["spanish"],"finca":["spanish"],"fingir":["spanish"],"finito":["spanish"],"firma":["spanish"],"flaco":["spanish"],"flauta":["spanish"],"flecha":["spanish"],"flor":["spanish"],"flota":["spanish"],"fluir":["spanish"],"flujo":["spanish"],"flúor":["spanish"],"fobia":["spanish"],"foca":["spanish"],"fogata":["spanish"],"fogón":["spanish"],"folio":["spanish"],"folleto":["spanish"],"fondo":["spanish"],"forma":["spanish"],"forro":["spanish"],"fortuna":["spanish"],"forzar":["spanish"],"fosa":["spanish"],"foto":["spanish"],"fracaso":["spanish"],"frágil":["spanish"],"franja":["spanish"],"frase":["spanish"],"fraude":["spanish"],"freír":["spanish"],"freno":["spanish"],"fresa":["spanish"],"frío":["spanish"],"frito":["spanish"],"fruta":["spanish"],"fuego":["spanish"],"fuente":["spanish"],"fuerza":["spanish"],"fuga":["spanish"],"fumar":["spanish"],"función":["spanish"],"funda":["spanish"],"furgón":["spanish"],"furia":["spanish"],"fusil":["spanish"],"fútbol":["spanish"],"futuro":["spanish"],"gacela":["spanish"],"gafas":["spanish"],"gaita":["spanish"],"gajo":["spanish"],"gala":["spanish"],"galería":["spanish"],"gallo":["spanish"],"gamba":["spanish"],"ganar":["spanish"],"gancho":["spanish"],"ganga":["spanish"],"ganso":["spanish"],"garaje":["spanish"],"garza":["spanish"],"gasolina":["spanish"],"gastar":["spanish"],"gato":["spanish"],"gavilán":["spanish"],"gemelo":["spanish"],"gemir":["spanish"],"gen":["spanish"],"género":["spanish"],"genio":["spanish"],"gente":["spanish"],"geranio":["spanish"],"gerente":["spanish"],"germen":["spanish"],"gesto":["spanish"],"gigante":["spanish"],"gimnasio":["spanish"],"girar":["spanish"],"giro":["spanish"],"glaciar":["spanish"],"globo":["spanish"],"gloria":["spanish"],"gol":["spanish"],"golfo":["spanish"],"goloso":["spanish"],"golpe":["spanish"],"goma":["spanish"],"gordo":["spanish"],"gorila":["spanish"],"gorra":["spanish"],"gota":["spanish"],"goteo":["spanish"],"gozar":["spanish"],"grada":["spanish"],"gráfico":["spanish"],"grano":["spanish"],"grasa":["spanish"],"gratis":["spanish"],"grave":["spanish"],"grieta":["spanish"],"grillo":["spanish"],"gripe":["spanish"],"gris":["spanish"],"grito":["spanish"],"grosor":["spanish"],"grúa":["spanish"],"grueso":["spanish"],"grumo":["spanish"],"grupo":["spanish"],"guante":["spanish"],"guapo":["spanish"],"guardia":["spanish"],"guerra":["spanish"],"guía":["spanish"],"guiño":["spanish"],"guion":["spanish"],"guiso":["spanish"],"guitarra":["spanish"],"gusano":["spanish"],"gustar":["spanish"],"haber":["spanish","turkish"],"hábil":["spanish"],"hablar":["spanish"],"hacer":["spanish"],"hacha":["spanish"],"hada":["spanish"],"hallar":["spanish"],"hamaca":["spanish"],"harina":["spanish"],"haz":["spanish"],"hazaña":["spanish"],"hebilla":["spanish"],"hebra":["spanish"],"hecho":["spanish"],"helado":["spanish"],"helio":["spanish"],"hembra":["spanish"],"herir":["spanish"],"hermano":["spanish"],"héroe":["spanish"],"hervir":["spanish"],"hielo":["spanish"],"hierro":["spanish"],"hígado":["spanish"],"higiene":["spanish"],"hijo":["spanish"],"himno":["spanish"],"historia":["spanish"],"hocico":["spanish"],"hogar":["spanish"],"hoguera":["spanish"],"hoja":["spanish"],"hombre":["spanish"],"hongo":["spanish"],"honor":["spanish"],"honra":["spanish"],"hora":["spanish"],"hormiga":["spanish"],"horno":["spanish"],"hostil":["spanish"],"hoyo":["spanish"],"hueco":["spanish"],"huelga":["spanish"],"huerta":["spanish"],"hueso":["spanish"],"huevo":["spanish"],"huida":["spanish"],"huir":["spanish"],"humano":["spanish"],"húmedo":["spanish"],"humilde":["spanish"],"humo":["spanish"],"hundir":["spanish"],"huracán":["spanish"],"hurto":["spanish"],"icono":["spanish"],"ideal":["spanish"],"idioma":["spanish"],"ídolo":["spanish"],"iglesia":["spanish"],"iglú":["spanish"],"igual":["spanish"],"ilegal":["spanish"],"ilusión":["spanish"],"imagen":["spanish"],"imán":["spanish"],"imitar":["spanish"],"impar":["spanish"],"imperio":["spanish"],"imponer":["spanish"],"impulso":["spanish"],"incapaz":["spanish"],"índice":["spanish"],"inerte":["spanish"],"infiel":["spanish"],"informe":["spanish"],"ingenio":["spanish"],"inicio":["spanish"],"inmenso":["spanish"],"inmune":["spanish"],"innato":["spanish"],"insecto":["spanish"],"instante":["spanish"],"interés":["spanish"],"íntimo":["spanish"],"intuir":["spanish"],"inútil":["spanish"],"invierno":["spanish"],"ira":["spanish"],"iris":["spanish"],"ironía":["spanish"],"isla":["spanish"],"islote":["spanish"],"jabalí":["spanish"],"jabón":["spanish"],"jamón":["spanish"],"jarabe":["spanish"],"jardín":["spanish"],"jarra":["spanish"],"jaula":["spanish"],"jazmín":["spanish"],"jefe":["spanish"],"jeringa":["spanish"],"jinete":["spanish"],"jornada":["spanish"],"joroba":["spanish"],"joven":["spanish"],"joya":["spanish"],"juerga":["spanish"],"jueves":["spanish"],"juez":["spanish"],"jugador":["spanish"],"jugo":["spanish"],"juguete":["spanish"],"juicio":["spanish"],"junco":["spanish"],"jungla":["spanish"],"junio":["spanish"],"juntar":["spanish"],"júpiter":["spanish"],"jurar":["spanish"],"justo":["spanish"],"juvenil":["spanish"],"juzgar":["spanish"],"kilo":["spanish"],"koala":["spanish"],"labio":["spanish"],"lacio":["spanish"],"lacra":["spanish"],"lado":["spanish"],"ladrón":["spanish"],"lagarto":["spanish"],"lágrima":["spanish"],"laguna":["spanish"],"laico":["spanish"],"lamer":["spanish"],"lámina":["spanish"],"lámpara":["spanish"],"lana":["spanish"],"lancha":["spanish"],"langosta":["spanish"],"lanza":["spanish"],"lápiz":["spanish"],"largo":["spanish"],"larva":["spanish"],"lástima":["spanish"],"lata":["spanish"],"látex":["spanish"],"latir":["spanish"],"laurel":["spanish"],"lavar":["spanish"],"lazo":["spanish"],"leal":["spanish"],"lección":["spanish"],"leche":["spanish"],"lector":["spanish"],"leer":["spanish"],"legión":["spanish"],"legumbre":["spanish"],"lejano":["spanish"],"lengua":["spanish"],"lento":["spanish"],"leña":["spanish"],"león":["spanish"],"leopardo":["spanish"],"lesión":["spanish"],"letal":["spanish"],"letra":["spanish"],"leve":["spanish"],"leyenda":["spanish"],"libertad":["spanish"],"libro":["spanish"],"licor":["spanish"],"líder":["spanish"],"lidiar":["spanish"],"lienzo":["spanish"],"liga":["spanish"],"ligero":["spanish"],"lima":["spanish"],"límite":["spanish"],"limón":["spanish"],"limpio":["spanish"],"lince":["spanish"],"lindo":["spanish"],"línea":["spanish"],"lingote":["spanish"],"lino":["spanish"],"linterna":["spanish"],"líquido":["spanish"],"liso":["spanish"],"lista":["spanish"],"litera":["spanish"],"litio":["spanish"],"litro":["spanish"],"llaga":["spanish"],"llama":["spanish"],"llanto":["spanish"],"llave":["spanish"],"llegar":["spanish"],"llenar":["spanish"],"llevar":["spanish"],"llorar":["spanish"],"llover":["spanish"],"lluvia":["spanish"],"lobo":["spanish"],"loción":["spanish"],"loco":["spanish"],"locura":["spanish"],"lógica":["spanish"],"logro":["spanish"],"lombriz":["spanish"],"lomo":["spanish"],"lonja":["spanish"],"lote":["spanish"],"lucha":["spanish"],"lucir":["spanish"],"lugar":["spanish"],"lujo":["spanish"],"luna":["spanish"],"lunes":["spanish"],"lupa":["spanish"],"lustro":["spanish"],"luto":["spanish"],"luz":["spanish"],"maceta":["spanish"],"macho":["spanish"],"madera":["spanish"],"madre":["spanish"],"maduro":["spanish"],"maestro":["spanish"],"mafia":["spanish"],"magia":["spanish"],"mago":["spanish"],"maíz":["spanish"],"maldad":["spanish"],"maleta":["spanish"],"malla":["spanish"],"malo":["spanish"],"mamá":["spanish"],"mambo":["spanish"],"mamut":["spanish"],"manco":["spanish"],"mando":["spanish"],"manejar":["spanish"],"manga":["spanish"],"maniquí":["spanish"],"manjar":["spanish"],"mano":["spanish"],"manso":["spanish"],"manta":["spanish"],"mañana":["spanish"],"mapa":["spanish"],"máquina":["spanish"],"mar":["spanish"],"marco":["spanish"],"marea":["spanish"],"marfil":["spanish"],"margen":["spanish"],"marido":["spanish"],"mármol":["spanish"],"marrón":["spanish"],"martes":["spanish"],"marzo":["spanish"],"masa":["spanish"],"máscara":["spanish"],"masivo":["spanish"],"matar":["spanish"],"materia":["spanish"],"matiz":["spanish"],"matriz":["spanish"],"máximo":["spanish"],"mayor":["spanish"],"mazorca":["spanish"],"mecha":["spanish"],"medalla":["spanish"],"medio":["spanish"],"médula":["spanish"],"mejilla":["spanish"],"mejor":["spanish"],"melena":["spanish"],"melón":["spanish"],"memoria":["spanish"],"menor":["spanish"],"mensaje":["spanish"],"mente":["spanish"],"menú":["spanish"],"mercado":["spanish"],"merengue":["spanish"],"mérito":["spanish"],"mes":["spanish"],"mesón":["spanish"],"meta":["spanish"],"meter":["spanish"],"método":["spanish"],"metro":["spanish"],"mezcla":["spanish"],"miedo":["spanish"],"miel":["spanish"],"miembro":["spanish"],"miga":["spanish"],"mil":["spanish"],"milagro":["spanish"],"militar":["spanish"],"millón":["spanish"],"mimo":["spanish"],"mina":["spanish"],"minero":["spanish"],"mínimo":["spanish"],"minuto":["spanish"],"miope":["spanish"],"mirar":["spanish"],"misa":["spanish"],"miseria":["spanish"],"misil":["spanish"],"mismo":["spanish"],"mitad":["spanish"],"mito":["spanish"],"mochila":["spanish"],"moción":["spanish"],"moda":["spanish"],"modelo":["spanish"],"moho":["spanish"],"mojar":["spanish"],"molde":["spanish"],"moler":["spanish"],"molino":["spanish"],"momento":["spanish"],"momia":["spanish"],"monarca":["spanish"],"moneda":["spanish"],"monja":["spanish"],"monto":["spanish"],"moño":["spanish"],"morada":["spanish"],"morder":["spanish"],"moreno":["spanish"],"morir":["spanish"],"morro":["spanish"],"morsa":["spanish"],"mortal":["spanish"],"mosca":["spanish"],"mostrar":["spanish"],"motivo":["spanish"],"mover":["spanish"],"móvil":["spanish"],"mozo":["spanish"],"mucho":["spanish"],"mudar":["spanish"],"mueble":["spanish"],"muela":["spanish"],"muerte":["spanish"],"muestra":["spanish"],"mugre":["spanish"],"mujer":["spanish"],"mula":["spanish"],"muleta":["spanish"],"multa":["spanish"],"mundo":["spanish"],"muñeca":["spanish"],"mural":["spanish"],"muro":["spanish"],"músculo":["spanish"],"museo":["spanish"],"musgo":["spanish"],"música":["spanish"],"muslo":["spanish"],"nácar":["spanish"],"nación":["spanish"],"nadar":["spanish"],"naipe":["spanish"],"naranja":["spanish"],"nariz":["spanish"],"narrar":["spanish"],"nasal":["spanish"],"natal":["spanish"],"nativo":["spanish"],"natural":["spanish"],"náusea":["spanish"],"naval":["spanish"],"nave":["spanish"],"navidad":["spanish"],"necio":["spanish"],"néctar":["spanish"],"negar":["spanish"],"negocio":["spanish"],"negro":["spanish"],"neón":["spanish"],"nervio":["spanish"],"neto":["spanish"],"neutro":["spanish"],"nevar":["spanish"],"nevera":["spanish"],"nicho":["spanish"],"nido":["spanish"],"niebla":["spanish"],"nieto":["spanish"],"niñez":["spanish"],"niño":["spanish"],"nítido":["spanish"],"nivel":["spanish"],"nobleza":["spanish"],"noche":["spanish"],"nómina":["spanish"],"noria":["spanish"],"norma":["spanish"],"norte":["spanish"],"nota":["spanish"],"noticia":["spanish"],"novato":["spanish"],"novela":["spanish"],"novio":["spanish"],"nube":["spanish"],"nuca":["spanish"],"núcleo":["spanish"],"nudillo":["spanish"],"nudo":["spanish"],"nuera":["spanish"],"nueve":["spanish"],"nuez":["spanish"],"nulo":["spanish"],"número":["spanish"],"nutria":["spanish"],"oasis":["spanish"],"obeso":["spanish"],"obispo":["spanish"],"objeto":["spanish"],"obra":["spanish"],"obrero":["spanish"],"observar":["spanish"],"obtener":["spanish"],"obvio":["spanish"],"oca":["spanish"],"ocaso":["spanish"],"océano":["spanish"],"ochenta":["spanish"],"ocho":["spanish"],"ocio":["spanish"],"ocre":["spanish"],"octavo":["spanish"],"octubre":["spanish"],"oculto":["spanish"],"ocupar":["spanish"],"ocurrir":["spanish"],"odiar":["spanish"],"odio":["spanish"],"odisea":["spanish"],"oeste":["spanish"],"ofensa":["spanish"],"oferta":["spanish"],"oficio":["spanish"],"ofrecer":["spanish"],"ogro":["spanish"],"oído":["spanish"],"oír":["spanish"],"ojo":["spanish"],"ola":["spanish"],"oleada":["spanish"],"olfato":["spanish"],"olivo":["spanish"],"olla":["spanish"],"olmo":["spanish"],"olor":["spanish"],"olvido":["spanish"],"ombligo":["spanish"],"onda":["spanish"],"onza":["spanish"],"opaco":["spanish"],"opción":["spanish"],"ópera":["spanish"],"opinar":["spanish"],"oponer":["spanish"],"optar":["spanish"],"óptica":["spanish"],"opuesto":["spanish"],"oración":["spanish"],"orador":["spanish"],"oral":["spanish","turkish"],"órbita":["spanish"],"orca":["spanish"],"orden":["spanish"],"oreja":["spanish"],"órgano":["spanish"],"orgía":["spanish"],"orgullo":["spanish"],"oriente":["spanish"],"origen":["spanish"],"orilla":["spanish"],"oro":["spanish"],"orquesta":["spanish"],"oruga":["spanish"],"osadía":["spanish"],"oscuro":["spanish"],"osezno":["spanish"],"oso":["spanish"],"ostra":["spanish"],"otoño":["spanish"],"otro":["spanish"],"oveja":["spanish"],"óvulo":["spanish"],"óxido":["spanish"],"oxígeno":["spanish"],"oyente":["spanish"],"ozono":["spanish"],"pacto":["spanish"],"padre":["spanish"],"paella":["spanish"],"página":["spanish"],"pago":["spanish"],"país":["spanish"],"pájaro":["spanish"],"palabra":["spanish"],"palco":["spanish"],"paleta":["spanish"],"pálido":["spanish"],"palma":["spanish"],"paloma":["spanish"],"palpar":["spanish"],"pan":["spanish"],"panal":["spanish"],"pánico":["spanish"],"pantera":["spanish"],"pañuelo":["spanish"],"papá":["spanish"],"papel":["spanish"],"papilla":["spanish"],"paquete":["spanish"],"parar":["spanish"],"parcela":["spanish"],"pared":["spanish"],"parir":["spanish"],"paro":["spanish"],"párpado":["spanish"],"parque":["spanish"],"párrafo":["spanish"],"parte":["spanish"],"pasar":["spanish"],"paseo":["spanish"],"pasión":["spanish"],"paso":["spanish"],"pasta":["spanish"],"pata":["spanish"],"patio":["spanish"],"patria":["spanish"],"pausa":["spanish"],"pauta":["spanish"],"pavo":["spanish"],"payaso":["spanish"],"peatón":["spanish"],"pecado":["spanish"],"pecera":["spanish"],"pecho":["spanish"],"pedal":["spanish","turkish"],"pedir":["spanish"],"pegar":["spanish"],"peine":["spanish"],"pelar":["spanish"],"peldaño":["spanish"],"pelea":["spanish"],"peligro":["spanish"],"pellejo":["spanish"],"pelo":["spanish"],"peluca":["spanish"],"pena":["spanish","turkish"],"pensar":["spanish"],"peñón":["spanish"],"peón":["spanish"],"peor":["spanish"],"pepino":["spanish"],"pequeño":["spanish"],"pera":["spanish"],"percha":["spanish"],"perder":["spanish"],"pereza":["spanish"],"perfil":["spanish"],"perico":["spanish"],"perla":["spanish"],"permiso":["spanish"],"perro":["spanish"],"persona":["spanish"],"pesa":["spanish"],"pesca":["spanish"],"pésimo":["spanish"],"pestaña":["spanish"],"pétalo":["spanish"],"petróleo":["spanish"],"pez":["spanish"],"pezuña":["spanish"],"picar":["spanish"],"pichón":["spanish"],"pie":["spanish"],"piedra":["spanish"],"pierna":["spanish"],"pieza":["spanish"],"pijama":["spanish"],"pilar":["spanish"],"piloto":["spanish"],"pimienta":["spanish"],"pino":["spanish"],"pintor":["spanish"],"pinza":["spanish"],"piña":["spanish"],"piojo":["spanish"],"pipa":["spanish"],"pirata":["spanish"],"pisar":["spanish"],"piscina":["spanish"],"piso":["spanish"],"pista":["spanish"],"pitón":["spanish"],"pizca":["spanish"],"placa":["spanish"],"plan":["spanish"],"plata":["spanish"],"playa":["spanish"],"plaza":["spanish"],"pleito":["spanish"],"pleno":["spanish"],"plomo":["spanish"],"pluma":["spanish"],"plural":["spanish"],"pobre":["spanish"],"poco":["spanish"],"poder":["spanish"],"podio":["spanish"],"poema":["spanish"],"poesía":["spanish"],"poeta":["spanish"],"polen":["spanish","turkish"],"policía":["spanish"],"pollo":["spanish"],"polvo":["spanish"],"pomada":["spanish"],"pomelo":["spanish"],"pomo":["spanish"],"pompa":["spanish","turkish"],"poner":["spanish"],"porción":["spanish"],"portal":["spanish"],"posada":["spanish"],"poseer":["spanish"],"posible":["spanish"],"poste":["spanish"],"potencia":["spanish"],"potro":["spanish"],"pozo":["spanish"],"prado":["spanish"],"precoz":["spanish"],"pregunta":["spanish"],"premio":["spanish"],"prensa":["spanish"],"preso":["spanish"],"previo":["spanish"],"primo":["spanish"],"príncipe":["spanish"],"prisión":["spanish"],"privar":["spanish"],"proa":["spanish"],"probar":["spanish"],"proceso":["spanish"],"producto":["spanish"],"proeza":["spanish"],"profesor":["spanish"],"programa":["spanish"],"prole":["spanish"],"promesa":["spanish"],"pronto":["spanish"],"propio":["spanish"],"próximo":["spanish"],"prueba":["spanish"],"público":["spanish"],"puchero":["spanish"],"pudor":["spanish"],"pueblo":["spanish"],"puerta":["spanish"],"puesto":["spanish"],"pulga":["spanish"],"pulir":["spanish"],"pulmón":["spanish"],"pulpo":["spanish"],"pulso":["spanish"],"puma":["spanish"],"punto":["spanish"],"puñal":["spanish"],"puño":["spanish"],"pupa":["spanish"],"pupila":["spanish"],"puré":["spanish"],"quedar":["spanish"],"queja":["spanish"],"quemar":["spanish"],"querer":["spanish"],"queso":["spanish"],"quieto":["spanish"],"química":["spanish"],"quince":["spanish"],"quitar":["spanish"],"rábano":["spanish"],"rabia":["spanish"],"rabo":["spanish"],"ración":["spanish"],"radical":["spanish"],"raíz":["spanish"],"rama":["spanish"],"rampa":["spanish","turkish"],"rancho":["spanish"],"rango":["spanish"],"rapaz":["spanish"],"rápido":["spanish"],"rapto":["spanish"],"rasgo":["spanish"],"raspa":["spanish"],"rato":["spanish"],"rayo":["spanish"],"raza":["spanish"],"razón":["spanish"],"reacción":["spanish"],"realidad":["spanish"],"rebaño":["spanish"],"rebote":["spanish"],"recaer":["spanish"],"receta":["spanish"],"rechazo":["spanish"],"recoger":["spanish"],"recreo":["spanish"],"recto":["spanish"],"recurso":["spanish"],"red":["spanish"],"redondo":["spanish"],"reducir":["spanish"],"reflejo":["spanish"],"reforma":["spanish"],"refrán":["spanish"],"refugio":["spanish"],"regalo":["spanish"],"regir":["spanish"],"regla":["spanish"],"regreso":["spanish"],"rehén":["spanish"],"reino":["spanish"],"reír":["spanish"],"reja":["spanish"],"relato":["spanish"],"relevo":["spanish"],"relieve":["spanish"],"relleno":["spanish"],"reloj":["spanish"],"remar":["spanish"],"remedio":["spanish"],"remo":["spanish"],"rencor":["spanish"],"rendir":["spanish"],"renta":["spanish"],"reparto":["spanish"],"repetir":["spanish"],"reposo":["spanish"],"reptil":["spanish"],"res":["spanish"],"rescate":["spanish"],"resina":["spanish"],"respeto":["spanish"],"resto":["spanish"],"resumen":["spanish"],"retiro":["spanish"],"retorno":["spanish"],"retrato":["spanish"],"reunir":["spanish"],"revés":["spanish"],"revista":["spanish"],"rey":["spanish"],"rezar":["spanish"],"rico":["spanish"],"riego":["spanish"],"rienda":["spanish"],"riesgo":["spanish"],"rifa":["spanish"],"rígido":["spanish"],"rigor":["spanish"],"rincón":["spanish"],"riñón":["spanish"],"río":["spanish"],"riqueza":["spanish"],"risa":["spanish"],"ritmo":["spanish"],"rito":["spanish"],"rizo":["spanish"],"roble":["spanish"],"roce":["spanish"],"rociar":["spanish"],"rodar":["spanish"],"rodeo":["spanish"],"rodilla":["spanish"],"roer":["spanish"],"rojizo":["spanish"],"rojo":["spanish"],"romero":["spanish"],"romper":["spanish"],"ron":["spanish"],"ronco":["spanish"],"ronda":["spanish"],"ropa":["spanish"],"ropero":["spanish"],"rosa":["spanish"],"rosca":["spanish"],"rostro":["spanish"],"rotar":["spanish"],"rubí":["spanish"],"rubor":["spanish"],"rudo":["spanish"],"rueda":["spanish"],"rugir":["spanish"],"ruido":["spanish"],"ruina":["spanish"],"ruleta":["spanish"],"rulo":["spanish","turkish"],"rumbo":["spanish"],"rumor":["spanish"],"ruptura":["spanish"],"ruta":["spanish"],"rutina":["spanish"],"sábado":["spanish"],"saber":["spanish"],"sabio":["spanish"],"sable":["spanish"],"sacar":["spanish"],"sagaz":["spanish"],"sagrado":["spanish"],"sala":["spanish"],"saldo":["spanish"],"salero":["spanish"],"salir":["spanish"],"salmón":["spanish"],"salón":["spanish"],"salsa":["spanish"],"salto":["spanish"],"salud":["spanish"],"salvar":["spanish"],"samba":["spanish"],"sanción":["spanish"],"sandía":["spanish"],"sanear":["spanish"],"sangre":["spanish"],"sanidad":["spanish"],"sano":["spanish"],"santo":["spanish"],"sapo":["spanish"],"saque":["spanish"],"sardina":["spanish"],"sartén":["spanish"],"sastre":["spanish"],"satán":["spanish"],"sauna":["spanish"],"saxofón":["spanish"],"sección":["spanish"],"seco":["spanish"],"secreto":["spanish"],"secta":["spanish"],"sed":["spanish"],"seguir":["spanish"],"seis":["spanish"],"sello":["spanish"],"selva":["spanish"],"semana":["spanish"],"semilla":["spanish"],"senda":["spanish"],"sensor":["spanish"],"señal":["spanish"],"señor":["spanish"],"separar":["spanish"],"sepia":["spanish"],"sequía":["spanish"],"ser":["spanish"],"serie":["spanish"],"sermón":["spanish"],"servir":["spanish"],"sesenta":["spanish"],"sesión":["spanish"],"seta":["spanish"],"setenta":["spanish"],"severo":["spanish"],"sexo":["spanish"],"sexto":["spanish"],"sidra":["spanish"],"siesta":["spanish"],"siete":["spanish"],"siglo":["spanish"],"signo":["spanish"],"sílaba":["spanish"],"silbar":["spanish"],"silencio":["spanish"],"silla":["spanish"],"símbolo":["spanish"],"simio":["spanish"],"sirena":["spanish"],"sistema":["spanish"],"sitio":["spanish"],"situar":["spanish"],"sobre":["spanish"],"socio":["spanish"],"sodio":["spanish"],"sol":["spanish"],"solapa":["spanish"],"soldado":["spanish"],"soledad":["spanish"],"sólido":["spanish"],"soltar":["spanish"],"solución":["spanish"],"sombra":["spanish"],"sondeo":["spanish"],"sonido":["spanish"],"sonoro":["spanish"],"sonrisa":["spanish"],"sopa":["spanish"],"soplar":["spanish"],"soporte":["spanish"],"sordo":["spanish"],"sorpresa":["spanish"],"sorteo":["spanish"],"sostén":["spanish"],"sótano":["spanish"],"suave":["spanish"],"subir":["spanish"],"suceso":["spanish"],"sudor":["spanish"],"suegra":["spanish"],"suelo":["spanish"],"sueño":["spanish"],"suerte":["spanish"],"sufrir":["spanish"],"sujeto":["spanish"],"sultán":["spanish"],"sumar":["spanish"],"superar":["spanish"],"suplir":["spanish"],"suponer":["spanish"],"supremo":["spanish"],"sur":["spanish"],"surco":["spanish"],"sureño":["spanish"],"surgir":["spanish"],"susto":["spanish"],"sutil":["spanish"],"tabaco":["spanish"],"tabique":["spanish"],"tabla":["spanish"],"tabú":["spanish"],"taco":["spanish"],"tacto":["spanish"],"tajo":["spanish"],"talar":["spanish"],"talco":["spanish"],"talento":["spanish"],"talla":["spanish"],"talón":["spanish"],"tamaño":["spanish"],"tambor":["spanish"],"tango":["spanish"],"tanque":["spanish"],"tapa":["spanish"],"tapete":["spanish"],"tapia":["spanish"],"tapón":["spanish"],"taquilla":["spanish"],"tarde":["spanish"],"tarea":["spanish"],"tarifa":["spanish"],"tarjeta":["spanish"],"tarot":["spanish"],"tarro":["spanish"],"tarta":["spanish"],"tatuaje":["spanish"],"tauro":["spanish"],"taza":["spanish"],"tazón":["spanish"],"teatro":["spanish"],"techo":["spanish"],"tecla":["spanish"],"técnica":["spanish"],"tejado":["spanish"],"tejer":["spanish"],"tejido":["spanish"],"tela":["spanish"],"teléfono":["spanish"],"tema":["spanish"],"temor":["spanish"],"templo":["spanish"],"tenaz":["spanish"],"tender":["spanish"],"tener":["spanish"],"tenis":["spanish"],"tenso":["spanish"],"teoría":["spanish"],"terapia":["spanish"],"terco":["spanish"],"término":["spanish"],"ternura":["spanish"],"terror":["spanish"],"tesis":["spanish"],"tesoro":["spanish"],"testigo":["spanish"],"tetera":["spanish"],"texto":["spanish"],"tez":["spanish"],"tibio":["spanish"],"tiburón":["spanish"],"tiempo":["spanish"],"tienda":["spanish"],"tierra":["spanish"],"tieso":["spanish"],"tigre":["spanish"],"tijera":["spanish"],"tilde":["spanish"],"timbre":["spanish"],"tímido":["spanish"],"timo":["spanish"],"tinta":["spanish"],"tío":["spanish"],"típico":["spanish"],"tipo":["spanish"],"tira":["spanish"],"tirón":["spanish"],"titán":["spanish"],"títere":["spanish"],"título":["spanish"],"tiza":["spanish"],"toalla":["spanish"],"tobillo":["spanish"],"tocar":["spanish"],"tocino":["spanish"],"todo":["spanish"],"toga":["spanish"],"toldo":["spanish"],"tomar":["spanish","turkish"],"tono":["spanish"],"tonto":["spanish"],"topar":["spanish"],"tope":["spanish"],"toque":["spanish"],"tórax":["spanish"],"torero":["spanish"],"tormenta":["spanish"],"torneo":["spanish"],"toro":["spanish"],"torpedo":["spanish"],"torre":["spanish"],"torso":["spanish"],"tortuga":["spanish"],"tos":["spanish"],"tosco":["spanish"],"toser":["spanish"],"tóxico":["spanish"],"trabajo":["spanish"],"tractor":["spanish"],"traer":["spanish"],"tráfico":["spanish"],"trago":["spanish"],"traje":["spanish"],"tramo":["spanish"],"trance":["spanish"],"trato":["spanish"],"trauma":["spanish"],"trazar":["spanish"],"trébol":["spanish"],"tregua":["spanish"],"treinta":["spanish"],"tren":["spanish"],"trepar":["spanish"],"tres":["spanish"],"tribu":["spanish"],"trigo":["spanish"],"tripa":["spanish"],"triste":["spanish"],"triunfo":["spanish"],"trofeo":["spanish"],"trompa":["spanish"],"tronco":["spanish"],"tropa":["spanish"],"trote":["spanish"],"trozo":["spanish"],"truco":["spanish"],"trueno":["spanish"],"trufa":["spanish"],"tubería":["spanish"],"tubo":["spanish"],"tuerto":["spanish"],"tumba":["spanish"],"tumor":["spanish"],"túnel":["spanish"],"túnica":["spanish"],"turbina":["spanish"],"turismo":["spanish"],"turno":["spanish"],"tutor":["spanish"],"ubicar":["spanish"],"úlcera":["spanish"],"umbral":["spanish"],"unidad":["spanish"],"unir":["spanish"],"universo":["spanish"],"uno":["spanish"],"untar":["spanish"],"uña":["spanish"],"urbano":["spanish"],"urbe":["spanish"],"urgente":["spanish"],"urna":["spanish"],"usar":["spanish"],"usuario":["spanish"],"útil":["spanish"],"utopía":["spanish"],"uva":["spanish"],"vaca":["spanish"],"vacío":["spanish"],"vacuna":["spanish"],"vagar":["spanish"],"vago":["spanish"],"vaina":["spanish"],"vajilla":["spanish"],"vale":["spanish"],"válido":["spanish"],"valle":["spanish"],"valor":["spanish"],"válvula":["spanish"],"vampiro":["spanish"],"vara":["spanish"],"variar":["spanish"],"varón":["spanish"],"vaso":["spanish"],"vecino":["spanish"],"vector":["spanish"],"vehículo":["spanish"],"veinte":["spanish"],"vejez":["spanish"],"vela":["spanish"],"velero":["spanish"],"veloz":["spanish"],"vena":["spanish"],"vencer":["spanish"],"venda":["spanish"],"veneno":["spanish"],"vengar":["spanish"],"venir":["spanish"],"venta":["spanish"],"venus":["spanish"],"ver":["spanish"],"verano":["spanish"],"verbo":["spanish"],"verde":["spanish"],"vereda":["spanish"],"verja":["spanish"],"verso":["spanish"],"verter":["spanish"],"vía":["spanish"],"viaje":["spanish"],"vibrar":["spanish"],"vicio":["spanish"],"víctima":["spanish"],"vida":["spanish"],"vídeo":["spanish"],"vidrio":["spanish"],"viejo":["spanish"],"viernes":["spanish"],"vigor":["spanish"],"vil":["spanish"],"villa":["spanish"],"vinagre":["spanish"],"vino":["spanish"],"viñedo":["spanish"],"violín":["spanish"],"viral":["spanish"],"virgo":["spanish"],"virtud":["spanish"],"visor":["spanish"],"víspera":["spanish"],"vista":["spanish"],"vitamina":["spanish"],"viudo":["spanish"],"vivaz":["spanish"],"vivero":["spanish"],"vivir":["spanish"],"vivo":["spanish"],"volcán":["spanish"],"volumen":["spanish"],"volver":["spanish"],"voraz":["spanish"],"votar":["spanish"],"voto":["spanish"],"voz":["spanish"],"vuelo":["spanish"],"vulgar":["spanish"],"yacer":["spanish"],"yate":["spanish"],"yegua":["spanish"],"yema":["spanish"],"yerno":["spanish"],"yeso":["spanish"],"yodo":["spanish"],"yoga":["spanish"],"yogur":["spanish"],"zafiro":["spanish"],"zanja":["spanish"],"zapato":["spanish"],"zarza":["spanish"],"zona":["spanish"],"zorro":["spanish"],"zumo":["spanish"],"zurdo":["spanish"],"abajur":["turkish"],"abaküs":["turkish"],"abartı":["turkish"],"abdal":["turkish"],"abdest":["turkish"],"abiye":["turkish"],"abluka":["turkish"],"abone":["turkish"],"absorbe":["turkish"],"absürt":["turkish"],"acayip":["turkish"],"acele":["turkish"],"acemi":["turkish"],"açıkgöz":["turkish"],"adalet":["turkish"],"adam":["turkish"],"adezyon":["turkish"],"adisyon":["turkish"],"adliye":["turkish"],"adres":["turkish"],"afacan":["turkish"],"afili":["turkish"],"afiş":["turkish"],"afiyet":["turkish"],"aforizm":["turkish"],"afra":["turkish"],"ağaç":["turkish"],"ağır":["turkish"],"ahbap":["turkish"],"ahkam":["turkish"],"ahlak":["turkish"],"ahtapot":["turkish"],"aidat":["turkish"],"aile":["turkish"],"ajan":["turkish"],"akademi":["turkish"],"akarsu":["turkish"],"akbaş":["turkish"],"akciğer":["turkish"],"akdeniz":["turkish"],"akıbet":["turkish"],"akıl":["turkish"],"akıntı":["turkish"],"akide":["turkish"],"akrep":["turkish"],"akrobasi":["turkish"],"aksiyon":["turkish"],"akşam":["turkish"],"aktif":["turkish"],"aktör":["turkish"],"aktris":["turkish"],"akustik":["turkish"],"alaca":["turkish"],"albüm":["turkish"],"alçak":["turkish"],"aldanma":["turkish"],"aleni":["turkish"],"alet":["turkish"],"alfabe":["turkish"],"algılama":["turkish"],"alıngan":["turkish"],"alkış":["turkish"],"alkol":["turkish"],"alpay":["turkish"],"alperen":["turkish"],"altın":["turkish"],"altüst":["turkish"],"altyapı":["turkish"],"alyuvar":["turkish"],"amade":["turkish"],"amatör":["turkish"],"amazon":["turkish"],"ambalaj":["turkish"],"amblem":["turkish"],"ambulans":["turkish"],"amca":["turkish"],"amel":["turkish"],"amir":["turkish"],"amiyane":["turkish"],"amorti":["turkish"],"ampul":["turkish"],"anadolu":["turkish"],"anahtar":["turkish"],"anakonda":["turkish"],"anaokul":["turkish"],"anapara":["turkish"],"anarşi":["turkish"],"anatomi":["turkish"],"anayasa":["turkish"],"anekdot":["turkish"],"anestezi":["turkish"],"angaje":["turkish"],"anka":["turkish"],"anket":["turkish"],"anlamlı":["turkish"],"anne":["turkish"],"anomali":["turkish"],"anonim":["turkish"],"anten":["turkish"],"antlaşma":["turkish"],"apse":["turkish"],"araba":["turkish"],"aracı":["turkish"],"araf":["turkish"],"arbede":["turkish"],"arda":["turkish"],"arefe":["turkish"],"argo":["turkish"],"argüman":["turkish"],"arkadaş":["turkish"],"armoni":["turkish"],"arsa":["turkish"],"arsız":["turkish"],"artı":["turkish"],"aruz":["turkish"],"asansör":["turkish"],"asayiş":["turkish"],"asgari":["turkish"],"asil":["turkish"],"asker":["turkish"],"askı":["turkish"],"aslan":["turkish"],"asosyal":["turkish"],"astsubay":["turkish"],"asya":["turkish"],"aşçı":["turkish"],"aşırı":["turkish"],"aşure":["turkish"],"atabey":["turkish"],"ataman":["turkish"],"ateş":["turkish"],"atmaca":["turkish"],"atmosfer":["turkish"],"atölye":["turkish"],"avcı":["turkish"],"avdet":["turkish"],"avize":["turkish"],"avlu":["turkish"],"avokado":["turkish"],"avrupa":["turkish"],"avukat":["turkish"],"ayaz":["turkish"],"ayçiçeği":["turkish"],"aydın":["turkish"],"aygıt":["turkish"],"ayna":["turkish"],"ayran":["turkish"],"ayrıntı":["turkish"],"azim":["turkish"],"baca":["turkish"],"bagaj":["turkish"],"bağlantı":["turkish"],"bahadır":["turkish"],"bahçe":["turkish"],"baki":["turkish"],"bakkal":["turkish"],"baklava":["turkish"],"bakteri":["turkish"],"balçık":["turkish"],"balina":["turkish"],"balo":["turkish"],"balta":["turkish"],"bant":["turkish"],"banyo":["turkish"],"bardak":["turkish"],"barış":["turkish"],"başbuğ":["turkish"],"başıboş":["turkish"],"başkan":["turkish"],"başlık":["turkish"],"bavul":["turkish"],"bayındır":["turkish"],"baykuş":["turkish"],"bazlama":["turkish"],"bedel":["turkish"],"begüm":["turkish"],"bekçi":["turkish"],"bekle":["turkish"],"belge":["turkish"],"belki":["turkish"],"bencil":["turkish"],"benek":["turkish"],"bengi":["turkish"],"berjer":["turkish"],"berk":["turkish"],"berrak":["turkish"],"beşik":["turkish"],"beyin":["turkish"],"beyoğlu":["turkish"],"bıçak":["turkish"],"biberiye":["turkish"],"bidon":["turkish"],"bihaber":["turkish"],"bikini":["turkish"],"bilezik":["turkish"],"bilinç":["turkish"],"bilye":["turkish"],"bina":["turkish"],"binbaşı":["turkish"],"binyıl":["turkish"],"bisiklet":["turkish"],"bisküvi":["turkish"],"bitki":["turkish"],"bizzat":["turkish"],"bodrum":["turkish"],"boğaz":["turkish"],"bohça":["turkish"],"boncuk":["turkish"],"bonfile":["turkish"],"borsa":["turkish"],"boru":["turkish"],"bostan":["turkish"],"boşboğaz":["turkish"],"botanik":["turkish"],"boya":["turkish"],"boykot":["turkish"],"boynuz":["turkish"],"bozgun":["turkish"],"bozkır":["turkish"],"bölüm":["turkish"],"börek":["turkish"],"buçuk":["turkish"],"bugün":["turkish"],"buğday":["turkish"],"buhar":["turkish"],"buhran":["turkish"],"bulvar":["turkish"],"buram":["turkish"],"burçak":["turkish"],"burs":["turkish"],"burun":["turkish"],"buzdağı":["turkish"],"buzkıran":["turkish"],"bücür":["turkish"],"büfe":["turkish"],"bülten":["turkish"],"bütçe":["turkish"],"bütün":["turkish"],"büyük":["turkish"],"cacık":["turkish"],"cadı":["turkish"],"cahil":["turkish"],"cambaz":["turkish"],"canhıraş":["turkish"],"casus":["turkish"],"cazibe":["turkish"],"cehalet":["turkish"],"cehennem":["turkish"],"ceket":["turkish"],"cemre":["turkish"],"cenin":["turkish"],"cennet":["turkish"],"cepken":["turkish"],"cerrah":["turkish"],"cesur":["turkish"],"cetvel":["turkish"],"cevher":["turkish"],"ceylan":["turkish"],"cılız":["turkish"],"cıva":["turkish"],"cilt":["turkish"],"cisim":["turkish"],"ciyak":["turkish"],"coğrafya":["turkish"],"cömert":["turkish"],"cumba":["turkish"],"cüzdan":["turkish"],"çabucak":["turkish"],"çadır":["turkish"],"çağdaş":["turkish"],"çağlayan":["turkish"],"çağrı":["turkish"],"çakmak":["turkish"],"çalışkan":["turkish"],"çamaşır":["turkish"],"çapa":["turkish"],"çaput":["turkish"],"çarık":["turkish"],"çarpan":["turkish"],"çarşaf":["turkish"],"çayhane":["turkish"],"çekirdek":["turkish"],"çelebi":["turkish"],"çember":["turkish"],"çenet":["turkish"],"çengel":["turkish"],"çerçeve":["turkish"],"çerez":["turkish"],"çeşit":["turkish"],"çeşme":["turkish"],"çete":["turkish"],"çevre":["turkish"],"çeyiz":["turkish"],"çeyrek":["turkish"],"çığır":["turkish"],"çılgın":["turkish"],"çıngırak":["turkish"],"çift":["turkish"],"çiğdem":["turkish"],"çikolata":["turkish"],"çilek":["turkish"],"çimen":["turkish"],"çivi":["turkish"],"çoban":["turkish"],"çocuk":["turkish"],"çokgen":["turkish"],"çomak":["turkish"],"çorba":["turkish"],"çözelti":["turkish"],"çubuk":["turkish"],"çukur":["turkish"],"çuval":["turkish"],"çürük":["turkish"],"dağbaşı":["turkish"],"dağılım":["turkish"],"daktilo":["turkish"],"daldırış":["turkish"],"dalga":["turkish"],"dalkavuk":["turkish"],"damak":["turkish"],"damıtma":["turkish"],"damla":["turkish"],"dana":["turkish"],"dandik":["turkish"],"danışman":["turkish"],"daniska":["turkish"],"dantel":["turkish"],"dargeçit":["turkish"],"darphane":["turkish"],"davet":["turkish"],"dayı":["turkish"],"defter":["turkish"],"değer":["turkish"],"değirmen":["turkish"],"dehşet":["turkish"],"delgeç":["turkish"],"demir":["turkish"],"deneyim":["turkish"],"denge":["turkish"],"depo":["turkish"],"deprem":["turkish"],"derdest":["turkish"],"dere":["turkish"],"derhal":["turkish"],"derman":["turkish"],"dernek":["turkish"],"derviş":["turkish"],"desen":["turkish"],"destan":["turkish"],"dışarı":["turkish"],"dışbükey":["turkish"],"dijital":["turkish"],"dikbaşlı":["turkish"],"dilekçe":["turkish"],"dimağ":["turkish"],"dinamik":["turkish"],"dindar":["turkish"],"dinleme":["turkish"],"dinozor":["turkish"],"dipçik":["turkish"],"dipnot":["turkish"],"direniş":["turkish"],"dirsek":["turkish"],"disiplin":["turkish"],"divriği":["turkish"],"dizüstü":["turkish"],"dobra":["turkish"],"dodurga":["turkish"],"doğalgaz":["turkish"],"doküman":["turkish"],"dolap":["turkish"],"donanım":["turkish"],"dondurma":["turkish"],"donör":["turkish"],"doruk":["turkish"],"dosdoğru":["turkish"],"dost":["turkish"],"dosya":["turkish"],"dozer":["turkish"],"döküm":["turkish"],"dönence":["turkish"],"dörtyol":["turkish"],"dövme":["turkish"],"dram":["turkish"],"dublaj":["turkish"],"durum":["turkish"],"duvak":["turkish"],"duyarga":["turkish"],"duyma":["turkish"],"duyuru":["turkish"],"düğme":["turkish"],"düğüm":["turkish"],"dükkan":["turkish"],"dünür":["turkish"],"düpedüz":["turkish"],"dürbün":["turkish"],"düşünür":["turkish"],"düzayak":["turkish"],"düzeltme":["turkish"],"ebeveyn":["turkish"],"ebru":["turkish"],"ecel":["turkish"],"ecnebi":["turkish"],"ecza":["turkish"],"edat":["turkish"],"edilgen":["turkish"],"efendi":["turkish"],"efor":["turkish"],"efsane":["turkish"],"egemen":["turkish"],"egzersiz":["turkish"],"eğrelti":["turkish"],"ekarte":["turkish"],"ekip":["turkish"],"eklem":["turkish"],"ekmek":["turkish"],"ekol":["turkish"],"ekonomi":["turkish"],"ekose":["turkish"],"ekran":["turkish"],"ekvator":["turkish"],"elaman":["turkish"],"elastik":["turkish"],"elbet":["turkish"],"elbise":["turkish"],"elçi":["turkish"],"eldiven":["turkish"],"elebaşı":["turkish"],"eleştiri":["turkish"],"elma":["turkish"],"eloğlu":["turkish"],"elveda":["turkish"],"emare":["turkish"],"emekçi":["turkish"],"emisyon":["turkish"],"emniyet":["turkish"],"empati":["turkish"],"emsal":["turkish"],"emzik":["turkish"],"endüstri":["turkish"],"enerji":["turkish"],"engebe":["turkish"],"enişte":["turkish"],"enkaz":["turkish"],"entari":["turkish"],"entegre":["turkish"],"entrika":["turkish"],"enzim":["turkish"],"erdem":["turkish"],"ergen":["turkish"],"erguvan":["turkish"],"erkek":["turkish"],"erozyon":["turkish"],"ertesi":["turkish"],"erzak":["turkish"],"esaret":["turkish"],"esenlik":["turkish"],"eser":["turkish"],"eski":["turkish"],"esnek":["turkish"],"eşarp":["turkish"],"eşofman":["turkish"],"eşraf":["turkish"],"eşya":["turkish"],"eşzaman":["turkish"],"etik":["turkish"],"etken":["turkish"],"etkinlik":["turkish"],"etüt":["turkish"],"evet":["turkish"],"evire":["turkish"],"evrak":["turkish"],"evrim":["turkish"],"eyalet":["turkish"],"eyvah":["turkish"],"ezber":["turkish"],"fabrika":["turkish"],"fanus":["turkish"],"fason":["turkish"],"fasulye":["turkish"],"fatih":["turkish"],"fatura":["turkish"],"fayans":["turkish"],"fayton":["turkish"],"fazıl":["turkish"],"fazilet":["turkish"],"felsefe":["turkish"],"fener":["turkish"],"feribot":["turkish"],"fersah":["turkish"],"fesih":["turkish"],"feveran":["turkish"],"feza":["turkish"],"fıçı":["turkish"],"fıldır":["turkish"],"fındık":["turkish"],"fırça":["turkish"],"fırsat":["turkish"],"fırtına":["turkish"],"fıtık":["turkish"],"fidan":["turkish"],"fidye":["turkish"],"figür":["turkish"],"fihrist":["turkish"],"fikir":["turkish"],"fildişi":["turkish"],"filtre":["turkish"],"fincan":["turkish"],"firuze":["turkish"],"fitil":["turkish"],"fiyaka":["turkish"],"fizik":["turkish"],"flaş":["turkish"],"flüt":["turkish"],"fosil":["turkish"],"fren":["turkish"],"fukara":["turkish"],"futbol":["turkish"],"garabet":["turkish"],"gariban":["turkish"],"garnitür":["turkish"],"gazi":["turkish"],"gece":["turkish"],"gedik":["turkish"],"gelenek":["turkish"],"gelin":["turkish"],"gemi":["turkish"],"genç":["turkish"],"geniş":["turkish"],"geometri":["turkish"],"gerçek":["turkish"],"gevrek":["turkish"],"gezegen":["turkish"],"gezgin":["turkish"],"geziyolu":["turkish"],"gıcık":["turkish"],"gıda":["turkish"],"gıybet":["turkish"],"girdap":["turkish"],"girişim":["turkish"],"gitar":["turkish"],"giyecek":["turkish"],"giysi":["turkish"],"gizem":["turkish"],"gofret":["turkish"],"goril":["turkish"],"göbek":["turkish"],"göçebe":["turkish"],"göğüs":["turkish"],"gökdelen":["turkish"],"gökmen":["turkish"],"gökyüzü":["turkish"],"gölge":["turkish"],"gömlek":["turkish"],"gönül":["turkish"],"görenek":["turkish"],"görkemli":["turkish"],"görsel":["turkish"],"gösteri":["turkish"],"gövde":["turkish"],"gözaltı":["turkish"],"gözcü":["turkish"],"gözdağı":["turkish"],"gözleme":["turkish"],"gözyaşı":["turkish"],"grup":["turkish"],"gurbet":["turkish"],"gusül":["turkish"],"gübre":["turkish"],"güfte":["turkish"],"gümüş":["turkish"],"günaydın":["turkish"],"güncel":["turkish"],"gündüz":["turkish"],"güneş":["turkish"],"günyüzü":["turkish"],"gürbüz":["turkish"],"güvercin":["turkish"],"güzel":["turkish"],"hacamat":["turkish"],"hacim":["turkish"],"hademe":["turkish"],"hafız":["turkish"],"hafriyat":["turkish"],"hafta":["turkish"],"hakan":["turkish"],"hakem":["turkish"],"hakikat":["turkish"],"haksever":["turkish"],"halı":["turkish"],"hançer":["turkish"],"hane":["turkish"],"hapis":["turkish"],"hapşırık":["turkish"],"harf":["turkish"],"haseki":["turkish"],"hasret":["turkish"],"hatun":["turkish"],"havuç":["turkish"],"haylaz":["turkish"],"haysiyet":["turkish"],"hayvan":["turkish"],"hedef":["turkish"],"hemen":["turkish"],"hemfikir":["turkish"],"hendek":["turkish"],"hepsi":["turkish"],"hergele":["turkish"],"herhangi":["turkish"],"hesap":["turkish"],"heyecan":["turkish"],"heykel":["turkish"],"hezimet":["turkish"],"hıçkırık":["turkish"],"hızölçer":["turkish"],"hicviye":["turkish"],"hikaye":["turkish"],"hikmet":["turkish"],"hile":["turkish"],"hisse":["turkish"],"hobi":["turkish"],"hoca":["turkish"],"horlama":["turkish"],"hoşbeş":["turkish"],"hoşgörü":["turkish"],"hoyrat":["turkish"],"hörgüç":["turkish"],"höyük":["turkish"],"hudut":["turkish"],"hukuk":["turkish"],"hunhar":["turkish"],"hurda":["turkish"],"huysuz":["turkish"],"huzur":["turkish"],"hücum":["turkish"],"hükümet":["turkish"],"hünkar":["turkish"],"hüviyet":["turkish"],"ırmak":["turkish"],"ısıölçer":["turkish"],"ısıtıcı":["turkish"],"ıspanak":["turkish"],"ısrar":["turkish"],"ışıldak":["turkish"],"ızdırap":["turkish"],"ızgara":["turkish"],"ibadet":["turkish"],"icat":["turkish"],"içbükey":["turkish"],"içecek":["turkish"],"içgüdü":["turkish"],"içsel":["turkish"],"idman":["turkish"],"iftihar":["turkish"],"iğne":["turkish"],"ihanet":["turkish"],"ihbar":["turkish"],"ihdas":["turkish"],"ihmal":["turkish"],"ihracat":["turkish"],"ihsan":["turkish"],"ikilem":["turkish"],"ikindi":["turkish"],"ikircik":["turkish"],"iklim":["turkish"],"iksir":["turkish"],"iktibas":["turkish"],"ilaç":["turkish"],"ilçe":["turkish"],"ileri":["turkish"],"iletişim":["turkish"],"ilgi":["turkish"],"ilhak":["turkish"],"ilkbahar":["turkish"],"ilkokul":["turkish"],"ilmek":["turkish"],"imkan":["turkish"],"imleç":["turkish"],"imsak":["turkish"],"imtihan":["turkish"],"imza":["turkish"],"ince":["turkish"],"inkar":["turkish"],"inşa":["turkish"],"ipek":["turkish"],"ipucu":["turkish"],"irade":["turkish"],"irfan":["turkish"],"irmik":["turkish"],"isabet":["turkish"],"iskele":["turkish"],"israf":["turkish"],"isyan":["turkish"],"işçi":["turkish"],"işgal":["turkish"],"işgüzar":["turkish"],"işlem":["turkish"],"itibar":["turkish"],"itiraf":["turkish"],"ivedi":["turkish"],"ivme":["turkish"],"iyileşme":["turkish"],"iyimser":["turkish"],"izbandut":["turkish"],"izci":["turkish"],"izdiham":["turkish"],"izin":["turkish"],"jakoben":["turkish"],"jandarma":["turkish"],"jargon":["turkish"],"kabadayı":["turkish"],"kablo":["turkish"],"kabus":["turkish"],"kaçamak":["turkish"],"kadeh":["turkish"],"kadın":["turkish"],"kadraj":["turkish"],"kafa":["turkish"],"kafkas":["turkish"],"kağıt":["turkish"],"kağnı":["turkish"],"kahkaha":["turkish"],"kahraman":["turkish"],"kahvaltı":["turkish"],"kakül":["turkish"],"kaldırım":["turkish"],"kale":["turkish"],"kalibre":["turkish"],"kalkan":["turkish"],"kalpak":["turkish"],"kamış":["turkish"],"kamyon":["turkish"],"kanat":["turkish"],"kandaş":["turkish"],"kanepe":["turkish"],"kanser":["turkish"],"kanun":["turkish"],"kaos":["turkish"],"kapı":["turkish"],"kaplıca":["turkish"],"kaptan":["turkish"],"karanlık":["turkish"],"kardeş":["turkish"],"karga":["turkish"],"karınca":["turkish"],"karmaşa":["turkish"],"karşıt":["turkish"],"kasırga":["turkish"],"kask":["turkish"],"kasvet":["turkish"],"katkı":["turkish"],"katman":["turkish"],"kavram":["turkish"],"kaygan":["turkish"],"kaynakça":["turkish"],"kayyum":["turkish"],"kedi":["turkish"],"kehanet":["turkish"],"kekik":["turkish"],"kelebek":["turkish"],"kenar":["turkish"],"kerkenez":["turkish"],"kerpiç":["turkish"],"kesirli":["turkish"],"kesmece":["turkish"],"kestane":["turkish"],"keşkek":["turkish"],"ketçap":["turkish"],"keyfiyet":["turkish"],"kıble":["turkish"],"kıdemli":["turkish"],"kılavuz":["turkish"],"kılçık":["turkish"],"kılıf":["turkish"],"kıraç":["turkish"],"kırmızı":["turkish"],"kırsal":["turkish"],"kısayol":["turkish"],"kısım":["turkish"],"kıskanç":["turkish"],"kısmet":["turkish"],"kışla":["turkish"],"kıvanç":["turkish"],"kıvılcım":["turkish"],"kıvrık":["turkish"],"kıyafet":["turkish"],"kıymetli":["turkish"],"kızak":["turkish"],"kızılcık":["turkish"],"kibar":["turkish"],"kinaye":["turkish"],"kira":["turkish"],"kiremit":["turkish"],"kirli":["turkish"],"kirpik":["turkish"],"kişisel":["turkish"],"kitap":["turkish"],"koçbaşı":["turkish"],"kodaman":["turkish"],"koğuş":["turkish"],"kokteyl":["turkish"],"kolaycı":["turkish"],"kolbastı":["turkish"],"kolonya":["turkish"],"koltuk":["turkish"],"kolye":["turkish"],"kombine":["turkish"],"komedyen":["turkish"],"komiser":["turkish"],"komposto":["turkish"],"komşu":["turkish"],"komuta":["turkish"],"konak":["turkish"],"konfor":["turkish"],"koni":["turkish"],"konsül":["turkish"],"kopya":["turkish"],"korkusuz":["turkish"],"korna":["turkish"],"korse":["turkish"],"korunak":["turkish"],"korvet":["turkish"],"kostüm":["turkish"],"koşul":["turkish"],"koyu":["turkish"],"kozmik":["turkish"],"köfte":["turkish"],"kökensel":["turkish"],"köprücük":["turkish"],"köpük":["turkish"],"kördüğüm":["turkish"],"körfez":["turkish"],"köstebek":["turkish"],"köşegen":["turkish"],"kötü":["turkish"],"kravat":["turkish"],"kriter":["turkish"],"kuantum":["turkish"],"kudurma":["turkish"],"kuluçka":["turkish"],"kulübe":["turkish"],"kumanya":["turkish"],"kumbara":["turkish"],"kumlu":["turkish"],"kumpir":["turkish"],"kumral":["turkish"],"kundura":["turkish"],"kupa":["turkish"],"kupkuru":["turkish"],"kuramsal":["turkish"],"kurbağa":["turkish"],"kurdele":["turkish"],"kurgu":["turkish"],"kurmay":["turkish"],"kurşun":["turkish"],"kurtuluş":["turkish"],"kurultay":["turkish"],"kurye":["turkish"],"kusursuz":["turkish"],"kuşak":["turkish"],"kuşbaşı":["turkish"],"kuşkulu":["turkish"],"kutlama":["turkish"],"kutsal":["turkish"],"kutup":["turkish"],"kuver":["turkish"],"kuyruk":["turkish"],"kuzey":["turkish"],"kuzgun":["turkish"],"küçük":["turkish"],"külçe":["turkish"],"külfet":["turkish"],"külliye":["turkish"],"kültürel":["turkish"],"kümes":["turkish"],"künefe":["turkish"],"küresel":["turkish"],"kütle":["turkish"],"lahana":["turkish"],"lahmacun":["turkish"],"lamba":["turkish"],"lansman":["turkish"],"lavaş":["turkish"],"layık":["turkish"],"leğen":["turkish"],"levent":["turkish"],"leziz":["turkish"],"lezzet":["turkish"],"lider":["turkish"],"likide":["turkish"],"liman":["turkish"],"liste":["turkish"],"litre":["turkish"],"liyakat":["turkish"],"lodos":["turkish"],"lokanta":["turkish"],"lokman":["turkish"],"lokum":["turkish"],"lunapark":["turkish"],"lütfen":["turkish"],"lüzum":["turkish"],"nokta":["turkish"],"mabet":["turkish"],"macera":["turkish"],"macun":["turkish"],"madalya":["turkish"],"madde":["turkish"],"madem":["turkish"],"mağara":["turkish"],"mağdur":["turkish"],"mağfiret":["turkish"],"mağlup":["turkish"],"mahalle":["turkish"],"mahcup":["turkish"],"mahir":["turkish"],"mahkeme":["turkish"],"mahlas":["turkish"],"mahrum":["turkish"],"mahsul":["turkish"],"makas":["turkish"],"makbuz":["turkish"],"makine":["turkish"],"makro":["turkish"],"maksat":["turkish"],"makul":["turkish"],"maliye":["turkish"],"manav":["turkish"],"mangal":["turkish"],"manidar":["turkish"],"manken":["turkish"],"mantık":["turkish"],"manzara":["turkish"],"mareşal":["turkish"],"margarin":["turkish"],"marifet":["turkish"],"marmelat":["turkish"],"masaüstü":["turkish"],"masmavi":["turkish"],"masraf":["turkish"],"masum":["turkish"],"matah":["turkish"],"materyal":["turkish"],"matrak":["turkish"],"maval":["turkish"],"mavra":["turkish"],"maydanoz":["turkish"],"mayhoş":["turkish"],"maytap":["turkish"],"mazbata":["turkish"],"mazeret":["turkish"],"mazlum":["turkish"],"mazot":["turkish"],"mazur":["turkish"],"meblağ":["turkish"],"mebus":["turkish"],"mecaz":["turkish"],"mecbur":["turkish"],"meclis":["turkish"],"mecmua":["turkish"],"mecnun":["turkish"],"meçhul":["turkish"],"medeni":["turkish"],"mehtap":["turkish"],"mekanik":["turkish"],"melodi":["turkish"],"meltem":["turkish"],"memur":["turkish"],"mendil":["turkish"],"menekşe":["turkish"],"menteşe":["turkish"],"meraklı":["turkish"],"mercek":["turkish"],"merdiven":["turkish"],"merhaba":["turkish"],"merinos":["turkish"],"merkez":["turkish"],"mermi":["turkish"],"mert":["turkish"],"mesafe":["turkish"],"mesele":["turkish"],"mesken":["turkish"],"meslek":["turkish"],"meşale":["turkish"],"meşgul":["turkish"],"meşhur":["turkish"],"metafor":["turkish"],"metin":["turkish"],"metre":["turkish"],"mevcut":["turkish"],"mevkidaş":["turkish"],"meydan":["turkish"],"meyil":["turkish"],"meyve":["turkish"],"meziyet":["turkish"],"mezun":["turkish"],"mıknatıs":["turkish"],"mısra":["turkish"],"mızıka":["turkish"],"miğfer":["turkish"],"mihrak":["turkish"],"miktar":["turkish"],"milat":["turkish"],"milli":["turkish"],"mimar":["turkish"],"minare":["turkish"],"mineral":["turkish"],"minik":["turkish"],"minyon":["turkish"],"mirliva":["turkish"],"misafir":["turkish"],"miskin":["turkish"],"miting":["turkish"],"miyop":["turkish"],"mizah":["turkish"],"mobilya":["turkish"],"monitör":["turkish"],"morötesi":["turkish"],"motive":["turkish"],"mozaik":["turkish"],"muavin":["turkish"],"mucize":["turkish"],"muhafız":["turkish"],"muhteşem":["turkish"],"mukayese":["turkish"],"mumya":["turkish"],"musluk":["turkish"],"muşamba":["turkish"],"mutabık":["turkish"],"mutfak":["turkish"],"mutlu":["turkish"],"muzaffer":["turkish"],"muzdarip":["turkish"],"mübarek":["turkish"],"mücadele":["turkish"],"müdür":["turkish"],"müfredat":["turkish"],"müftü":["turkish"],"mühendis":["turkish"],"mühim":["turkish"],"mühlet":["turkish"],"mükemmel":["turkish"],"mülk":["turkish"],"mümkün":["turkish"],"mümtaz":["turkish"],"müsrif":["turkish"],"müstesna":["turkish"],"müşahit":["turkish"],"müşteri":["turkish"],"mütercim":["turkish"],"müthiş":["turkish"],"müze":["turkish"],"müzik":["turkish"],"nabız":["turkish"],"nadas":["turkish"],"nadir":["turkish"],"nahoş":["turkish"],"nakarat":["turkish"],"nakış":["turkish"],"nalbur":["turkish"],"namlu":["turkish"],"namus":["turkish"],"nankör":["turkish"],"nargile":["turkish"],"narkoz":["turkish"],"nasıl":["turkish"],"nasip":["turkish"],"naylon":["turkish"],"nazar":["turkish"],"nazım":["turkish"],"nazik":["turkish"],"neden":["turkish"],"nefes":["turkish"],"negatif":["turkish"],"neon":["turkish"],"neptün":["turkish"],"nerede":["turkish"],"nesil":["turkish"],"nesnel":["turkish"],"neşeli":["turkish"],"netice":["turkish"],"nevresim":["turkish"],"neyse":["turkish"],"neyzen":["turkish"],"nezaket":["turkish"],"nezih":["turkish"],"nezle":["turkish"],"nicel":["turkish"],"nilüfer":["turkish"],"nimet":["turkish"],"nisan":["turkish"],"nispet":["turkish"],"nitekim":["turkish"],"nizam":["turkish"],"nohut":["turkish"],"noksan":["turkish"],"nostalji":["turkish"],"noter":["turkish"],"nöbet":["turkish"],"numara":["turkish"],"numune":["turkish"],"nutuk":["turkish"],"nüfus":["turkish"],"obabaşı":["turkish"],"obez":["turkish"],"obje":["turkish"],"ocak":["turkish"],"odun":["turkish"],"ofansif":["turkish"],"ofis":["turkish"],"oğlak":["turkish"],"oğuz":["turkish"],"okçu":["turkish"],"oklava":["turkish"],"oksijen":["turkish"],"okul":["turkish"],"okumuş":["turkish"],"okutman":["turkish"],"okuyucu":["turkish"],"okyanus":["turkish"],"olağan":["turkish"],"olanak":["turkish"],"olası":["turkish"],"olay":["turkish"],"olgun":["turkish"],"olimpik":["turkish"],"olumlu":["turkish"],"omlet":["turkish"],"omurga":["turkish"],"onarım":["turkish"],"onursal":["turkish"],"optik":["turkish"],"orantı":["turkish"],"ordu":["turkish"],"organik":["turkish"],"orijin":["turkish"],"orkide":["turkish"],"orman":["turkish"],"orta":["turkish"],"oruç":["turkish"],"otağ":["turkish"],"otantik":["turkish"],"otel":["turkish"],"otoban":["turkish"],"otogar":["turkish"],"otomobil":["turkish"],"otonom":["turkish"],"otopark":["turkish"],"otorite":["turkish"],"otoyol":["turkish"],"oturum":["turkish"],"oyuk":["turkish"],"oyuncak":["turkish"],"ozan":["turkish"],"ödeme":["turkish"],"ödenek":["turkish"],"ödev":["turkish"],"ödül":["turkish"],"ödünç":["turkish"],"öfke":["turkish"],"öğlen":["turkish"],"öğrenci":["turkish"],"öğün":["turkish"],"öğütücü":["turkish"],"öksürük":["turkish"],"ölçme":["turkish"],"ölçü":["turkish"],"ölümsüz":["turkish"],"ömür":["turkish"],"önayak":["turkish"],"öncü":["turkish"],"önder":["turkish"],"önem":["turkish"],"önerge":["turkish"],"öngörü":["turkish"],"önlük":["turkish"],"önsezi":["turkish"],"öpücük":["turkish"],"ördek":["turkish"],"örgü":["turkish"],"örtbas":["turkish"],"örtme":["turkish"],"örtü":["turkish"],"örümcek":["turkish"],"örüntü":["turkish"],"öteberi":["turkish"],"öteki":["turkish"],"övünç":["turkish"],"öykü":["turkish"],"öyleyse":["turkish"],"özçekim":["turkish"],"özdeyiş":["turkish"],"özel":["turkish"],"özenti":["turkish"],"özerk":["turkish"],"özgürlük":["turkish"],"özlem":["turkish"],"özlü":["turkish"],"özne":["turkish"],"özsever":["turkish"],"özümseme":["turkish"],"özür":["turkish"],"özveri":["turkish"],"pabuç":["turkish"],"padişah":["turkish"],"palamut":["turkish"],"palmiye":["turkish"],"palto":["turkish"],"palyaço":["turkish"],"pamuk":["turkish"],"panayır":["turkish"],"pancar":["turkish"],"panik":["turkish"],"panjur":["turkish"],"pankart":["turkish"],"pano":["turkish"],"pansuman":["turkish"],"pantolon":["turkish"],"panzehir":["turkish"],"papatya":["turkish"],"papyon":["turkish"],"paraşüt":["turkish"],"parça":["turkish"],"pardösü":["turkish"],"parfüm":["turkish"],"parıltı":["turkish"],"parkur":["turkish"],"parmak":["turkish"],"parodi":["turkish"],"parsel":["turkish"],"partner":["turkish"],"pasaport":["turkish"],"pasif":["turkish"],"paskalya":["turkish"],"pastırma":["turkish"],"paşa":["turkish"],"patates":["turkish"],"paten":["turkish"],"patika":["turkish"],"patlıcan":["turkish"],"patolog":["turkish"],"payanda":["turkish"],"paydaş":["turkish"],"payidar":["turkish"],"paylaşma":["turkish"],"paytak":["turkish"],"peçete":["turkish"],"peder":["turkish"],"pehlivan":["turkish"],"pekala":["turkish"],"pekmez":["turkish"],"pelerin":["turkish"],"pelikan":["turkish"],"pelüş":["turkish"],"pembe":["turkish"],"pencere":["turkish"],"pense":["turkish"],"perçin":["turkish"],"perde":["turkish"],"pergel":["turkish"],"perişan":["turkish"],"peron":["turkish"],"personel":["turkish"],"perşembe":["turkish"],"peruk":["turkish"],"pervane":["turkish"],"pespaye":["turkish"],"pestil":["turkish"],"peşin":["turkish"],"petek":["turkish"],"petrol":["turkish"],"petunya":["turkish"],"peynir":["turkish"],"peyzaj":["turkish"],"pınar":["turkish"],"pırasa":["turkish"],"pırlanta":["turkish"],"pide":["turkish"],"pikap":["turkish"],"pilav":["turkish"],"piliç":["turkish"],"pipet":["turkish"],"pipo":["turkish"],"piramit":["turkish"],"pirinç":["turkish"],"pirzola":["turkish"],"pist":["turkish"],"pişik":["turkish"],"pişman":["turkish"],"piyasa":["turkish"],"piyes":["turkish"],"plaj":["turkish"],"plaket":["turkish"],"planlama":["turkish"],"platform":["turkish"],"plazma":["turkish"],"podyum":["turkish"],"poğaça":["turkish"],"polat":["turkish"],"politika":["turkish"],"popüler":["turkish"],"porselen":["turkish"],"portakal":["turkish"],"poster":["turkish"],"poşet":["turkish"],"poyraz":["turkish"],"pozitif":["turkish"],"pranga":["turkish"],"pratik":["turkish"],"prenses":["turkish"],"prim":["turkish"],"profil":["turkish"],"proje":["turkish"],"protokol":["turkish"],"puan":["turkish"],"pudra":["turkish"],"pusula":["turkish"],"püre":["turkish"],"pürüz":["turkish"],"püstül":["turkish"],"püsür":["turkish"],"racon":["turkish"],"radikal":["turkish"],"radyo":["turkish"],"rafadan":["turkish"],"rafine":["turkish"],"rağbet":["turkish"],"rahat":["turkish"],"rahle":["turkish"],"rakam":["turkish"],"raket":["turkish"],"rakip":["turkish"],"rakun":["turkish"],"ralli":["turkish"],"randevu":["turkish"],"ranza":["turkish"],"rapor":["turkish"],"rastgele":["turkish"],"rasyonel":["turkish"],"razı":["turkish"],"realite":["turkish"],"reçine":["turkish"],"refah":["turkish"],"referans":["turkish"],"refik":["turkish"],"rehber":["turkish"],"rehin":["turkish"],"reis":["turkish"],"rekabet":["turkish"],"reklam":["turkish"],"rekor":["turkish"],"rektör":["turkish"],"renk":["turkish"],"resim":["turkish"],"resmen":["turkish"],"restoran":["turkish"],"retorik":["turkish"],"revaç":["turkish"],"reyon":["turkish"],"rezalet":["turkish"],"rezerv":["turkish"],"rezil":["turkish"],"rıhtım":["turkish"],"rıza":["turkish"],"ritim":["turkish"],"ritüel":["turkish"],"rivayet":["turkish"],"roman":["turkish"],"rozet":["turkish"],"röportaj":["turkish"],"rötar":["turkish"],"ruble":["turkish"],"ruhban":["turkish"],"ruhsat":["turkish"],"rulet":["turkish"],"runik":["turkish"],"rutin":["turkish"],"rutubet":["turkish"],"rüşvet":["turkish"],"rütbe":["turkish"],"rüya":["turkish"],"rüzgar":["turkish"],"sabah":["turkish"],"sabıka":["turkish"],"sabit":["turkish"],"sabun":["turkish"],"saçma":["turkish"],"sade":["turkish"],"sadık":["turkish"],"safahat":["turkish"],"safdil":["turkish"],"safkan":["turkish"],"sağanak":["turkish"],"sağduyu":["turkish"],"sağlam":["turkish"],"saha":["turkish"],"sahiden":["turkish"],"sahne":["turkish"],"sakal":["turkish"],"sakız":["turkish"],"sakin":["turkish"],"saklama":["turkish"],"saksağan":["turkish"],"salamura":["turkish"],"salça":["turkish"],"salgı":["turkish"],"salınım":["turkish"],"salkım":["turkish"],"saltanat":["turkish"],"sanatçı":["turkish"],"sancak":["turkish"],"sandalye":["turkish"],"saniye":["turkish"],"saplantı":["turkish"],"sapsız":["turkish"],"saray":["turkish"],"sarışın":["turkish"],"sarkık":["turkish"],"sarmaşık":["turkish"],"satır":["turkish"],"savaşım":["turkish"],"savunma":["turkish"],"saydam":["turkish"],"sayfa":["turkish"],"saygın":["turkish"],"sayısal":["turkish"],"sebep":["turkish"],"seçenek":["turkish"],"seçim":["turkish"],"seçkin":["turkish"],"seçmen":["turkish"],"sedir":["turkish"],"sedye":["turkish"],"sefer":["turkish"],"sehpa":["turkish"],"sekizgen":["turkish"],"selektör":["turkish"],"selvi":["turkish"],"semavi":["turkish"],"sembol":["turkish"],"seminer":["turkish"],"senaryo":["turkish"],"sendika":["turkish"],"senkron":["turkish"],"sensör":["turkish"],"sentez":["turkish"],"sepet":["turkish"],"seramik":["turkish"],"serbest":["turkish"],"serdar":["turkish"],"seremoni":["turkish"],"sergi":["turkish"],"serhat":["turkish"],"serin":["turkish"],"sermaye":["turkish"],"serpuş":["turkish"],"sersem":["turkish"],"serüven":["turkish"],"sesli":["turkish"],"sesteş":["turkish"],"sevap":["turkish"],"seviye":["turkish"],"seyahat":["turkish"],"seyirci":["turkish"],"sezon":["turkish"],"sıcak":["turkish"],"sıfat":["turkish"],"sıhhi":["turkish"],"sınanma":["turkish"],"sınır":["turkish"],"sıradan":["turkish"],"sırdaş":["turkish"],"sırma":["turkish"],"sırtüstü":["turkish"],"sızgıt":["turkish"],"siftah":["turkish"],"sigorta":["turkish"],"sihirbaz":["turkish"],"silah":["turkish"],"silecek":["turkish"],"silindir":["turkish"],"simetri":["turkish"],"simge":["turkish"],"simit":["turkish"],"sincap":["turkish"],"sindirim":["turkish"],"sinema":["turkish"],"sinirli":["turkish"],"sipariş":["turkish"],"sirke":["turkish"],"siroz":["turkish"],"sistem":["turkish"],"sivilce":["turkish"],"siyasi":["turkish"],"soba":["turkish"],"sofra":["turkish"],"soğuk":["turkish"],"sohbet":["turkish"],"sokak":["turkish"],"solfej":["turkish"],"solunum":["turkish"],"somut":["turkish"],"sonbahar":["turkish"],"sonraki":["turkish"],"sonsuz":["turkish"],"sorunsuz":["turkish"],"sosyete":["turkish"],"soyağacı":["turkish"],"soydaş":["turkish"],"soygun":["turkish"],"soytarı":["turkish"],"söğüş":["turkish"],"sömürge":["turkish"],"sönük":["turkish"],"söylem":["turkish"],"sözcük":["turkish"],"sözde":["turkish"],"spatula":["turkish"],"spektrum":["turkish"],"spiker":["turkish"],"sporcu":["turkish"],"sprey":["turkish"],"stabil":["turkish"],"statü":["turkish"],"stok":["turkish"],"stopaj":["turkish"],"strateji":["turkish"],"subay":["turkish"],"sucuk":["turkish"],"suçüstü":["turkish"],"suhulet":["turkish"],"sulama":["turkish"],"sungur":["turkish"],"sunucu":["turkish"],"surat":["turkish"],"susam":["turkish"],"suskun":["turkish"],"sükse":["turkish"],"sükut":["turkish"],"sülale":["turkish"],"sünger":["turkish"],"süpürge":["turkish"],"sürahi":["turkish"],"süreç":["turkish"],"sürgün":["turkish"],"sürüm":["turkish"],"süsleme":["turkish"],"sütanne":["turkish"],"sütlaç":["turkish"],"sütun":["turkish"],"süvari":["turkish"],"şahane":["turkish"],"şahbaz":["turkish"],"şahit":["turkish"],"şahsiyet":["turkish"],"şakıma":["turkish"],"şaklaban":["turkish"],"şakrak":["turkish"],"şamar":["turkish"],"şampiyon":["turkish"],"şanslı":["turkish"],"şantiye":["turkish"],"şapka":["turkish"],"şarkıcı":["turkish"],"şartname":["turkish"],"şaşırma":["turkish"],"şaşkın":["turkish"],"şatafat":["turkish"],"şayet":["turkish"],"şebeke":["turkish"],"şefkat":["turkish"],"şeftali":["turkish"],"şehir":["turkish"],"şehvet":["turkish"],"şeker":["turkish"],"şekil":["turkish"],"şelale":["turkish"],"şema":["turkish"],"şemsiye":["turkish"],"şerbet":["turkish"],"şeref":["turkish"],"şerit":["turkish"],"şımarık":["turkish"],"şıpıdık":["turkish"],"şifre":["turkish"],"şimdi":["turkish"],"şimşek":["turkish"],"şipşak":["turkish"],"şirin":["turkish"],"şişe":["turkish"],"şişirme":["turkish"],"şofben":["turkish"],"şöhret":["turkish"],"şölen":["turkish"],"şüphe":["turkish"],"tabaka":["turkish"],"tabure":["turkish"],"tadilat":["turkish"],"taharet":["turkish"],"tahıl":["turkish"],"tahkim":["turkish"],"tahlil":["turkish"],"tahmin":["turkish"],"tahrifat":["turkish"],"tahsilat":["turkish"],"tahta":["turkish"],"taklit":["turkish"],"takoz":["turkish"],"taksici":["turkish"],"taktik":["turkish"],"takvim":["turkish"],"talebe":["turkish"],"talip":["turkish"],"tamamen":["turkish"],"tamirci":["turkish"],"tamtakır":["turkish"],"tandır":["turkish"],"tanecik":["turkish"],"tanıtım":["turkish"],"tanrı":["turkish"],"tansiyon":["turkish"],"tapan":["turkish"],"tapınak":["turkish"],"taptaze":["turkish"],"tapu":["turkish"],"tarafgir":["turkish"],"tarhana":["turkish"],"tarım":["turkish"],"tarih":["turkish"],"tarla":["turkish"],"tartak":["turkish"],"tarumar":["turkish"],"tasarım":["turkish"],"tasdik":["turkish"],"taslak":["turkish"],"tastamam":["turkish"],"taşeron":["turkish"],"taşınmaz":["turkish"],"taşra":["turkish"],"tatava":["turkish"],"tatbikat":["turkish"],"tatil":["turkish"],"tatlı":["turkish"],"tavsiye":["turkish"],"tavşan":["turkish"],"tavuk":["turkish"],"taze":["turkish"],"taziye":["turkish"],"tazminat":["turkish"],"tebeşir":["turkish"],"tebrik":["turkish"],"tecrübe":["turkish"],"teçhizat":["turkish"],"tedarik":["turkish"],"tedbir":["turkish"],"teftiş":["turkish"],"teğet":["turkish"],"teğmen":["turkish"],"tehdit":["turkish"],"tehlike":["turkish"],"tekdüze":["turkish"],"tekerlek":["turkish"],"tekme":["turkish"],"teknik":["turkish"],"tekrar":["turkish"],"telef":["turkish"],"telsiz":["turkish"],"telve":["turkish"],"temas":["turkish"],"tembel":["turkish"],"temiz":["turkish"],"temkin":["turkish"],"temsilci":["turkish"],"tendon":["turkish"],"teneke":["turkish"],"tenha":["turkish"],"tenkit":["turkish"],"tepegöz":["turkish"],"tepki":["turkish"],"terazi":["turkish"],"terbiye":["turkish"],"tercih":["turkish"],"tereyağı":["turkish"],"terfi":["turkish"],"terim":["turkish"],"terminal":["turkish"],"tersane":["turkish"],"tertip":["turkish"],"tesadüf":["turkish"],"tescil":["turkish"],"tesir":["turkish"],"teslimat":["turkish"],"tespit":["turkish"],"testere":["turkish"],"teşekkür":["turkish"],"teşhir":["turkish"],"teşrif":["turkish"],"teşvik":["turkish"],"teyze":["turkish"],"tezahür":["turkish"],"tezgah":["turkish"],"tıbbi":["turkish"],"tıkaç":["turkish"],"tıkışık":["turkish"],"tıknaz":["turkish"],"tılsım":["turkish"],"tıpkı":["turkish"],"tıraş":["turkish"],"tırışka":["turkish"],"tırmanış":["turkish"],"tırnak":["turkish"],"tırpan":["turkish"],"tıslama":["turkish"],"ticaret":["turkish"],"tilki":["turkish"],"tiryaki":["turkish"],"titreşim":["turkish"],"tohum":["turkish"],"tokat":["turkish"],"tolere":["turkish"],"tombak":["turkish"],"tomurcuk":["turkish"],"topaç":["turkish"],"toplum":["turkish"],"toprak":["turkish"],"toptan":["turkish"],"toraman":["turkish"],"torpido":["turkish"],"tortu":["turkish"],"tosbağa":["turkish"],"toynak":["turkish"],"tören":["turkish"],"trafik":["turkish"],"trajedi":["turkish"],"tramvay":["turkish"],"tribün":["turkish"],"triko":["turkish"],"tugay":["turkish"],"tuğla":["turkish"],"tuğrul":["turkish"],"tuhaf":["turkish"],"tulumba":["turkish"],"tunç":["turkish"],"turan":["turkish"],"turkuaz":["turkish"],"turnusol":["turkish"],"turşu":["turkish"],"turuncu":["turkish"],"tutanak":["turkish"],"tutkal":["turkish"],"tutsak":["turkish"],"tutum":["turkish"],"tuyuğ":["turkish"],"tuzlu":["turkish"],"tüccar":["turkish"],"tüfek":["turkish"],"tükenmez":["turkish"],"tülbent":["turkish"],"tümleç":["turkish"],"tünel":["turkish"],"türbin":["turkish"],"türev":["turkish"],"türk":["turkish"],"tüzük":["turkish"],"ucube":["turkish"],"ucuz":["turkish"],"uçak":["turkish"],"uçurtma":["turkish"],"ufuk":["turkish"],"uğrak":["turkish"],"uğur":["turkish"],"ukala":["turkish"],"ulaşım":["turkish"],"ulema":["turkish"],"ulus":["turkish"],"ulvi":["turkish"],"umursama":["turkish"],"umut":["turkish"],"unutkan":["turkish"],"uslu":["turkish"],"ustabaşı":["turkish"],"ustura":["turkish"],"usul":["turkish"],"utangaç":["turkish"],"uyanık":["turkish"],"uyarı":["turkish"],"uydu":["turkish"],"uygar":["turkish"],"uygulama":["turkish"],"uykusuz":["turkish"],"uysal":["turkish"],"uyuşma":["turkish"],"uzantı":["turkish"],"uzay":["turkish"],"uzgören":["turkish"],"uzlaşma":["turkish"],"uzman":["turkish"],"uzun":["turkish"],"ücra":["turkish"],"ücret":["turkish"],"üçbudak":["turkish"],"üçgen":["turkish"],"üçkağıt":["turkish"],"üçleme":["turkish"],"üfürük":["turkish"],"ülke":["turkish"],"ümit":["turkish"],"üniforma":["turkish"],"ünite":["turkish"],"ünlem":["turkish"],"üretken":["turkish"],"ürün":["turkish"],"üslup":["turkish"],"üstel":["turkish"],"üstün":["turkish"],"üşengeç":["turkish"],"üşüme":["turkish"],"ütopya":["turkish"],"üvey":["turkish"],"üzengi":["turkish"],"üzgün":["turkish"],"üzüm":["turkish"],"vaka":["turkish"],"vakfiye":["turkish"],"vakıf":["turkish"],"vakit":["turkish"],"vakum":["turkish"],"vapur":["turkish"],"varil":["turkish"],"varlık":["turkish"],"varsayım":["turkish"],"varyemez":["turkish"],"vasıta":["turkish"],"vasiyet":["turkish"],"vatandaş":["turkish"],"vazife":["turkish"],"vazo":["turkish"],"veciz":["turkish"],"vefa":["turkish"],"vehim":["turkish"],"veliaht":["turkish"],"veresiye":["turkish"],"verimli":["turkish"],"verkaç":["turkish"],"vernik":["turkish"],"vertigo":["turkish"],"vesait":["turkish"],"vesika":["turkish"],"vestiyer":["turkish"],"veznedar":["turkish"],"vicdan":["turkish"],"vilayet":["turkish"],"virane":["turkish"],"virgül":["turkish"],"vişne":["turkish"],"vites":["turkish"],"vokal":["turkish"],"volkan":["turkish"],"vurma":["turkish"],"vurucu":["turkish"],"vücut":["turkish"],"yabancı":["turkish"],"yabgu":["turkish"],"yağış":["turkish"],"yağlı":["turkish"],"yağmur":["turkish"],"yakamoz":["turkish"],"yakın":["turkish"],"yaklaşık":["turkish"],"yalçın":["turkish"],"yalıtım":["turkish"],"yaman":["turkish"],"yanardağ":["turkish"],"yangın":["turkish"],"yanıt":["turkish"],"yankı":["turkish"],"yanlış":["turkish"],"yansıma":["turkish"],"yapay":["turkish"],"yapboz":["turkish"],"yapımcı":["turkish"],"yaprak":["turkish"],"yaratık":["turkish"],"yarbay":["turkish"],"yardım":["turkish"],"yargıç":["turkish"],"yarıçap":["turkish"],"yasemin":["turkish"],"yastık":["turkish"],"yaşam":["turkish"],"yatak":["turkish"],"yatırım":["turkish"],"yavru":["turkish"],"yaygara":["turkish"],"yayıncı":["turkish"],"yayla":["turkish"],"yazılım":["turkish"],"yekpare":["turkish"],"yekvücut":["turkish"],"yelkovan":["turkish"],"yelpaze":["turkish"],"yemek":["turkish"],"yemiş":["turkish"],"yengeç":["turkish"],"yeniçeri":["turkish"],"yeraltı":["turkish"],"yerküre":["turkish"],"yerleşke":["turkish"],"yeryüzü":["turkish"],"yeşil":["turkish"],"yetenek":["turkish"],"yetkili":["turkish"],"yığınak":["turkish"],"yıkama":["turkish"],"yılbaşı":["turkish"],"yıldırım":["turkish"],"yılkı":["turkish"],"yılmaz":["turkish"],"yırtıcı":["turkish"],"yiğit":["turkish"],"yoğurt":["turkish"],"yokuş":["turkish"],"yolcu":["turkish"],"yoldaş":["turkish"],"yolgeçen":["turkish"],"yolkesen":["turkish"],"yolüstü":["turkish"],"yordam":["turkish"],"yorgan":["turkish"],"yorumcu":["turkish"],"yosun":["turkish"],"yöndeş":["turkish"],"yönetim":["turkish"],"yönlü":["turkish"],"yöntem":["turkish"],"yöresel":["turkish"],"yörünge":["turkish"],"yufka":["turkish"],"yukarı":["turkish"],"yumruk":["turkish"],"yumurta":["turkish"],"yuvarlak":["turkish"],"yücelme":["turkish"],"yükçeker":["turkish"],"yüklem":["turkish"],"yüksek":["turkish"],"yürek":["turkish"],"yürütme":["turkish"],"yüzde":["turkish"],"yüzeysel":["turkish"],"yüzgeç":["turkish"],"yüzüstü":["turkish"],"yüzyıl":["turkish"],"zabıta":["turkish"],"zafer":["turkish"],"zahmet":["turkish"],"zambak":["turkish"],"zaptiye":["turkish"],"zarafet":["turkish"],"zaruret":["turkish"],"zeka":["turkish"],"zekice":["turkish"],"zemberek":["turkish"],"zemin":["turkish"],"zencefil":["turkish"],"zeplin":["turkish"],"zeytin":["turkish"],"zıbın":["turkish"],"zılgıt":["turkish"],"zımbırtı":["turkish"],"zımpara":["turkish"],"zıpkın":["turkish"],"zigon":["turkish"],"zihinsel":["turkish"],"zihniyet":["turkish"],"zincir":["turkish"],"zindan":["turkish"],"zirzop":["turkish"],"ziyaret":["turkish"],"ziynet":["turkish"],"zoraki":["turkish"],"zorlu":["turkish"],"zorunlu":["turkish"],"züğürt":["turkish"],"zümre":["turkish"]}')},1839:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.ripemd160=i.RIPEMD160=i.md5=i.MD5=i.sha1=i.SHA1=void 0;const a=n(7202),r=n(9175),t=Uint32Array.from([1732584193,4023233417,2562383102,271733878,3285377520]),s=new Uint32Array(80);class o extends a.HashMD{constructor(){super(64,20,8,!1),this.A=0|t[0],this.B=0|t[1],this.C=0|t[2],this.D=0|t[3],this.E=0|t[4]}get(){const{A:e,B:i,C:n,D:a,E:r}=this;return[e,i,n,a,r]}set(e,i,n,a,r){this.A=0|e,this.B=0|i,this.C=0|n,this.D=0|a,this.E=0|r}process(e,i){for(let n=0;n<16;n++,i+=4)s[n]=e.getUint32(i,!1);for(let e=16;e<80;e++)s[e]=(0,r.rotl)(s[e-3]^s[e-8]^s[e-14]^s[e-16],1);let{A:n,B:t,C:o,D:c,E:h}=this;for(let e=0;e<80;e++){let i,u;e<20?(i=(0,a.Chi)(t,o,c),u=1518500249):e<40?(i=t^o^c,u=1859775393):e<60?(i=(0,a.Maj)(t,o,c),u=2400959708):(i=t^o^c,u=3395469782);const l=(0,r.rotl)(n,5)+i+h+u+s[e]|0;h=c,c=o,o=(0,r.rotl)(t,30),t=n,n=l}n=n+this.A|0,t=t+this.B|0,o=o+this.C|0,c=c+this.D|0,h=h+this.E|0,this.set(n,t,o,c,h)}roundClean(){(0,r.clean)(s)}destroy(){this.set(0,0,0,0,0),(0,r.clean)(this.buffer)}}i.SHA1=o,i.sha1=(0,r.createHasher)(()=>new o);const c=Math.pow(2,32),h=Array.from({length:64},(e,i)=>Math.floor(c*Math.abs(Math.sin(i+1)))),u=t.slice(0,4),l=new Uint32Array(16);class p extends a.HashMD{constructor(){super(64,16,8,!0),this.A=0|u[0],this.B=0|u[1],this.C=0|u[2],this.D=0|u[3]}get(){const{A:e,B:i,C:n,D:a}=this;return[e,i,n,a]}set(e,i,n,a){this.A=0|e,this.B=0|i,this.C=0|n,this.D=0|a}process(e,i){for(let n=0;n<16;n++,i+=4)l[n]=e.getUint32(i,!0);let{A:n,B:t,C:s,D:o}=this;for(let e=0;e<64;e++){let i,c,u;e<16?(i=(0,a.Chi)(t,s,o),c=e,u=[7,12,17,22]):e<32?(i=(0,a.Chi)(o,t,s),c=(5*e+1)%16,u=[5,9,14,20]):e<48?(i=t^s^o,c=(3*e+5)%16,u=[4,11,16,23]):(i=s^(t|~o),c=7*e%16,u=[6,10,15,21]),i=i+n+h[e]+l[c],n=o,o=s,s=t,t+=(0,r.rotl)(i,u[e%4])}n=n+this.A|0,t=t+this.B|0,s=s+this.C|0,o=o+this.D|0,this.set(n,t,s,o)}roundClean(){(0,r.clean)(l)}destroy(){this.set(0,0,0,0),(0,r.clean)(this.buffer)}}i.MD5=p,i.md5=(0,r.createHasher)(()=>new p);const d=Uint8Array.from([7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8]),f=(()=>Uint8Array.from(new Array(16).fill(0).map((e,i)=>i)))(),g=(()=>f.map(e=>(9*e+5)%16))(),m=(()=>{const e=[[f],[g]];for(let i=0;i<4;i++)for(let n of e)n.push(n[i].map(e=>d[e]));return e})(),k=(()=>m[0])(),b=(()=>m[1])(),_=[[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8],[12,13,11,15,6,9,9,7,12,15,11,13,7,8,7,7],[13,15,14,11,7,7,6,8,13,14,13,12,5,5,6,9],[14,11,12,14,8,6,5,5,15,12,15,14,9,9,8,6],[15,12,13,13,9,5,8,6,14,11,12,11,8,6,5,5]].map(e=>Uint8Array.from(e)),y=k.map((e,i)=>e.map(e=>_[i][e])),v=b.map((e,i)=>e.map(e=>_[i][e])),A=Uint32Array.from([0,1518500249,1859775393,2400959708,2840853838]),z=Uint32Array.from([1352829926,1548603684,1836072691,2053994217,0]);function I(e,i,n,a){return 0===e?i^n^a:1===e?i&n|~i&a:2===e?(i|~n)^a:3===e?i&a|n&~a:i^(n|~a)}const E=new Uint32Array(16);class j extends a.HashMD{constructor(){super(64,20,8,!0),this.h0=1732584193,this.h1=-271733879,this.h2=-1732584194,this.h3=271733878,this.h4=-1009589776}get(){const{h0:e,h1:i,h2:n,h3:a,h4:r}=this;return[e,i,n,a,r]}set(e,i,n,a,r){this.h0=0|e,this.h1=0|i,this.h2=0|n,this.h3=0|a,this.h4=0|r}process(e,i){for(let n=0;n<16;n++,i+=4)E[n]=e.getUint32(i,!0);let n=0|this.h0,a=n,t=0|this.h1,s=t,o=0|this.h2,c=o,h=0|this.h3,u=h,l=0|this.h4,p=l;for(let e=0;e<5;e++){const i=4-e,d=A[e],f=z[e],g=k[e],m=b[e],_=y[e],j=v[e];for(let i=0;i<16;i++){const a=(0,r.rotl)(n+I(e,t,o,h)+E[g[i]]+d,_[i])+l|0;n=l,l=h,h=0|(0,r.rotl)(o,10),o=t,t=a}for(let e=0;e<16;e++){const n=(0,r.rotl)(a+I(i,s,c,u)+E[m[e]]+f,j[e])+p|0;a=p,p=u,u=0|(0,r.rotl)(c,10),c=s,s=n}}this.set(this.h1+o+u|0,this.h2+h+p|0,this.h3+l+a|0,this.h4+n+s|0,this.h0+t+c|0)}roundClean(){(0,r.clean)(E)}destroy(){this.destroyed=!0,(0,r.clean)(this.buffer),this.set(0,0,0,0,0)}}i.RIPEMD160=j,i.ripemd160=(0,r.createHasher)(()=>new j)},1843:(e,i,n)=>{"use strict";const{ErrorWithCause:a}=n(5832),{findCauseByReference:r,getErrorCause:t,messageWithCauses:s,stackWithCauses:o}=n(4306);e.exports={ErrorWithCause:a,findCauseByReference:r,getErrorCause:t,stackWithCauses:o,messageWithCauses:s}},1847:e=>{function i(e){return e.length>>>1}function n(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-65+10:e>=97&&e<=102?e-97+10:void 0}e.exports={byteLength:i,toString:function(e){const i=e.byteLength;e=new DataView(e.buffer,e.byteOffset,i);let n="",a=0;for(let r=i-i%4;a<r;a+=4)n+=e.getUint32(a).toString(16).padStart(8,"0");for(;a<i;a++)n+=e.getUint8(a).toString(16).padStart(2,"0");return n},write:function(e,a,r=0,t=i(a)){const s=Math.min(t,e.byteLength-r);for(let i=0;i<s;i++){const t=n(a.charCodeAt(2*i)),s=n(a.charCodeAt(2*i+1));if(void 0===t||void 0===s)return e.subarray(0,i);e[r+i]=t<<4|s}return s}}},1892:e=>{var i,n,a=(()=>{for(var e=new Uint8Array(128),i=0;i<64;i++)e[i<26?i+65:i<52?i+71:i<62?i-4:4*i-205]=i;return i=>{for(var n=i.length,a=new Uint8Array(3*(n-("="==i[n-1])-("="==i[n-2]))/4|0),r=0,t=0;r<n;){var s=e[i.charCodeAt(r++)],o=e[i.charCodeAt(r++)],c=e[i.charCodeAt(r++)],h=e[i.charCodeAt(r++)];a[t++]=s<<2|o>>4,a[t++]=o<<4|c>>2,a[t++]=c<<6|h}return a}})(),r=(i={"wasm-binary:./blake2b.wat"(e,i){i.exports=a("")}},function(){return n||(0,i[Object.keys(i)[0]])((n={exports:{}}).exports,n),n.exports})(),t=WebAssembly.compile(r);e.exports=async e=>(await WebAssembly.instantiate(await t,e)).exports},2004:(e,i,n)=>{const a=n(6667),r=n(6889);if(1!==new Uint16Array([1])[0])throw new Error("Big endian architecture is not supported.");function t(e,i,n){return r(64===e.byteLength,"out must be 'crypto_hash_sha512_BYTES' bytes long"),a().update(i.subarray(0,n)).digest(e),0}e.exports={crypto_hash:function(e,i,n){return t(e,i,n)},crypto_hash_sha512:t,crypto_hash_sha512_BYTES:64,crypto_hash_BYTES:64}},2011:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.assertExhaustive=i.assertStruct=i.assert=i.AssertionError=void 0;const a=n(5620),r=n(5940);function t(e,i){return n=e,Boolean("string"==typeof n?.prototype?.constructor?.name)?new e({message:i}):e({message:i});var n}class s extends Error{constructor(e){super(e.message),this.code="ERR_ASSERTION"}}i.AssertionError=s,i.assert=function(e,i="Assertion failed.",n=s){if(!e){if(i instanceof Error)throw i;throw t(n,i)}},i.assertStruct=function(e,i,n="Assertion failed",o=s){try{(0,a.assert)(e,i)}catch(e){throw t(o,`${n}: ${function(e){return(0,r.getErrorMessage)(e).replace(/\.$/u,"")}(e)}.`)}},i.assertExhaustive=function(e){throw new Error("Invalid branch reached. Should be detected during compilation.")}},2044:(module,__unused_webpack_exports,__webpack_require__)=>{function _regenerator(){var e,i,n="function"==typeof Symbol?Symbol:{},a=n.iterator||"@@iterator",r=n.toStringTag||"@@toStringTag";function t(n,a,r,t){var c=a&&a.prototype instanceof o?a:o,h=Object.create(c.prototype);return _regeneratorDefine2(h,"_invoke",function(n,a,r){var t,o,c,h=0,u=r||[],l=!1,p={p:0,n:0,v:e,a:d,f:d.bind(e,4),d:function(i,n){return t=i,o=0,c=e,p.n=n,s}};function d(n,a){for(o=n,c=a,i=0;!l&&h&&!r&&i<u.length;i++){var r,t=u[i],d=p.p,f=t[2];n>3?(r=f===a)&&(c=t[(o=t[4])?5:(o=3,3)],t[4]=t[5]=e):t[0]<=d&&((r=n<2&&d<t[1])?(o=0,p.v=a,p.n=t[1]):d<f&&(r=n<3||t[0]>a||a>f)&&(t[4]=n,t[5]=a,p.n=f,o=0))}if(r||n>1)return s;throw l=!0,a}return function(r,u,f){if(h>1)throw TypeError("Generator is already running");for(l&&1===u&&d(u,f),o=u,c=f;(i=o<2?e:c)||!l;){t||(o?o<3?(o>1&&(p.n=-1),d(o,c)):p.n=c:p.v=c);try{if(h=2,t){if(o||(r="next"),i=t[r]){if(!(i=i.call(t,c)))throw TypeError("iterator result is not an object");if(!i.done)return i;c=i.value,o<2&&(o=0)}else 1===o&&(i=t.return)&&i.call(t),o<2&&(c=TypeError("The iterator does not provide a '"+r+"' method"),o=1);t=e}else if((i=(l=p.n<0)?c:n.call(a,p))!==s)break}catch(i){t=e,o=1,c=i}finally{h=1}}return{value:i,done:l}}}(n,r,t),!0),h}var s={};function o(){}function c(){}function h(){}i=Object.getPrototypeOf;var u=[][a]?i(i([][a]())):(_regeneratorDefine2(i={},a,function(){return this}),i),l=h.prototype=o.prototype=Object.create(u);function p(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,h):(e.__proto__=h,_regeneratorDefine2(e,r,"GeneratorFunction")),e.prototype=Object.create(l),e}return c.prototype=h,_regeneratorDefine2(l,"constructor",h),_regeneratorDefine2(h,"constructor",c),c.displayName="GeneratorFunction",_regeneratorDefine2(h,r,"GeneratorFunction"),_regeneratorDefine2(l),_regeneratorDefine2(l,r,"Generator"),_regeneratorDefine2(l,a,function(){return this}),_regeneratorDefine2(l,"toString",function(){return"[object Generator]"}),(_regenerator=function(){return{w:t,m:p}})()}function _regeneratorDefine2(e,i,n,a){var r=Object.defineProperty;try{r({},"",{})}catch(e){r=0}_regeneratorDefine2=function(e,i,n,a){function t(i,n){_regeneratorDefine2(e,i,function(e){return this._invoke(i,n,e)})}i?r?r(e,i,{value:n,enumerable:!a,configurable:!a,writable:!a}):e[i]=n:(t("next",0),t("throw",1),t("return",2))},_regeneratorDefine2(e,i,n,a)}function asyncGeneratorStep(e,i,n,a,r,t,s){try{var o=e[t](s),c=o.value}catch(e){return void n(e)}o.done?i(c):Promise.resolve(c).then(a,r)}function _asyncToGenerator(e){return function(){var i=this,n=arguments;return new Promise(function(a,r){var t=e.apply(i,n);function s(e){asyncGeneratorStep(t,a,r,s,o,"next",e)}function o(e){asyncGeneratorStep(t,a,r,s,o,"throw",e)}s(void 0)})}}function _createForOfIteratorHelper(e,i){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||i&&e&&"number"==typeof e.length){n&&(e=n);var a=0,r=function(){};return{s:r,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var t,s=!0,o=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return s=e.done,e},e:function(e){o=!0,t=e},f:function(){try{s||null==n.return||n.return()}finally{if(o)throw t}}}}function _unsupportedIterableToArray(e,i){if(e){if("string"==typeof e)return _arrayLikeToArray(e,i);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,i):void 0}}function _arrayLikeToArray(e,i){(null==i||i>e.length)&&(i=e.length);for(var n=0,a=Array(i);n<i;n++)a[n]=e[n];return a}var mnemonicUtils=__webpack_require__(2878),_require=__webpack_require__(2343),bech32m=_require.bech32m,b4a=__webpack_require__(5682),_require2=__webpack_require__(7675),TRAC_PUB_KEY_SIZE=_require2.TRAC_PUB_KEY_SIZE,TRAC_PRIV_KEY_SIZE=_require2.TRAC_PRIV_KEY_SIZE,runtime=__webpack_require__(8308),SLIP10Node;if(runtime.isBare()){var options="{ with: { imports: '../package.json' } }",modulePath="@metamask/key-tree",keyTreeModule=eval("require('".concat(modulePath,"', ").concat(options,")"));SLIP10Node=keyTreeModule.SLIP10Node;var util=__webpack_require__(409);globalThis.TextEncoder=util.TextEncoder,globalThis.TextDecoder=util.TextDecoder}else SLIP10Node=__webpack_require__(6956).SLIP10Node;function _isValidHrp(e){if("string"!=typeof e||e.length<1||e.length>83)return!1;for(var i=0;i<e.length;i++){var n=e.charCodeAt(i);if(n<97||n>122)return!1}return!0}function _validateHrp(e){if(!_isValidHrp(e))throw new Error("Invalid HRP. It must be a non-empty string with length between 1 and 83 characters, consisting of printable ASCII characters.")}function _sanitizeDerivationPath(e){if("string"!=typeof e)throw new TypeError("Derivation path must be a string");if(!(e=e.replace(/\s+/g,"")).startsWith("m/"))throw new Error("Derivation path must start with 'm/'");var i=e.split("/").map(function(e){return e.trim()});if(i.shift(),i.length<1)throw new Error("Derivation path must have at least one child segment");var n,a=/^\d+'$/,r=[],t=_createForOfIteratorHelper(i);try{for(t.s();!(n=t.n()).done;){var s=n.value;if(!a.test(s))throw new Error("Invalid segment: '".concat(s,"'. Only hardened segments (e.g. 0') are supported."));r.push("slip10:".concat(s))}}catch(e){t.e(e)}finally{t.f()}return{safePath:e,slip10Segments:r}}function _generateKeyPair(e){return _generateKeyPair2.apply(this,arguments)}function _generateKeyPair2(){return _generateKeyPair2=_asyncToGenerator(_regenerator().m(function e(i){var n,a,r,t,s,o,c,h,u,l,p,d,f=arguments;return _regenerator().w(function(e){for(;;)switch(e.n){case 0:for(a=f.length>2&&void 0!==f[2]?f[2]:null,r=null===(n=f.length>1&&void 0!==f[1]?f[1]:null)?mnemonicUtils.generate():mnemonicUtils.sanitize(n),null===a&&(a="m/0'/0'/0'"),t=["bip39:".concat(r)],s=0;s<i.length;s++)t.push("slip10:".concat(i[s],"'"));return e.n=1,SLIP10Node.fromDerivationPath({curve:"ed25519",derivationPath:t});case 1:return o=e.v,c=_sanitizeDerivationPath(a),h=c.safePath,u=c.slip10Segments,e.n=2,o.derive(u);case 2:if(l=e.v,p=b4a.from(l.publicKeyBytes.subarray(1)),d=b4a.concat([b4a.from(l.privateKeyBytes),p]),p.length===TRAC_PUB_KEY_SIZE){e.n=3;break}throw new Error("Derived public key has invalid length. Expected ".concat(TRAC_PUB_KEY_SIZE,", got ").concat(p.length));case 3:if(d.length===TRAC_PRIV_KEY_SIZE){e.n=4;break}throw new Error("Derived secret key has invalid length. Expected ".concat(TRAC_PRIV_KEY_SIZE,", got ").concat(d.length));case 4:return e.a(2,{publicKey:p,secretKey:d,mnemonic:r,derivationPath:h})}},e)})),_generateKeyPair2.apply(this,arguments)}function isValid(e){var i=function(e){var i={prefix:null,suffix:null};if("string"==typeof e){var n=e.indexOf("1");n>-1&&(i.prefix=e.slice(0,n),i.suffix=e.slice(n+1))}return i}(e),n=i.prefix,a=i.suffix,r=Math.ceil(8*TRAC_PUB_KEY_SIZE/5)+6;return"string"==typeof n&&"string"==typeof a&&_isValidHrp(n)&&/^[qpzry9x8gf2tvdw0s3jn54khce6mua7l]+$/.test(a)&&a.length===r}function toBuffer(e){if(!isValid(e))throw new Error("Invalid address");return b4a.from(e,"ascii")}function fromBuffer(e){if(!b4a.isBuffer(e))throw new Error("Invalid input: buffer must be a Buffer");return e.toString("ascii")}function encode(e,i){if(_validateHrp(e),!b4a.isBuffer(i)||i.length!==TRAC_PUB_KEY_SIZE)throw new Error("Invalid public key. Expected a Buffer of length ".concat(TRAC_PUB_KEY_SIZE,", got ").concat(i.length));var n=bech32m.toWords(i);return bech32m.encode(e,n)}function decode(e){var i=bech32m.decode(e).words,n=b4a.from(bech32m.fromWords(i));if(n.length!==TRAC_PUB_KEY_SIZE)throw new Error("Decoded buffer is invalid. Expected ".concat(TRAC_PUB_KEY_SIZE," bytes, got ").concat(n.length," bytes"));return n}function generate(e){return _generate.apply(this,arguments)}function _generate(){return _generate=_asyncToGenerator(_regenerator().m(function e(i){var n,a,r,t,s,o=arguments;return _regenerator().w(function(e){for(;;)switch(e.n){case 0:return n=o.length>1&&void 0!==o[1]?o[1]:null,a=o.length>2&&void 0!==o[2]?o[2]:null,_validateHrp(i),r=b4a.from(i,"utf8"),e.n=1,_generateKeyPair(r,n,a);case 1:return t=e.v,s=encode(i,t.publicKey),e.a(2,{address:s,publicKey:t.publicKey,secretKey:t.secretKey,mnemonic:t.mnemonic,derivationPath:t.derivationPath})}},e)})),_generate.apply(this,arguments)}function fromSecretKey(e,i){if(!b4a.isBuffer(i)||i.length!==TRAC_PRIV_KEY_SIZE)throw new Error("Invalid secret key. Expected a Buffer of length ".concat(TRAC_PRIV_KEY_SIZE,", got ").concat(i.length));var n=i.subarray(32);return{address:encode(e,n),publicKey:n,secretKey:i}}function size(e){if(!_isValidHrp(e))throw new Error("Invalid HRP. It must be a non-empty string with length between 1 and 83 characters, consisting of printable ASCII characters.");return e.length+1+Math.ceil(8*TRAC_PUB_KEY_SIZE/5)+6}module.exports={generate,encode,decode,size,isValid,toBuffer,fromBuffer,fromSecretKey,PUB_KEY_SIZE:TRAC_PUB_KEY_SIZE,PRIV_KEY_SIZE:TRAC_PRIV_KEY_SIZE}},2110:(e,i,n)=>{const a=n(1783),r=n(4309);var t=a;e.exports=function(){return new t},e.exports.ready=function(e){r.ready(function(){e()})},e.exports.WASM_SUPPORTED=r.WASM_SUPPORTED,e.exports.WASM_LOADED=!1,e.exports.SHA256_BYTES=32,r.ready(function(i){i||(e.exports.WASM_LOADED=!0,e.exports=t=r)})},2139:(e,i,n)=>{"use strict";const a=Symbol("SemVer ANY");class r{static get ANY(){return a}constructor(e,i){if(i=t(i),e instanceof r){if(e.loose===!!i.loose)return e;e=e.value}e=e.trim().split(/\s+/).join(" "),h("comparator",e,i),this.options=i,this.loose=!!i.loose,this.parse(e),this.semver===a?this.value="":this.value=this.operator+this.semver.version,h("comp",this)}parse(e){const i=this.options.loose?s[o.COMPARATORLOOSE]:s[o.COMPARATOR],n=e.match(i);if(!n)throw new TypeError(`Invalid comparator: ${e}`);this.operator=void 0!==n[1]?n[1]:"","="===this.operator&&(this.operator=""),n[2]?this.semver=new u(n[2],this.options.loose):this.semver=a}toString(){return this.value}test(e){if(h("Comparator.test",e,this.options.loose),this.semver===a||e===a)return!0;if("string"==typeof e)try{e=new u(e,this.options)}catch(e){return!1}return c(e,this.operator,this.semver,this.options)}intersects(e,i){if(!(e instanceof r))throw new TypeError("a Comparator is required");return""===this.operator?""===this.value||new l(e.value,i).test(this.value):""===e.operator?""===e.value||new l(this.value,i).test(e.semver):!((i=t(i)).includePrerelease&&("<0.0.0-0"===this.value||"<0.0.0-0"===e.value)||!i.includePrerelease&&(this.value.startsWith("<0.0.0")||e.value.startsWith("<0.0.0"))||(!this.operator.startsWith(">")||!e.operator.startsWith(">"))&&(!this.operator.startsWith("<")||!e.operator.startsWith("<"))&&(this.semver.version!==e.semver.version||!this.operator.includes("=")||!e.operator.includes("="))&&!(c(this.semver,"<",e.semver,i)&&this.operator.startsWith(">")&&e.operator.startsWith("<"))&&!(c(this.semver,">",e.semver,i)&&this.operator.startsWith("<")&&e.operator.startsWith(">")))}}e.exports=r;const t=n(9932),{safeRe:s,t:o}=n(4567),c=n(3646),h=n(2207),u=n(4739),l=n(5926)},2196:(e,i,n)=>{"use strict";const a=n(2643),r=n(8317);e.exports=(e,i,n)=>{const t=[];let s=null,o=null;const c=e.sort((e,i)=>r(e,i,n));for(const e of c)a(e,i,n)?(o=e,s||(s=e)):(o&&t.push([s,o]),o=null,s=null);s&&t.push([s,null]);const h=[];for(const[e,i]of t)e===i?h.push(e):i||e!==c[0]?i?e===c[0]?h.push(`<=${i}`):h.push(`${e} - ${i}`):h.push(`>=${e}`):h.push("*");const u=h.join(" || "),l="string"==typeof i.raw?i.raw:String(i);return u.length<l.length?u:i}},2201:e=>{"use strict";e.exports=JSON.parse('["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","académie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acquérir","acronyme","acteur","actif","actuel","adepte","adéquat","adhésif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","aérer","aéronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agréable","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","algèbre","algue","aliéner","aliment","alléger","alliage","allouer","allumer","alourdir","alpaga","altesse","alvéole","amateur","ambigu","ambre","aménager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","anéantir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","apéritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","artériel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannière","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","bélier","belote","bénéfice","berceau","berger","berline","bermuda","besace","besogne","bétail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","brèche","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","caféine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","caméra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","cédille","ceinture","céleste","cellule","cendrier","censurer","central","cercle","cérébral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","chéquier","chercher","cheval","chien","chiffre","chignon","chimère","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cinéma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohésion","coiffer","coincer","colère","colibri","colline","colmater","colonel","combat","comédie","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","cortège","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","créature","créditer","crémeux","creuser","crevette","cribler","crier","cristal","critère","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuillère","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","débattre","débiter","déborder","débrider","débutant","décaler","décembre","déchirer","décider","déclarer","décorer","décrire","décupler","dédale","déductif","déesse","défensif","défiler","défrayer","dégager","dégivrer","déglutir","dégrafer","déjeuner","délice","déloger","demander","demeurer","démolir","dénicher","dénouer","dentelle","dénuder","départ","dépenser","déphaser","déplacer","déposer","déranger","dérober","désastre","descente","désert","désigner","désobéir","dessiner","destrier","détacher","détester","détourer","détresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","différer","digérer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","éblouir","écarter","écharpe","échelle","éclairer","éclipse","éclore","écluse","école","économie","écorce","écouter","écraser","écrémer","écrivain","écrou","écume","écureuil","édifier","éduquer","effacer","effectif","effigie","effort","effrayer","effusion","égaliser","égarer","éjecter","élaborer","élargir","électron","élégant","éléphant","élève","éligible","élitisme","éloge","élucider","éluder","emballer","embellir","embryon","émeraude","émission","emmener","émotion","émouvoir","empereur","employer","emporter","emprise","émulsion","encadrer","enchère","enclave","encoche","endiguer","endosser","endroit","enduire","énergie","enfance","enfermer","enfouir","engager","engin","englober","énigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","énumérer","envahir","enviable","envoyer","enzyme","éolien","épaissir","épargne","épatant","épaule","épicerie","épidémie","épier","épilogue","épine","épisode","épitaphe","époque","épreuve","éprouver","épuisant","équerre","équipe","ériger","érosion","erreur","éruption","escalier","espadon","espèce","espiègle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","étagère","étaler","étanche","étatique","éteindre","étendoir","éternel","éthanol","éthique","ethnie","étirer","étoffer","étoile","étonnant","étourdir","étrange","étroit","étude","euphorie","évaluer","évasion","éventail","évidence","éviter","évolutif","évoquer","exact","exagérer","exaucer","exceller","excitant","exclusif","excuse","exécuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expédier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fébrile","féconder","fédérer","félin","femme","fémur","fendoir","féodal","fermer","féroce","ferveur","festival","feuille","feutre","février","fiasco","ficeler","fictif","fidèle","figure","filature","filetage","filière","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fléau","flèche","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fougère","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","frégate","freiner","frelon","frémir","frénésie","frère","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","géant","gélatine","gélule","gendarme","général","génie","genou","gentil","géologie","géomètre","géranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruyère","guépard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","hélium","hématome","herbe","hérisson","hermine","héron","hésiter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homogène","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygiène","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impérial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","inédit","ineptie","inexact","infini","infliger","informer","infusion","ingérer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irréel","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juvénile","kayak","kimono","kiosque","label","labial","labourer","lacérer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","légal","léger","légume","lessive","lettre","levier","lexique","lézard","liasse","libérer","libre","licence","licorne","liège","lièvre","ligature","ligoter","ligue","limer","limite","limonade","limpide","linéaire","lingot","lionceau","liquide","lisière","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumière","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","maléfice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","matériel","matière","matraque","maudire","maussade","mauve","maximal","méchant","méconnu","médaille","médecin","méditer","méduse","meilleur","mélange","mélodie","membre","mémoire","menacer","mener","menhir","mensonge","mentor","mercredi","mérite","merle","messager","mesure","métal","météore","méthode","métier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","minéral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","murène","murmure","muscle","muséum","musicien","mutation","muter","mutuel","myriade","myrtille","mystère","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","nébuleux","nectar","néfaste","négation","négliger","négocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","numéro","nuptial","nuque","nutritif","obéir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","océan","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","onéreux","onirique","opale","opaque","opérer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxygène","ozone","paisible","palace","palmarès","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","pastèque","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pélican","pelle","pelouse","peluche","pendule","pénétrer","pénible","pensif","pénurie","pépite","péplum","perdrix","perforer","période","permuter","perplexe","persil","perte","peser","pétale","petit","pétrir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pièce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poésie","poète","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","pondérer","poney","portique","position","posséder","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","précieux","prédire","préfixe","prélude","prénom","présence","prétexte","prévoir","primitif","prince","prison","priver","problème","procéder","prodige","profond","progrès","proie","projeter","prologue","promener","propre","prospère","protéger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quiétude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","réactif","réagir","réaliser","réanimer","recevoir","réciter","réclamer","récolter","recruter","reculer","recycler","rédiger","redouter","refaire","réflexe","réformer","refrain","refuge","régalien","région","réglage","régulier","réitérer","rejeter","rejouer","relatif","relever","relief","remarque","remède","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","réserve","résineux","résoudre","respect","rester","résultat","rétablir","retenir","réticule","retomber","retracer","réunion","réussir","revanche","revivre","révolte","révulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivière","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","scélérat","scénario","sceptre","schéma","science","scinder","score","scrutin","sculpter","séance","sécable","sécher","secouer","sécréter","sédatif","séduire","seigneur","séjour","sélectif","semaine","sembler","semence","séminal","sénateur","sensible","sentence","séparer","séquence","serein","sergent","sérieux","serrure","sérum","service","sésame","sévir","sevrage","sextuple","sidéral","siècle","siéger","siffler","sigle","signal","silence","silicium","simple","sincère","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spécial","sphère","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succès","sucre","suffixe","suggérer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","symétrie","synapse","syntaxe","système","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","témoin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","tétine","texte","thème","théorie","thérapie","thorax","tibia","tiède","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tolérant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","trèfle","tremper","trésor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","végétal","véhicule","veinard","véloce","vendredi","vénérer","venger","venimeux","ventouse","verdure","vérin","vernir","verrou","verser","vertu","veston","vétéran","vétuste","vexant","vexer","viaduc","viande","victoire","vidange","vidéo","vignette","vigueur","vilain","village","vinaigre","violon","vipère","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xénon","yacht","zèbre","zénith","zeste","zoologie"]')},2206:(e,i,n)=>{var a=n(6889),r=n(1685);function t(e,i,n){var a=e[i]+e[n],r=e[i+1]+e[n+1];a>=4294967296&&r++,e[i]=a,e[i+1]=r}function s(e,i,n,a){var r=e[i]+n;n<0&&(r+=4294967296);var t=e[i+1]+a;r>=4294967296&&t++,e[i]=r,e[i+1]=t}function o(e,i){return e[i]^e[i+1]<<8^e[i+2]<<16^e[i+3]<<24}function c(e,i,n,a,r,o){var c=p[r],h=p[r+1],u=p[o],d=p[o+1];t(l,e,i),s(l,e,c,h);var f=l[a]^l[e],g=l[a+1]^l[e+1];l[a]=g,l[a+1]=f,t(l,n,a),f=l[i]^l[n],g=l[i+1]^l[n+1],l[i]=f>>>24^g<<8,l[i+1]=g>>>24^f<<8,t(l,e,i),s(l,e,u,d),f=l[a]^l[e],g=l[a+1]^l[e+1],l[a]=f>>>16^g<<16,l[a+1]=g>>>16^f<<16,t(l,n,a),f=l[i]^l[n],g=l[i+1]^l[n+1],l[i]=g>>>31^f<<1,l[i+1]=f>>>31^g<<1}var h=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),u=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3].map(function(e){return 2*e})),l=new Uint32Array(32),p=new Uint32Array(32);function d(e,i){var n=0;for(n=0;n<16;n++)l[n]=e.h[n],l[n+16]=h[n];for(l[24]=l[24]^e.t,l[25]=l[25]^e.t/4294967296,i&&(l[28]=~l[28],l[29]=~l[29]),n=0;n<32;n++)p[n]=o(e.b,4*n);for(n=0;n<12;n++)c(0,8,16,24,u[16*n+0],u[16*n+1]),c(2,10,18,26,u[16*n+2],u[16*n+3]),c(4,12,20,28,u[16*n+4],u[16*n+5]),c(6,14,22,30,u[16*n+6],u[16*n+7]),c(0,10,20,30,u[16*n+8],u[16*n+9]),c(2,12,22,24,u[16*n+10],u[16*n+11]),c(4,14,16,26,u[16*n+12],u[16*n+13]),c(6,8,18,28,u[16*n+14],u[16*n+15]);for(n=0;n<16;n++)e.h[n]=e.h[n]^l[n]^l[n+16]}var f=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);function g(e,i,n,a){f.fill(0),this.b=new Uint8Array(128),this.h=new Uint32Array(16),this.t=0,this.c=0,this.outlen=e,f[0]=e,i&&(f[1]=i.length),f[2]=1,f[3]=1,n&&f.set(n,32),a&&f.set(a,48);for(var r=0;r<16;r++)this.h[r]=h[r]^o(f,4*r);i&&(m(this,i),this.c=128)}function m(e,i){for(var n=0;n<i.length;n++)128===e.c&&(e.t+=e.c,d(e,!1),e.c=0),e.b[e.c++]=i[n]}function k(e){return e<16?"0"+e.toString(16):e.toString(16)}g.prototype.update=function(e){return a(e instanceof Uint8Array,"input must be Uint8Array or Buffer"),m(this,e),this},g.prototype.digest=function(e){var i=e&&"binary"!==e&&"hex"!==e?e:new Uint8Array(this.outlen);return a(i instanceof Uint8Array,'out must be "binary", "hex", Uint8Array, or Buffer'),a(i.length>=this.outlen,"out must have at least outlen bytes of space"),function(e,i){for(e.t+=e.c;e.c<128;)e.b[e.c++]=0;d(e,!0);for(var n=0;n<e.outlen;n++)i[n]=e.h[n>>2]>>8*(3&n)}(this,i),"hex"===e?function(e){for(var i="",n=0;n<e.length;n++)i+=k(e[n]);return i}(i):i},g.prototype.final=g.prototype.digest,g.ready=function(e){r.ready(function(){e()})};var b=g;e.exports=function(e,i,n,r,t){return!0!==t&&(a(e>=_,"outlen must be at least "+_+", was given "+e),a(e<=y,"outlen must be at most "+y+", was given "+e),null!=i&&(a(i instanceof Uint8Array,"key must be Uint8Array or Buffer"),a(i.length>=v,"key must be at least "+v+", was given "+i.length),a(i.length<=A,"key must be at most "+A+", was given "+i.length)),null!=n&&(a(n instanceof Uint8Array,"salt must be Uint8Array or Buffer"),a(n.length===z,"salt must be exactly "+z+", was given "+n.length)),null!=r&&(a(r instanceof Uint8Array,"personal must be Uint8Array or Buffer"),a(r.length===I,"personal must be exactly "+I+", was given "+r.length))),new b(e,i,n,r)},e.exports.ready=function(e){r.ready(function(){e()})},e.exports.WASM_SUPPORTED=r.SUPPORTED,e.exports.WASM_LOADED=!1;var _=e.exports.BYTES_MIN=16,y=e.exports.BYTES_MAX=64,v=(e.exports.BYTES=32,e.exports.KEYBYTES_MIN=16),A=e.exports.KEYBYTES_MAX=64,z=(e.exports.KEYBYTES=32,e.exports.SALTBYTES=16),I=e.exports.PERSONALBYTES=16;r.ready(function(i){i||(e.exports.WASM_LOADED=!0,e.exports=r)})},2207:e=>{"use strict";const i="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{};e.exports=i},2318:(e,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.toBig=i.shrSL=i.shrSH=i.rotrSL=i.rotrSH=i.rotrBL=i.rotrBH=i.rotr32L=i.rotr32H=i.rotlSL=i.rotlSH=i.rotlBL=i.rotlBH=i.add5L=i.add5H=i.add4L=i.add4H=i.add3L=i.add3H=void 0,i.add=_,i.fromBig=r,i.split=t;const n=BigInt(2**32-1),a=BigInt(32);function r(e,i=!1){return i?{h:Number(e&n),l:Number(e>>a&n)}:{h:0|Number(e>>a&n),l:0|Number(e&n)}}function t(e,i=!1){const n=e.length;let a=new Uint32Array(n),t=new Uint32Array(n);for(let s=0;s<n;s++){const{h:n,l:o}=r(e[s],i);[a[s],t[s]]=[n,o]}return[a,t]}const s=(e,i)=>BigInt(e>>>0)<<a|BigInt(i>>>0);i.toBig=s;const o=(e,i,n)=>e>>>n;i.shrSH=o;const c=(e,i,n)=>e<<32-n|i>>>n;i.shrSL=c;const h=(e,i,n)=>e>>>n|i<<32-n;i.rotrSH=h;const u=(e,i,n)=>e<<32-n|i>>>n;i.rotrSL=u;const l=(e,i,n)=>e<<64-n|i>>>n-32;i.rotrBH=l;const p=(e,i,n)=>e>>>n-32|i<<64-n;i.rotrBL=p;const d=(e,i)=>i;i.rotr32H=d;const f=(e,i)=>e;i.rotr32L=f;const g=(e,i,n)=>e<<n|i>>>32-n;i.rotlSH=g;const m=(e,i,n)=>i<<n|e>>>32-n;i.rotlSL=m;const k=(e,i,n)=>i<<n-32|e>>>64-n;i.rotlBH=k;const b=(e,i,n)=>e<<n-32|i>>>64-n;function _(e,i,n,a){const r=(i>>>0)+(a>>>0);return{h:e+n+(r/2**32|0)|0,l:0|r}}i.rotlBL=b;const y=(e,i,n)=>(e>>>0)+(i>>>0)+(n>>>0);i.add3L=y;const v=(e,i,n,a)=>i+n+a+(e/2**32|0)|0;i.add3H=v;const A=(e,i,n,a)=>(e>>>0)+(i>>>0)+(n>>>0)+(a>>>0);i.add4L=A;const z=(e,i,n,a,r)=>i+n+a+r+(e/2**32|0)|0;i.add4H=z;const I=(e,i,n,a,r)=>(e>>>0)+(i>>>0)+(n>>>0)+(a>>>0)+(r>>>0);i.add5L=I;const E=(e,i,n,a,r,t)=>i+n+a+r+t+(e/2**32|0)|0;i.add5H=E;const j={fromBig:r,split:t,toBig:s,shrSH:o,shrSL:c,rotrSH:h,rotrSL:u,rotrBH:l,rotrBL:p,rotr32H:d,rotr32L:f,rotlSH:g,rotlSL:m,rotlBH:k,rotlBL:b,add:_,add3L:y,add3H:v,add4L:A,add4H:z,add5H:E,add5L:I};i.default=j},2343:(e,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.bech32m=i.bech32=void 0;const n="qpzry9x8gf2tvdw0s3jn54khce6mua7l",a={};for(let e=0;e<32;e++){const i=n.charAt(e);a[i]=e}function r(e){const i=e>>25;return(33554431&e)<<5^996825010&-(1&i)^642813549&-(i>>1&1)^513874426&-(i>>2&1)^1027748829&-(i>>3&1)^705979059&-(i>>4&1)}function t(e){let i=1;for(let n=0;n<e.length;++n){const a=e.charCodeAt(n);if(a<33||a>126)return"Invalid prefix ("+e+")";i=r(i)^a>>5}i=r(i);for(let n=0;n<e.length;++n){const a=e.charCodeAt(n);i=r(i)^31&a}return i}function s(e,i,n,a){let r=0,t=0;const s=(1<<n)-1,o=[];for(let a=0;a<e.length;++a)for(r=r<<i|e[a],t+=i;t>=n;)t-=n,o.push(r>>t&s);if(a)t>0&&o.push(r<<n-t&s);else{if(t>=i)return"Excess padding";if(r<<n-t&s)return"Non-zero padding"}return o}function o(e){return s(e,8,5,!0)}function c(e){const i=s(e,5,8,!1);if(Array.isArray(i))return i}function h(e){const i=s(e,5,8,!1);if(Array.isArray(i))return i;throw new Error(i)}function u(e){let i;function s(e,n){if(n=n||90,e.length<8)return e+" too short";if(e.length>n)return"Exceeds length limit";const s=e.toLowerCase(),o=e.toUpperCase();if(e!==s&&e!==o)return"Mixed-case string "+e;const c=(e=s).lastIndexOf("1");if(-1===c)return"No separator character for "+e;if(0===c)return"Missing prefix for "+e;const h=e.slice(0,c),u=e.slice(c+1);if(u.length<6)return"Data too short";let l=t(h);if("string"==typeof l)return l;const p=[];for(let e=0;e<u.length;++e){const i=u.charAt(e),n=a[i];if(void 0===n)return"Unknown character "+i;l=r(l)^n,e+6>=u.length||p.push(n)}return l!==i?"Invalid checksum for "+e:{prefix:h,words:p}}return i="bech32"===e?1:734539939,{decodeUnsafe:function(e,i){const n=s(e,i);if("object"==typeof n)return n},decode:function(e,i){const n=s(e,i);if("object"==typeof n)return n;throw new Error(n)},encode:function(e,a,s){if(s=s||90,e.length+7+a.length>s)throw new TypeError("Exceeds length limit");let o=t(e=e.toLowerCase());if("string"==typeof o)throw new Error(o);let c=e+"1";for(let e=0;e<a.length;++e){const i=a[e];if(i>>5)throw new Error("Non 5-bit word");o=r(o)^i,c+=n.charAt(i)}for(let e=0;e<6;++e)o=r(o);o^=i;for(let e=0;e<6;++e)c+=n.charAt(o>>5*(5-e)&31);return c},toWords:o,fromWordsUnsafe:c,fromWords:h}}i.bech32=u("bech32"),i.bech32m=u("bech32m")},2367:function(e,i,n){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,i,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(i,n);r&&!("get"in r?!i.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return i[n]}}),Object.defineProperty(e,a,r)}:function(e,i,n,a){void 0===a&&(a=n),e[a]=i[n]}),r=this&&this.__exportStar||function(e,i){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(i,n)||a(i,e,n)};Object.defineProperty(i,"__esModule",{value:!0}),i.unitMap=i.getValueOfUnit=i.numberToString=i.fromWei=i.toWei=i.remove0x=i.add0x=i.isValidChecksumAddress=i.getChecksumAddress=i.isValidHexAddress=i.assertIsStrictHexString=i.assertIsHexString=i.isHexChecksumAddress=i.isHexAddress=i.isStrictHexString=i.isHexString=i.HexChecksumAddressStruct=i.HexAddressStruct=i.StrictHexStruct=i.HexStruct=void 0,r(n(2011),i),r(n(472),i),r(n(7862),i),r(n(7690),i),r(n(8860),i),r(n(5211),i),r(n(4180),i),r(n(1630),i),r(n(5940),i);var t=n(3976);Object.defineProperty(i,"HexStruct",{enumerable:!0,get:function(){return t.HexStruct}}),Object.defineProperty(i,"StrictHexStruct",{enumerable:!0,get:function(){return t.StrictHexStruct}}),Object.defineProperty(i,"HexAddressStruct",{enumerable:!0,get:function(){return t.HexAddressStruct}}),Object.defineProperty(i,"HexChecksumAddressStruct",{enumerable:!0,get:function(){return t.HexChecksumAddressStruct}}),Object.defineProperty(i,"isHexString",{enumerable:!0,get:function(){return t.isHexString}}),Object.defineProperty(i,"isStrictHexString",{enumerable:!0,get:function(){return t.isStrictHexString}}),Object.defineProperty(i,"isHexAddress",{enumerable:!0,get:function(){return t.isHexAddress}}),Object.defineProperty(i,"isHexChecksumAddress",{enumerable:!0,get:function(){return t.isHexChecksumAddress}}),Object.defineProperty(i,"assertIsHexString",{enumerable:!0,get:function(){return t.assertIsHexString}}),Object.defineProperty(i,"assertIsStrictHexString",{enumerable:!0,get:function(){return t.assertIsStrictHexString}}),Object.defineProperty(i,"isValidHexAddress",{enumerable:!0,get:function(){return t.isValidHexAddress}}),Object.defineProperty(i,"getChecksumAddress",{enumerable:!0,get:function(){return t.getChecksumAddress}}),Object.defineProperty(i,"isValidChecksumAddress",{enumerable:!0,get:function(){return t.isValidChecksumAddress}}),Object.defineProperty(i,"add0x",{enumerable:!0,get:function(){return t.add0x}}),Object.defineProperty(i,"remove0x",{enumerable:!0,get:function(){return t.remove0x}}),r(n(87),i),r(n(4956),i),r(n(8912),i),r(n(3745),i),r(n(5770),i),r(n(3028),i),r(n(2812),i),r(n(1805),i),r(n(2954),i),r(n(6871),i),r(n(9266),i);var s=n(8534);Object.defineProperty(i,"toWei",{enumerable:!0,get:function(){return s.toWei}}),Object.defineProperty(i,"fromWei",{enumerable:!0,get:function(){return s.fromWei}}),Object.defineProperty(i,"numberToString",{enumerable:!0,get:function(){return s.numberToString}}),Object.defineProperty(i,"getValueOfUnit",{enumerable:!0,get:function(){return s.getValueOfUnit}}),Object.defineProperty(i,"unitMap",{enumerable:!0,get:function(){return s.unitMap}})},2373:(e,i,n)=>{"use strict";const a=n(2944);e.exports=(e,i,n)=>a(e,i,"<",n)},2422:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.wNAF=void 0,i.negateCt=o,i.normalizeZ=function(e,i){const n=(0,r.FpInvertBatch)(e.Fp,i.map(e=>e.Z));return i.map((i,a)=>e.fromAffine(i.toAffine(n[a])))},i.mulEndoUnsafe=function(e,i,n,a){let r=i,o=e.ZERO,c=e.ZERO;for(;n>t||a>t;)n&s&&(o=o.add(r)),a&s&&(c=c.add(r)),r=r.double(),n>>=s,a>>=s;return{p1:o,p2:c}},i.pippenger=function(e,i,n,r){l(n,e),p(r,i);const t=n.length,s=r.length;if(t!==s)throw new Error("arrays of points and scalars must have equal length");const o=e.ZERO,c=(0,a.bitLen)(BigInt(t));let h=1;c>12?h=c-3:c>4?h=c-2:c>0&&(h=2);const u=(0,a.bitMask)(h),d=new Array(Number(u)+1).fill(o);let f=o;for(let e=Math.floor((i.BITS-1)/h)*h;e>=0;e-=h){d.fill(o);for(let i=0;i<s;i++){const a=r[i],t=Number(a>>BigInt(e)&u);d[t]=d[t].add(n[i])}let i=o;for(let e=d.length-1,n=o;e>0;e--)n=n.add(d[e]),i=i.add(n);if(f=f.add(i),0!==e)for(let e=0;e<h;e++)f=f.double()}return f},i.precomputeMSMUnsafe=function(e,i,n,r){c(r,i.BITS),l(n,e);const t=e.ZERO,s=2**r-1,o=Math.ceil(i.BITS/r),h=(0,a.bitMask)(r),u=n.map(e=>{const i=[];for(let n=0,a=e;n<s;n++)i.push(a),a=a.add(e);return i});return e=>{if(p(e,i),e.length>n.length)throw new Error("array of scalars must be smaller than array of points");let a=t;for(let i=0;i<o;i++){if(a!==t)for(let e=0;e<r;e++)a=a.double();const n=BigInt(o*r-(i+1)*r);for(let i=0;i<e.length;i++){const r=e[i],t=Number(r>>n&h);t&&(a=a.add(u[i][t-1]))}}return a}},i.validateBasic=function(e){return(0,r.validateField)(e.Fp),(0,a.validateObject)(e,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...(0,r.nLength)(e.n,e.nBitLength),...e,p:e.Fp.ORDER})},i._createCurveFields=function(e,i,n={},a){if(void 0===a&&(a="edwards"===e),!i||"object"!=typeof i)throw new Error(`expected valid ${e} CURVE object`);for(const e of["p","n","h"]){const n=i[e];if(!("bigint"==typeof n&&n>t))throw new Error(`CURVE.${e} must be positive bigint`)}const r=k(i.p,n.Fp,a),s=k(i.n,n.Fn,a),o=["Gx","Gy","a","weierstrass"===e?"b":"d"];for(const e of o)if(!r.isValid(i[e]))throw new Error(`CURVE.${e} must be valid field element of CURVE.Fp`);return{CURVE:i=Object.freeze(Object.assign({},i)),Fp:r,Fn:s}};const a=n(8627),r=n(4967),t=BigInt(0),s=BigInt(1);function o(e,i){const n=i.negate();return e?n:i}function c(e,i){if(!Number.isSafeInteger(e)||e<=0||e>i)throw new Error("invalid window size, expected [1.."+i+"], got W="+e)}function h(e,i){c(e,i);const n=2**e;return{windows:Math.ceil(i/e)+1,windowSize:2**(e-1),mask:(0,a.bitMask)(e),maxNumber:n,shiftBy:BigInt(e)}}function u(e,i,n){const{windowSize:a,mask:r,maxNumber:t,shiftBy:o}=n;let c=Number(e&r),h=e>>o;c>a&&(c-=t,h+=s);const u=i*a;return{nextN:h,offset:u+Math.abs(c)-1,isZero:0===c,isNeg:c<0,isNegF:i%2!=0,offsetF:u}}function l(e,i){if(!Array.isArray(e))throw new Error("array expected");e.forEach((e,n)=>{if(!(e instanceof i))throw new Error("invalid point at index "+n)})}function p(e,i){if(!Array.isArray(e))throw new Error("array of scalars expected");e.forEach((e,n)=>{if(!i.isValid(e))throw new Error("invalid scalar at index "+n)})}const d=new WeakMap,f=new WeakMap;function g(e){return f.get(e)||1}function m(e){if(e!==t)throw new Error("invalid wNAF")}function k(e,i,n){if(i){if(i.ORDER!==e)throw new Error("Field.ORDER must match order: Fp == p, Fn == n");return(0,r.validateField)(i),i}return(0,r.Field)(e,{isLE:n})}i.wNAF=class{constructor(e,i){this.BASE=e.BASE,this.ZERO=e.ZERO,this.Fn=e.Fn,this.bits=i}_unsafeLadder(e,i,n=this.ZERO){let a=e;for(;i>t;)i&s&&(n=n.add(a)),a=a.double(),i>>=s;return n}precomputeWindow(e,i){const{windows:n,windowSize:a}=h(i,this.bits),r=[];let t=e,s=t;for(let e=0;e<n;e++){s=t,r.push(s);for(let e=1;e<a;e++)s=s.add(t),r.push(s);t=s.double()}return r}wNAF(e,i,n){if(!this.Fn.isValid(n))throw new Error("invalid scalar");let a=this.ZERO,r=this.BASE;const t=h(e,this.bits);for(let e=0;e<t.windows;e++){const{nextN:s,offset:c,isZero:h,isNeg:l,isNegF:p,offsetF:d}=u(n,e,t);n=s,h?r=r.add(o(p,i[d])):a=a.add(o(l,i[c]))}return m(n),{p:a,f:r}}wNAFUnsafe(e,i,n,a=this.ZERO){const r=h(e,this.bits);for(let e=0;e<r.windows&&n!==t;e++){const{nextN:t,offset:s,isZero:o,isNeg:c}=u(n,e,r);if(n=t,!o){const e=i[s];a=a.add(c?e.negate():e)}}return m(n),a}getPrecomputes(e,i,n){let a=d.get(i);return a||(a=this.precomputeWindow(i,e),1!==e&&("function"==typeof n&&(a=n(a)),d.set(i,a))),a}cached(e,i,n){const a=g(e);return this.wNAF(a,this.getPrecomputes(a,e,n),i)}unsafe(e,i,n,a){const r=g(e);return 1===r?this._unsafeLadder(e,i,a):this.wNAFUnsafe(r,this.getPrecomputes(r,e,n),i,a)}createCache(e,i){c(i,this.bits),f.set(e,i),d.delete(e)}hasCache(e){return 1!==g(e)}}},2505:(e,i,n)=>{"use strict";const a=n(5926),r=n(2139),{ANY:t}=r,s=n(2643),o=n(8317),c=[new r(">=0.0.0-0")],h=[new r(">=0.0.0")],u=(e,i,n)=>{if(e===i)return!0;if(1===e.length&&e[0].semver===t){if(1===i.length&&i[0].semver===t)return!0;e=n.includePrerelease?c:h}if(1===i.length&&i[0].semver===t){if(n.includePrerelease)return!0;i=h}const a=new Set;let r,u,d,f,g,m,k;for(const i of e)">"===i.operator||">="===i.operator?r=l(r,i,n):"<"===i.operator||"<="===i.operator?u=p(u,i,n):a.add(i.semver);if(a.size>1)return null;if(r&&u){if(d=o(r.semver,u.semver,n),d>0)return null;if(0===d&&(">="!==r.operator||"<="!==u.operator))return null}for(const e of a){if(r&&!s(e,String(r),n))return null;if(u&&!s(e,String(u),n))return null;for(const a of i)if(!s(e,String(a),n))return!1;return!0}let b=!(!u||n.includePrerelease||!u.semver.prerelease.length)&&u.semver,_=!(!r||n.includePrerelease||!r.semver.prerelease.length)&&r.semver;b&&1===b.prerelease.length&&"<"===u.operator&&0===b.prerelease[0]&&(b=!1);for(const e of i){if(k=k||">"===e.operator||">="===e.operator,m=m||"<"===e.operator||"<="===e.operator,r)if(_&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===_.major&&e.semver.minor===_.minor&&e.semver.patch===_.patch&&(_=!1),">"===e.operator||">="===e.operator){if(f=l(r,e,n),f===e&&f!==r)return!1}else if(">="===r.operator&&!s(r.semver,String(e),n))return!1;if(u)if(b&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===b.major&&e.semver.minor===b.minor&&e.semver.patch===b.patch&&(b=!1),"<"===e.operator||"<="===e.operator){if(g=p(u,e,n),g===e&&g!==u)return!1}else if("<="===u.operator&&!s(u.semver,String(e),n))return!1;if(!e.operator&&(u||r)&&0!==d)return!1}return!(r&&m&&!u&&0!==d||u&&k&&!r&&0!==d||_||b)},l=(e,i,n)=>{if(!e)return i;const a=o(e.semver,i.semver,n);return a>0?e:a<0||">"===i.operator&&">="===e.operator?i:e},p=(e,i,n)=>{if(!e)return i;const a=o(e.semver,i.semver,n);return a<0?e:a>0||"<"===i.operator&&"<="===e.operator?i:e};e.exports=(e,i,n={})=>{if(e===i)return!0;e=new a(e,n),i=new a(i,n);let r=!1;e:for(const a of e.set){for(const e of i.set){const i=u(a,e,n);if(r=r||null!==i,i)continue e}if(r)return!1}return!0}},2511:(e,i,n)=>{const a=n(6889);e.exports=t;const r=[1634760805,857760878,2036477234,1797285236];function t(e,i,n){a(32===i.byteLength),a(8===e.byteLength||12===e.byteLength);const t=new Uint32Array(e.buffer,e.byteOffset,e.byteLength/4),s=new Uint32Array(i.buffer,i.byteOffset,i.byteLength/4);n||(n=0),a(n<Number.MAX_SAFE_INTEGER),this.finalized=!1,this.pos=0,this.state=new Uint32Array(16);for(let e=0;e<4;e++)this.state[e]=r[e];for(let e=0;e<8;e++)this.state[4+e]=s[e];return this.state[12]=4294967295&n,8===t.byteLength?(this.state[13]=(n&&0xffffffff00000000)>>32,this.state[14]=t[0],this.state[15]=t[1]):(this.state[13]=t[0],this.state[14]=t[1],this.state[15]=t[2]),this}function s(e){const i=new Uint32Array(16);for(let n=16;n--;)i[n]=e[n];for(let e=0;e<20;e+=2)c(i,0,4,8,12),c(i,1,5,9,13),c(i,2,6,10,14),c(i,3,7,11,15),c(i,0,5,10,15),c(i,1,6,11,12),c(i,2,7,8,13),c(i,3,4,9,14);for(let n=0;n<16;n++)i[n]+=e[n];return new Uint8Array(i.buffer,i.byteOffset,i.byteLength)}function o(e,i){return e<<i|e>>>32-i}function c(e,i,n,a,r){e[i]+=e[n],e[r]^=e[i],e[r]=o(e[r],16),e[a]+=e[r],e[n]^=e[a],e[n]=o(e[n],12),e[i]+=e[n],e[r]^=e[i],e[r]=o(e[r],8),e[a]+=e[r],e[n]^=e[a],e[n]=o(e[n],7)}t.prototype.update=function(e,i){a(!this.finalized,"cipher finalized."),a(e.byteLength>=i.byteLength,"output cannot be shorter than input.");let n=i.length,r=this.pos%64;this.pos+=n;let t=0,o=s(this.state);for(;r>0&&n>0;)e[t]=i[t++]^o[r],r=r+1&63,r||this.state[12]++,n--;for(;n>0;){if(o=s(this.state),n<64){for(let a=0;a<n;a++)e[t]=i[t++]^o[r++],r&=63;return}for(;r<64;)e[t]=i[t++]^o[r++];this.state[12]++,r=0,n-=64}},t.prototype.final=function(){this.state.fill(0),this.pos=0,this.finalized=!0}},2515:(e,i,n)=>{const a=n(6889),{vn:r}=n(8597);e.exports={sodium_increment:function(e){const i=e.byteLength;for(var n=1,a=0;a<i;a++)n+=e[a],e[a]=n,n>>=8},sodium_memcmp:function(e,i){return a(e.byteLength===i.byteLength,"buffers must be the same size"),0===r(e,0,i,0,e.byteLength)},sodium_is_zero:function(e){var i=0;for(let n=0;n<e.length;n++)i|=e[n];return 0===i}}},2543:function(e,i,n){var a;e=n.nmd(e),function(){var r,t="Expected a function",s="__lodash_hash_undefined__",o="__lodash_placeholder__",c=32,h=128,u=1/0,l=9007199254740991,p=NaN,d=4294967295,f=[["ary",h],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",c],["partialRight",64],["rearg",256]],g="[object Arguments]",m="[object Array]",k="[object Boolean]",b="[object Date]",_="[object Error]",y="[object Function]",v="[object GeneratorFunction]",A="[object Map]",z="[object Number]",I="[object Object]",E="[object Promise]",j="[object RegExp]",w="[object Set]",B="[object String]",C="[object Symbol]",x="[object WeakMap]",S="[object ArrayBuffer]",Q="[object DataView]",T="[object Float32Array]",P="[object Float64Array]",L="[object Int8Array]",D="[object Int16Array]",U="[object Int32Array]",R="[object Uint8Array]",O="[object Uint8ClampedArray]",N="[object Uint16Array]",F="[object Uint32Array]",M=/\b__p \+= '';/g,K=/\b(__p \+=) '' \+/g,H=/(__e\(.*?\)|\b__t\)) \+\n'';/g,q=/&(?:amp|lt|gt|quot|#39);/g,Y=/[&<>"']/g,G=RegExp(q.source),$=RegExp(Y.source),V=/<%-([\s\S]+?)%>/g,J=/<%([\s\S]+?)%>/g,X=/<%=([\s\S]+?)%>/g,W=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Z=/^\w*$/,ee=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,ie=/[\\^$.*+?()[\]{}|]/g,ne=RegExp(ie.source),ae=/^\s+/,re=/\s/,te=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,se=/\{\n\/\* \[wrapped with (.+)\] \*/,oe=/,? & /,ce=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,he=/[()=,{}\[\]\/\s]/,ue=/\\(\\)?/g,le=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,pe=/\w*$/,de=/^[-+]0x[0-9a-f]+$/i,fe=/^0b[01]+$/i,ge=/^\[object .+?Constructor\]$/,me=/^0o[0-7]+$/i,ke=/^(?:0|[1-9]\d*)$/,be=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,_e=/($^)/,ye=/['\n\r\u2028\u2029\\]/g,ve="\\ud800-\\udfff",Ae="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",ze="\\u2700-\\u27bf",Ie="a-z\\xdf-\\xf6\\xf8-\\xff",Ee="A-Z\\xc0-\\xd6\\xd8-\\xde",je="\\ufe0e\\ufe0f",we="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Be="["+ve+"]",Ce="["+we+"]",xe="["+Ae+"]",Se="\\d+",Qe="["+ze+"]",Te="["+Ie+"]",Pe="[^"+ve+we+Se+ze+Ie+Ee+"]",Le="\\ud83c[\\udffb-\\udfff]",De="[^"+ve+"]",Ue="(?:\\ud83c[\\udde6-\\uddff]){2}",Re="[\\ud800-\\udbff][\\udc00-\\udfff]",Oe="["+Ee+"]",Ne="\\u200d",Fe="(?:"+Te+"|"+Pe+")",Me="(?:"+Oe+"|"+Pe+")",Ke="(?:['’](?:d|ll|m|re|s|t|ve))?",He="(?:['’](?:D|LL|M|RE|S|T|VE))?",qe="(?:"+xe+"|"+Le+")?",Ye="["+je+"]?",Ge=Ye+qe+"(?:"+Ne+"(?:"+[De,Ue,Re].join("|")+")"+Ye+qe+")*",$e="(?:"+[Qe,Ue,Re].join("|")+")"+Ge,Ve="(?:"+[De+xe+"?",xe,Ue,Re,Be].join("|")+")",Je=RegExp("['’]","g"),Xe=RegExp(xe,"g"),We=RegExp(Le+"(?="+Le+")|"+Ve+Ge,"g"),Ze=RegExp([Oe+"?"+Te+"+"+Ke+"(?="+[Ce,Oe,"$"].join("|")+")",Me+"+"+He+"(?="+[Ce,Oe+Fe,"$"].join("|")+")",Oe+"?"+Fe+"+"+Ke,Oe+"+"+He,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Se,$e].join("|"),"g"),ei=RegExp("["+Ne+ve+Ae+je+"]"),ii=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,ni=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],ai=-1,ri={};ri[T]=ri[P]=ri[L]=ri[D]=ri[U]=ri[R]=ri[O]=ri[N]=ri[F]=!0,ri[g]=ri[m]=ri[S]=ri[k]=ri[Q]=ri[b]=ri[_]=ri[y]=ri[A]=ri[z]=ri[I]=ri[j]=ri[w]=ri[B]=ri[x]=!1;var ti={};ti[g]=ti[m]=ti[S]=ti[Q]=ti[k]=ti[b]=ti[T]=ti[P]=ti[L]=ti[D]=ti[U]=ti[A]=ti[z]=ti[I]=ti[j]=ti[w]=ti[B]=ti[C]=ti[R]=ti[O]=ti[N]=ti[F]=!0,ti[_]=ti[y]=ti[x]=!1;var si={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},oi=parseFloat,ci=parseInt,hi="object"==typeof n.g&&n.g&&n.g.Object===Object&&n.g,ui="object"==typeof self&&self&&self.Object===Object&&self,li=hi||ui||Function("return this")(),pi=i&&!i.nodeType&&i,di=pi&&e&&!e.nodeType&&e,fi=di&&di.exports===pi,gi=fi&&hi.process,mi=function(){try{return di&&di.require&&di.require("util").types||gi&&gi.binding&&gi.binding("util")}catch(e){}}(),ki=mi&&mi.isArrayBuffer,bi=mi&&mi.isDate,_i=mi&&mi.isMap,yi=mi&&mi.isRegExp,vi=mi&&mi.isSet,Ai=mi&&mi.isTypedArray;function zi(e,i,n){switch(n.length){case 0:return e.call(i);case 1:return e.call(i,n[0]);case 2:return e.call(i,n[0],n[1]);case 3:return e.call(i,n[0],n[1],n[2])}return e.apply(i,n)}function Ii(e,i,n,a){for(var r=-1,t=null==e?0:e.length;++r<t;){var s=e[r];i(a,s,n(s),e)}return a}function Ei(e,i){for(var n=-1,a=null==e?0:e.length;++n<a&&!1!==i(e[n],n,e););return e}function ji(e,i){for(var n=null==e?0:e.length;n--&&!1!==i(e[n],n,e););return e}function wi(e,i){for(var n=-1,a=null==e?0:e.length;++n<a;)if(!i(e[n],n,e))return!1;return!0}function Bi(e,i){for(var n=-1,a=null==e?0:e.length,r=0,t=[];++n<a;){var s=e[n];i(s,n,e)&&(t[r++]=s)}return t}function Ci(e,i){return!(null==e||!e.length)&&Oi(e,i,0)>-1}function xi(e,i,n){for(var a=-1,r=null==e?0:e.length;++a<r;)if(n(i,e[a]))return!0;return!1}function Si(e,i){for(var n=-1,a=null==e?0:e.length,r=Array(a);++n<a;)r[n]=i(e[n],n,e);return r}function Qi(e,i){for(var n=-1,a=i.length,r=e.length;++n<a;)e[r+n]=i[n];return e}function Ti(e,i,n,a){var r=-1,t=null==e?0:e.length;for(a&&t&&(n=e[++r]);++r<t;)n=i(n,e[r],r,e);return n}function Pi(e,i,n,a){var r=null==e?0:e.length;for(a&&r&&(n=e[--r]);r--;)n=i(n,e[r],r,e);return n}function Li(e,i){for(var n=-1,a=null==e?0:e.length;++n<a;)if(i(e[n],n,e))return!0;return!1}var Di=Ki("length");function Ui(e,i,n){var a;return n(e,function(e,n,r){if(i(e,n,r))return a=n,!1}),a}function Ri(e,i,n,a){for(var r=e.length,t=n+(a?1:-1);a?t--:++t<r;)if(i(e[t],t,e))return t;return-1}function Oi(e,i,n){return i==i?function(e,i,n){for(var a=n-1,r=e.length;++a<r;)if(e[a]===i)return a;return-1}(e,i,n):Ri(e,Fi,n)}function Ni(e,i,n,a){for(var r=n-1,t=e.length;++r<t;)if(a(e[r],i))return r;return-1}function Fi(e){return e!=e}function Mi(e,i){var n=null==e?0:e.length;return n?Yi(e,i)/n:p}function Ki(e){return function(i){return null==i?r:i[e]}}function Hi(e){return function(i){return null==e?r:e[i]}}function qi(e,i,n,a,r){return r(e,function(e,r,t){n=a?(a=!1,e):i(n,e,r,t)}),n}function Yi(e,i){for(var n,a=-1,t=e.length;++a<t;){var s=i(e[a]);s!==r&&(n=n===r?s:n+s)}return n}function Gi(e,i){for(var n=-1,a=Array(e);++n<e;)a[n]=i(n);return a}function $i(e){return e?e.slice(0,pn(e)+1).replace(ae,""):e}function Vi(e){return function(i){return e(i)}}function Ji(e,i){return Si(i,function(i){return e[i]})}function Xi(e,i){return e.has(i)}function Wi(e,i){for(var n=-1,a=e.length;++n<a&&Oi(i,e[n],0)>-1;);return n}function Zi(e,i){for(var n=e.length;n--&&Oi(i,e[n],0)>-1;);return n}var en=Hi({À:"A",Á:"A",Â:"A",Ã:"A",Ä:"A",Å:"A",à:"a",á:"a",â:"a",ã:"a",ä:"a",å:"a",Ç:"C",ç:"c",Ð:"D",ð:"d",È:"E",É:"E",Ê:"E",Ë:"E",è:"e",é:"e",ê:"e",ë:"e",Ì:"I",Í:"I",Î:"I",Ï:"I",ì:"i",í:"i",î:"i",ï:"i",Ñ:"N",ñ:"n",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"O",Ø:"O",ò:"o",ó:"o",ô:"o",õ:"o",ö:"o",ø:"o",Ù:"U",Ú:"U",Û:"U",Ü:"U",ù:"u",ú:"u",û:"u",ü:"u",Ý:"Y",ý:"y",ÿ:"y",Æ:"Ae",æ:"ae",Þ:"Th",þ:"th",ß:"ss",Ā:"A",Ă:"A",Ą:"A",ā:"a",ă:"a",ą:"a",Ć:"C",Ĉ:"C",Ċ:"C",Č:"C",ć:"c",ĉ:"c",ċ:"c",č:"c",Ď:"D",Đ:"D",ď:"d",đ:"d",Ē:"E",Ĕ:"E",Ė:"E",Ę:"E",Ě:"E",ē:"e",ĕ:"e",ė:"e",ę:"e",ě:"e",Ĝ:"G",Ğ:"G",Ġ:"G",Ģ:"G",ĝ:"g",ğ:"g",ġ:"g",ģ:"g",Ĥ:"H",Ħ:"H",ĥ:"h",ħ:"h",Ĩ:"I",Ī:"I",Ĭ:"I",Į:"I",İ:"I",ĩ:"i",ī:"i",ĭ:"i",į:"i",ı:"i",Ĵ:"J",ĵ:"j",Ķ:"K",ķ:"k",ĸ:"k",Ĺ:"L",Ļ:"L",Ľ:"L",Ŀ:"L",Ł:"L",ĺ:"l",ļ:"l",ľ:"l",ŀ:"l",ł:"l",Ń:"N",Ņ:"N",Ň:"N",Ŋ:"N",ń:"n",ņ:"n",ň:"n",ŋ:"n",Ō:"O",Ŏ:"O",Ő:"O",ō:"o",ŏ:"o",ő:"o",Ŕ:"R",Ŗ:"R",Ř:"R",ŕ:"r",ŗ:"r",ř:"r",Ś:"S",Ŝ:"S",Ş:"S",Š:"S",ś:"s",ŝ:"s",ş:"s",š:"s",Ţ:"T",Ť:"T",Ŧ:"T",ţ:"t",ť:"t",ŧ:"t",Ũ:"U",Ū:"U",Ŭ:"U",Ů:"U",Ű:"U",Ų:"U",ũ:"u",ū:"u",ŭ:"u",ů:"u",ű:"u",ų:"u",Ŵ:"W",ŵ:"w",Ŷ:"Y",ŷ:"y",Ÿ:"Y",Ź:"Z",Ż:"Z",Ž:"Z",ź:"z",ż:"z",ž:"z",Ĳ:"IJ",ĳ:"ij",Œ:"Oe",œ:"oe",ŉ:"'n",ſ:"s"}),nn=Hi({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function an(e){return"\\"+si[e]}function rn(e){return ei.test(e)}function tn(e){var i=-1,n=Array(e.size);return e.forEach(function(e,a){n[++i]=[a,e]}),n}function sn(e,i){return function(n){return e(i(n))}}function on(e,i){for(var n=-1,a=e.length,r=0,t=[];++n<a;){var s=e[n];s!==i&&s!==o||(e[n]=o,t[r++]=n)}return t}function cn(e){var i=-1,n=Array(e.size);return e.forEach(function(e){n[++i]=e}),n}function hn(e){var i=-1,n=Array(e.size);return e.forEach(function(e){n[++i]=[e,e]}),n}function un(e){return rn(e)?function(e){for(var i=We.lastIndex=0;We.test(e);)++i;return i}(e):Di(e)}function ln(e){return rn(e)?function(e){return e.match(We)||[]}(e):function(e){return e.split("")}(e)}function pn(e){for(var i=e.length;i--&&re.test(e.charAt(i)););return i}var dn=Hi({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"}),fn=function e(i){var n,a=(i=null==i?li:fn.defaults(li.Object(),i,fn.pick(li,ni))).Array,re=i.Date,ve=i.Error,Ae=i.Function,ze=i.Math,Ie=i.Object,Ee=i.RegExp,je=i.String,we=i.TypeError,Be=a.prototype,Ce=Ae.prototype,xe=Ie.prototype,Se=i["__core-js_shared__"],Qe=Ce.toString,Te=xe.hasOwnProperty,Pe=0,Le=(n=/[^.]+$/.exec(Se&&Se.keys&&Se.keys.IE_PROTO||""))?"Symbol(src)_1."+n:"",De=xe.toString,Ue=Qe.call(Ie),Re=li._,Oe=Ee("^"+Qe.call(Te).replace(ie,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Ne=fi?i.Buffer:r,Fe=i.Symbol,Me=i.Uint8Array,Ke=Ne?Ne.allocUnsafe:r,He=sn(Ie.getPrototypeOf,Ie),qe=Ie.create,Ye=xe.propertyIsEnumerable,Ge=Be.splice,$e=Fe?Fe.isConcatSpreadable:r,Ve=Fe?Fe.iterator:r,We=Fe?Fe.toStringTag:r,ei=function(){try{var e=ct(Ie,"defineProperty");return e({},"",{}),e}catch(e){}}(),si=i.clearTimeout!==li.clearTimeout&&i.clearTimeout,hi=re&&re.now!==li.Date.now&&re.now,ui=i.setTimeout!==li.setTimeout&&i.setTimeout,pi=ze.ceil,di=ze.floor,gi=Ie.getOwnPropertySymbols,mi=Ne?Ne.isBuffer:r,Di=i.isFinite,Hi=Be.join,gn=sn(Ie.keys,Ie),mn=ze.max,kn=ze.min,bn=re.now,_n=i.parseInt,yn=ze.random,vn=Be.reverse,An=ct(i,"DataView"),zn=ct(i,"Map"),In=ct(i,"Promise"),En=ct(i,"Set"),jn=ct(i,"WeakMap"),wn=ct(Ie,"create"),Bn=jn&&new jn,Cn={},xn=Dt(An),Sn=Dt(zn),Qn=Dt(In),Tn=Dt(En),Pn=Dt(jn),Ln=Fe?Fe.prototype:r,Dn=Ln?Ln.valueOf:r,Un=Ln?Ln.toString:r;function Rn(e){if(Zs(e)&&!Ms(e)&&!(e instanceof Mn)){if(e instanceof Fn)return e;if(Te.call(e,"__wrapped__"))return Ut(e)}return new Fn(e)}var On=function(){function e(){}return function(i){if(!Ws(i))return{};if(qe)return qe(i);e.prototype=i;var n=new e;return e.prototype=r,n}}();function Nn(){}function Fn(e,i){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!i,this.__index__=0,this.__values__=r}function Mn(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=d,this.__views__=[]}function Kn(e){var i=-1,n=null==e?0:e.length;for(this.clear();++i<n;){var a=e[i];this.set(a[0],a[1])}}function Hn(e){var i=-1,n=null==e?0:e.length;for(this.clear();++i<n;){var a=e[i];this.set(a[0],a[1])}}function qn(e){var i=-1,n=null==e?0:e.length;for(this.clear();++i<n;){var a=e[i];this.set(a[0],a[1])}}function Yn(e){var i=-1,n=null==e?0:e.length;for(this.__data__=new qn;++i<n;)this.add(e[i])}function Gn(e){var i=this.__data__=new Hn(e);this.size=i.size}function $n(e,i){var n=Ms(e),a=!n&&Fs(e),r=!n&&!a&&Ys(e),t=!n&&!a&&!r&&oo(e),s=n||a||r||t,o=s?Gi(e.length,je):[],c=o.length;for(var h in e)!i&&!Te.call(e,h)||s&&("length"==h||r&&("offset"==h||"parent"==h)||t&&("buffer"==h||"byteLength"==h||"byteOffset"==h)||gt(h,c))||o.push(h);return o}function Vn(e){var i=e.length;return i?e[qa(0,i-1)]:r}function Jn(e,i){return St(jr(e),ta(i,0,e.length))}function Xn(e){return St(jr(e))}function Wn(e,i,n){(n!==r&&!Rs(e[i],n)||n===r&&!(i in e))&&aa(e,i,n)}function Zn(e,i,n){var a=e[i];Te.call(e,i)&&Rs(a,n)&&(n!==r||i in e)||aa(e,i,n)}function ea(e,i){for(var n=e.length;n--;)if(Rs(e[n][0],i))return n;return-1}function ia(e,i,n,a){return ua(e,function(e,r,t){i(a,e,n(e),t)}),a}function na(e,i){return e&&wr(i,xo(i),e)}function aa(e,i,n){"__proto__"==i&&ei?ei(e,i,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[i]=n}function ra(e,i){for(var n=-1,t=i.length,s=a(t),o=null==e;++n<t;)s[n]=o?r:Eo(e,i[n]);return s}function ta(e,i,n){return e==e&&(n!==r&&(e=e<=n?e:n),i!==r&&(e=e>=i?e:i)),e}function sa(e,i,n,a,t,s){var o,c=1&i,h=2&i,u=4&i;if(n&&(o=t?n(e,a,t,s):n(e)),o!==r)return o;if(!Ws(e))return e;var l=Ms(e);if(l){if(o=function(e){var i=e.length,n=new e.constructor(i);return i&&"string"==typeof e[0]&&Te.call(e,"index")&&(n.index=e.index,n.input=e.input),n}(e),!c)return jr(e,o)}else{var p=lt(e),d=p==y||p==v;if(Ys(e))return yr(e,c);if(p==I||p==g||d&&!t){if(o=h||d?{}:dt(e),!c)return h?function(e,i){return wr(e,ut(e),i)}(e,function(e,i){return e&&wr(i,So(i),e)}(o,e)):function(e,i){return wr(e,ht(e),i)}(e,na(o,e))}else{if(!ti[p])return t?e:{};o=function(e,i,n){var a,r=e.constructor;switch(i){case S:return vr(e);case k:case b:return new r(+e);case Q:return function(e,i){var n=i?vr(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}(e,n);case T:case P:case L:case D:case U:case R:case O:case N:case F:return Ar(e,n);case A:return new r;case z:case B:return new r(e);case j:return function(e){var i=new e.constructor(e.source,pe.exec(e));return i.lastIndex=e.lastIndex,i}(e);case w:return new r;case C:return a=e,Dn?Ie(Dn.call(a)):{}}}(e,p,c)}}s||(s=new Gn);var f=s.get(e);if(f)return f;s.set(e,o),ro(e)?e.forEach(function(a){o.add(sa(a,i,n,a,e,s))}):eo(e)&&e.forEach(function(a,r){o.set(r,sa(a,i,n,r,e,s))});var m=l?r:(u?h?it:et:h?So:xo)(e);return Ei(m||e,function(a,r){m&&(a=e[r=a]),Zn(o,r,sa(a,i,n,r,e,s))}),o}function oa(e,i,n){var a=n.length;if(null==e)return!a;for(e=Ie(e);a--;){var t=n[a],s=i[t],o=e[t];if(o===r&&!(t in e)||!s(o))return!1}return!0}function ca(e,i,n){if("function"!=typeof e)throw new we(t);return wt(function(){e.apply(r,n)},i)}function ha(e,i,n,a){var r=-1,t=Ci,s=!0,o=e.length,c=[],h=i.length;if(!o)return c;n&&(i=Si(i,Vi(n))),a?(t=xi,s=!1):i.length>=200&&(t=Xi,s=!1,i=new Yn(i));e:for(;++r<o;){var u=e[r],l=null==n?u:n(u);if(u=a||0!==u?u:0,s&&l==l){for(var p=h;p--;)if(i[p]===l)continue e;c.push(u)}else t(i,l,a)||c.push(u)}return c}Rn.templateSettings={escape:V,evaluate:J,interpolate:X,variable:"",imports:{_:Rn}},Rn.prototype=Nn.prototype,Rn.prototype.constructor=Rn,Fn.prototype=On(Nn.prototype),Fn.prototype.constructor=Fn,Mn.prototype=On(Nn.prototype),Mn.prototype.constructor=Mn,Kn.prototype.clear=function(){this.__data__=wn?wn(null):{},this.size=0},Kn.prototype.delete=function(e){var i=this.has(e)&&delete this.__data__[e];return this.size-=i?1:0,i},Kn.prototype.get=function(e){var i=this.__data__;if(wn){var n=i[e];return n===s?r:n}return Te.call(i,e)?i[e]:r},Kn.prototype.has=function(e){var i=this.__data__;return wn?i[e]!==r:Te.call(i,e)},Kn.prototype.set=function(e,i){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=wn&&i===r?s:i,this},Hn.prototype.clear=function(){this.__data__=[],this.size=0},Hn.prototype.delete=function(e){var i=this.__data__,n=ea(i,e);return!(n<0||(n==i.length-1?i.pop():Ge.call(i,n,1),--this.size,0))},Hn.prototype.get=function(e){var i=this.__data__,n=ea(i,e);return n<0?r:i[n][1]},Hn.prototype.has=function(e){return ea(this.__data__,e)>-1},Hn.prototype.set=function(e,i){var n=this.__data__,a=ea(n,e);return a<0?(++this.size,n.push([e,i])):n[a][1]=i,this},qn.prototype.clear=function(){this.size=0,this.__data__={hash:new Kn,map:new(zn||Hn),string:new Kn}},qn.prototype.delete=function(e){var i=st(this,e).delete(e);return this.size-=i?1:0,i},qn.prototype.get=function(e){return st(this,e).get(e)},qn.prototype.has=function(e){return st(this,e).has(e)},qn.prototype.set=function(e,i){var n=st(this,e),a=n.size;return n.set(e,i),this.size+=n.size==a?0:1,this},Yn.prototype.add=Yn.prototype.push=function(e){return this.__data__.set(e,s),this},Yn.prototype.has=function(e){return this.__data__.has(e)},Gn.prototype.clear=function(){this.__data__=new Hn,this.size=0},Gn.prototype.delete=function(e){var i=this.__data__,n=i.delete(e);return this.size=i.size,n},Gn.prototype.get=function(e){return this.__data__.get(e)},Gn.prototype.has=function(e){return this.__data__.has(e)},Gn.prototype.set=function(e,i){var n=this.__data__;if(n instanceof Hn){var a=n.__data__;if(!zn||a.length<199)return a.push([e,i]),this.size=++n.size,this;n=this.__data__=new qn(a)}return n.set(e,i),this.size=n.size,this};var ua=xr(ba),la=xr(_a,!0);function pa(e,i){var n=!0;return ua(e,function(e,a,r){return n=!!i(e,a,r)}),n}function da(e,i,n){for(var a=-1,t=e.length;++a<t;){var s=e[a],o=i(s);if(null!=o&&(c===r?o==o&&!so(o):n(o,c)))var c=o,h=s}return h}function fa(e,i){var n=[];return ua(e,function(e,a,r){i(e,a,r)&&n.push(e)}),n}function ga(e,i,n,a,r){var t=-1,s=e.length;for(n||(n=ft),r||(r=[]);++t<s;){var o=e[t];i>0&&n(o)?i>1?ga(o,i-1,n,a,r):Qi(r,o):a||(r[r.length]=o)}return r}var ma=Sr(),ka=Sr(!0);function ba(e,i){return e&&ma(e,i,xo)}function _a(e,i){return e&&ka(e,i,xo)}function ya(e,i){return Bi(i,function(i){return Vs(e[i])})}function va(e,i){for(var n=0,a=(i=mr(i,e)).length;null!=e&&n<a;)e=e[Lt(i[n++])];return n&&n==a?e:r}function Aa(e,i,n){var a=i(e);return Ms(e)?a:Qi(a,n(e))}function za(e){return null==e?e===r?"[object Undefined]":"[object Null]":We&&We in Ie(e)?function(e){var i=Te.call(e,We),n=e[We];try{e[We]=r;var a=!0}catch(e){}var t=De.call(e);return a&&(i?e[We]=n:delete e[We]),t}(e):function(e){return De.call(e)}(e)}function Ia(e,i){return e>i}function Ea(e,i){return null!=e&&Te.call(e,i)}function ja(e,i){return null!=e&&i in Ie(e)}function wa(e,i,n){for(var t=n?xi:Ci,s=e[0].length,o=e.length,c=o,h=a(o),u=1/0,l=[];c--;){var p=e[c];c&&i&&(p=Si(p,Vi(i))),u=kn(p.length,u),h[c]=!n&&(i||s>=120&&p.length>=120)?new Yn(c&&p):r}p=e[0];var d=-1,f=h[0];e:for(;++d<s&&l.length<u;){var g=p[d],m=i?i(g):g;if(g=n||0!==g?g:0,!(f?Xi(f,m):t(l,m,n))){for(c=o;--c;){var k=h[c];if(!(k?Xi(k,m):t(e[c],m,n)))continue e}f&&f.push(m),l.push(g)}}return l}function Ba(e,i,n){var a=null==(e=It(e,i=mr(i,e)))?e:e[Lt($t(i))];return null==a?r:zi(a,e,n)}function Ca(e){return Zs(e)&&za(e)==g}function xa(e,i,n,a,t){return e===i||(null==e||null==i||!Zs(e)&&!Zs(i)?e!=e&&i!=i:function(e,i,n,a,t,s){var o=Ms(e),c=Ms(i),h=o?m:lt(e),u=c?m:lt(i),l=(h=h==g?I:h)==I,p=(u=u==g?I:u)==I,d=h==u;if(d&&Ys(e)){if(!Ys(i))return!1;o=!0,l=!1}if(d&&!l)return s||(s=new Gn),o||oo(e)?Wr(e,i,n,a,t,s):function(e,i,n,a,r,t,s){switch(n){case Q:if(e.byteLength!=i.byteLength||e.byteOffset!=i.byteOffset)return!1;e=e.buffer,i=i.buffer;case S:return!(e.byteLength!=i.byteLength||!t(new Me(e),new Me(i)));case k:case b:case z:return Rs(+e,+i);case _:return e.name==i.name&&e.message==i.message;case j:case B:return e==i+"";case A:var o=tn;case w:var c=1&a;if(o||(o=cn),e.size!=i.size&&!c)return!1;var h=s.get(e);if(h)return h==i;a|=2,s.set(e,i);var u=Wr(o(e),o(i),a,r,t,s);return s.delete(e),u;case C:if(Dn)return Dn.call(e)==Dn.call(i)}return!1}(e,i,h,n,a,t,s);if(!(1&n)){var f=l&&Te.call(e,"__wrapped__"),y=p&&Te.call(i,"__wrapped__");if(f||y){var v=f?e.value():e,E=y?i.value():i;return s||(s=new Gn),t(v,E,n,a,s)}}return!!d&&(s||(s=new Gn),function(e,i,n,a,t,s){var o=1&n,c=et(e),h=c.length;if(h!=et(i).length&&!o)return!1;for(var u=h;u--;){var l=c[u];if(!(o?l in i:Te.call(i,l)))return!1}var p=s.get(e),d=s.get(i);if(p&&d)return p==i&&d==e;var f=!0;s.set(e,i),s.set(i,e);for(var g=o;++u<h;){var m=e[l=c[u]],k=i[l];if(a)var b=o?a(k,m,l,i,e,s):a(m,k,l,e,i,s);if(!(b===r?m===k||t(m,k,n,a,s):b)){f=!1;break}g||(g="constructor"==l)}if(f&&!g){var _=e.constructor,y=i.constructor;_==y||!("constructor"in e)||!("constructor"in i)||"function"==typeof _&&_ instanceof _&&"function"==typeof y&&y instanceof y||(f=!1)}return s.delete(e),s.delete(i),f}(e,i,n,a,t,s))}(e,i,n,a,xa,t))}function Sa(e,i,n,a){var t=n.length,s=t,o=!a;if(null==e)return!s;for(e=Ie(e);t--;){var c=n[t];if(o&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++t<s;){var h=(c=n[t])[0],u=e[h],l=c[1];if(o&&c[2]){if(u===r&&!(h in e))return!1}else{var p=new Gn;if(a)var d=a(u,l,h,e,i,p);if(!(d===r?xa(l,u,3,a,p):d))return!1}}return!0}function Qa(e){return!(!Ws(e)||(i=e,Le&&Le in i))&&(Vs(e)?Oe:ge).test(Dt(e));var i}function Ta(e){return"function"==typeof e?e:null==e?nc:"object"==typeof e?Ms(e)?Ra(e[0],e[1]):Ua(e):lc(e)}function Pa(e){if(!yt(e))return gn(e);var i=[];for(var n in Ie(e))Te.call(e,n)&&"constructor"!=n&&i.push(n);return i}function La(e,i){return e<i}function Da(e,i){var n=-1,r=Hs(e)?a(e.length):[];return ua(e,function(e,a,t){r[++n]=i(e,a,t)}),r}function Ua(e){var i=ot(e);return 1==i.length&&i[0][2]?At(i[0][0],i[0][1]):function(n){return n===e||Sa(n,e,i)}}function Ra(e,i){return kt(e)&&vt(i)?At(Lt(e),i):function(n){var a=Eo(n,e);return a===r&&a===i?jo(n,e):xa(i,a,3)}}function Oa(e,i,n,a,t){e!==i&&ma(i,function(s,o){if(t||(t=new Gn),Ws(s))!function(e,i,n,a,t,s,o){var c=Et(e,n),h=Et(i,n),u=o.get(h);if(u)Wn(e,n,u);else{var l=s?s(c,h,n+"",e,i,o):r,p=l===r;if(p){var d=Ms(h),f=!d&&Ys(h),g=!d&&!f&&oo(h);l=h,d||f||g?Ms(c)?l=c:qs(c)?l=jr(c):f?(p=!1,l=yr(h,!0)):g?(p=!1,l=Ar(h,!0)):l=[]:no(h)||Fs(h)?(l=c,Fs(c)?l=mo(c):Ws(c)&&!Vs(c)||(l=dt(h))):p=!1}p&&(o.set(h,l),t(l,h,a,s,o),o.delete(h)),Wn(e,n,l)}}(e,i,o,n,Oa,a,t);else{var c=a?a(Et(e,o),s,o+"",e,i,t):r;c===r&&(c=s),Wn(e,o,c)}},So)}function Na(e,i){var n=e.length;if(n)return gt(i+=i<0?n:0,n)?e[i]:r}function Fa(e,i,n){i=i.length?Si(i,function(e){return Ms(e)?function(i){return va(i,1===e.length?e[0]:e)}:e}):[nc];var a=-1;i=Si(i,Vi(tt()));var r=Da(e,function(e,n,r){var t=Si(i,function(i){return i(e)});return{criteria:t,index:++a,value:e}});return function(e){var i=e.length;for(e.sort(function(e,i){return function(e,i,n){for(var a=-1,r=e.criteria,t=i.criteria,s=r.length,o=n.length;++a<s;){var c=zr(r[a],t[a]);if(c)return a>=o?c:c*("desc"==n[a]?-1:1)}return e.index-i.index}(e,i,n)});i--;)e[i]=e[i].value;return e}(r)}function Ma(e,i,n){for(var a=-1,r=i.length,t={};++a<r;){var s=i[a],o=va(e,s);n(o,s)&&Ja(t,mr(s,e),o)}return t}function Ka(e,i,n,a){var r=a?Ni:Oi,t=-1,s=i.length,o=e;for(e===i&&(i=jr(i)),n&&(o=Si(e,Vi(n)));++t<s;)for(var c=0,h=i[t],u=n?n(h):h;(c=r(o,u,c,a))>-1;)o!==e&&Ge.call(o,c,1),Ge.call(e,c,1);return e}function Ha(e,i){for(var n=e?i.length:0,a=n-1;n--;){var r=i[n];if(n==a||r!==t){var t=r;gt(r)?Ge.call(e,r,1):cr(e,r)}}return e}function qa(e,i){return e+di(yn()*(i-e+1))}function Ya(e,i){var n="";if(!e||i<1||i>l)return n;do{i%2&&(n+=e),(i=di(i/2))&&(e+=e)}while(i);return n}function Ga(e,i){return Bt(zt(e,i,nc),e+"")}function $a(e){return Vn(Oo(e))}function Va(e,i){var n=Oo(e);return St(n,ta(i,0,n.length))}function Ja(e,i,n,a){if(!Ws(e))return e;for(var t=-1,s=(i=mr(i,e)).length,o=s-1,c=e;null!=c&&++t<s;){var h=Lt(i[t]),u=n;if("__proto__"===h||"constructor"===h||"prototype"===h)return e;if(t!=o){var l=c[h];(u=a?a(l,h,c):r)===r&&(u=Ws(l)?l:gt(i[t+1])?[]:{})}Zn(c,h,u),c=c[h]}return e}var Xa=Bn?function(e,i){return Bn.set(e,i),e}:nc,Wa=ei?function(e,i){return ei(e,"toString",{configurable:!0,enumerable:!1,value:Zo(i),writable:!0})}:nc;function Za(e){return St(Oo(e))}function er(e,i,n){var r=-1,t=e.length;i<0&&(i=-i>t?0:t+i),(n=n>t?t:n)<0&&(n+=t),t=i>n?0:n-i>>>0,i>>>=0;for(var s=a(t);++r<t;)s[r]=e[r+i];return s}function ir(e,i){var n;return ua(e,function(e,a,r){return!(n=i(e,a,r))}),!!n}function nr(e,i,n){var a=0,r=null==e?a:e.length;if("number"==typeof i&&i==i&&r<=2147483647){for(;a<r;){var t=a+r>>>1,s=e[t];null!==s&&!so(s)&&(n?s<=i:s<i)?a=t+1:r=t}return r}return ar(e,i,nc,n)}function ar(e,i,n,a){var t=0,s=null==e?0:e.length;if(0===s)return 0;for(var o=(i=n(i))!=i,c=null===i,h=so(i),u=i===r;t<s;){var l=di((t+s)/2),p=n(e[l]),d=p!==r,f=null===p,g=p==p,m=so(p);if(o)var k=a||g;else k=u?g&&(a||d):c?g&&d&&(a||!f):h?g&&d&&!f&&(a||!m):!f&&!m&&(a?p<=i:p<i);k?t=l+1:s=l}return kn(s,4294967294)}function rr(e,i){for(var n=-1,a=e.length,r=0,t=[];++n<a;){var s=e[n],o=i?i(s):s;if(!n||!Rs(o,c)){var c=o;t[r++]=0===s?0:s}}return t}function tr(e){return"number"==typeof e?e:so(e)?p:+e}function sr(e){if("string"==typeof e)return e;if(Ms(e))return Si(e,sr)+"";if(so(e))return Un?Un.call(e):"";var i=e+"";return"0"==i&&1/e==-1/0?"-0":i}function or(e,i,n){var a=-1,r=Ci,t=e.length,s=!0,o=[],c=o;if(n)s=!1,r=xi;else if(t>=200){var h=i?null:Yr(e);if(h)return cn(h);s=!1,r=Xi,c=new Yn}else c=i?[]:o;e:for(;++a<t;){var u=e[a],l=i?i(u):u;if(u=n||0!==u?u:0,s&&l==l){for(var p=c.length;p--;)if(c[p]===l)continue e;i&&c.push(l),o.push(u)}else r(c,l,n)||(c!==o&&c.push(l),o.push(u))}return o}function cr(e,i){return null==(e=It(e,i=mr(i,e)))||delete e[Lt($t(i))]}function hr(e,i,n,a){return Ja(e,i,n(va(e,i)),a)}function ur(e,i,n,a){for(var r=e.length,t=a?r:-1;(a?t--:++t<r)&&i(e[t],t,e););return n?er(e,a?0:t,a?t+1:r):er(e,a?t+1:0,a?r:t)}function lr(e,i){var n=e;return n instanceof Mn&&(n=n.value()),Ti(i,function(e,i){return i.func.apply(i.thisArg,Qi([e],i.args))},n)}function pr(e,i,n){var r=e.length;if(r<2)return r?or(e[0]):[];for(var t=-1,s=a(r);++t<r;)for(var o=e[t],c=-1;++c<r;)c!=t&&(s[t]=ha(s[t]||o,e[c],i,n));return or(ga(s,1),i,n)}function dr(e,i,n){for(var a=-1,t=e.length,s=i.length,o={};++a<t;){var c=a<s?i[a]:r;n(o,e[a],c)}return o}function fr(e){return qs(e)?e:[]}function gr(e){return"function"==typeof e?e:nc}function mr(e,i){return Ms(e)?e:kt(e,i)?[e]:Pt(ko(e))}var kr=Ga;function br(e,i,n){var a=e.length;return n=n===r?a:n,!i&&n>=a?e:er(e,i,n)}var _r=si||function(e){return li.clearTimeout(e)};function yr(e,i){if(i)return e.slice();var n=e.length,a=Ke?Ke(n):new e.constructor(n);return e.copy(a),a}function vr(e){var i=new e.constructor(e.byteLength);return new Me(i).set(new Me(e)),i}function Ar(e,i){var n=i?vr(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}function zr(e,i){if(e!==i){var n=e!==r,a=null===e,t=e==e,s=so(e),o=i!==r,c=null===i,h=i==i,u=so(i);if(!c&&!u&&!s&&e>i||s&&o&&h&&!c&&!u||a&&o&&h||!n&&h||!t)return 1;if(!a&&!s&&!u&&e<i||u&&n&&t&&!a&&!s||c&&n&&t||!o&&t||!h)return-1}return 0}function Ir(e,i,n,r){for(var t=-1,s=e.length,o=n.length,c=-1,h=i.length,u=mn(s-o,0),l=a(h+u),p=!r;++c<h;)l[c]=i[c];for(;++t<o;)(p||t<s)&&(l[n[t]]=e[t]);for(;u--;)l[c++]=e[t++];return l}function Er(e,i,n,r){for(var t=-1,s=e.length,o=-1,c=n.length,h=-1,u=i.length,l=mn(s-c,0),p=a(l+u),d=!r;++t<l;)p[t]=e[t];for(var f=t;++h<u;)p[f+h]=i[h];for(;++o<c;)(d||t<s)&&(p[f+n[o]]=e[t++]);return p}function jr(e,i){var n=-1,r=e.length;for(i||(i=a(r));++n<r;)i[n]=e[n];return i}function wr(e,i,n,a){var t=!n;n||(n={});for(var s=-1,o=i.length;++s<o;){var c=i[s],h=a?a(n[c],e[c],c,n,e):r;h===r&&(h=e[c]),t?aa(n,c,h):Zn(n,c,h)}return n}function Br(e,i){return function(n,a){var r=Ms(n)?Ii:ia,t=i?i():{};return r(n,e,tt(a,2),t)}}function Cr(e){return Ga(function(i,n){var a=-1,t=n.length,s=t>1?n[t-1]:r,o=t>2?n[2]:r;for(s=e.length>3&&"function"==typeof s?(t--,s):r,o&&mt(n[0],n[1],o)&&(s=t<3?r:s,t=1),i=Ie(i);++a<t;){var c=n[a];c&&e(i,c,a,s)}return i})}function xr(e,i){return function(n,a){if(null==n)return n;if(!Hs(n))return e(n,a);for(var r=n.length,t=i?r:-1,s=Ie(n);(i?t--:++t<r)&&!1!==a(s[t],t,s););return n}}function Sr(e){return function(i,n,a){for(var r=-1,t=Ie(i),s=a(i),o=s.length;o--;){var c=s[e?o:++r];if(!1===n(t[c],c,t))break}return i}}function Qr(e){return function(i){var n=rn(i=ko(i))?ln(i):r,a=n?n[0]:i.charAt(0),t=n?br(n,1).join(""):i.slice(1);return a[e]()+t}}function Tr(e){return function(i){return Ti(Jo(Mo(i).replace(Je,"")),e,"")}}function Pr(e){return function(){var i=arguments;switch(i.length){case 0:return new e;case 1:return new e(i[0]);case 2:return new e(i[0],i[1]);case 3:return new e(i[0],i[1],i[2]);case 4:return new e(i[0],i[1],i[2],i[3]);case 5:return new e(i[0],i[1],i[2],i[3],i[4]);case 6:return new e(i[0],i[1],i[2],i[3],i[4],i[5]);case 7:return new e(i[0],i[1],i[2],i[3],i[4],i[5],i[6])}var n=On(e.prototype),a=e.apply(n,i);return Ws(a)?a:n}}function Lr(e){return function(i,n,a){var t=Ie(i);if(!Hs(i)){var s=tt(n,3);i=xo(i),n=function(e){return s(t[e],e,t)}}var o=e(i,n,a);return o>-1?t[s?i[o]:o]:r}}function Dr(e){return Zr(function(i){var n=i.length,a=n,s=Fn.prototype.thru;for(e&&i.reverse();a--;){var o=i[a];if("function"!=typeof o)throw new we(t);if(s&&!c&&"wrapper"==at(o))var c=new Fn([],!0)}for(a=c?a:n;++a<n;){var h=at(o=i[a]),u="wrapper"==h?nt(o):r;c=u&&bt(u[0])&&424==u[1]&&!u[4].length&&1==u[9]?c[at(u[0])].apply(c,u[3]):1==o.length&&bt(o)?c[h]():c.thru(o)}return function(){var e=arguments,a=e[0];if(c&&1==e.length&&Ms(a))return c.plant(a).value();for(var r=0,t=n?i[r].apply(this,e):a;++r<n;)t=i[r].call(this,t);return t}})}function Ur(e,i,n,t,s,o,c,u,l,p){var d=i&h,f=1&i,g=2&i,m=24&i,k=512&i,b=g?r:Pr(e);return function h(){for(var _=arguments.length,y=a(_),v=_;v--;)y[v]=arguments[v];if(m)var A=rt(h),z=function(e,i){for(var n=e.length,a=0;n--;)e[n]===i&&++a;return a}(y,A);if(t&&(y=Ir(y,t,s,m)),o&&(y=Er(y,o,c,m)),_-=z,m&&_<p){var I=on(y,A);return Hr(e,i,Ur,h.placeholder,n,y,I,u,l,p-_)}var E=f?n:this,j=g?E[e]:e;return _=y.length,u?y=function(e,i){for(var n=e.length,a=kn(i.length,n),t=jr(e);a--;){var s=i[a];e[a]=gt(s,n)?t[s]:r}return e}(y,u):k&&_>1&&y.reverse(),d&&l<_&&(y.length=l),this&&this!==li&&this instanceof h&&(j=b||Pr(j)),j.apply(E,y)}}function Rr(e,i){return function(n,a){return function(e,i,n,a){return ba(e,function(e,r,t){i(a,n(e),r,t)}),a}(n,e,i(a),{})}}function Or(e,i){return function(n,a){var t;if(n===r&&a===r)return i;if(n!==r&&(t=n),a!==r){if(t===r)return a;"string"==typeof n||"string"==typeof a?(n=sr(n),a=sr(a)):(n=tr(n),a=tr(a)),t=e(n,a)}return t}}function Nr(e){return Zr(function(i){return i=Si(i,Vi(tt())),Ga(function(n){var a=this;return e(i,function(e){return zi(e,a,n)})})})}function Fr(e,i){var n=(i=i===r?" ":sr(i)).length;if(n<2)return n?Ya(i,e):i;var a=Ya(i,pi(e/un(i)));return rn(i)?br(ln(a),0,e).join(""):a.slice(0,e)}function Mr(e){return function(i,n,t){return t&&"number"!=typeof t&&mt(i,n,t)&&(n=t=r),i=lo(i),n===r?(n=i,i=0):n=lo(n),function(e,i,n,r){for(var t=-1,s=mn(pi((i-e)/(n||1)),0),o=a(s);s--;)o[r?s:++t]=e,e+=n;return o}(i,n,t=t===r?i<n?1:-1:lo(t),e)}}function Kr(e){return function(i,n){return"string"==typeof i&&"string"==typeof n||(i=go(i),n=go(n)),e(i,n)}}function Hr(e,i,n,a,t,s,o,h,u,l){var p=8&i;i|=p?c:64,4&(i&=~(p?64:c))||(i&=-4);var d=[e,i,t,p?s:r,p?o:r,p?r:s,p?r:o,h,u,l],f=n.apply(r,d);return bt(e)&&jt(f,d),f.placeholder=a,Ct(f,e,i)}function qr(e){var i=ze[e];return function(e,n){if(e=go(e),(n=null==n?0:kn(po(n),292))&&Di(e)){var a=(ko(e)+"e").split("e");return+((a=(ko(i(a[0]+"e"+(+a[1]+n)))+"e").split("e"))[0]+"e"+(+a[1]-n))}return i(e)}}var Yr=En&&1/cn(new En([,-0]))[1]==u?function(e){return new En(e)}:oc;function Gr(e){return function(i){var n=lt(i);return n==A?tn(i):n==w?hn(i):function(e,i){return Si(i,function(i){return[i,e[i]]})}(i,e(i))}}function $r(e,i,n,s,u,l,p,d){var f=2&i;if(!f&&"function"!=typeof e)throw new we(t);var g=s?s.length:0;if(g||(i&=-97,s=u=r),p=p===r?p:mn(po(p),0),d=d===r?d:po(d),g-=u?u.length:0,64&i){var m=s,k=u;s=u=r}var b=f?r:nt(e),_=[e,i,n,s,u,m,k,l,p,d];if(b&&function(e,i){var n=e[1],a=i[1],r=n|a,t=r<131,s=a==h&&8==n||a==h&&256==n&&e[7].length<=i[8]||384==a&&i[7].length<=i[8]&&8==n;if(!t&&!s)return e;1&a&&(e[2]=i[2],r|=1&n?0:4);var c=i[3];if(c){var u=e[3];e[3]=u?Ir(u,c,i[4]):c,e[4]=u?on(e[3],o):i[4]}(c=i[5])&&(u=e[5],e[5]=u?Er(u,c,i[6]):c,e[6]=u?on(e[5],o):i[6]),(c=i[7])&&(e[7]=c),a&h&&(e[8]=null==e[8]?i[8]:kn(e[8],i[8])),null==e[9]&&(e[9]=i[9]),e[0]=i[0],e[1]=r}(_,b),e=_[0],i=_[1],n=_[2],s=_[3],u=_[4],!(d=_[9]=_[9]===r?f?0:e.length:mn(_[9]-g,0))&&24&i&&(i&=-25),i&&1!=i)y=8==i||16==i?function(e,i,n){var t=Pr(e);return function s(){for(var o=arguments.length,c=a(o),h=o,u=rt(s);h--;)c[h]=arguments[h];var l=o<3&&c[0]!==u&&c[o-1]!==u?[]:on(c,u);return(o-=l.length)<n?Hr(e,i,Ur,s.placeholder,r,c,l,r,r,n-o):zi(this&&this!==li&&this instanceof s?t:e,this,c)}}(e,i,d):i!=c&&33!=i||u.length?Ur.apply(r,_):function(e,i,n,r){var t=1&i,s=Pr(e);return function i(){for(var o=-1,c=arguments.length,h=-1,u=r.length,l=a(u+c),p=this&&this!==li&&this instanceof i?s:e;++h<u;)l[h]=r[h];for(;c--;)l[h++]=arguments[++o];return zi(p,t?n:this,l)}}(e,i,n,s);else var y=function(e,i,n){var a=1&i,r=Pr(e);return function i(){return(this&&this!==li&&this instanceof i?r:e).apply(a?n:this,arguments)}}(e,i,n);return Ct((b?Xa:jt)(y,_),e,i)}function Vr(e,i,n,a){return e===r||Rs(e,xe[n])&&!Te.call(a,n)?i:e}function Jr(e,i,n,a,t,s){return Ws(e)&&Ws(i)&&(s.set(i,e),Oa(e,i,r,Jr,s),s.delete(i)),e}function Xr(e){return no(e)?r:e}function Wr(e,i,n,a,t,s){var o=1&n,c=e.length,h=i.length;if(c!=h&&!(o&&h>c))return!1;var u=s.get(e),l=s.get(i);if(u&&l)return u==i&&l==e;var p=-1,d=!0,f=2&n?new Yn:r;for(s.set(e,i),s.set(i,e);++p<c;){var g=e[p],m=i[p];if(a)var k=o?a(m,g,p,i,e,s):a(g,m,p,e,i,s);if(k!==r){if(k)continue;d=!1;break}if(f){if(!Li(i,function(e,i){if(!Xi(f,i)&&(g===e||t(g,e,n,a,s)))return f.push(i)})){d=!1;break}}else if(g!==m&&!t(g,m,n,a,s)){d=!1;break}}return s.delete(e),s.delete(i),d}function Zr(e){return Bt(zt(e,r,Kt),e+"")}function et(e){return Aa(e,xo,ht)}function it(e){return Aa(e,So,ut)}var nt=Bn?function(e){return Bn.get(e)}:oc;function at(e){for(var i=e.name+"",n=Cn[i],a=Te.call(Cn,i)?n.length:0;a--;){var r=n[a],t=r.func;if(null==t||t==e)return r.name}return i}function rt(e){return(Te.call(Rn,"placeholder")?Rn:e).placeholder}function tt(){var e=Rn.iteratee||ac;return e=e===ac?Ta:e,arguments.length?e(arguments[0],arguments[1]):e}function st(e,i){var n,a,r=e.__data__;return("string"==(a=typeof(n=i))||"number"==a||"symbol"==a||"boolean"==a?"__proto__"!==n:null===n)?r["string"==typeof i?"string":"hash"]:r.map}function ot(e){for(var i=xo(e),n=i.length;n--;){var a=i[n],r=e[a];i[n]=[a,r,vt(r)]}return i}function ct(e,i){var n=function(e,i){return null==e?r:e[i]}(e,i);return Qa(n)?n:r}var ht=gi?function(e){return null==e?[]:(e=Ie(e),Bi(gi(e),function(i){return Ye.call(e,i)}))}:fc,ut=gi?function(e){for(var i=[];e;)Qi(i,ht(e)),e=He(e);return i}:fc,lt=za;function pt(e,i,n){for(var a=-1,r=(i=mr(i,e)).length,t=!1;++a<r;){var s=Lt(i[a]);if(!(t=null!=e&&n(e,s)))break;e=e[s]}return t||++a!=r?t:!!(r=null==e?0:e.length)&&Xs(r)&&gt(s,r)&&(Ms(e)||Fs(e))}function dt(e){return"function"!=typeof e.constructor||yt(e)?{}:On(He(e))}function ft(e){return Ms(e)||Fs(e)||!!($e&&e&&e[$e])}function gt(e,i){var n=typeof e;return!!(i=null==i?l:i)&&("number"==n||"symbol"!=n&&ke.test(e))&&e>-1&&e%1==0&&e<i}function mt(e,i,n){if(!Ws(n))return!1;var a=typeof i;return!!("number"==a?Hs(n)&&gt(i,n.length):"string"==a&&i in n)&&Rs(n[i],e)}function kt(e,i){if(Ms(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!so(e))||Z.test(e)||!W.test(e)||null!=i&&e in Ie(i)}function bt(e){var i=at(e),n=Rn[i];if("function"!=typeof n||!(i in Mn.prototype))return!1;if(e===n)return!0;var a=nt(n);return!!a&&e===a[0]}(An&&lt(new An(new ArrayBuffer(1)))!=Q||zn&&lt(new zn)!=A||In&&lt(In.resolve())!=E||En&&lt(new En)!=w||jn&&lt(new jn)!=x)&&(lt=function(e){var i=za(e),n=i==I?e.constructor:r,a=n?Dt(n):"";if(a)switch(a){case xn:return Q;case Sn:return A;case Qn:return E;case Tn:return w;case Pn:return x}return i});var _t=Se?Vs:gc;function yt(e){var i=e&&e.constructor;return e===("function"==typeof i&&i.prototype||xe)}function vt(e){return e==e&&!Ws(e)}function At(e,i){return function(n){return null!=n&&n[e]===i&&(i!==r||e in Ie(n))}}function zt(e,i,n){return i=mn(i===r?e.length-1:i,0),function(){for(var r=arguments,t=-1,s=mn(r.length-i,0),o=a(s);++t<s;)o[t]=r[i+t];t=-1;for(var c=a(i+1);++t<i;)c[t]=r[t];return c[i]=n(o),zi(e,this,c)}}function It(e,i){return i.length<2?e:va(e,er(i,0,-1))}function Et(e,i){if(("constructor"!==i||"function"!=typeof e[i])&&"__proto__"!=i)return e[i]}var jt=xt(Xa),wt=ui||function(e,i){return li.setTimeout(e,i)},Bt=xt(Wa);function Ct(e,i,n){var a=i+"";return Bt(e,function(e,i){var n=i.length;if(!n)return e;var a=n-1;return i[a]=(n>1?"& ":"")+i[a],i=i.join(n>2?", ":" "),e.replace(te,"{\n/* [wrapped with "+i+"] */\n")}(a,function(e,i){return Ei(f,function(n){var a="_."+n[0];i&n[1]&&!Ci(e,a)&&e.push(a)}),e.sort()}(function(e){var i=e.match(se);return i?i[1].split(oe):[]}(a),n)))}function xt(e){var i=0,n=0;return function(){var a=bn(),t=16-(a-n);if(n=a,t>0){if(++i>=800)return arguments[0]}else i=0;return e.apply(r,arguments)}}function St(e,i){var n=-1,a=e.length,t=a-1;for(i=i===r?a:i;++n<i;){var s=qa(n,t),o=e[s];e[s]=e[n],e[n]=o}return e.length=i,e}var Qt,Tt,Pt=(Qt=Qs(function(e){var i=[];return 46===e.charCodeAt(0)&&i.push(""),e.replace(ee,function(e,n,a,r){i.push(a?r.replace(ue,"$1"):n||e)}),i},function(e){return 500===Tt.size&&Tt.clear(),e}),Tt=Qt.cache,Qt);function Lt(e){if("string"==typeof e||so(e))return e;var i=e+"";return"0"==i&&1/e==-1/0?"-0":i}function Dt(e){if(null!=e){try{return Qe.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Ut(e){if(e instanceof Mn)return e.clone();var i=new Fn(e.__wrapped__,e.__chain__);return i.__actions__=jr(e.__actions__),i.__index__=e.__index__,i.__values__=e.__values__,i}var Rt=Ga(function(e,i){return qs(e)?ha(e,ga(i,1,qs,!0)):[]}),Ot=Ga(function(e,i){var n=$t(i);return qs(n)&&(n=r),qs(e)?ha(e,ga(i,1,qs,!0),tt(n,2)):[]}),Nt=Ga(function(e,i){var n=$t(i);return qs(n)&&(n=r),qs(e)?ha(e,ga(i,1,qs,!0),r,n):[]});function Ft(e,i,n){var a=null==e?0:e.length;if(!a)return-1;var r=null==n?0:po(n);return r<0&&(r=mn(a+r,0)),Ri(e,tt(i,3),r)}function Mt(e,i,n){var a=null==e?0:e.length;if(!a)return-1;var t=a-1;return n!==r&&(t=po(n),t=n<0?mn(a+t,0):kn(t,a-1)),Ri(e,tt(i,3),t,!0)}function Kt(e){return null!=e&&e.length?ga(e,1):[]}function Ht(e){return e&&e.length?e[0]:r}var qt=Ga(function(e){var i=Si(e,fr);return i.length&&i[0]===e[0]?wa(i):[]}),Yt=Ga(function(e){var i=$t(e),n=Si(e,fr);return i===$t(n)?i=r:n.pop(),n.length&&n[0]===e[0]?wa(n,tt(i,2)):[]}),Gt=Ga(function(e){var i=$t(e),n=Si(e,fr);return(i="function"==typeof i?i:r)&&n.pop(),n.length&&n[0]===e[0]?wa(n,r,i):[]});function $t(e){var i=null==e?0:e.length;return i?e[i-1]:r}var Vt=Ga(Jt);function Jt(e,i){return e&&e.length&&i&&i.length?Ka(e,i):e}var Xt=Zr(function(e,i){var n=null==e?0:e.length,a=ra(e,i);return Ha(e,Si(i,function(e){return gt(e,n)?+e:e}).sort(zr)),a});function Wt(e){return null==e?e:vn.call(e)}var Zt=Ga(function(e){return or(ga(e,1,qs,!0))}),es=Ga(function(e){var i=$t(e);return qs(i)&&(i=r),or(ga(e,1,qs,!0),tt(i,2))}),is=Ga(function(e){var i=$t(e);return i="function"==typeof i?i:r,or(ga(e,1,qs,!0),r,i)});function ns(e){if(!e||!e.length)return[];var i=0;return e=Bi(e,function(e){if(qs(e))return i=mn(e.length,i),!0}),Gi(i,function(i){return Si(e,Ki(i))})}function as(e,i){if(!e||!e.length)return[];var n=ns(e);return null==i?n:Si(n,function(e){return zi(i,r,e)})}var rs=Ga(function(e,i){return qs(e)?ha(e,i):[]}),ts=Ga(function(e){return pr(Bi(e,qs))}),ss=Ga(function(e){var i=$t(e);return qs(i)&&(i=r),pr(Bi(e,qs),tt(i,2))}),os=Ga(function(e){var i=$t(e);return i="function"==typeof i?i:r,pr(Bi(e,qs),r,i)}),cs=Ga(ns),hs=Ga(function(e){var i=e.length,n=i>1?e[i-1]:r;return n="function"==typeof n?(e.pop(),n):r,as(e,n)});function us(e){var i=Rn(e);return i.__chain__=!0,i}function ls(e,i){return i(e)}var ps=Zr(function(e){var i=e.length,n=i?e[0]:0,a=this.__wrapped__,t=function(i){return ra(i,e)};return!(i>1||this.__actions__.length)&&a instanceof Mn&&gt(n)?((a=a.slice(n,+n+(i?1:0))).__actions__.push({func:ls,args:[t],thisArg:r}),new Fn(a,this.__chain__).thru(function(e){return i&&!e.length&&e.push(r),e})):this.thru(t)}),ds=Br(function(e,i,n){Te.call(e,n)?++e[n]:aa(e,n,1)}),fs=Lr(Ft),gs=Lr(Mt);function ms(e,i){return(Ms(e)?Ei:ua)(e,tt(i,3))}function ks(e,i){return(Ms(e)?ji:la)(e,tt(i,3))}var bs=Br(function(e,i,n){Te.call(e,n)?e[n].push(i):aa(e,n,[i])}),_s=Ga(function(e,i,n){var r=-1,t="function"==typeof i,s=Hs(e)?a(e.length):[];return ua(e,function(e){s[++r]=t?zi(i,e,n):Ba(e,i,n)}),s}),ys=Br(function(e,i,n){aa(e,n,i)});function vs(e,i){return(Ms(e)?Si:Da)(e,tt(i,3))}var As=Br(function(e,i,n){e[n?0:1].push(i)},function(){return[[],[]]}),zs=Ga(function(e,i){if(null==e)return[];var n=i.length;return n>1&&mt(e,i[0],i[1])?i=[]:n>2&&mt(i[0],i[1],i[2])&&(i=[i[0]]),Fa(e,ga(i,1),[])}),Is=hi||function(){return li.Date.now()};function Es(e,i,n){return i=n?r:i,i=e&&null==i?e.length:i,$r(e,h,r,r,r,r,i)}function js(e,i){var n;if("function"!=typeof i)throw new we(t);return e=po(e),function(){return--e>0&&(n=i.apply(this,arguments)),e<=1&&(i=r),n}}var ws=Ga(function(e,i,n){var a=1;if(n.length){var r=on(n,rt(ws));a|=c}return $r(e,a,i,n,r)}),Bs=Ga(function(e,i,n){var a=3;if(n.length){var r=on(n,rt(Bs));a|=c}return $r(i,a,e,n,r)});function Cs(e,i,n){var a,s,o,c,h,u,l=0,p=!1,d=!1,f=!0;if("function"!=typeof e)throw new we(t);function g(i){var n=a,t=s;return a=s=r,l=i,c=e.apply(t,n)}function m(e){var n=e-u;return u===r||n>=i||n<0||d&&e-l>=o}function k(){var e=Is();if(m(e))return b(e);h=wt(k,function(e){var n=i-(e-u);return d?kn(n,o-(e-l)):n}(e))}function b(e){return h=r,f&&a?g(e):(a=s=r,c)}function _(){var e=Is(),n=m(e);if(a=arguments,s=this,u=e,n){if(h===r)return function(e){return l=e,h=wt(k,i),p?g(e):c}(u);if(d)return _r(h),h=wt(k,i),g(u)}return h===r&&(h=wt(k,i)),c}return i=go(i)||0,Ws(n)&&(p=!!n.leading,o=(d="maxWait"in n)?mn(go(n.maxWait)||0,i):o,f="trailing"in n?!!n.trailing:f),_.cancel=function(){h!==r&&_r(h),l=0,a=u=s=h=r},_.flush=function(){return h===r?c:b(Is())},_}var xs=Ga(function(e,i){return ca(e,1,i)}),Ss=Ga(function(e,i,n){return ca(e,go(i)||0,n)});function Qs(e,i){if("function"!=typeof e||null!=i&&"function"!=typeof i)throw new we(t);var n=function(){var a=arguments,r=i?i.apply(this,a):a[0],t=n.cache;if(t.has(r))return t.get(r);var s=e.apply(this,a);return n.cache=t.set(r,s)||t,s};return n.cache=new(Qs.Cache||qn),n}function Ts(e){if("function"!=typeof e)throw new we(t);return function(){var i=arguments;switch(i.length){case 0:return!e.call(this);case 1:return!e.call(this,i[0]);case 2:return!e.call(this,i[0],i[1]);case 3:return!e.call(this,i[0],i[1],i[2])}return!e.apply(this,i)}}Qs.Cache=qn;var Ps=kr(function(e,i){var n=(i=1==i.length&&Ms(i[0])?Si(i[0],Vi(tt())):Si(ga(i,1),Vi(tt()))).length;return Ga(function(a){for(var r=-1,t=kn(a.length,n);++r<t;)a[r]=i[r].call(this,a[r]);return zi(e,this,a)})}),Ls=Ga(function(e,i){var n=on(i,rt(Ls));return $r(e,c,r,i,n)}),Ds=Ga(function(e,i){var n=on(i,rt(Ds));return $r(e,64,r,i,n)}),Us=Zr(function(e,i){return $r(e,256,r,r,r,i)});function Rs(e,i){return e===i||e!=e&&i!=i}var Os=Kr(Ia),Ns=Kr(function(e,i){return e>=i}),Fs=Ca(function(){return arguments}())?Ca:function(e){return Zs(e)&&Te.call(e,"callee")&&!Ye.call(e,"callee")},Ms=a.isArray,Ks=ki?Vi(ki):function(e){return Zs(e)&&za(e)==S};function Hs(e){return null!=e&&Xs(e.length)&&!Vs(e)}function qs(e){return Zs(e)&&Hs(e)}var Ys=mi||gc,Gs=bi?Vi(bi):function(e){return Zs(e)&&za(e)==b};function $s(e){if(!Zs(e))return!1;var i=za(e);return i==_||"[object DOMException]"==i||"string"==typeof e.message&&"string"==typeof e.name&&!no(e)}function Vs(e){if(!Ws(e))return!1;var i=za(e);return i==y||i==v||"[object AsyncFunction]"==i||"[object Proxy]"==i}function Js(e){return"number"==typeof e&&e==po(e)}function Xs(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=l}function Ws(e){var i=typeof e;return null!=e&&("object"==i||"function"==i)}function Zs(e){return null!=e&&"object"==typeof e}var eo=_i?Vi(_i):function(e){return Zs(e)&&lt(e)==A};function io(e){return"number"==typeof e||Zs(e)&&za(e)==z}function no(e){if(!Zs(e)||za(e)!=I)return!1;var i=He(e);if(null===i)return!0;var n=Te.call(i,"constructor")&&i.constructor;return"function"==typeof n&&n instanceof n&&Qe.call(n)==Ue}var ao=yi?Vi(yi):function(e){return Zs(e)&&za(e)==j},ro=vi?Vi(vi):function(e){return Zs(e)&&lt(e)==w};function to(e){return"string"==typeof e||!Ms(e)&&Zs(e)&&za(e)==B}function so(e){return"symbol"==typeof e||Zs(e)&&za(e)==C}var oo=Ai?Vi(Ai):function(e){return Zs(e)&&Xs(e.length)&&!!ri[za(e)]},co=Kr(La),ho=Kr(function(e,i){return e<=i});function uo(e){if(!e)return[];if(Hs(e))return to(e)?ln(e):jr(e);if(Ve&&e[Ve])return function(e){for(var i,n=[];!(i=e.next()).done;)n.push(i.value);return n}(e[Ve]());var i=lt(e);return(i==A?tn:i==w?cn:Oo)(e)}function lo(e){return e?(e=go(e))===u||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}function po(e){var i=lo(e),n=i%1;return i==i?n?i-n:i:0}function fo(e){return e?ta(po(e),0,d):0}function go(e){if("number"==typeof e)return e;if(so(e))return p;if(Ws(e)){var i="function"==typeof e.valueOf?e.valueOf():e;e=Ws(i)?i+"":i}if("string"!=typeof e)return 0===e?e:+e;e=$i(e);var n=fe.test(e);return n||me.test(e)?ci(e.slice(2),n?2:8):de.test(e)?p:+e}function mo(e){return wr(e,So(e))}function ko(e){return null==e?"":sr(e)}var bo=Cr(function(e,i){if(yt(i)||Hs(i))wr(i,xo(i),e);else for(var n in i)Te.call(i,n)&&Zn(e,n,i[n])}),_o=Cr(function(e,i){wr(i,So(i),e)}),yo=Cr(function(e,i,n,a){wr(i,So(i),e,a)}),vo=Cr(function(e,i,n,a){wr(i,xo(i),e,a)}),Ao=Zr(ra),zo=Ga(function(e,i){e=Ie(e);var n=-1,a=i.length,t=a>2?i[2]:r;for(t&&mt(i[0],i[1],t)&&(a=1);++n<a;)for(var s=i[n],o=So(s),c=-1,h=o.length;++c<h;){var u=o[c],l=e[u];(l===r||Rs(l,xe[u])&&!Te.call(e,u))&&(e[u]=s[u])}return e}),Io=Ga(function(e){return e.push(r,Jr),zi(To,r,e)});function Eo(e,i,n){var a=null==e?r:va(e,i);return a===r?n:a}function jo(e,i){return null!=e&&pt(e,i,ja)}var wo=Rr(function(e,i,n){null!=i&&"function"!=typeof i.toString&&(i=De.call(i)),e[i]=n},Zo(nc)),Bo=Rr(function(e,i,n){null!=i&&"function"!=typeof i.toString&&(i=De.call(i)),Te.call(e,i)?e[i].push(n):e[i]=[n]},tt),Co=Ga(Ba);function xo(e){return Hs(e)?$n(e):Pa(e)}function So(e){return Hs(e)?$n(e,!0):function(e){if(!Ws(e))return function(e){var i=[];if(null!=e)for(var n in Ie(e))i.push(n);return i}(e);var i=yt(e),n=[];for(var a in e)("constructor"!=a||!i&&Te.call(e,a))&&n.push(a);return n}(e)}var Qo=Cr(function(e,i,n){Oa(e,i,n)}),To=Cr(function(e,i,n,a){Oa(e,i,n,a)}),Po=Zr(function(e,i){var n={};if(null==e)return n;var a=!1;i=Si(i,function(i){return i=mr(i,e),a||(a=i.length>1),i}),wr(e,it(e),n),a&&(n=sa(n,7,Xr));for(var r=i.length;r--;)cr(n,i[r]);return n}),Lo=Zr(function(e,i){return null==e?{}:function(e,i){return Ma(e,i,function(i,n){return jo(e,n)})}(e,i)});function Do(e,i){if(null==e)return{};var n=Si(it(e),function(e){return[e]});return i=tt(i),Ma(e,n,function(e,n){return i(e,n[0])})}var Uo=Gr(xo),Ro=Gr(So);function Oo(e){return null==e?[]:Ji(e,xo(e))}var No=Tr(function(e,i,n){return i=i.toLowerCase(),e+(n?Fo(i):i)});function Fo(e){return Vo(ko(e).toLowerCase())}function Mo(e){return(e=ko(e))&&e.replace(be,en).replace(Xe,"")}var Ko=Tr(function(e,i,n){return e+(n?"-":"")+i.toLowerCase()}),Ho=Tr(function(e,i,n){return e+(n?" ":"")+i.toLowerCase()}),qo=Qr("toLowerCase"),Yo=Tr(function(e,i,n){return e+(n?"_":"")+i.toLowerCase()}),Go=Tr(function(e,i,n){return e+(n?" ":"")+Vo(i)}),$o=Tr(function(e,i,n){return e+(n?" ":"")+i.toUpperCase()}),Vo=Qr("toUpperCase");function Jo(e,i,n){return e=ko(e),(i=n?r:i)===r?function(e){return ii.test(e)}(e)?function(e){return e.match(Ze)||[]}(e):function(e){return e.match(ce)||[]}(e):e.match(i)||[]}var Xo=Ga(function(e,i){try{return zi(e,r,i)}catch(e){return $s(e)?e:new ve(e)}}),Wo=Zr(function(e,i){return Ei(i,function(i){i=Lt(i),aa(e,i,ws(e[i],e))}),e});function Zo(e){return function(){return e}}var ec=Dr(),ic=Dr(!0);function nc(e){return e}function ac(e){return Ta("function"==typeof e?e:sa(e,1))}var rc=Ga(function(e,i){return function(n){return Ba(n,e,i)}}),tc=Ga(function(e,i){return function(n){return Ba(e,n,i)}});function sc(e,i,n){var a=xo(i),r=ya(i,a);null!=n||Ws(i)&&(r.length||!a.length)||(n=i,i=e,e=this,r=ya(i,xo(i)));var t=!(Ws(n)&&"chain"in n&&!n.chain),s=Vs(e);return Ei(r,function(n){var a=i[n];e[n]=a,s&&(e.prototype[n]=function(){var i=this.__chain__;if(t||i){var n=e(this.__wrapped__);return(n.__actions__=jr(this.__actions__)).push({func:a,args:arguments,thisArg:e}),n.__chain__=i,n}return a.apply(e,Qi([this.value()],arguments))})}),e}function oc(){}var cc=Nr(Si),hc=Nr(wi),uc=Nr(Li);function lc(e){return kt(e)?Ki(Lt(e)):function(e){return function(i){return va(i,e)}}(e)}var pc=Mr(),dc=Mr(!0);function fc(){return[]}function gc(){return!1}var mc,kc=Or(function(e,i){return e+i},0),bc=qr("ceil"),_c=Or(function(e,i){return e/i},1),yc=qr("floor"),vc=Or(function(e,i){return e*i},1),Ac=qr("round"),zc=Or(function(e,i){return e-i},0);return Rn.after=function(e,i){if("function"!=typeof i)throw new we(t);return e=po(e),function(){if(--e<1)return i.apply(this,arguments)}},Rn.ary=Es,Rn.assign=bo,Rn.assignIn=_o,Rn.assignInWith=yo,Rn.assignWith=vo,Rn.at=Ao,Rn.before=js,Rn.bind=ws,Rn.bindAll=Wo,Rn.bindKey=Bs,Rn.castArray=function(){if(!arguments.length)return[];var e=arguments[0];return Ms(e)?e:[e]},Rn.chain=us,Rn.chunk=function(e,i,n){i=(n?mt(e,i,n):i===r)?1:mn(po(i),0);var t=null==e?0:e.length;if(!t||i<1)return[];for(var s=0,o=0,c=a(pi(t/i));s<t;)c[o++]=er(e,s,s+=i);return c},Rn.compact=function(e){for(var i=-1,n=null==e?0:e.length,a=0,r=[];++i<n;){var t=e[i];t&&(r[a++]=t)}return r},Rn.concat=function(){var e=arguments.length;if(!e)return[];for(var i=a(e-1),n=arguments[0],r=e;r--;)i[r-1]=arguments[r];return Qi(Ms(n)?jr(n):[n],ga(i,1))},Rn.cond=function(e){var i=null==e?0:e.length,n=tt();return e=i?Si(e,function(e){if("function"!=typeof e[1])throw new we(t);return[n(e[0]),e[1]]}):[],Ga(function(n){for(var a=-1;++a<i;){var r=e[a];if(zi(r[0],this,n))return zi(r[1],this,n)}})},Rn.conforms=function(e){return function(e){var i=xo(e);return function(n){return oa(n,e,i)}}(sa(e,1))},Rn.constant=Zo,Rn.countBy=ds,Rn.create=function(e,i){var n=On(e);return null==i?n:na(n,i)},Rn.curry=function e(i,n,a){var t=$r(i,8,r,r,r,r,r,n=a?r:n);return t.placeholder=e.placeholder,t},Rn.curryRight=function e(i,n,a){var t=$r(i,16,r,r,r,r,r,n=a?r:n);return t.placeholder=e.placeholder,t},Rn.debounce=Cs,Rn.defaults=zo,Rn.defaultsDeep=Io,Rn.defer=xs,Rn.delay=Ss,Rn.difference=Rt,Rn.differenceBy=Ot,Rn.differenceWith=Nt,Rn.drop=function(e,i,n){var a=null==e?0:e.length;return a?er(e,(i=n||i===r?1:po(i))<0?0:i,a):[]},Rn.dropRight=function(e,i,n){var a=null==e?0:e.length;return a?er(e,0,(i=a-(i=n||i===r?1:po(i)))<0?0:i):[]},Rn.dropRightWhile=function(e,i){return e&&e.length?ur(e,tt(i,3),!0,!0):[]},Rn.dropWhile=function(e,i){return e&&e.length?ur(e,tt(i,3),!0):[]},Rn.fill=function(e,i,n,a){var t=null==e?0:e.length;return t?(n&&"number"!=typeof n&&mt(e,i,n)&&(n=0,a=t),function(e,i,n,a){var t=e.length;for((n=po(n))<0&&(n=-n>t?0:t+n),(a=a===r||a>t?t:po(a))<0&&(a+=t),a=n>a?0:fo(a);n<a;)e[n++]=i;return e}(e,i,n,a)):[]},Rn.filter=function(e,i){return(Ms(e)?Bi:fa)(e,tt(i,3))},Rn.flatMap=function(e,i){return ga(vs(e,i),1)},Rn.flatMapDeep=function(e,i){return ga(vs(e,i),u)},Rn.flatMapDepth=function(e,i,n){return n=n===r?1:po(n),ga(vs(e,i),n)},Rn.flatten=Kt,Rn.flattenDeep=function(e){return null!=e&&e.length?ga(e,u):[]},Rn.flattenDepth=function(e,i){return null!=e&&e.length?ga(e,i=i===r?1:po(i)):[]},Rn.flip=function(e){return $r(e,512)},Rn.flow=ec,Rn.flowRight=ic,Rn.fromPairs=function(e){for(var i=-1,n=null==e?0:e.length,a={};++i<n;){var r=e[i];a[r[0]]=r[1]}return a},Rn.functions=function(e){return null==e?[]:ya(e,xo(e))},Rn.functionsIn=function(e){return null==e?[]:ya(e,So(e))},Rn.groupBy=bs,Rn.initial=function(e){return null!=e&&e.length?er(e,0,-1):[]},Rn.intersection=qt,Rn.intersectionBy=Yt,Rn.intersectionWith=Gt,Rn.invert=wo,Rn.invertBy=Bo,Rn.invokeMap=_s,Rn.iteratee=ac,Rn.keyBy=ys,Rn.keys=xo,Rn.keysIn=So,Rn.map=vs,Rn.mapKeys=function(e,i){var n={};return i=tt(i,3),ba(e,function(e,a,r){aa(n,i(e,a,r),e)}),n},Rn.mapValues=function(e,i){var n={};return i=tt(i,3),ba(e,function(e,a,r){aa(n,a,i(e,a,r))}),n},Rn.matches=function(e){return Ua(sa(e,1))},Rn.matchesProperty=function(e,i){return Ra(e,sa(i,1))},Rn.memoize=Qs,Rn.merge=Qo,Rn.mergeWith=To,Rn.method=rc,Rn.methodOf=tc,Rn.mixin=sc,Rn.negate=Ts,Rn.nthArg=function(e){return e=po(e),Ga(function(i){return Na(i,e)})},Rn.omit=Po,Rn.omitBy=function(e,i){return Do(e,Ts(tt(i)))},Rn.once=function(e){return js(2,e)},Rn.orderBy=function(e,i,n,a){return null==e?[]:(Ms(i)||(i=null==i?[]:[i]),Ms(n=a?r:n)||(n=null==n?[]:[n]),Fa(e,i,n))},Rn.over=cc,Rn.overArgs=Ps,Rn.overEvery=hc,Rn.overSome=uc,Rn.partial=Ls,Rn.partialRight=Ds,Rn.partition=As,Rn.pick=Lo,Rn.pickBy=Do,Rn.property=lc,Rn.propertyOf=function(e){return function(i){return null==e?r:va(e,i)}},Rn.pull=Vt,Rn.pullAll=Jt,Rn.pullAllBy=function(e,i,n){return e&&e.length&&i&&i.length?Ka(e,i,tt(n,2)):e},Rn.pullAllWith=function(e,i,n){return e&&e.length&&i&&i.length?Ka(e,i,r,n):e},Rn.pullAt=Xt,Rn.range=pc,Rn.rangeRight=dc,Rn.rearg=Us,Rn.reject=function(e,i){return(Ms(e)?Bi:fa)(e,Ts(tt(i,3)))},Rn.remove=function(e,i){var n=[];if(!e||!e.length)return n;var a=-1,r=[],t=e.length;for(i=tt(i,3);++a<t;){var s=e[a];i(s,a,e)&&(n.push(s),r.push(a))}return Ha(e,r),n},Rn.rest=function(e,i){if("function"!=typeof e)throw new we(t);return Ga(e,i=i===r?i:po(i))},Rn.reverse=Wt,Rn.sampleSize=function(e,i,n){return i=(n?mt(e,i,n):i===r)?1:po(i),(Ms(e)?Jn:Va)(e,i)},Rn.set=function(e,i,n){return null==e?e:Ja(e,i,n)},Rn.setWith=function(e,i,n,a){return a="function"==typeof a?a:r,null==e?e:Ja(e,i,n,a)},Rn.shuffle=function(e){return(Ms(e)?Xn:Za)(e)},Rn.slice=function(e,i,n){var a=null==e?0:e.length;return a?(n&&"number"!=typeof n&&mt(e,i,n)?(i=0,n=a):(i=null==i?0:po(i),n=n===r?a:po(n)),er(e,i,n)):[]},Rn.sortBy=zs,Rn.sortedUniq=function(e){return e&&e.length?rr(e):[]},Rn.sortedUniqBy=function(e,i){return e&&e.length?rr(e,tt(i,2)):[]},Rn.split=function(e,i,n){return n&&"number"!=typeof n&&mt(e,i,n)&&(i=n=r),(n=n===r?d:n>>>0)?(e=ko(e))&&("string"==typeof i||null!=i&&!ao(i))&&!(i=sr(i))&&rn(e)?br(ln(e),0,n):e.split(i,n):[]},Rn.spread=function(e,i){if("function"!=typeof e)throw new we(t);return i=null==i?0:mn(po(i),0),Ga(function(n){var a=n[i],r=br(n,0,i);return a&&Qi(r,a),zi(e,this,r)})},Rn.tail=function(e){var i=null==e?0:e.length;return i?er(e,1,i):[]},Rn.take=function(e,i,n){return e&&e.length?er(e,0,(i=n||i===r?1:po(i))<0?0:i):[]},Rn.takeRight=function(e,i,n){var a=null==e?0:e.length;return a?er(e,(i=a-(i=n||i===r?1:po(i)))<0?0:i,a):[]},Rn.takeRightWhile=function(e,i){return e&&e.length?ur(e,tt(i,3),!1,!0):[]},Rn.takeWhile=function(e,i){return e&&e.length?ur(e,tt(i,3)):[]},Rn.tap=function(e,i){return i(e),e},Rn.throttle=function(e,i,n){var a=!0,r=!0;if("function"!=typeof e)throw new we(t);return Ws(n)&&(a="leading"in n?!!n.leading:a,r="trailing"in n?!!n.trailing:r),Cs(e,i,{leading:a,maxWait:i,trailing:r})},Rn.thru=ls,Rn.toArray=uo,Rn.toPairs=Uo,Rn.toPairsIn=Ro,Rn.toPath=function(e){return Ms(e)?Si(e,Lt):so(e)?[e]:jr(Pt(ko(e)))},Rn.toPlainObject=mo,Rn.transform=function(e,i,n){var a=Ms(e),r=a||Ys(e)||oo(e);if(i=tt(i,4),null==n){var t=e&&e.constructor;n=r?a?new t:[]:Ws(e)&&Vs(t)?On(He(e)):{}}return(r?Ei:ba)(e,function(e,a,r){return i(n,e,a,r)}),n},Rn.unary=function(e){return Es(e,1)},Rn.union=Zt,Rn.unionBy=es,Rn.unionWith=is,Rn.uniq=function(e){return e&&e.length?or(e):[]},Rn.uniqBy=function(e,i){return e&&e.length?or(e,tt(i,2)):[]},Rn.uniqWith=function(e,i){return i="function"==typeof i?i:r,e&&e.length?or(e,r,i):[]},Rn.unset=function(e,i){return null==e||cr(e,i)},Rn.unzip=ns,Rn.unzipWith=as,Rn.update=function(e,i,n){return null==e?e:hr(e,i,gr(n))},Rn.updateWith=function(e,i,n,a){return a="function"==typeof a?a:r,null==e?e:hr(e,i,gr(n),a)},Rn.values=Oo,Rn.valuesIn=function(e){return null==e?[]:Ji(e,So(e))},Rn.without=rs,Rn.words=Jo,Rn.wrap=function(e,i){return Ls(gr(i),e)},Rn.xor=ts,Rn.xorBy=ss,Rn.xorWith=os,Rn.zip=cs,Rn.zipObject=function(e,i){return dr(e||[],i||[],Zn)},Rn.zipObjectDeep=function(e,i){return dr(e||[],i||[],Ja)},Rn.zipWith=hs,Rn.entries=Uo,Rn.entriesIn=Ro,Rn.extend=_o,Rn.extendWith=yo,sc(Rn,Rn),Rn.add=kc,Rn.attempt=Xo,Rn.camelCase=No,Rn.capitalize=Fo,Rn.ceil=bc,Rn.clamp=function(e,i,n){return n===r&&(n=i,i=r),n!==r&&(n=(n=go(n))==n?n:0),i!==r&&(i=(i=go(i))==i?i:0),ta(go(e),i,n)},Rn.clone=function(e){return sa(e,4)},Rn.cloneDeep=function(e){return sa(e,5)},Rn.cloneDeepWith=function(e,i){return sa(e,5,i="function"==typeof i?i:r)},Rn.cloneWith=function(e,i){return sa(e,4,i="function"==typeof i?i:r)},Rn.conformsTo=function(e,i){return null==i||oa(e,i,xo(i))},Rn.deburr=Mo,Rn.defaultTo=function(e,i){return null==e||e!=e?i:e},Rn.divide=_c,Rn.endsWith=function(e,i,n){e=ko(e),i=sr(i);var a=e.length,t=n=n===r?a:ta(po(n),0,a);return(n-=i.length)>=0&&e.slice(n,t)==i},Rn.eq=Rs,Rn.escape=function(e){return(e=ko(e))&&$.test(e)?e.replace(Y,nn):e},Rn.escapeRegExp=function(e){return(e=ko(e))&&ne.test(e)?e.replace(ie,"\\$&"):e},Rn.every=function(e,i,n){var a=Ms(e)?wi:pa;return n&&mt(e,i,n)&&(i=r),a(e,tt(i,3))},Rn.find=fs,Rn.findIndex=Ft,Rn.findKey=function(e,i){return Ui(e,tt(i,3),ba)},Rn.findLast=gs,Rn.findLastIndex=Mt,Rn.findLastKey=function(e,i){return Ui(e,tt(i,3),_a)},Rn.floor=yc,Rn.forEach=ms,Rn.forEachRight=ks,Rn.forIn=function(e,i){return null==e?e:ma(e,tt(i,3),So)},Rn.forInRight=function(e,i){return null==e?e:ka(e,tt(i,3),So)},Rn.forOwn=function(e,i){return e&&ba(e,tt(i,3))},Rn.forOwnRight=function(e,i){return e&&_a(e,tt(i,3))},Rn.get=Eo,Rn.gt=Os,Rn.gte=Ns,Rn.has=function(e,i){return null!=e&&pt(e,i,Ea)},Rn.hasIn=jo,Rn.head=Ht,Rn.identity=nc,Rn.includes=function(e,i,n,a){e=Hs(e)?e:Oo(e),n=n&&!a?po(n):0;var r=e.length;return n<0&&(n=mn(r+n,0)),to(e)?n<=r&&e.indexOf(i,n)>-1:!!r&&Oi(e,i,n)>-1},Rn.indexOf=function(e,i,n){var a=null==e?0:e.length;if(!a)return-1;var r=null==n?0:po(n);return r<0&&(r=mn(a+r,0)),Oi(e,i,r)},Rn.inRange=function(e,i,n){return i=lo(i),n===r?(n=i,i=0):n=lo(n),function(e,i,n){return e>=kn(i,n)&&e<mn(i,n)}(e=go(e),i,n)},Rn.invoke=Co,Rn.isArguments=Fs,Rn.isArray=Ms,Rn.isArrayBuffer=Ks,Rn.isArrayLike=Hs,Rn.isArrayLikeObject=qs,Rn.isBoolean=function(e){return!0===e||!1===e||Zs(e)&&za(e)==k},Rn.isBuffer=Ys,Rn.isDate=Gs,Rn.isElement=function(e){return Zs(e)&&1===e.nodeType&&!no(e)},Rn.isEmpty=function(e){if(null==e)return!0;if(Hs(e)&&(Ms(e)||"string"==typeof e||"function"==typeof e.splice||Ys(e)||oo(e)||Fs(e)))return!e.length;var i=lt(e);if(i==A||i==w)return!e.size;if(yt(e))return!Pa(e).length;for(var n in e)if(Te.call(e,n))return!1;return!0},Rn.isEqual=function(e,i){return xa(e,i)},Rn.isEqualWith=function(e,i,n){var a=(n="function"==typeof n?n:r)?n(e,i):r;return a===r?xa(e,i,r,n):!!a},Rn.isError=$s,Rn.isFinite=function(e){return"number"==typeof e&&Di(e)},Rn.isFunction=Vs,Rn.isInteger=Js,Rn.isLength=Xs,Rn.isMap=eo,Rn.isMatch=function(e,i){return e===i||Sa(e,i,ot(i))},Rn.isMatchWith=function(e,i,n){return n="function"==typeof n?n:r,Sa(e,i,ot(i),n)},Rn.isNaN=function(e){return io(e)&&e!=+e},Rn.isNative=function(e){if(_t(e))throw new ve("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return Qa(e)},Rn.isNil=function(e){return null==e},Rn.isNull=function(e){return null===e},Rn.isNumber=io,Rn.isObject=Ws,Rn.isObjectLike=Zs,Rn.isPlainObject=no,Rn.isRegExp=ao,Rn.isSafeInteger=function(e){return Js(e)&&e>=-9007199254740991&&e<=l},Rn.isSet=ro,Rn.isString=to,Rn.isSymbol=so,Rn.isTypedArray=oo,Rn.isUndefined=function(e){return e===r},Rn.isWeakMap=function(e){return Zs(e)&&lt(e)==x},Rn.isWeakSet=function(e){return Zs(e)&&"[object WeakSet]"==za(e)},Rn.join=function(e,i){return null==e?"":Hi.call(e,i)},Rn.kebabCase=Ko,Rn.last=$t,Rn.lastIndexOf=function(e,i,n){var a=null==e?0:e.length;if(!a)return-1;var t=a;return n!==r&&(t=(t=po(n))<0?mn(a+t,0):kn(t,a-1)),i==i?function(e,i,n){for(var a=n+1;a--;)if(e[a]===i)return a;return a}(e,i,t):Ri(e,Fi,t,!0)},Rn.lowerCase=Ho,Rn.lowerFirst=qo,Rn.lt=co,Rn.lte=ho,Rn.max=function(e){return e&&e.length?da(e,nc,Ia):r},Rn.maxBy=function(e,i){return e&&e.length?da(e,tt(i,2),Ia):r},Rn.mean=function(e){return Mi(e,nc)},Rn.meanBy=function(e,i){return Mi(e,tt(i,2))},Rn.min=function(e){return e&&e.length?da(e,nc,La):r},Rn.minBy=function(e,i){return e&&e.length?da(e,tt(i,2),La):r},Rn.stubArray=fc,Rn.stubFalse=gc,Rn.stubObject=function(){return{}},Rn.stubString=function(){return""},Rn.stubTrue=function(){return!0},Rn.multiply=vc,Rn.nth=function(e,i){return e&&e.length?Na(e,po(i)):r},Rn.noConflict=function(){return li._===this&&(li._=Re),this},Rn.noop=oc,Rn.now=Is,Rn.pad=function(e,i,n){e=ko(e);var a=(i=po(i))?un(e):0;if(!i||a>=i)return e;var r=(i-a)/2;return Fr(di(r),n)+e+Fr(pi(r),n)},Rn.padEnd=function(e,i,n){e=ko(e);var a=(i=po(i))?un(e):0;return i&&a<i?e+Fr(i-a,n):e},Rn.padStart=function(e,i,n){e=ko(e);var a=(i=po(i))?un(e):0;return i&&a<i?Fr(i-a,n)+e:e},Rn.parseInt=function(e,i,n){return n||null==i?i=0:i&&(i=+i),_n(ko(e).replace(ae,""),i||0)},Rn.random=function(e,i,n){if(n&&"boolean"!=typeof n&&mt(e,i,n)&&(i=n=r),n===r&&("boolean"==typeof i?(n=i,i=r):"boolean"==typeof e&&(n=e,e=r)),e===r&&i===r?(e=0,i=1):(e=lo(e),i===r?(i=e,e=0):i=lo(i)),e>i){var a=e;e=i,i=a}if(n||e%1||i%1){var t=yn();return kn(e+t*(i-e+oi("1e-"+((t+"").length-1))),i)}return qa(e,i)},Rn.reduce=function(e,i,n){var a=Ms(e)?Ti:qi,r=arguments.length<3;return a(e,tt(i,4),n,r,ua)},Rn.reduceRight=function(e,i,n){var a=Ms(e)?Pi:qi,r=arguments.length<3;return a(e,tt(i,4),n,r,la)},Rn.repeat=function(e,i,n){return i=(n?mt(e,i,n):i===r)?1:po(i),Ya(ko(e),i)},Rn.replace=function(){var e=arguments,i=ko(e[0]);return e.length<3?i:i.replace(e[1],e[2])},Rn.result=function(e,i,n){var a=-1,t=(i=mr(i,e)).length;for(t||(t=1,e=r);++a<t;){var s=null==e?r:e[Lt(i[a])];s===r&&(a=t,s=n),e=Vs(s)?s.call(e):s}return e},Rn.round=Ac,Rn.runInContext=e,Rn.sample=function(e){return(Ms(e)?Vn:$a)(e)},Rn.size=function(e){if(null==e)return 0;if(Hs(e))return to(e)?un(e):e.length;var i=lt(e);return i==A||i==w?e.size:Pa(e).length},Rn.snakeCase=Yo,Rn.some=function(e,i,n){var a=Ms(e)?Li:ir;return n&&mt(e,i,n)&&(i=r),a(e,tt(i,3))},Rn.sortedIndex=function(e,i){return nr(e,i)},Rn.sortedIndexBy=function(e,i,n){return ar(e,i,tt(n,2))},Rn.sortedIndexOf=function(e,i){var n=null==e?0:e.length;if(n){var a=nr(e,i);if(a<n&&Rs(e[a],i))return a}return-1},Rn.sortedLastIndex=function(e,i){return nr(e,i,!0)},Rn.sortedLastIndexBy=function(e,i,n){return ar(e,i,tt(n,2),!0)},Rn.sortedLastIndexOf=function(e,i){if(null!=e&&e.length){var n=nr(e,i,!0)-1;if(Rs(e[n],i))return n}return-1},Rn.startCase=Go,Rn.startsWith=function(e,i,n){return e=ko(e),n=null==n?0:ta(po(n),0,e.length),i=sr(i),e.slice(n,n+i.length)==i},Rn.subtract=zc,Rn.sum=function(e){return e&&e.length?Yi(e,nc):0},Rn.sumBy=function(e,i){return e&&e.length?Yi(e,tt(i,2)):0},Rn.template=function(e,i,n){var a=Rn.templateSettings;n&&mt(e,i,n)&&(i=r),e=ko(e),i=yo({},i,a,Vr);var t,s,o=yo({},i.imports,a.imports,Vr),c=xo(o),h=Ji(o,c),u=0,l=i.interpolate||_e,p="__p += '",d=Ee((i.escape||_e).source+"|"+l.source+"|"+(l===X?le:_e).source+"|"+(i.evaluate||_e).source+"|$","g"),f="//# sourceURL="+(Te.call(i,"sourceURL")?(i.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++ai+"]")+"\n";e.replace(d,function(i,n,a,r,o,c){return a||(a=r),p+=e.slice(u,c).replace(ye,an),n&&(t=!0,p+="' +\n__e("+n+") +\n'"),o&&(s=!0,p+="';\n"+o+";\n__p += '"),a&&(p+="' +\n((__t = ("+a+")) == null ? '' : __t) +\n'"),u=c+i.length,i}),p+="';\n";var g=Te.call(i,"variable")&&i.variable;if(g){if(he.test(g))throw new ve("Invalid `variable` option passed into `_.template`")}else p="with (obj) {\n"+p+"\n}\n";p=(s?p.replace(M,""):p).replace(K,"$1").replace(H,"$1;"),p="function("+(g||"obj")+") {\n"+(g?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(t?", __e = _.escape":"")+(s?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+p+"return __p\n}";var m=Xo(function(){return Ae(c,f+"return "+p).apply(r,h)});if(m.source=p,$s(m))throw m;return m},Rn.times=function(e,i){if((e=po(e))<1||e>l)return[];var n=d,a=kn(e,d);i=tt(i),e-=d;for(var r=Gi(a,i);++n<e;)i(n);return r},Rn.toFinite=lo,Rn.toInteger=po,Rn.toLength=fo,Rn.toLower=function(e){return ko(e).toLowerCase()},Rn.toNumber=go,Rn.toSafeInteger=function(e){return e?ta(po(e),-9007199254740991,l):0===e?e:0},Rn.toString=ko,Rn.toUpper=function(e){return ko(e).toUpperCase()},Rn.trim=function(e,i,n){if((e=ko(e))&&(n||i===r))return $i(e);if(!e||!(i=sr(i)))return e;var a=ln(e),t=ln(i);return br(a,Wi(a,t),Zi(a,t)+1).join("")},Rn.trimEnd=function(e,i,n){if((e=ko(e))&&(n||i===r))return e.slice(0,pn(e)+1);if(!e||!(i=sr(i)))return e;var a=ln(e);return br(a,0,Zi(a,ln(i))+1).join("")},Rn.trimStart=function(e,i,n){if((e=ko(e))&&(n||i===r))return e.replace(ae,"");if(!e||!(i=sr(i)))return e;var a=ln(e);return br(a,Wi(a,ln(i))).join("")},Rn.truncate=function(e,i){var n=30,a="...";if(Ws(i)){var t="separator"in i?i.separator:t;n="length"in i?po(i.length):n,a="omission"in i?sr(i.omission):a}var s=(e=ko(e)).length;if(rn(e)){var o=ln(e);s=o.length}if(n>=s)return e;var c=n-un(a);if(c<1)return a;var h=o?br(o,0,c).join(""):e.slice(0,c);if(t===r)return h+a;if(o&&(c+=h.length-c),ao(t)){if(e.slice(c).search(t)){var u,l=h;for(t.global||(t=Ee(t.source,ko(pe.exec(t))+"g")),t.lastIndex=0;u=t.exec(l);)var p=u.index;h=h.slice(0,p===r?c:p)}}else if(e.indexOf(sr(t),c)!=c){var d=h.lastIndexOf(t);d>-1&&(h=h.slice(0,d))}return h+a},Rn.unescape=function(e){return(e=ko(e))&&G.test(e)?e.replace(q,dn):e},Rn.uniqueId=function(e){var i=++Pe;return ko(e)+i},Rn.upperCase=$o,Rn.upperFirst=Vo,Rn.each=ms,Rn.eachRight=ks,Rn.first=Ht,sc(Rn,(mc={},ba(Rn,function(e,i){Te.call(Rn.prototype,i)||(mc[i]=e)}),mc),{chain:!1}),Rn.VERSION="4.17.21",Ei(["bind","bindKey","curry","curryRight","partial","partialRight"],function(e){Rn[e].placeholder=Rn}),Ei(["drop","take"],function(e,i){Mn.prototype[e]=function(n){n=n===r?1:mn(po(n),0);var a=this.__filtered__&&!i?new Mn(this):this.clone();return a.__filtered__?a.__takeCount__=kn(n,a.__takeCount__):a.__views__.push({size:kn(n,d),type:e+(a.__dir__<0?"Right":"")}),a},Mn.prototype[e+"Right"]=function(i){return this.reverse()[e](i).reverse()}}),Ei(["filter","map","takeWhile"],function(e,i){var n=i+1,a=1==n||3==n;Mn.prototype[e]=function(e){var i=this.clone();return i.__iteratees__.push({iteratee:tt(e,3),type:n}),i.__filtered__=i.__filtered__||a,i}}),Ei(["head","last"],function(e,i){var n="take"+(i?"Right":"");Mn.prototype[e]=function(){return this[n](1).value()[0]}}),Ei(["initial","tail"],function(e,i){var n="drop"+(i?"":"Right");Mn.prototype[e]=function(){return this.__filtered__?new Mn(this):this[n](1)}}),Mn.prototype.compact=function(){return this.filter(nc)},Mn.prototype.find=function(e){return this.filter(e).head()},Mn.prototype.findLast=function(e){return this.reverse().find(e)},Mn.prototype.invokeMap=Ga(function(e,i){return"function"==typeof e?new Mn(this):this.map(function(n){return Ba(n,e,i)})}),Mn.prototype.reject=function(e){return this.filter(Ts(tt(e)))},Mn.prototype.slice=function(e,i){e=po(e);var n=this;return n.__filtered__&&(e>0||i<0)?new Mn(n):(e<0?n=n.takeRight(-e):e&&(n=n.drop(e)),i!==r&&(n=(i=po(i))<0?n.dropRight(-i):n.take(i-e)),n)},Mn.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},Mn.prototype.toArray=function(){return this.take(d)},ba(Mn.prototype,function(e,i){var n=/^(?:filter|find|map|reject)|While$/.test(i),a=/^(?:head|last)$/.test(i),t=Rn[a?"take"+("last"==i?"Right":""):i],s=a||/^find/.test(i);t&&(Rn.prototype[i]=function(){var i=this.__wrapped__,o=a?[1]:arguments,c=i instanceof Mn,h=o[0],u=c||Ms(i),l=function(e){var i=t.apply(Rn,Qi([e],o));return a&&p?i[0]:i};u&&n&&"function"==typeof h&&1!=h.length&&(c=u=!1);var p=this.__chain__,d=!!this.__actions__.length,f=s&&!p,g=c&&!d;if(!s&&u){i=g?i:new Mn(this);var m=e.apply(i,o);return m.__actions__.push({func:ls,args:[l],thisArg:r}),new Fn(m,p)}return f&&g?e.apply(this,o):(m=this.thru(l),f?a?m.value()[0]:m.value():m)})}),Ei(["pop","push","shift","sort","splice","unshift"],function(e){var i=Be[e],n=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",a=/^(?:pop|shift)$/.test(e);Rn.prototype[e]=function(){var e=arguments;if(a&&!this.__chain__){var r=this.value();return i.apply(Ms(r)?r:[],e)}return this[n](function(n){return i.apply(Ms(n)?n:[],e)})}}),ba(Mn.prototype,function(e,i){var n=Rn[i];if(n){var a=n.name+"";Te.call(Cn,a)||(Cn[a]=[]),Cn[a].push({name:i,func:n})}}),Cn[Ur(r,2).name]=[{name:"wrapper",func:r}],Mn.prototype.clone=function(){var e=new Mn(this.__wrapped__);return e.__actions__=jr(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=jr(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=jr(this.__views__),e},Mn.prototype.reverse=function(){if(this.__filtered__){var e=new Mn(this);e.__dir__=-1,e.__filtered__=!0}else(e=this.clone()).__dir__*=-1;return e},Mn.prototype.value=function(){var e=this.__wrapped__.value(),i=this.__dir__,n=Ms(e),a=i<0,r=n?e.length:0,t=function(e,i,n){for(var a=-1,r=n.length;++a<r;){var t=n[a],s=t.size;switch(t.type){case"drop":e+=s;break;case"dropRight":i-=s;break;case"take":i=kn(i,e+s);break;case"takeRight":e=mn(e,i-s)}}return{start:e,end:i}}(0,r,this.__views__),s=t.start,o=t.end,c=o-s,h=a?o:s-1,u=this.__iteratees__,l=u.length,p=0,d=kn(c,this.__takeCount__);if(!n||!a&&r==c&&d==c)return lr(e,this.__actions__);var f=[];e:for(;c--&&p<d;){for(var g=-1,m=e[h+=i];++g<l;){var k=u[g],b=k.iteratee,_=k.type,y=b(m);if(2==_)m=y;else if(!y){if(1==_)continue e;break e}}f[p++]=m}return f},Rn.prototype.at=ps,Rn.prototype.chain=function(){return us(this)},Rn.prototype.commit=function(){return new Fn(this.value(),this.__chain__)},Rn.prototype.next=function(){this.__values__===r&&(this.__values__=uo(this.value()));var e=this.__index__>=this.__values__.length;return{done:e,value:e?r:this.__values__[this.__index__++]}},Rn.prototype.plant=function(e){for(var i,n=this;n instanceof Nn;){var a=Ut(n);a.__index__=0,a.__values__=r,i?t.__wrapped__=a:i=a;var t=a;n=n.__wrapped__}return t.__wrapped__=e,i},Rn.prototype.reverse=function(){var e=this.__wrapped__;if(e instanceof Mn){var i=e;return this.__actions__.length&&(i=new Mn(this)),(i=i.reverse()).__actions__.push({func:ls,args:[Wt],thisArg:r}),new Fn(i,this.__chain__)}return this.thru(Wt)},Rn.prototype.toJSON=Rn.prototype.valueOf=Rn.prototype.value=function(){return lr(this.__wrapped__,this.__actions__)},Rn.prototype.first=Rn.prototype.head,Ve&&(Rn.prototype[Ve]=function(){return this}),Rn}();li._=fn,(a=function(){return fn}.call(i,n,i,e))===r||(e.exports=a)}.call(this)},2557:(e,i,n)=>{const a=n(6889),r=n(1353),{crypto_verify_16:t}=n(8597);function s(e,i,n){a(16===e.byteLength,"mac must be 'crypto_onetimeauth_BYTES' bytes"),a(null!=i.byteLength,"msg must be buffer"),a(32===n.byteLength,"key must be 'crypto_onetimeauth_KEYBYTES' bytes");var t=new r(n);t.update(i,0,i.byteLength),t.finish(e,0)}e.exports={crypto_onetimeauth:s,crypto_onetimeauth_verify:function(e,i,n){a(16===e.byteLength,"mac must be 'crypto_onetimeauth_BYTES' bytes"),a(null!=i.byteLength,"msg must be buffer"),a(32===n.byteLength,"key must be 'crypto_onetimeauth_KEYBYTES' bytes");var r=new Uint8Array(16);return s(r,i,n),t(e,0,r,0)},crypto_onetimeauth_BYTES:16,crypto_onetimeauth_KEYBYTES:32,crypto_onetimeauth_PRIMITIVE:"poly1305"}},2600:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.getValidatedPath=i.validateNode=i.generateEntropy=i.privateAdd=i.derivePublicChildKey=i.derivePublicExtension=i.deriveSecretExtension=i.deriveChildKey=void 0;const a=n(2367),r=n(4927),t=n(5162),s=n(2913),o=n(6383),c=n(4533),h=n(4503);async function u(e,i,n){const{privateKey:a,publicKey:t,entropy:s,childIndex:h,isHardened:l,depth:p,parentFingerprint:g,masterFingerprint:m,curve:k,network:b}=e;try{return a?await async function({entropy:e,privateKey:i,depth:n,masterFingerprint:a,parentFingerprint:t,childIndex:s,isHardened:h,curve:u,network:l},p){const d=s+(h?r.BIP_32_HARDENED_OFFSET:0),{privateKey:g,chainCode:m}=function({privateKey:e,entropy:i,curve:n}){const a=i.slice(0,32),r=i.slice(32);if("ed25519"===n.name)return{privateKey:a,chainCode:r};return{privateKey:f(e,a,n),chainCode:r}}({privateKey:i,entropy:e,curve:u});return await c.SLIP10Node.fromExtendedKey({privateKey:g,chainCode:m,depth:n+1,masterFingerprint:a,parentFingerprint:t,index:d,curve:u.name,network:l,guard:o.PUBLIC_KEY_GUARD},p)}({entropy:s,privateKey:a,depth:p,masterFingerprint:m,parentFingerprint:g,childIndex:h,isHardened:l,curve:k,network:b},n):await d({entropy:s,publicKey:t,depth:p,masterFingerprint:m,parentFingerprint:g,childIndex:h,curve:k,network:b},n)}catch(a){return await u(await i(a,e,n),i,n)}}async function l({privateKey:e,publicKey:i,childIndex:n,isHardened:t,curve:s}){return t?(0,a.concatBytes)([new Uint8Array([0]),e,(0,h.numberToUint32)(n+r.BIP_32_HARDENED_OFFSET)]):((0,h.validateBytes)(i,s.compressedPublicKeyLength),p({parentPublicKey:i,childIndex:n}))}function p({parentPublicKey:e,childIndex:i}){return(0,a.concatBytes)([e,(0,h.numberToUint32)(i)])}async function d({entropy:e,publicKey:i,depth:n,masterFingerprint:a,parentFingerprint:r,childIndex:t,curve:s,network:o},h){const{publicKey:u,chainCode:l}=function({publicKey:e,entropy:i,curve:n}){const a=i.slice(0,32),r=i.slice(32);return{publicKey:n.publicAdd(e,a),chainCode:r}}({publicKey:i,entropy:e,curve:s});return await c.SLIP10Node.fromExtendedKey({publicKey:u,chainCode:l,depth:n+1,masterFingerprint:a,parentFingerprint:r,index:t,curve:s.name,network:o},h)}function f(e,i,n){(0,a.assert)((0,h.isValidBytesKey)(i,32),"Invalid tweak: Tweak must be a non-zero 32-byte Uint8Array.");const r=(0,a.bytesToBigInt)(e),t=(0,a.bytesToBigInt)(i);if(t>=n.curve.n)throw new Error("Invalid tweak: Tweak is larger than the curve order.");const o=(0,s.mod)(r+t,n.curve.n),c=(0,a.hexToBytes)(o.toString(16).padStart(64,"0"));if(!n.isValidPrivateKey(c))throw new Error("Invalid private key or tweak: The resulting private key is invalid.");return c}async function g({chainCode:e,extension:i},n){return await(0,t.hmacSha512)(e,i,n)}function m(e){(0,a.assert)(e,"Invalid parameters: Must specify a node to derive from.")}function k(e,i,n){!function(e,i,n){(0,a.assert)("string"==typeof e,"Invalid path: Must be a string.");const r=e.endsWith("'");(0,a.assert)(!r||i.privateKey,"Invalid parameters: Cannot derive hardened child keys without a private key."),(0,a.assert)(r||n.deriveUnhardenedKeys,`Invalid path: Cannot derive unhardened child keys with ${n.name}.`)}(e,i,n);const t=e.split("'")[0];(0,a.assert)(t);const s=parseInt(t,10);if(!r.UNPREFIXED_PATH_REGEX.test(t)||!Number.isInteger(s)||s<0||s>=r.BIP_32_HARDENED_OFFSET)throw new Error(`Invalid path: The index must be a non-negative decimal integer less than ${r.BIP_32_HARDENED_OFFSET}.`);return{childIndex:s,isHardened:e.includes("'")}}i.deriveChildKey=async function({path:e,node:i,curve:n,network:a},r,t){m(i);const{childIndex:s,isHardened:o}=k(e,i,n),c={chainCode:i.chainCodeBytes,childIndex:s,isHardened:o,depth:i.depth,parentFingerprint:i.fingerprint,masterFingerprint:i.masterFingerprint,curve:n,network:a};if(i.privateKeyBytes){const e=await l({privateKey:i.privateKeyBytes,get publicKey(){return i.compressedPublicKeyBytes},childIndex:s,isHardened:o,curve:n}),a=await g({chainCode:i.chainCodeBytes,extension:e},t);return await u({privateKey:i.privateKeyBytes,get publicKey(){return i.publicKeyBytes},entropy:a,...c},r,t)}const h=p({parentPublicKey:i.compressedPublicKeyBytes,childIndex:s}),d=await g({chainCode:i.chainCodeBytes,extension:h},t);return await u({publicKey:i.compressedPublicKeyBytes,entropy:d,...c},r,t)},i.deriveSecretExtension=l,i.derivePublicExtension=p,i.derivePublicChildKey=d,i.privateAdd=f,i.generateEntropy=g,i.validateNode=m,i.getValidatedPath=k},2623:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.sha224=i.SHA224=i.sha256=i.SHA256=void 0;const a=n(7076);i.SHA256=a.SHA256,i.sha256=a.sha256,i.SHA224=a.SHA224,i.sha224=a.sha224},2632:(e,i)=>{i.read=function(e,i,n,a,r){var t,s,o=8*r-a-1,c=(1<<o)-1,h=c>>1,u=-7,l=n?r-1:0,p=n?-1:1,d=e[i+l];for(l+=p,t=d&(1<<-u)-1,d>>=-u,u+=o;u>0;t=256*t+e[i+l],l+=p,u-=8);for(s=t&(1<<-u)-1,t>>=-u,u+=a;u>0;s=256*s+e[i+l],l+=p,u-=8);if(0===t)t=1-h;else{if(t===c)return s?NaN:1/0*(d?-1:1);s+=Math.pow(2,a),t-=h}return(d?-1:1)*s*Math.pow(2,t-a)},i.write=function(e,i,n,a,r,t){var s,o,c,h=8*t-r-1,u=(1<<h)-1,l=u>>1,p=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,d=a?0:t-1,f=a?1:-1,g=i<0||0===i&&1/i<0?1:0;for(i=Math.abs(i),isNaN(i)||i===1/0?(o=isNaN(i)?1:0,s=u):(s=Math.floor(Math.log(i)/Math.LN2),i*(c=Math.pow(2,-s))<1&&(s--,c*=2),(i+=s+l>=1?p/c:p*Math.pow(2,1-l))*c>=2&&(s++,c/=2),s+l>=u?(o=0,s=u):s+l>=1?(o=(i*c-1)*Math.pow(2,r),s+=l):(o=i*Math.pow(2,l-1)*Math.pow(2,r),s=0));r>=8;e[n+d]=255&o,d+=f,o/=256,r-=8);for(s=s<<r|o,h+=r;h>0;e[n+d]=255&s,d+=f,s/=256,h-=8);e[n+d-f]|=128*g}},2643:(e,i,n)=>{"use strict";const a=n(5926);e.exports=(e,i,n)=>{try{i=new a(i,n)}catch(e){return!1}return i.test(e)}},2812:(e,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.createDeferredPromise=void 0,i.createDeferredPromise=function({suppressUnhandledRejection:e=!1}={}){let i,n;const a=new Promise((e,a)=>{i=e,n=a});return e&&a.catch(e=>{}),{promise:a,resolve:i,reject:n}}},2854:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.montgomery=function(e){const i=(d=e,(0,a._validateObject)(d,{adjustScalarBytes:"function",powPminus2:"function"}),Object.freeze({...d})),{P:n,type:c,adjustScalarBytes:h,powPminus2:u,randomBytes:l}=i,p="x25519"===c;var d;if(!p&&"x448"!==c)throw new Error("invalid type");const f=l||a.randomBytes,g=p?255:448,m=p?32:56,k=p?BigInt(9):BigInt(5),b=p?BigInt(121665):BigInt(39081),_=p?o**BigInt(254):o**BigInt(447),y=p?BigInt(8)*o**BigInt(251)-s:BigInt(4)*o**BigInt(445)-s,v=_+y+s,A=e=>(0,r.mod)(e,n),z=I(k);function I(e){return(0,a.numberToBytesLE)(A(e),m)}function E(e,i){const r=function(e,i){(0,a.aInRange)("u",e,t,n),(0,a.aInRange)("scalar",i,_,v);const r=i,o=e;let c=s,h=t,l=e,p=s,d=t;for(let e=BigInt(g-1);e>=t;e--){const i=r>>e&s;d^=i,({x_2:c,x_3:l}=w(d,c,l)),({x_2:h,x_3:p}=w(d,h,p)),d=i;const n=c+h,a=A(n*n),t=c-h,u=A(t*t),f=a-u,g=l+p,m=A((l-p)*n),k=A(g*t),_=m+k,y=m-k;l=A(_*_),p=A(o*A(y*y)),c=A(a*u),h=A(f*(a+A(b*f)))}({x_2:c,x_3:l}=w(d,c,l)),({x_2:h,x_3:p}=w(d,h,p));const f=u(h);return A(c*f)}(function(e){const i=(0,a.ensureBytes)("u coordinate",e,m);return p&&(i[31]&=127),A((0,a.bytesToNumberLE)(i))}(i),function(e){return(0,a.bytesToNumberLE)(h((0,a.ensureBytes)("scalar",e,m)))}(e));if(r===t)throw new Error("invalid private or public key received");return I(r)}function j(e){return E(e,z)}function w(e,i,n){const a=A(e*(i-n));return{x_2:i=A(i-a),x_3:n=A(n+a)}}const B={secretKey:m,publicKey:m,seed:m},C=(e=f(m))=>((0,a.abytes)(e,B.seed),e);return{keygen:function(e){const i=C(e);return{secretKey:i,publicKey:j(i)}},getSharedSecret:(e,i)=>E(e,i),getPublicKey:e=>j(e),scalarMult:E,scalarMultBase:j,utils:{randomSecretKey:C,randomPrivateKey:C},GuBytes:z.slice(),lengths:B}};const a=n(8627),r=n(4967),t=BigInt(0),s=BigInt(1),o=BigInt(2)},2878:(e,i,n)=>{function a(){var e,i,n="function"==typeof Symbol?Symbol:{},t=n.iterator||"@@iterator",s=n.toStringTag||"@@toStringTag";function o(n,a,t,s){var o=a&&a.prototype instanceof h?a:h,u=Object.create(o.prototype);return r(u,"_invoke",function(n,a,r){var t,s,o,h=0,u=r||[],l=!1,p={p:0,n:0,v:e,a:d,f:d.bind(e,4),d:function(i,n){return t=i,s=0,o=e,p.n=n,c}};function d(n,a){for(s=n,o=a,i=0;!l&&h&&!r&&i<u.length;i++){var r,t=u[i],d=p.p,f=t[2];n>3?(r=f===a)&&(o=t[(s=t[4])?5:(s=3,3)],t[4]=t[5]=e):t[0]<=d&&((r=n<2&&d<t[1])?(s=0,p.v=a,p.n=t[1]):d<f&&(r=n<3||t[0]>a||a>f)&&(t[4]=n,t[5]=a,p.n=f,s=0))}if(r||n>1)return c;throw l=!0,a}return function(r,u,f){if(h>1)throw TypeError("Generator is already running");for(l&&1===u&&d(u,f),s=u,o=f;(i=s<2?e:o)||!l;){t||(s?s<3?(s>1&&(p.n=-1),d(s,o)):p.n=o:p.v=o);try{if(h=2,t){if(s||(r="next"),i=t[r]){if(!(i=i.call(t,o)))throw TypeError("iterator result is not an object");if(!i.done)return i;o=i.value,s<2&&(s=0)}else 1===s&&(i=t.return)&&i.call(t),s<2&&(o=TypeError("The iterator does not provide a '"+r+"' method"),s=1);t=e}else if((i=(l=p.n<0)?o:n.call(a,p))!==c)break}catch(i){t=e,s=1,o=i}finally{h=1}}return{value:i,done:l}}}(n,t,s),!0),u}var c={};function h(){}function u(){}function l(){}i=Object.getPrototypeOf;var p=[][t]?i(i([][t]())):(r(i={},t,function(){return this}),i),d=l.prototype=h.prototype=Object.create(p);function f(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,l):(e.__proto__=l,r(e,s,"GeneratorFunction")),e.prototype=Object.create(d),e}return u.prototype=l,r(d,"constructor",l),r(l,"constructor",u),u.displayName="GeneratorFunction",r(l,s,"GeneratorFunction"),r(d),r(d,s,"Generator"),r(d,t,function(){return this}),r(d,"toString",function(){return"[object Generator]"}),(a=function(){return{w:o,m:f}})()}function r(e,i,n,a){var t=Object.defineProperty;try{t({},"",{})}catch(e){t=0}r=function(e,i,n,a){function s(i,n){r(e,i,function(e){return this._invoke(i,n,e)})}i?t?t(e,i,{value:n,enumerable:!a,configurable:!a,writable:!a}):e[i]=n:(s("next",0),s("throw",1),s("return",2))},r(e,i,n,a)}function t(e,i,n,a,r,t,s){try{var o=e[t](s),c=o.value}catch(e){return void n(e)}o.done?i(c):Promise.resolve(c).then(a,r)}var s=n(5219),o=s.generateMnemonic,c=s.validateMnemonic,h=s.mnemonicToSeed,u=s.normalizeMnemonic,l=n(5682),p=n(7675).TRAC_MNEMONIC_WORD_COUNT;function d(e){return"string"==typeof e}function f(e){var i=e.split(" ");return p.includes(i.length)}function g(e){return!(!d(e)||!f(e))&&c(e)}function m(){var e;return e=a().m(function e(i){var n,r=arguments;return a().w(function(e){for(;;)if(0===e.n)return n=r.length>1&&void 0!==r[1]?r[1]:"",e.a(2,h(i,n))},e)}),m=function(){var i=this,n=arguments;return new Promise(function(a,r){var s=e.apply(i,n);function o(e){t(s,a,r,o,c,"next",e)}function c(e){t(s,a,r,o,c,"throw",e)}o(void 0)})},m.apply(this,arguments)}e.exports={validate:g,isValid:g,sanitize:function(e){if(!d(e))return null;var i=u(e);return f(i)&&c(i)?i:null},generate:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return o(e?{entropy:l.from(e),language:"english"}:void 0)},toSeed:function(e){return m.apply(this,arguments)}}},2913:function(e,i,n){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,i,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(i,n);r&&!("get"in r?!i.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return i[n]}}),Object.defineProperty(e,a,r)}:function(e,i,n,a){void 0===a&&(a=n),e[a]=i[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,i){Object.defineProperty(e,"default",{enumerable:!0,value:i})}:function(e,i){e.default=i}),t=this&&this.__exportStar||function(e,i){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(i,n)||a(i,e,n)},s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(i,e,n);return r(i,e),i};Object.defineProperty(i,"__esModule",{value:!0}),i.ed25519Bip32=i.ed25519=i.secp256k1=void 0,t(n(8804),i),i.secp256k1=s(n(357)),i.ed25519=s(n(5474)),i.ed25519Bip32=s(n(7592))},2927:(e,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.crypto=void 0,i.crypto="object"==typeof globalThis&&"crypto"in globalThis?globalThis.crypto:void 0},2944:(e,i,n)=>{"use strict";const a=n(4739),r=n(2139),{ANY:t}=r,s=n(5926),o=n(2643),c=n(47),h=n(5960),u=n(9925),l=n(668);e.exports=(e,i,n,p)=>{let d,f,g,m,k;switch(e=new a(e,p),i=new s(i,p),n){case">":d=c,f=u,g=h,m=">",k=">=";break;case"<":d=h,f=l,g=c,m="<",k="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(o(e,i,p))return!1;for(let n=0;n<i.set.length;++n){const a=i.set[n];let s=null,o=null;if(a.forEach(e=>{e.semver===t&&(e=new r(">=0.0.0")),s=s||e,o=o||e,d(e.semver,s.semver,p)?s=e:g(e.semver,o.semver,p)&&(o=e)}),s.operator===m||s.operator===k)return!1;if((!o.operator||o.operator===m)&&f(e,o.semver))return!1;if(o.operator===k&&g(e,o.semver))return!1}return!0}},2954:(e,i)=>{"use strict";var n;Object.defineProperty(i,"__esModule",{value:!0}),i.timeSince=i.inMilliseconds=i.Duration=void 0,(n=i.Duration||(i.Duration={}))[n.Millisecond=1]="Millisecond",n[n.Second=1e3]="Second",n[n.Minute=6e4]="Minute",n[n.Hour=36e5]="Hour",n[n.Day=864e5]="Day",n[n.Week=6048e5]="Week",n[n.Year=31536e6]="Year";const a=(e,i)=>{if(!(e=>Number.isInteger(e)&&e>=0)(e))throw new Error(`"${i}" must be a non-negative integer. Received: "${e}".`)};i.inMilliseconds=function(e,i){return a(e,"count"),e*i},i.timeSince=function(e){return a(e,"timestamp"),Date.now()-e}},2955:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.shake256=i.shake128=i.keccak_512=i.keccak_384=i.keccak_256=i.keccak_224=i.sha3_512=i.sha3_384=i.sha3_256=i.sha3_224=i.Keccak=void 0,i.keccakP=_;const a=n(2318),r=n(9175),t=BigInt(0),s=BigInt(1),o=BigInt(2),c=BigInt(7),h=BigInt(256),u=BigInt(113),l=[],p=[],d=[];for(let e=0,i=s,n=1,a=0;e<24;e++){[n,a]=[a,(2*n+3*a)%5],l.push(2*(5*a+n)),p.push((e+1)*(e+2)/2%64);let r=t;for(let e=0;e<7;e++)i=(i<<s^(i>>c)*u)%h,i&o&&(r^=s<<(s<<BigInt(e))-s);d.push(r)}const f=(0,a.split)(d,!0),g=f[0],m=f[1],k=(e,i,n)=>n>32?(0,a.rotlBH)(e,i,n):(0,a.rotlSH)(e,i,n),b=(e,i,n)=>n>32?(0,a.rotlBL)(e,i,n):(0,a.rotlSL)(e,i,n);function _(e,i=24){const n=new Uint32Array(10);for(let a=24-i;a<24;a++){for(let i=0;i<10;i++)n[i]=e[i]^e[i+10]^e[i+20]^e[i+30]^e[i+40];for(let i=0;i<10;i+=2){const a=(i+8)%10,r=(i+2)%10,t=n[r],s=n[r+1],o=k(t,s,1)^n[a],c=b(t,s,1)^n[a+1];for(let n=0;n<50;n+=10)e[i+n]^=o,e[i+n+1]^=c}let i=e[2],r=e[3];for(let n=0;n<24;n++){const a=p[n],t=k(i,r,a),s=b(i,r,a),o=l[n];i=e[o],r=e[o+1],e[o]=t,e[o+1]=s}for(let i=0;i<50;i+=10){for(let a=0;a<10;a++)n[a]=e[i+a];for(let a=0;a<10;a++)e[i+a]^=~n[(a+2)%10]&n[(a+4)%10]}e[0]^=g[a],e[1]^=m[a]}(0,r.clean)(n)}class y extends r.Hash{constructor(e,i,n,a=!1,t=24){if(super(),this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,this.enableXOF=!1,this.blockLen=e,this.suffix=i,this.outputLen=n,this.enableXOF=a,this.rounds=t,(0,r.anumber)(n),!(0<e&&e<200))throw new Error("only keccak-f1600 function is supported");this.state=new Uint8Array(200),this.state32=(0,r.u32)(this.state)}clone(){return this._cloneInto()}keccak(){(0,r.swap32IfBE)(this.state32),_(this.state32,this.rounds),(0,r.swap32IfBE)(this.state32),this.posOut=0,this.pos=0}update(e){(0,r.aexists)(this),e=(0,r.toBytes)(e),(0,r.abytes)(e);const{blockLen:i,state:n}=this,a=e.length;for(let r=0;r<a;){const t=Math.min(i-this.pos,a-r);for(let i=0;i<t;i++)n[this.pos++]^=e[r++];this.pos===i&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:i,pos:n,blockLen:a}=this;e[n]^=i,128&i&&n===a-1&&this.keccak(),e[a-1]^=128,this.keccak()}writeInto(e){(0,r.aexists)(this,!1),(0,r.abytes)(e),this.finish();const i=this.state,{blockLen:n}=this;for(let a=0,r=e.length;a<r;){this.posOut>=n&&this.keccak();const t=Math.min(n-this.posOut,r-a);e.set(i.subarray(this.posOut,this.posOut+t),a),this.posOut+=t,a+=t}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return(0,r.anumber)(e),this.xofInto(new Uint8Array(e))}digestInto(e){if((0,r.aoutput)(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,(0,r.clean)(this.state)}_cloneInto(e){const{blockLen:i,suffix:n,outputLen:a,rounds:r,enableXOF:t}=this;return e||(e=new y(i,n,a,t,r)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=r,e.suffix=n,e.outputLen=a,e.enableXOF=t,e.destroyed=this.destroyed,e}}i.Keccak=y;const v=(e,i,n)=>(0,r.createHasher)(()=>new y(i,e,n));i.sha3_224=v(6,144,28),i.sha3_256=v(6,136,32),i.sha3_384=v(6,104,48),i.sha3_512=v(6,72,64),i.keccak_224=v(1,144,28),i.keccak_256=v(1,136,32),i.keccak_384=v(1,104,48),i.keccak_512=v(1,72,64);const A=(e,i,n)=>(0,r.createXOFer)((a={})=>new y(i,e,void 0===a.dkLen?n:a.dkLen,!0));i.shake128=A(31,168,16),i.shake256=A(31,136,32)},2963:e=>{"use strict";e.exports=JSON.parse('["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"]')},3028:(e,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0})},3086:e=>{var i,n,a=(()=>{for(var e=new Uint8Array(128),i=0;i<64;i++)e[i<26?i+65:i<52?i+71:i<62?i-4:4*i-205]=i;return i=>{for(var n=i.length,a=new Uint8Array(3*(n-("="==i[n-1])-("="==i[n-2]))/4|0),r=0,t=0;r<n;){var s=e[i.charCodeAt(r++)],o=e[i.charCodeAt(r++)],c=e[i.charCodeAt(r++)],h=e[i.charCodeAt(r++)];a[t++]=s<<2|o>>4,a[t++]=o<<4|c>>2,a[t++]=c<<6|h}return a}})(),r=(i={"wasm-binary:./sha512.wat"(e,i){i.exports=a("AGFzbQEAAAABNAVgAX4BfmAIfn5+fn5+fn4AYAR+fn5+AX5gEX9+fn5+fn5+fn5+fn5+fn5+AGAEf39/fwADBgUAAQIDBAUDAQABBikIfgFCAAt+AUIAC34BQgALfgFCAAt+AUIAC34BQgALfgFCAAt+AUIACwcTAgZtZW1vcnkCAAZzaGE1MTIABAqZHgVCACAAQoCA/P+PgECDQhCJIABC//+DgPD/P4NCEIqEIQAgAEL/gfyH8J/A/wCDQgiJIABCgP6D+I/gv4B/g0IIioQLvAMBBn4jBCMFgyMEQn+FIwaDhSEKIwAjAYMjACMCg4UjASMCg4UhCyMAQhyKIwBCIoqFIwBCJ4qFIQwjBEIOiiMEQhKKhSMEQimKhSENIwcgCnwgDXwgAHwgBHwhCCAMIAt8IQkjAyAIfCQHIAggCXwkAyMHIwSDIwdCf4UjBYOFIQojAyMAgyMDIwGDhSMAIwGDhSELIwNCHIojA0IiioUjA0InioUhDCMHQg6KIwdCEoqFIwdCKYqFIQ0jBiAKfCANfCABfCAFfCEIIAwgC3whCSMCIAh8JAYgCCAJfCQCIwYjB4MjBkJ/hSMEg4UhCiMCIwODIwIjAIOFIwMjAIOFIQsjAkIciiMCQiKKhSMCQieKhSEMIwZCDoojBkISioUjBkIpioUhDSMFIAp8IA18IAJ8IAZ8IQggDCALfCEJIwEgCHwkBSAIIAl8JAEjBSMGgyMFQn+FIweDhSEKIwEjAoMjASMDg4UjAyMCg4UhCyMBQhyKIwFCIoqFIwFCJ4qFIQwjBUIOiiMFQhKKhSMFQimKhSENIwQgCnwgDXwgA3wgB3whCCAMIAt8IQkjACAIfCQEIAggCXwkAAsrACAAQhOKIABCPYqFIABCBoiFIAF8IAJCAYogAkIIioUgAkIHiIUgA3x8C6QRACAAKQPQAUIAUQRAIABCiJLznf/M+YTqADcDACAAQrvOqqbY0Ouzu383AwggAEKr8NP0r+68tzw3AxAgAELx7fT4paf9p6V/NwMYIABC0YWa7/rPlIfRADcDICAAQp/Y+dnCkdqCm383AyggAELr+obav7X2wR83AzAgAEL5wvibkaOz8NsANwM4IABCATcD0AELIAApAwAkACAAKQMIJAEgACkDECQCIAApAxgkAyAAKQMgJAQgACkDKCQFIAApAzAkBiAAKQM4JAcgARAAIQEgAhAAIQIgAxAAIQMgBBAAIQQgBRAAIQUgBhAAIQYgBxAAIQcgCBAAIQggCRAAIQkgChAAIQogCxAAIQsgDBAAIQwgDRAAIQ0gDhAAIQ4gDxAAIQ8gEBAAIRAgASACIAMgBEKi3KK5jfOLxcIAQs3LvZ+SktGb8QBCr/a04v75vuC1f0K8t6eM2PT22mkQASAFIAYgByAIQrjqopq/y7CrOUKZoJewm77E+NkAQpuf5fjK1OCfkn9CmIK2093al46rfxABIAkgCiALIAxCwoSMmIrT6oNYQr7fwauU4NbBEkKM5ZL35LfhmCRC4un+r724n4bVABABIA0gDiAPIBBC75Luk8+ul9/yAEKxrdrY47+s74B/QrWknK7y1IHum39ClM2k+8yu/M1BEAEgDyAKIAIgARACIQEgECALIAMgAhACIQIgASAMIAQgAxACIQMgAiANIAUgBBACIQQgAyAOIAYgBRACIQUgBCAPIAcgBhACIQYgBSAQIAggBxACIQcgBiABIAkgCBACIQggByACIAogCRACIQkgCCADIAsgChACIQogCSAEIAwgCxACIQsgCiAFIA0gDBACIQwgCyAGIA4gDRACIQ0gDCAHIA8gDhACIQ4gDSAIIBAgDxACIQ8gDiAJIAEgEBACIRAgASACIAMgBELSlcX3mbjazWRC48u8wuPwkd9vQrWrs9zouOfgD0LluLK9x7mohiQQASAFIAYgByAIQvWErMn1jcv0LUKDyZv1ppWhusoAQtT3h+rLu6rY3ABCtafFmKib4vz2ABABIAkgCiALIAxCq7+b866qlJ+Yf0KQ5NDt0s3xmKh/Qr/C7MeJ+cmBsH9C5J289/v436y/fxABIA0gDiAPIBBCwp+i7bP+gvBGQqXOqpj5qOTTVULvhI6AnuqY5QZC8Ny50PCsypQUEAEgDyAKIAIgARACIQEgECALIAMgAhACIQIgASAMIAQgAxACIQMgAiANIAUgBBACIQQgAyAOIAYgBRACIQUgBCAPIAcgBhACIQYgBSAQIAggBxACIQcgBiABIAkgCBACIQggByACIAogCRACIQkgCCADIAsgChACIQogCSAEIAwgCxACIQsgCiAFIA0gDBACIQwgCyAGIA4gDRACIQ0gDCAHIA8gDhACIQ4gDSAIIBAgDxACIQ8gDiAJIAEgEBACIRAgASACIAMgBEL838i21NDC2ydCppKb4YWnyI0uQu3VkNbFv5uWzQBC3+fW7Lmig5zTABABIAUgBiAHIAhC3se93cjqnIXlAEKo5d7js9eCtfYAQubdtr/kpbLhgX9Cu+qIpNGQi7mSfxABIAkgCiALIAxC5IbE55SU+t+if0KB4Ijiu8mZjah/QpGv4oeN7uKlQkKw/NKysLSUtkcQASANIA4gDyAQQpikvbedg7rJUUKQ0parxcTBzFZCqsDEu9WwjYd0Qrij75WDjqi1EBABIA8gCiACIAEQAiEBIBAgCyADIAIQAiECIAEgDCAEIAMQAiEDIAIgDSAFIAQQAiEEIAMgDiAGIAUQAiEFIAQgDyAHIAYQAiEGIAUgECAIIAcQAiEHIAYgASAJIAgQAiEIIAcgAiAKIAkQAiEJIAggAyALIAoQAiEKIAkgBCAMIAsQAiELIAogBSANIAwQAiEMIAsgBiAOIA0QAiENIAwgByAPIA4QAiEOIA0gCCAQIA8QAiEPIA4gCSABIBAQAiEQIAEgAiADIARCyKHLxuuisNIZQtPWhoqFgdubHkKZ17v8zemdpCdCqJHtjN6Wr9g0EAEgBSAGIAcgCELjtKWuvJaDjjlCy5WGmq7JquzOAELzxo+798myztsAQqPxyrW9/puX6AAQASAJIAogCyAMQvzlvu/l3eDH9ABC4N7cmPTt2NL4AELy1sKPyoKe5IR/QuzzkNOBwcDjjH8QASANIA4gDyAQQqi8jJui/7/fkH9C6fuK9L2dm6ikf0KV8pmW+/7o/L5/QqumyZuunt64RhABIA8gCiACIAEQAiEBIBAgCyADIAIQAiECIAEgDCAEIAMQAiEDIAIgDSAFIAQQAiEEIAMgDiAGIAUQAiEFIAQgDyAHIAYQAiEGIAUgECAIIAcQAiEHIAYgASAJIAgQAiEIIAcgAiAKIAkQAiEJIAggAyALIAoQAiEKIAkgBCAMIAsQAiELIAogBSANIAwQAiEMIAsgBiAOIA0QAiENIAwgByAPIA4QAiEOIA0gCCAQIA8QAiEPIA4gCSABIBAQAiEQIAEgAiADIARCnMOZ0e7Zz5NKQoeEg47ymK7DUUKe1oPv7Lqf7WpC+KK78/7v0751EAEgBSAGIAcgCEK6392Qp/WZ+AZCprGiltq437EKQq6b5PfLgOafEUKbjvGY0ebCuBsQASAJIAogCyAMQoT7kZjS/t3tKEKTyZyGtO+q5TJCvP2mrqHBr888QsyawODJ+NmOwwAQASANIA4gDyAQQraF+dnsl/XizABCqvyV48+zyr/ZAELs9dvWs/Xb5d8AQpewndLEsYai7AAQASAAIAApAwAjAHw3AwAgACAAKQMIIwF8NwMIIAAgACkDECMCfDcDECAAIAApAxgjA3w3AxggACAAKQMgIwR8NwMgIAAgACkDKCMFfDcDKCAAIAApAzAjBnw3AzAgACAAKQM4Iwd8NwM4C8MIARV+IAApA0AhBCAAKQNIIQUgBEL/AIMgAq18IQggBCEGIAQgAq18IQQgACAENwNAIAQgBlQEQCAFQgF8IQUgACAFNwNICwJAIAApA1AhCSAAKQNYIQogACkDYCELIAApA2ghDCAAKQNwIQ0gACkDeCEOIAApA4ABIQ8gACkDiAEhECAAKQOQASERIAApA5gBIRIgACkDoAEhEyAAKQOoASEUIAApA7ABIRUgACkDuAEhFiAAKQPAASEXIAApA8gBIRggCEKAAX0iCEIAUw0AIAAgCSAKIAsgDCANIA4gDyAQIBEgEiATIBQgFSAWIBcgGBADA0AgASkDACEJIAEpAwghCiABKQMQIQsgASkDGCEMIAEpAyAhDSABKQMoIQ4gASkDMCEPIAEpAzghECABKQNAIREgASkDSCESIAEpA1AhEyABKQNYIRQgASkDYCEVIAEpA2ghFiABKQNwIRcgASkDeCEYIAFBgAFqIQEgCEKAAX0iCEIAUwRAIAAgCTcDUCAAIAo3A1ggACALNwNgIAAgDDcDaCAAIA03A3AgACAONwN4IAAgDzcDgAEgACAQNwOIASAAIBE3A5ABIAAgEjcDmAEgACATNwOgASAAIBQ3A6gBIAAgFTcDsAEgACAWNwO4ASAAIBc3A8ABIAAgGDcDyAEMAgsgACAJIAogCyAMIA0gDiAPIBAgESASIBMgFCAVIBYgFyAYEAMMAAsLIANBAUYEQCAEQv8AgyEIQoABIAhCB4NCA4aGIQcCQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAgCKdBA3YODwMEBQYHCAkKCwwNDg8QAQILCyAHIBeEIRdCACEHCyAHIBiEIRhCACEHIAAgCSAKIAsgDCANIA4gDyAQIBEgEiATIBQgFSAWIBcgGBADIAAgBDcDQEIAIQlCACEKQgAhC0IAIQxCACENQgAhDkIAIQ9CACEQQgAhEUIAIRJCACETQgAhFEIAIRVCACEWQgAhF0IAIRgLIAcgCYQhCUIAIQcLIAcgCoQhCkIAIQcLIAcgC4QhC0IAIQcLIAcgDIQhDEIAIQcLIAcgDYQhDUIAIQcLIAcgDoQhDkIAIQcLIAcgD4QhD0IAIQcLIAcgEIQhEEIAIQcLIAcgEYQhEUIAIQcLIAcgEoQhEkIAIQcLIAcgE4QhE0IAIQcLIAcgFIQhFEIAIQcLIAcgFYQhFUIAIQcLIAcgFoQhFkIAIQcLIARCPYggBUIDiHwQACEXIARCCH4QACEYIAAgCSAKIAsgDCANIA4gDyAQIBEgEiATIBQgFSAWIBcgGBADIAAgACkDABAANwMAIAAgACkDCBAANwMIIAAgACkDEBAANwMQIAAgACkDGBAANwMYIAAgACkDIBAANwMgIAAgACkDKBAANwMoIAAgACkDMBAANwMwIAAgACkDOBAANwM4Cws=")}},function(){return n||(0,i[Object.keys(i)[0]])((n={exports:{}}).exports,n),n.exports})(),t=new WebAssembly.Module(r);e.exports=e=>new WebAssembly.Instance(t,e).exports},3099:(e,i,n)=>{"use strict";const a=n(4739),r=n(5926);e.exports=(e,i,n)=>{let t=null,s=null,o=null;try{o=new r(i,n)}catch(e){return null}return e.forEach(e=>{o.test(e)&&(t&&1!==s.compare(e)||(t=e,s=new a(t,n)))}),t}},3144:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.entropyToCip3MasterNode=i.createBip39KeyFromSeed=i.deriveChildKey=i.getDerivationPathWithSeed=i.multipathToBip39Mnemonic=i.bip39MnemonicToMultipath=i.mnemonicToSeed=void 0;const a=n(8356),r=n(7822),t=n(2367),s=n(4927),o=n(5162),c=n(2913),h=n(6383),u=n(4533),l=n(4503),p=[12,15,18,21,24];function d(e){const i=e.split(" ");(0,t.assert)(p.includes(i.length),"Invalid mnemonic phrase: The mnemonic phrase must consist of 12, 15, 18, 21, or 24 words."),(0,t.assert)(i.every(e=>r.wordlist.includes(e)),"Invalid mnemonic phrase: The mnemonic phrase contains an unknown word.")}async function f(e,i="",n){const a=`mnemonic${i}`.normalize("NFKD");return await(0,o.pbkdf2Sha512)(function(e,i){if("string"==typeof e)return d(e),(0,t.stringToBytes)(e.normalize("NFKD"));const n=Array.from(new Uint16Array(e.buffer)).map(e=>i[e]).join(" ");return d(n),(0,t.stringToBytes)(n)}(e,r.wordlist),(0,t.stringToBytes)(a),2048,64,n)}function g(e){return e instanceof Uint8Array?e:((0,t.assert)(e.startsWith("bip39:"),'Invalid HD path segment: The BIP-39 path must start with "bip39:".'),e.slice(6))}async function m(e,i,n,a){(0,t.assert)(e.length>=16&&e.length<=64,"Invalid seed: The seed must be between 16 and 64 bytes long.");const r=await(0,o.hmacSha512)(i.secret,e,a),c=r.slice(0,s.BYTES_KEY_LENGTH),p=r.slice(s.BYTES_KEY_LENGTH);(0,t.assert)(i.isValidPrivateKey(c),"Invalid private key: The private key must greater than 0 and less than the curve order.");const d=i.getPublicKey(c,!1),f=(0,l.getFingerprint)(i.compressPublicKey(d),i.compressedPublicKeyLength);return u.SLIP10Node.fromExtendedKey({privateKey:c,publicKey:d,chainCode:p,masterFingerprint:f,network:n,depth:0,parentFingerprint:0,index:0,curve:i.name,guard:h.PUBLIC_KEY_GUARD},a)}async function k(e,i,n,a){(0,t.assert)(e.length>=16&&e.length<=64,"Invalid entropy: The entropy must be between 16 and 64 bytes long.");const r=await(0,o.pbkdf2Sha512)(i.secret,e,4096,96,a);r[0]&=248,r[31]&=31,r[31]|=64;const s=r.slice(0,i.privateKeyLength),c=r.slice(i.privateKeyLength);(0,t.assert)(i.isValidPrivateKey(s),"Invalid private key.");const p=i.getPublicKey(s,!1),d=(0,l.getFingerprint)(i.compressPublicKey(p),i.compressedPublicKeyLength);return u.SLIP10Node.fromExtendedKey({privateKey:s,publicKey:p,chainCode:c,masterFingerprint:d,network:n,depth:0,parentFingerprint:0,index:0,curve:i.name,guard:h.PUBLIC_KEY_GUARD},a)}i.mnemonicToSeed=f,i.bip39MnemonicToMultipath=function(e){return`bip39:${e.toLowerCase().trim()}`},i.multipathToBip39Mnemonic=g,i.getDerivationPathWithSeed=async function({path:e,curve:i},n){const[s,...o]=e,h=g(s),u=(0,c.getCurveByName)(i);switch(u.masterNodeGenerationSpec){case"slip10":return[await f(h,"",n),...o];case"cip3":return[(0,a.mnemonicToEntropy)(h,r.wordlist),...o];default:return(0,t.assertExhaustive)(u)}},i.deriveChildKey=async function({path:e,curve:i,network:n},a){switch((0,t.assert)(e instanceof Uint8Array,"Invalid path: The path must be a Uint8Array."),i.masterNodeGenerationSpec){case"slip10":return m(e,i,n,a);case"cip3":return k(e,i,n,a);default:throw new Error("Unsupported master node generation spec.")}},i.createBip39KeyFromSeed=m,i.entropyToCip3MasterNode=k},3203:(e,i)=>{"use strict";function n(e){return e instanceof Uint8Array||ArrayBuffer.isView(e)&&"Uint8Array"===e.constructor.name}function a(e,...i){if(!n(e))throw new Error("Uint8Array expected");if(i.length>0&&!i.includes(e.length))throw new Error("Uint8Array expected of length "+i+", got length="+e.length)}function r(e,i){return!!Array.isArray(i)&&(0===i.length||(e?i.every(e=>"string"==typeof e):i.every(e=>Number.isSafeInteger(e))))}function t(e){if("function"!=typeof e)throw new Error("function expected");return!0}function s(e,i){if("string"!=typeof i)throw new Error(`${e}: string expected`);return!0}function o(e){if(!Number.isSafeInteger(e))throw new Error(`invalid integer: ${e}`)}function c(e){if(!Array.isArray(e))throw new Error("array expected")}function h(e,i){if(!r(!0,i))throw new Error(`${e}: array of strings expected`)}function u(e,i){if(!r(!1,i))throw new Error(`${e}: array of numbers expected`)}function l(...e){const i=e=>e,n=(e,i)=>n=>e(i(n));return{encode:e.map(e=>e.encode).reduceRight(n,i),decode:e.map(e=>e.decode).reduce(n,i)}}function p(e){const i="string"==typeof e?e.split(""):e,n=i.length;h("alphabet",i);const a=new Map(i.map((e,i)=>[e,i]));return{encode:a=>(c(a),a.map(a=>{if(!Number.isSafeInteger(a)||a<0||a>=n)throw new Error(`alphabet.encode: digit index outside alphabet "${a}". Allowed: ${e}`);return i[a]})),decode:i=>(c(i),i.map(i=>{s("alphabet.decode",i);const n=a.get(i);if(void 0===n)throw new Error(`Unknown letter: "${i}". Allowed: ${e}`);return n}))}}function d(e=""){return s("join",e),{encode:i=>(h("join.decode",i),i.join(e)),decode:i=>(s("join.decode",i),i.split(e))}}function f(e,i="="){return o(e),s("padding",i),{encode(n){for(h("padding.encode",n);n.length*e%8;)n.push(i);return n},decode(n){h("padding.decode",n);let a=n.length;if(a*e%8)throw new Error("padding: invalid, string should have whole number of bytes");for(;a>0&&n[a-1]===i;a--)if((a-1)*e%8==0)throw new Error("padding: invalid, string has too much padding");return n.slice(0,a)}}}function g(e){return t(e),{encode:e=>e,decode:i=>e(i)}}function m(e,i,n){if(i<2)throw new Error(`convertRadix: invalid from=${i}, base cannot be less than 2`);if(n<2)throw new Error(`convertRadix: invalid to=${n}, base cannot be less than 2`);if(c(e),!e.length)return[];let a=0;const r=[],t=Array.from(e,e=>{if(o(e),e<0||e>=i)throw new Error(`invalid integer: ${e}`);return e}),s=t.length;for(;;){let e=0,o=!0;for(let r=a;r<s;r++){const s=t[r],c=i*e,h=c+s;if(!Number.isSafeInteger(h)||c/i!==e||h-s!==c)throw new Error("convertRadix: carry overflow");const u=h/n;e=h%n;const l=Math.floor(u);if(t[r]=l,!Number.isSafeInteger(l)||l*n+e!==h)throw new Error("convertRadix: carry overflow");o&&(l?o=!1:a=r)}if(r.push(e),o)break}for(let i=0;i<e.length-1&&0===e[i];i++)r.push(0);return r.reverse()}Object.defineProperty(i,"__esModule",{value:!0}),i.bytes=i.stringToBytes=i.str=i.bytesToString=i.hex=i.utf8=i.bech32m=i.bech32=i.base58check=i.createBase58check=i.base58xmr=i.base58xrp=i.base58flickr=i.base58=i.base64urlnopad=i.base64url=i.base64nopad=i.base64=i.base32crockford=i.base32hexnopad=i.base32hex=i.base32nopad=i.base32=i.base16=i.utils=void 0;const k=(e,i)=>0===i?e:k(i,e%i),b=(e,i)=>e+(i-k(e,i)),_=(()=>{let e=[];for(let i=0;i<40;i++)e.push(2**i);return e})();function y(e,i,n,a){if(c(e),i<=0||i>32)throw new Error(`convertRadix2: wrong from=${i}`);if(n<=0||n>32)throw new Error(`convertRadix2: wrong to=${n}`);if(b(i,n)>32)throw new Error(`convertRadix2: carry overflow from=${i} to=${n} carryBits=${b(i,n)}`);let r=0,t=0;const s=_[i],h=_[n]-1,u=[];for(const a of e){if(o(a),a>=s)throw new Error(`convertRadix2: invalid data word=${a} from=${i}`);if(r=r<<i|a,t+i>32)throw new Error(`convertRadix2: carry overflow pos=${t} from=${i}`);for(t+=i;t>=n;t-=n)u.push((r>>t-n&h)>>>0);const e=_[t];if(void 0===e)throw new Error("invalid carry");r&=e-1}if(r=r<<n-t&h,!a&&t>=i)throw new Error("Excess padding");if(!a&&r>0)throw new Error(`Non-zero padding: ${r}`);return a&&t>0&&u.push(r>>>0),u}function v(e){return o(e),{encode:i=>{if(!n(i))throw new Error("radix.encode input should be Uint8Array");return m(Array.from(i),256,e)},decode:i=>(u("radix.decode",i),Uint8Array.from(m(i,e,256)))}}function A(e,i=!1){if(o(e),e<=0||e>32)throw new Error("radix2: bits should be in (0..32]");if(b(8,e)>32||b(e,8)>32)throw new Error("radix2: carry overflow");return{encode:a=>{if(!n(a))throw new Error("radix2.encode input should be Uint8Array");return y(Array.from(a),8,e,!i)},decode:n=>(u("radix2.decode",n),Uint8Array.from(y(n,e,8,i)))}}function z(e){return t(e),function(...i){try{return e.apply(null,i)}catch(e){}}}function I(e,i){return o(e),t(i),{encode(a){if(!n(a))throw new Error("checksum.encode: input should be Uint8Array");const r=i(a).slice(0,e),t=new Uint8Array(a.length+e);return t.set(a),t.set(r,a.length),t},decode(a){if(!n(a))throw new Error("checksum.decode: input should be Uint8Array");const r=a.slice(0,-e),t=a.slice(-e),s=i(r).slice(0,e);for(let i=0;i<e;i++)if(s[i]!==t[i])throw new Error("Invalid checksum");return r}}}i.utils={alphabet:p,chain:l,checksum:I,convertRadix:m,convertRadix2:y,radix:v,radix2:A,join:d,padding:f},i.base16=l(A(4),p("0123456789ABCDEF"),d("")),i.base32=l(A(5),p("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),f(5),d("")),i.base32nopad=l(A(5),p("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),d("")),i.base32hex=l(A(5),p("0123456789ABCDEFGHIJKLMNOPQRSTUV"),f(5),d("")),i.base32hexnopad=l(A(5),p("0123456789ABCDEFGHIJKLMNOPQRSTUV"),d("")),i.base32crockford=l(A(5),p("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),d(""),g(e=>e.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1")));const E=(()=>"function"==typeof Uint8Array.from([]).toBase64&&"function"==typeof Uint8Array.fromBase64)(),j=(e,i)=>{s("base64",e);const n=i?/^[A-Za-z0-9=_-]+$/:/^[A-Za-z0-9=+/]+$/,a=i?"base64url":"base64";if(e.length>0&&!n.test(e))throw new Error("invalid base64");return Uint8Array.fromBase64(e,{alphabet:a,lastChunkHandling:"strict"})};i.base64=E?{encode:e=>(a(e),e.toBase64()),decode:e=>j(e,!1)}:l(A(6),p("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),f(6),d("")),i.base64nopad=l(A(6),p("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),d("")),i.base64url=E?{encode:e=>(a(e),e.toBase64({alphabet:"base64url"})),decode:e=>j(e,!0)}:l(A(6),p("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),f(6),d("")),i.base64urlnopad=l(A(6),p("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),d(""));const w=e=>l(v(58),p(e),d(""));i.base58=w("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),i.base58flickr=w("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),i.base58xrp=w("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz");const B=[0,2,3,5,6,7,9,10,11];i.base58xmr={encode(e){let n="";for(let a=0;a<e.length;a+=8){const r=e.subarray(a,a+8);n+=i.base58.encode(r).padStart(B[r.length],"1")}return n},decode(e){let n=[];for(let a=0;a<e.length;a+=11){const r=e.slice(a,a+11),t=B.indexOf(r.length),s=i.base58.decode(r);for(let e=0;e<s.length-t;e++)if(0!==s[e])throw new Error("base58xmr: wrong padding");n=n.concat(Array.from(s.slice(s.length-t)))}return Uint8Array.from(n)}},i.createBase58check=e=>l(I(4,i=>e(e(i))),i.base58),i.base58check=i.createBase58check;const C=l(p("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),d("")),x=[996825010,642813549,513874426,1027748829,705979059];function S(e){const i=e>>25;let n=(33554431&e)<<5;for(let e=0;e<x.length;e++)1==(i>>e&1)&&(n^=x[e]);return n}function Q(e,i,n=1){const a=e.length;let r=1;for(let i=0;i<a;i++){const n=e.charCodeAt(i);if(n<33||n>126)throw new Error(`Invalid prefix (${e})`);r=S(r)^n>>5}r=S(r);for(let i=0;i<a;i++)r=S(r)^31&e.charCodeAt(i);for(let e of i)r=S(r)^e;for(let e=0;e<6;e++)r=S(r);return r^=n,C.encode(y([r%_[30]],30,5,!1))}function T(e){const i="bech32"===e?1:734539939,a=A(5),r=a.decode,t=a.encode,o=z(r);function c(e,a,r=90){s("bech32.encode prefix",e),n(a)&&(a=Array.from(a)),u("bech32.encode",a);const t=e.length;if(0===t)throw new TypeError(`Invalid prefix length ${t}`);const o=t+7+a.length;if(!1!==r&&o>r)throw new TypeError(`Length ${o} exceeds limit ${r}`);const c=e.toLowerCase(),h=Q(c,a,i);return`${c}1${C.encode(a)}${h}`}function h(e,n=90){s("bech32.decode input",e);const a=e.length;if(a<8||!1!==n&&a>n)throw new TypeError(`invalid string length: ${a} (${e}). Expected (8..${n})`);const r=e.toLowerCase();if(e!==r&&e!==e.toUpperCase())throw new Error("String must be lowercase or uppercase");const t=r.lastIndexOf("1");if(0===t||-1===t)throw new Error('Letter "1" must be present between prefix and data only');const o=r.slice(0,t),c=r.slice(t+1);if(c.length<6)throw new Error("Data must be at least 6 characters long");const h=C.decode(c).slice(0,-6),u=Q(o,h,i);if(!c.endsWith(u))throw new Error(`Invalid checksum in ${e}: expected "${u}"`);return{prefix:o,words:h}}return{encode:c,decode:h,encodeFromBytes:function(e,i){return c(e,t(i))},decodeToBytes:function(e){const{prefix:i,words:n}=h(e,!1);return{prefix:i,words:n,bytes:r(n)}},decodeUnsafe:z(h),fromWords:r,fromWordsUnsafe:o,toWords:t}}i.bech32=T("bech32"),i.bech32m=T("bech32m"),i.utf8={encode:e=>(new TextDecoder).decode(e),decode:e=>(new TextEncoder).encode(e)};const P=(()=>"function"==typeof Uint8Array.from([]).toHex&&"function"==typeof Uint8Array.fromHex)(),L={encode:e=>(a(e),e.toHex()),decode:e=>(s("hex",e),Uint8Array.fromHex(e))};i.hex=P?L:l(A(4),p("0123456789abcdef"),d(""),g(e=>{if("string"!=typeof e||e.length%2!=0)throw new TypeError(`hex.decode: expected string, got ${typeof e} with length ${e.length}`);return e.toLowerCase()}));const D={utf8:i.utf8,hex:i.hex,base16:i.base16,base32:i.base32,base64:i.base64,base64url:i.base64url,base58:i.base58,base58xmr:i.base58xmr},U="Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr";i.bytesToString=(e,i)=>{if("string"!=typeof e||!D.hasOwnProperty(e))throw new TypeError(U);if(!n(i))throw new TypeError("bytesToString() expects Uint8Array");return D[e].encode(i)},i.str=i.bytesToString,i.stringToBytes=(e,i)=>{if(!D.hasOwnProperty(e))throw new TypeError(U);if("string"!=typeof i)throw new TypeError("stringToBytes() expects string");return D[e].decode(i)},i.bytes=i.stringToBytes},3238:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.ripemd160=i.RIPEMD160=void 0;const a=n(1839);i.RIPEMD160=a.RIPEMD160,i.ripemd160=a.ripemd160},3279:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.pbkdf2Async=i.pbkdf2=void 0;const a=n(1371),r=n(1397),t=n(9161);function s(e,i,n,s){(0,a.hash)(e);const o=(0,t.checkOpts)({dkLen:32,asyncTick:10},s),{c,dkLen:h,asyncTick:u}=o;if((0,a.number)(c),(0,a.number)(h),(0,a.number)(u),c<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const l=(0,t.toBytes)(i),p=(0,t.toBytes)(n),d=new Uint8Array(h),f=r.hmac.create(e,l),g=f._cloneInto().update(p);return{c,dkLen:h,asyncTick:u,DK:d,PRF:f,PRFSalt:g}}function o(e,i,n,a,r){return e.destroy(),i.destroy(),a&&a.destroy(),r.fill(0),n}i.pbkdf2=function(e,i,n,a){const{c:r,dkLen:c,DK:h,PRF:u,PRFSalt:l}=s(e,i,n,a);let p;const d=new Uint8Array(4),f=(0,t.createView)(d),g=new Uint8Array(u.outputLen);for(let e=1,i=0;i<c;e++,i+=u.outputLen){const n=h.subarray(i,i+u.outputLen);f.setInt32(0,e,!1),(p=l._cloneInto(p)).update(d).digestInto(g),n.set(g.subarray(0,n.length));for(let e=1;e<r;e++){u._cloneInto(p).update(g).digestInto(g);for(let e=0;e<n.length;e++)n[e]^=g[e]}}return o(u,l,h,p,g)},i.pbkdf2Async=async function(e,i,n,a){const{c:r,dkLen:c,asyncTick:h,DK:u,PRF:l,PRFSalt:p}=s(e,i,n,a);let d;const f=new Uint8Array(4),g=(0,t.createView)(f),m=new Uint8Array(l.outputLen);for(let e=1,i=0;i<c;e++,i+=l.outputLen){const n=u.subarray(i,i+l.outputLen);g.setInt32(0,e,!1),(d=p._cloneInto(d)).update(f).digestInto(m),n.set(m.subarray(0,n.length)),await(0,t.asyncLoop)(r-1,h,()=>{l._cloneInto(d).update(m).digestInto(m);for(let e=0;e<n.length;e++)n[e]^=m[e]})}return o(l,p,u,d,m)}},3294:(e,i,n)=>{const a=n(6889),r=n(5682),t="undefined"!=typeof WebAssembly&&n(3086)({imports:{debug:{log(...e){console.log(...e.map(e=>(e>>>0).toString(16).padStart(8,"0")))},log_tee:e=>(console.log((e>>>0).toString(16).padStart(8,"0")),e)}}});let s=0;const o=[];e.exports=l;const c=e.exports.SHA512_BYTES=64,h=216,u=128;function l(){if(!(this instanceof l))return new l;if(!t)throw new Error("WASM not loaded. Wait for Sha512.ready(cb)");o.length||(o.push(s),s+=h),this.finalized=!1,this.digestLength=c,this.pointer=o.pop(),this.pos=0,this.wasm=t,this._memory=new Uint8Array(t.memory.buffer),this._memory.fill(0,this.pointer,this.pointer+h),this.pointer+this.digestLength>this._memory.length&&this._realloc(this.pointer+h)}function p(e){if(!(this instanceof p))return new p(e);this.pad=r.alloc(128),this.inner=l(),this.outer=l();const i=r.alloc(64);e.byteLength>128&&(l().update(e).digest(i),e=i),this.pad.fill(54);for(let i=0;i<e.byteLength;i++)this.pad[i]^=e[i];this.inner.update(this.pad),this.pad.fill(92);for(let i=0;i<e.byteLength;i++)this.pad[i]^=e[i];this.outer.update(this.pad),this.pad.fill(0),i.fill(0)}function d(){}l.prototype._realloc=function(e){t.memory.grow(Math.max(0,Math.ceil(Math.abs(e-this._memory.length)/65536))),this._memory=new Uint8Array(t.memory.buffer)},l.prototype.update=function(e,i){a(!1===this.finalized,"Hash instance finalized"),s%8!=0&&(s+=8-s%8),a(s%8==0,"input should be aligned for int64");const[n,o]=function(e,i){var n=r.from(e,i);return[n,n.byteLength]}(e,i);return a(n instanceof Uint8Array,"input must be Uint8Array or Buffer"),s+e.length>this._memory.length&&this._realloc(s+e.length),this._memory.fill(0,s,s+(o+u-1&-128)-u),this._memory.set(n.subarray(0,u-this.pos),this.pointer+80+this.pos),this._memory.set(n.subarray(u-this.pos),s),this.pos=this.pos+o&127,t.sha512(this.pointer,s,o,0),this},l.prototype.digest=function(e,i=0){a(!1===this.finalized,"Hash instance finalized"),this.finalized=!0,o.push(this.pointer);const n=this.pointer+80+this.pos;this._memory.fill(0,n,this.pointer+80+u),t.sha512(this.pointer,s,0,1);const c=this._memory.subarray(this.pointer,this.pointer+this.digestLength);if(!e)return c;if("string"==typeof e)return r.toString(c,e);a(e instanceof Uint8Array,"output must be Uint8Array or Buffer"),a(e.byteLength>=this.digestLength+i,"output must have at least 'SHA512_BYTES' bytes remaining");for(let n=0;n<this.digestLength;n++)e[n+i]=c[n];return e},l.WASM=t,l.WASM_SUPPORTED="undefined"!=typeof WebAssembly,l.ready=function(e){return e||(e=d),t?(e(),Promise.resolve()):e(new Error("WebAssembly not supported"))},l.prototype.ready=l.ready,p.prototype.update=function(e,i){return this.inner.update(e,i),this},p.prototype.digest=function(e,i=0){return this.outer.update(this.inner.digest()),this.outer.digest(e,i)},l.HMAC=p},3321:(e,i,n)=>{"use strict";const a=n(4739);e.exports=(e,i,n=!1)=>{if(e instanceof a)return e;try{return new a(e,i)}catch(e){if(!n)return null;throw e}}},3400:(e,i,n)=>{"use strict";const a=n(7544);e.exports=(e,i)=>e.sort((e,n)=>a(e,n,i))},3562:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.getHash=function(e){return{hash:e}},i.createCurve=function(e,i){const n=i=>(0,a.weierstrass)({...e,hash:i});return{...n(i),create:n}};const a=n(1705)},3646:(e,i,n)=>{"use strict";const a=n(5778),r=n(710),t=n(47),s=n(668),o=n(5960),c=n(9925);e.exports=(e,i,n,h)=>{switch(i){case"===":return"object"==typeof e&&(e=e.version),"object"==typeof n&&(n=n.version),e===n;case"!==":return"object"==typeof e&&(e=e.version),"object"==typeof n&&(n=n.version),e!==n;case"":case"=":case"==":return a(e,n,h);case"!=":return r(e,n,h);case">":return t(e,n,h);case">=":return s(e,n,h);case"<":return o(e,n,h);case"<=":return c(e,n,h);default:throw new TypeError(`Invalid operator: ${i}`)}}},3745:(e,i)=>{"use strict";function n(e){return e.charCodeAt(0)<=127}var a;Object.defineProperty(i,"__esModule",{value:!0}),i.calculateNumberSize=i.calculateStringSize=i.isASCII=i.isPlainObject=i.ESCAPE_CHARACTERS_REGEXP=i.JsonSize=i.getKnownPropertyNames=i.hasProperty=i.isObject=i.isNullOrUndefined=i.isNonEmptyArray=void 0,i.isNonEmptyArray=function(e){return Array.isArray(e)&&e.length>0},i.isNullOrUndefined=function(e){return null==e},i.isObject=function(e){return Boolean(e)&&"object"==typeof e&&!Array.isArray(e)},i.hasProperty=(e,i)=>Object.hasOwnProperty.call(e,i),i.getKnownPropertyNames=function(e){return Object.getOwnPropertyNames(e)},(a=i.JsonSize||(i.JsonSize={}))[a.Null=4]="Null",a[a.Comma=1]="Comma",a[a.Wrapper=1]="Wrapper",a[a.True=4]="True",a[a.False=5]="False",a[a.Quote=1]="Quote",a[a.Colon=1]="Colon",a[a.Date=24]="Date",i.ESCAPE_CHARACTERS_REGEXP=/"|\\|\n|\r|\t/gu,i.isPlainObject=function(e){if("object"!=typeof e||null===e)return!1;try{let i=e;for(;null!==Object.getPrototypeOf(i);)i=Object.getPrototypeOf(i);return Object.getPrototypeOf(e)===i}catch(e){return!1}},i.isASCII=n,i.calculateStringSize=function(e){return e.split("").reduce((e,i)=>n(i)?e+1:e+2,0)+(e.match(i.ESCAPE_CHARACTERS_REGEXP)??[]).length},i.calculateNumberSize=function(e){return e.toString().length}},3777:(e,i,n)=>{"use strict";const a=n(4739),r=n(5926);e.exports=(e,i,n)=>{let t=null,s=null,o=null;try{o=new r(i,n)}catch(e){return null}return e.forEach(e=>{o.test(e)&&(t&&-1!==s.compare(e)||(t=e,s=new a(t,n)))}),t}},3891:e=>{"use strict";e.exports=JSON.parse('["abajur","abaküs","abartı","abdal","abdest","abiye","abluka","abone","absorbe","absürt","acayip","acele","acemi","açıkgöz","adalet","adam","adezyon","adisyon","adliye","adres","afacan","afili","afiş","afiyet","aforizm","afra","ağaç","ağır","ahbap","ahkam","ahlak","ahtapot","aidat","aile","ajan","akademi","akarsu","akbaş","akciğer","akdeniz","akıbet","akıl","akıntı","akide","akrep","akrobasi","aksiyon","akşam","aktif","aktör","aktris","akustik","alaca","albüm","alçak","aldanma","aleni","alet","alfabe","algılama","alıngan","alkış","alkol","alpay","alperen","altın","altüst","altyapı","alyuvar","amade","amatör","amazon","ambalaj","amblem","ambulans","amca","amel","amigo","amir","amiyane","amorti","ampul","anadolu","anahtar","anakonda","anaokul","anapara","anarşi","anatomi","anayasa","anekdot","anestezi","angaje","anka","anket","anlamlı","anne","anomali","anonim","anten","antlaşma","apse","araba","aracı","araf","arbede","arda","arefe","arena","argo","argüman","arkadaş","armoni","aroma","arsa","arsız","artı","artist","aruz","asansör","asayiş","asfalt","asgari","asil","asker","askı","aslan","asosyal","astsubay","asya","aşçı","aşırı","aşure","atabey","ataman","ateş","atmaca","atmosfer","atom","atölye","avcı","avdet","avize","avlu","avokado","avrupa","avukat","ayaz","ayçiçeği","aydın","aygıt","ayna","ayran","ayrıntı","azim","baca","bagaj","bağlantı","bahadır","bahçe","baki","bakkal","baklava","bakteri","balçık","balina","balo","balta","bant","banyo","bardak","barış","başbuğ","başıboş","başkan","başlık","bavul","bayındır","baykuş","bazlama","bedel","begüm","bekçi","bekle","belge","belki","bencil","benek","bengi","benzer","berjer","berk","bermuda","berrak","beşik","beton","beyin","beyoğlu","bıçak","biberiye","bidon","biftek","bihaber","bikini","bilezik","bilinç","bilye","bina","binbaşı","binyıl","bisiklet","bisküvi","bitki","bizzat","bodrum","boğaz","bohça","bolero","boncuk","bonfile","borsa","boru","bostan","boşboğaz","botanik","boya","boykot","boynuz","bozgun","bozkır","bölüm","börek","buçuk","bugün","buğday","buhar","buhran","bulvar","buram","burçak","burs","burun","butik","buzdağı","buzkıran","bücür","büfe","bülten","bütçe","bütün","büyük","cacık","cadı","cahil","cambaz","canhıraş","casus","cazibe","cehalet","cehennem","ceket","cemre","cenin","cennet","cepken","cerrah","cesur","cetvel","cevher","ceylan","cılız","cıva","cilt","cisim","ciyak","coğrafya","cömert","cumba","cüzdan","çabucak","çadır","çağdaş","çağlayan","çağrı","çakmak","çalışkan","çamaşır","çapa","çaput","çarık","çarpan","çarşaf","çayhane","çekirdek","çelebi","çember","çenet","çengel","çerçeve","çerez","çeşit","çeşme","çete","çevre","çeyiz","çeyrek","çığır","çılgın","çıngırak","çift","çiğdem","çikolata","çilek","çimen","çivi","çoban","çocuk","çokgen","çomak","çorba","çözelti","çubuk","çukur","çuval","çürük","dağbaşı","dağılım","daktilo","daldırış","dalga","dalkavuk","damak","damıtma","damla","dana","dandik","danışman","daniska","dantel","dargeçit","darphane","davet","dayı","defter","değer","değirmen","dehşet","delgeç","demir","deneyim","denge","depo","deprem","derdest","dere","derhal","derman","dernek","derviş","desen","destan","dışarı","dışbükey","dijital","dikbaşlı","dilekçe","dimağ","dinamik","dindar","dinleme","dinozor","dipçik","dipnot","direniş","dirsek","disiplin","disk","divriği","dizüstü","dobra","dodurga","doğalgaz","doktor","doküman","dolap","donanım","dondurma","donör","doruk","dosdoğru","dost","dosya","dozer","döküm","dönence","dörtyol","dövme","dram","dublaj","durum","duvak","duyarga","duyma","duyuru","düğme","düğüm","dükkan","dünür","düpedüz","dürbün","düşünür","düzayak","düzeltme","ebeveyn","ebru","ecel","ecnebi","ecza","edat","edilgen","efendi","efor","efsane","egemen","egzersiz","eğrelti","ekarte","ekip","eklem","ekmek","ekol","ekonomi","ekose","ekran","ekvator","elaman","elastik","elbet","elbise","elçi","eldiven","elebaşı","eleştiri","elma","eloğlu","elveda","emare","emekçi","emisyon","emniyet","empati","emsal","emzik","endüstri","enerji","engebe","engin","enişte","enkaz","entari","entegre","entrika","enzim","erdem","ergen","erguvan","erkek","erozyon","ertesi","erzak","esaret","esenlik","eser","eski","esnek","eşarp","eşofman","eşraf","eşya","eşzaman","etik","etken","etkinlik","etüt","evet","evire","evrak","evrim","eyalet","eyvah","ezber","fabrika","fanatik","fanus","fason","fasulye","fatih","fatura","fauna","favori","fayans","fayton","fazıl","fazilet","federal","felsefe","fener","feribot","fersah","fesih","festival","feveran","feza","fıçı","fıldır","fındık","fırça","fırsat","fırtına","fıtık","fidan","fidye","figür","fihrist","fikir","fildişi","filo","filtre","fincan","firuze","fitil","fiyaka","fizik","flaş","flüt","fosil","fren","fukara","futbol","garabet","gariban","garnitür","gazi","gece","gedik","gelenek","gelin","gemi","genç","geniş","geometri","gerçek","gevrek","gezegen","gezgin","geziyolu","gıcık","gıda","gıybet","girdap","girişim","gitar","giyecek","giysi","gizem","gofret","goril","göbek","göçebe","göğüs","gökdelen","gökmen","gökyüzü","gölge","gömlek","gönül","görenek","görkemli","görsel","gösteri","gövde","gözaltı","gözcü","gözdağı","gözleme","gözyaşı","grup","gurbet","gusül","gübre","güfte","gümüş","günaydın","güncel","gündüz","güneş","günyüzü","gürbüz","güvercin","güzel","haber","hacamat","hacim","hademe","hafız","hafriyat","hafta","hakan","hakem","hakikat","haksever","halı","hançer","hane","hangar","hapis","hapşırık","harf","haseki","hasret","hatun","havuç","haylaz","haysiyet","hayvan","hedef","hektar","hemen","hemfikir","hendek","hepsi","hergele","herhangi","hesap","heyecan","heykel","hezimet","hıçkırık","hızölçer","hicviye","hikaye","hikmet","hile","hisse","hobi","hoca","horlama","hormon","hoşbeş","hoşgörü","hoyrat","hörgüç","höyük","hudut","hukuk","hunhar","hurda","huysuz","huzur","hücum","hükümet","hünkar","hüviyet","ırmak","ısıölçer","ısıtıcı","ıspanak","ısrar","ışıldak","ızdırap","ızgara","ibadet","icat","içbükey","içecek","içgüdü","içsel","idman","iftihar","iğne","ihanet","ihbar","ihdas","ihmal","ihracat","ihsan","ikilem","ikindi","ikircik","iklim","iksir","iktibas","ilaç","ilçe","ileri","iletişim","ilgi","ilhak","ilkbahar","ilkokul","ilmek","imkan","imleç","imsak","imtihan","imza","ince","inkar","inşa","ipek","ipucu","irade","irfan","irmik","isabet","iskele","israf","isyan","işçi","işgal","işgüzar","işlem","itibar","itiraf","ivedi","ivme","iyileşme","iyimser","izbandut","izci","izdiham","izin","jakoben","jandarma","jargon","kabadayı","kablo","kabus","kaçamak","kadeh","kadın","kadraj","kafa","kafkas","kağıt","kağnı","kahkaha","kahraman","kahvaltı","kakül","kaldırım","kale","kalibre","kalkan","kalpak","kamış","kamyon","kanat","kandaş","kanepe","kanser","kanun","kaos","kapı","kaplıca","kaptan","karanlık","kardeş","karga","karınca","karmaşa","karşıt","kasırga","kask","kasvet","katkı","katman","kavram","kaygan","kaynakça","kayyum","kedi","kehanet","kekik","kelebek","kenar","kerkenez","kerpiç","kesirli","kesmece","kestane","keşkek","ketçap","keyfiyet","kıble","kıdemli","kılavuz","kılçık","kılıf","kıraç","kırmızı","kırsal","kısayol","kısım","kıskanç","kısmet","kışla","kıvanç","kıvılcım","kıvrık","kıyafet","kıymetli","kızak","kızılcık","kibar","kinaye","kira","kiremit","kirli","kirpik","kişisel","kitap","koçbaşı","kodaman","koğuş","kokteyl","kolaycı","kolbastı","kolonya","koltuk","kolye","kombine","komedyen","komiser","komposto","komşu","komuta","konak","konfor","koni","konsül","kopya","korkusuz","korna","korse","korunak","korvet","kostüm","koşul","koyu","kozmik","köfte","kökensel","köprücük","köpük","kördüğüm","körfez","köstebek","köşegen","kötü","kravat","kriter","kuantum","kudurma","kuluçka","kulübe","kumanya","kumbara","kumlu","kumpir","kumral","kundura","kupa","kupkuru","kuramsal","kurbağa","kurdele","kurgu","kurmay","kurşun","kurtuluş","kurultay","kurye","kusursuz","kuşak","kuşbaşı","kuşkulu","kutlama","kutsal","kutup","kuver","kuyruk","kuzey","kuzgun","küçük","külçe","külfet","külliye","kültürel","kümes","künefe","küresel","kütle","lahana","lahmacun","lamba","lansman","lavaş","layık","leğen","levent","leziz","lezzet","lider","likide","liman","liste","litre","liyakat","lodos","lokanta","lokman","lokum","lunapark","lütfen","lüzum","nokta","mabet","macera","macun","madalya","madde","madem","mağara","mağdur","mağfiret","mağlup","mahalle","mahcup","mahir","mahkeme","mahlas","mahrum","mahsul","makas","makbuz","makine","makro","maksat","makul","maliye","manav","mangal","manidar","manken","mantık","manzara","mareşal","margarin","marifet","market","marmelat","masaüstü","masmavi","masraf","masum","matah","materyal","matrak","maval","mavra","maydanoz","mayhoş","maytap","mazbata","mazeret","mazlum","mazot","mazur","meblağ","mebus","mecaz","mecbur","meclis","mecmua","mecnun","meçhul","medeni","mehtap","mekanik","melodi","meltem","memur","mendil","menekşe","menteşe","meraklı","mercek","merdiven","merhaba","merinos","merkez","mermi","mert","mesafe","mesele","mesken","meslek","meşale","meşgul","meşhur","metafor","metin","metre","mevcut","mevkidaş","meydan","meyil","meyve","meziyet","mezun","mıknatıs","mısra","mızıka","miğfer","mihrak","mikrofon","miktar","milat","milli","mimar","minare","mineral","minik","minyon","mirliva","misafir","miskin","miting","miyop","mizah","mobilya","model","monitör","morötesi","motive","motor","mozaik","muavin","mucize","muhafız","muhteşem","mukayese","mumya","musluk","muşamba","mutabık","mutfak","mutlu","muzaffer","muzdarip","mübarek","mücadele","müdür","müfredat","müftü","mühendis","mühim","mühlet","mükemmel","mülk","mümkün","mümtaz","müsrif","müstesna","müşahit","müşteri","mütercim","müthiş","müze","müzik","nabız","nadas","nadir","nahoş","nakarat","nakış","nalbur","namlu","namus","nankör","nargile","narkoz","nasıl","nasip","naylon","nazar","nazım","nazik","neden","nefes","negatif","neon","neptün","nerede","nesil","nesnel","neşeli","netice","nevresim","neyse","neyzen","nezaket","nezih","nezle","nicel","nilüfer","nimet","nisan","nispet","nitekim","nizam","nohut","noksan","normal","nostalji","noter","nöbet","numara","numune","nutuk","nüfus","obabaşı","obez","obje","ocak","odun","ofansif","ofis","oğlak","oğuz","okçu","oklava","oksijen","okul","okumuş","okutman","okuyucu","okyanus","olağan","olanak","olası","olay","olgun","olimpik","olumlu","omlet","omurga","onarım","onursal","opera","optik","oral","orantı","ordu","organik","orijin","orkide","orman","orta","oruç","otağ","otantik","otel","otoban","otogar","otomobil","otonom","otopark","otorite","otoyol","oturum","oyuk","oyuncak","ozan","ödeme","ödenek","ödev","ödül","ödünç","öfke","öğlen","öğrenci","öğün","öğütücü","öksürük","ölçme","ölçü","ölümsüz","ömür","önayak","öncü","önder","önem","önerge","öngörü","önlük","önsezi","öpücük","ördek","örgü","örtbas","örtme","örtü","örümcek","örüntü","öteberi","öteki","övünç","öykü","öyleyse","özçekim","özdeyiş","özel","özenti","özerk","özgürlük","özlem","özlü","özne","özsever","özümseme","özür","özveri","pabuç","padişah","palamut","palmiye","palto","palyaço","pamuk","panayır","pancar","panda","panel","panik","panjur","pankart","pano","pansuman","pantolon","panzehir","papatya","papyon","paraşüt","parça","pardösü","parfüm","parıltı","parkur","parmak","parodi","parsel","partner","pasaport","pasif","paskalya","pastırma","paşa","patates","paten","patika","patlıcan","patolog","patron","payanda","paydaş","payidar","paylaşma","paytak","peçete","pedal","peder","pehlivan","pekala","pekmez","pelerin","pelikan","pelüş","pembe","pena","pencere","pense","perçin","perde","pergel","perişan","peron","personel","perşembe","peruk","pervane","pespaye","pestil","peşin","petek","petrol","petunya","peynir","peyzaj","pınar","pırasa","pırlanta","pide","pikap","piknik","pilav","piliç","pilot","pipet","pipo","piramit","pirinç","pirzola","pist","pişik","pişman","piyasa","piyes","plaj","plaket","planlama","platform","plazma","podyum","poğaça","polat","polen","politika","pompa","popüler","porselen","portakal","posa","poster","poşet","poyraz","pozitif","pranga","pratik","prenses","prim","problem","profil","program","proje","protokol","prova","puan","pudra","pusula","püre","pürüz","püstül","püsür","racon","radar","radikal","radyo","rafadan","rafine","rağbet","rahat","rahle","rakam","raket","rakip","rakun","ralli","rampa","randevu","ranza","rapor","rastgele","rasyonel","razı","realite","reçine","refah","referans","refik","reform","rehber","rehin","reis","rekabet","reklam","rekor","rektör","renk","resim","resmen","restoran","retorik","revaç","revize","reyon","rezalet","rezerv","rezil","rıhtım","rıza","ritim","ritüel","rivayet","robot","roman","rota","rozet","röportaj","rötar","ruble","ruhban","ruhsat","rulet","rulo","runik","rutin","rutubet","rüşvet","rütbe","rüya","rüzgar","sabah","sabıka","sabit","sabun","saçma","sade","sadık","safahat","safdil","safkan","sağanak","sağduyu","sağlam","saha","sahiden","sahne","sakal","sakız","sakin","saklama","saksağan","salamura","salça","salgı","salınım","salkım","salon","saltanat","sanatçı","sancak","sandalye","saniye","saplantı","sapsız","saray","sarışın","sarkık","sarmaşık","satır","savaşım","savunma","saydam","sayfa","saygın","sayısal","sebep","seçenek","seçim","seçkin","seçmen","seda","sedir","sedye","sefer","sehpa","sekizgen","selektör","selvi","semavi","sembol","seminer","senaryo","sendika","senkron","sensör","sentez","sepet","seramik","serbest","serdar","seremoni","sergi","serhat","serin","sermaye","serpuş","sersem","serüven","servis","sesli","sesteş","sevap","seviye","seyahat","seyirci","sezon","sıcak","sıfat","sıhhi","sınanma","sınır","sıradan","sırdaş","sırma","sırtüstü","sızgıt","siftah","sigorta","sihirbaz","silah","silecek","silindir","simetri","simge","simit","sincap","sindirim","sinema","sinirli","sipariş","sirke","siroz","sistem","sivilce","siyasi","slogan","soba","sofra","soğuk","sohbet","sokak","solfej","solunum","somut","sonbahar","sonraki","sonsuz","sorunsuz","sosyete","soyağacı","soydaş","soygun","soytarı","söğüş","sömürge","sönük","söylem","sözcük","sözde","spatula","spektrum","spiker","spiral","sponsor","sporcu","sprey","stabil","statü","stok","stopaj","strateji","subay","sucuk","suçüstü","suhulet","sulama","sungur","sunucu","surat","susam","suskun","sükse","sükut","sülale","sünger","süpürge","sürahi","süreç","sürgün","sürüm","süsleme","sütanne","sütlaç","sütun","süvari","şahane","şahbaz","şahit","şahsiyet","şakıma","şaklaban","şakrak","şamar","şampiyon","şanslı","şantiye","şapka","şarkıcı","şartname","şaşırma","şaşkın","şatafat","şayet","şebeke","şefkat","şeftali","şehir","şehvet","şeker","şekil","şelale","şema","şemsiye","şerbet","şeref","şerit","şımarık","şıpıdık","şifre","şimdi","şimşek","şipşak","şirin","şişe","şişirme","şofben","şöhret","şölen","şüphe","tabaka","tabela","tabure","tadilat","taharet","tahıl","tahkim","tahlil","tahmin","tahrifat","tahsilat","tahta","taklit","takoz","taksici","taktik","takvim","talebe","talip","tamamen","tamirci","tampon","tamtakır","tandır","tanecik","tanıtım","tanrı","tansiyon","tapan","tapınak","taptaze","tapu","tarafgir","tarhana","tarım","tarih","tarla","tartak","tarumar","tasarım","tasdik","taslak","tastamam","taşeron","taşınmaz","taşra","tatava","tatbikat","tatil","tatlı","tavsiye","tavşan","tavuk","taze","taziye","tazminat","tebeşir","tebrik","tecrübe","teçhizat","tedarik","tedbir","teftiş","teğet","teğmen","tehdit","tehlike","tekdüze","tekerlek","tekme","teknik","tekrar","telef","telsiz","telve","temas","tembel","temiz","temkin","tempo","temsilci","tendon","teneke","tenha","tenkit","tepegöz","tepki","terazi","terbiye","tercih","tereyağı","terfi","terim","terminal","tersane","tertip","tesadüf","tescil","tesir","teslimat","tespit","testere","teşekkür","teşhir","teşrif","teşvik","teyze","tezahür","tezgah","tıbbi","tıkaç","tıkışık","tıknaz","tılsım","tıpkı","tıraş","tırışka","tırmanış","tırnak","tırpan","tıslama","ticaret","tilki","tiryaki","titreşim","tohum","tokat","tolere","tomar","tombak","tomurcuk","topaç","toplum","toprak","toptan","toraman","torpido","tortu","tosbağa","toynak","tören","trafik","trajedi","tramvay","transfer","tribün","triko","tugay","tuğla","tuğrul","tuhaf","tulumba","tunç","turan","turkuaz","turnusol","turşu","turuncu","tutanak","tutkal","tutsak","tutum","tuyuğ","tuzlu","tüccar","tüfek","tükenmez","tülbent","tümleç","tünel","türbin","türev","türk","tüzük","ucube","ucuz","uçak","uçurtma","ufuk","uğrak","uğur","ukala","ulaşım","ulema","ulus","ulvi","umursama","umut","unutkan","uslu","ustabaşı","ustura","usul","utangaç","uyanık","uyarı","uydu","uygar","uygulama","uykusuz","uysal","uyuşma","uzantı","uzay","uzgören","uzlaşma","uzman","uzun","ücra","ücret","üçbudak","üçgen","üçkağıt","üçleme","üfürük","ülke","ümit","üniforma","ünite","ünlem","üretken","ürün","üslup","üstel","üstün","üşengeç","üşüme","ütopya","üvey","üzengi","üzgün","üzüm","vagon","vaka","vakfiye","vakıf","vakit","vakum","vapur","varil","varlık","varsayım","varyemez","vasıta","vasiyet","vatandaş","vazife","vazo","veciz","vefa","vehim","veliaht","veresiye","verimli","verkaç","vernik","vertigo","vesait","vesika","vestiyer","veznedar","vicdan","vilayet","virane","virgül","vişne","vites","vokal","volkan","vurma","vurucu","vücut","yabancı","yabgu","yağış","yağlı","yağmur","yakamoz","yakın","yaklaşık","yalçın","yalıtım","yaman","yanardağ","yangın","yanıt","yankı","yanlış","yansıma","yapay","yapboz","yapımcı","yaprak","yaratık","yarbay","yardım","yargıç","yarıçap","yasemin","yastık","yaşam","yatak","yatırım","yavru","yaygara","yayıncı","yayla","yazılım","yekpare","yekvücut","yelkovan","yelpaze","yemek","yemiş","yengeç","yeniçeri","yeraltı","yerküre","yerleşke","yeryüzü","yeşil","yetenek","yetkili","yığınak","yıkama","yılbaşı","yıldırım","yılkı","yılmaz","yırtıcı","yiğit","yoğurt","yokuş","yolcu","yoldaş","yolgeçen","yolkesen","yolüstü","yordam","yorgan","yorumcu","yosun","yöndeş","yönetim","yönlü","yöntem","yöresel","yörünge","yufka","yukarı","yumruk","yumurta","yuvarlak","yücelme","yükçeker","yüklem","yüksek","yürek","yürütme","yüzde","yüzeysel","yüzgeç","yüzüstü","yüzyıl","zabıta","zafer","zahmet","zambak","zaptiye","zarafet","zaruret","zeka","zekice","zemberek","zemin","zencefil","zeplin","zeytin","zıbın","zılgıt","zımbırtı","zımpara","zıpkın","zigon","zihinsel","zihniyet","zincir","zindan","zirzop","ziyaret","ziynet","zoraki","zorlu","zorunlu","züğürt","zümre"]')},3895:e=>{if(1!==new Uint16Array([1])[0])throw new Error("Big endian architecture is not supported.");var i=function(e){var i,n=new Float64Array(16);if(e)for(i=0;i<e.length;i++)n[i]=e[i];return n},n=(new Uint8Array(16),new Uint8Array(32));n[0]=9;var a=i(),r=i([1]),t=i([56129,1]),s=i([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),o=i([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),c=i([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),h=i([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),u=i([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function l(e,i,n){var a,r,t=0,s=0,o=0,c=0,h=0,u=0,l=0,p=0,d=0,f=0,g=0,m=0,k=0,b=0,_=0,y=0,v=0,A=0,z=0,I=0,E=0,j=0,w=0,B=0,C=0,x=0,S=0,Q=0,T=0,P=0,L=0,D=n[0],U=n[1],R=n[2],O=n[3],N=n[4],F=n[5],M=n[6],K=n[7],H=n[8],q=n[9],Y=n[10],G=n[11],$=n[12],V=n[13],J=n[14],X=n[15];t+=(a=i[0])*D,s+=a*U,o+=a*R,c+=a*O,h+=a*N,u+=a*F,l+=a*M,p+=a*K,d+=a*H,f+=a*q,g+=a*Y,m+=a*G,k+=a*$,b+=a*V,_+=a*J,y+=a*X,s+=(a=i[1])*D,o+=a*U,c+=a*R,h+=a*O,u+=a*N,l+=a*F,p+=a*M,d+=a*K,f+=a*H,g+=a*q,m+=a*Y,k+=a*G,b+=a*$,_+=a*V,y+=a*J,v+=a*X,o+=(a=i[2])*D,c+=a*U,h+=a*R,u+=a*O,l+=a*N,p+=a*F,d+=a*M,f+=a*K,g+=a*H,m+=a*q,k+=a*Y,b+=a*G,_+=a*$,y+=a*V,v+=a*J,A+=a*X,c+=(a=i[3])*D,h+=a*U,u+=a*R,l+=a*O,p+=a*N,d+=a*F,f+=a*M,g+=a*K,m+=a*H,k+=a*q,b+=a*Y,_+=a*G,y+=a*$,v+=a*V,A+=a*J,z+=a*X,h+=(a=i[4])*D,u+=a*U,l+=a*R,p+=a*O,d+=a*N,f+=a*F,g+=a*M,m+=a*K,k+=a*H,b+=a*q,_+=a*Y,y+=a*G,v+=a*$,A+=a*V,z+=a*J,I+=a*X,u+=(a=i[5])*D,l+=a*U,p+=a*R,d+=a*O,f+=a*N,g+=a*F,m+=a*M,k+=a*K,b+=a*H,_+=a*q,y+=a*Y,v+=a*G,A+=a*$,z+=a*V,I+=a*J,E+=a*X,l+=(a=i[6])*D,p+=a*U,d+=a*R,f+=a*O,g+=a*N,m+=a*F,k+=a*M,b+=a*K,_+=a*H,y+=a*q,v+=a*Y,A+=a*G,z+=a*$,I+=a*V,E+=a*J,j+=a*X,p+=(a=i[7])*D,d+=a*U,f+=a*R,g+=a*O,m+=a*N,k+=a*F,b+=a*M,_+=a*K,y+=a*H,v+=a*q,A+=a*Y,z+=a*G,I+=a*$,E+=a*V,j+=a*J,w+=a*X,d+=(a=i[8])*D,f+=a*U,g+=a*R,m+=a*O,k+=a*N,b+=a*F,_+=a*M,y+=a*K,v+=a*H,A+=a*q,z+=a*Y,I+=a*G,E+=a*$,j+=a*V,w+=a*J,B+=a*X,f+=(a=i[9])*D,g+=a*U,m+=a*R,k+=a*O,b+=a*N,_+=a*F,y+=a*M,v+=a*K,A+=a*H,z+=a*q,I+=a*Y,E+=a*G,j+=a*$,w+=a*V,B+=a*J,C+=a*X,g+=(a=i[10])*D,m+=a*U,k+=a*R,b+=a*O,_+=a*N,y+=a*F,v+=a*M,A+=a*K,z+=a*H,I+=a*q,E+=a*Y,j+=a*G,w+=a*$,B+=a*V,C+=a*J,x+=a*X,m+=(a=i[11])*D,k+=a*U,b+=a*R,_+=a*O,y+=a*N,v+=a*F,A+=a*M,z+=a*K,I+=a*H,E+=a*q,j+=a*Y,w+=a*G,B+=a*$,C+=a*V,x+=a*J,S+=a*X,k+=(a=i[12])*D,b+=a*U,_+=a*R,y+=a*O,v+=a*N,A+=a*F,z+=a*M,I+=a*K,E+=a*H,j+=a*q,w+=a*Y,B+=a*G,C+=a*$,x+=a*V,S+=a*J,Q+=a*X,b+=(a=i[13])*D,_+=a*U,y+=a*R,v+=a*O,A+=a*N,z+=a*F,I+=a*M,E+=a*K,j+=a*H,w+=a*q,B+=a*Y,C+=a*G,x+=a*$,S+=a*V,Q+=a*J,T+=a*X,_+=(a=i[14])*D,y+=a*U,v+=a*R,A+=a*O,z+=a*N,I+=a*F,E+=a*M,j+=a*K,w+=a*H,B+=a*q,C+=a*Y,x+=a*G,S+=a*$,Q+=a*V,T+=a*J,P+=a*X,y+=(a=i[15])*D,s+=38*(A+=a*R),o+=38*(z+=a*O),c+=38*(I+=a*N),h+=38*(E+=a*F),u+=38*(j+=a*M),l+=38*(w+=a*K),p+=38*(B+=a*H),d+=38*(C+=a*q),f+=38*(x+=a*Y),g+=38*(S+=a*G),m+=38*(Q+=a*$),k+=38*(T+=a*V),b+=38*(P+=a*J),_+=38*(L+=a*X),t=(a=(t+=38*(v+=a*U))+(r=1)+65535)-65536*(r=Math.floor(a/65536)),s=(a=s+r+65535)-65536*(r=Math.floor(a/65536)),o=(a=o+r+65535)-65536*(r=Math.floor(a/65536)),c=(a=c+r+65535)-65536*(r=Math.floor(a/65536)),h=(a=h+r+65535)-65536*(r=Math.floor(a/65536)),u=(a=u+r+65535)-65536*(r=Math.floor(a/65536)),l=(a=l+r+65535)-65536*(r=Math.floor(a/65536)),p=(a=p+r+65535)-65536*(r=Math.floor(a/65536)),d=(a=d+r+65535)-65536*(r=Math.floor(a/65536)),f=(a=f+r+65535)-65536*(r=Math.floor(a/65536)),g=(a=g+r+65535)-65536*(r=Math.floor(a/65536)),m=(a=m+r+65535)-65536*(r=Math.floor(a/65536)),k=(a=k+r+65535)-65536*(r=Math.floor(a/65536)),b=(a=b+r+65535)-65536*(r=Math.floor(a/65536)),_=(a=_+r+65535)-65536*(r=Math.floor(a/65536)),y=(a=y+r+65535)-65536*(r=Math.floor(a/65536)),t=(a=(t+=r-1+37*(r-1))+(r=1)+65535)-65536*(r=Math.floor(a/65536)),s=(a=s+r+65535)-65536*(r=Math.floor(a/65536)),o=(a=o+r+65535)-65536*(r=Math.floor(a/65536)),c=(a=c+r+65535)-65536*(r=Math.floor(a/65536)),h=(a=h+r+65535)-65536*(r=Math.floor(a/65536)),u=(a=u+r+65535)-65536*(r=Math.floor(a/65536)),l=(a=l+r+65535)-65536*(r=Math.floor(a/65536)),p=(a=p+r+65535)-65536*(r=Math.floor(a/65536)),d=(a=d+r+65535)-65536*(r=Math.floor(a/65536)),f=(a=f+r+65535)-65536*(r=Math.floor(a/65536)),g=(a=g+r+65535)-65536*(r=Math.floor(a/65536)),m=(a=m+r+65535)-65536*(r=Math.floor(a/65536)),k=(a=k+r+65535)-65536*(r=Math.floor(a/65536)),b=(a=b+r+65535)-65536*(r=Math.floor(a/65536)),_=(a=_+r+65535)-65536*(r=Math.floor(a/65536)),y=(a=y+r+65535)-65536*(r=Math.floor(a/65536)),t+=r-1+37*(r-1),e[0]=t,e[1]=s,e[2]=o,e[3]=c,e[4]=h,e[5]=u,e[6]=l,e[7]=p,e[8]=d,e[9]=f,e[10]=g,e[11]=m,e[12]=k,e[13]=b,e[14]=_,e[15]=y}function p(e,i){l(e,i,i)}function d(e,i,n){for(var a,r=~(n-1),t=0;t<16;t++)a=r&(e[t]^i[t]),e[t]^=a,i[t]^=a}function f(e){var i,n,a=1;for(i=0;i<16;i++)n=e[i]+a+65535,a=Math.floor(n/65536),e[i]=n-65536*a;e[0]+=a-1+37*(a-1)}e.exports={gf:i,A:function(e,i,n){for(var a=0;a<16;a++)e[a]=i[a]+n[a]},Z:function(e,i,n){for(var a=0;a<16;a++)e[a]=i[a]-n[a]},M:l,S:p,sel25519:d,pack25519:function(e,n){var a,r,t,s=i(),o=i();for(a=0;a<16;a++)o[a]=n[a];for(f(o),f(o),f(o),r=0;r<2;r++){for(s[0]=o[0]-65517,a=1;a<15;a++)s[a]=o[a]-65535-(s[a-1]>>16&1),s[a-1]&=65535;s[15]=o[15]-32767-(s[14]>>16&1),t=s[15]>>16&1,s[14]&=65535,d(o,s,1-t)}for(a=0;a<16;a++)e[2*a]=255&o[a],e[2*a+1]=o[a]>>8},unpack25519:function(e,i){var n;for(n=0;n<16;n++)e[n]=i[2*n]+(i[2*n+1]<<8);e[15]&=32767},inv25519:function(e,n){var a,r=i();for(a=0;a<16;a++)r[a]=n[a];for(a=253;a>=0;a--)p(r,r),2!==a&&4!==a&&l(r,r,n);for(a=0;a<16;a++)e[a]=r[a]},gf0:a,gf1:r,_9:n,_121665:t,D:s,D2:o,X:c,Y:h,I:u}},3976:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.remove0x=i.add0x=i.isValidHexAddress=i.isValidHexAddressUnmemoized=i.isValidChecksumAddress=i.isValidChecksumAddressUnmemoized=i.getChecksumAddress=i.getChecksumAddressUnmemoized=i.assertIsStrictHexString=i.assertIsHexString=i.isHexChecksumAddress=i.isHexAddress=i.isStrictHexString=i.isHexString=i.HexChecksumAddressStruct=i.HexAddressStruct=i.StrictHexStruct=i.HexStruct=void 0;const a=n(5620),r=n(2955),t=n(2543),s=n(2011),o=/^(?:0x)?[0-9a-f]+$/iu,c=/^0x[0-9a-f]+$/iu,h=/^0x[0-9a-f]{40}$/u,u=/^0x[0-9a-fA-F]{40}$/u;i.HexStruct=(0,a.pattern)((0,a.string)(),o),i.StrictHexStruct=(0,a.pattern)((0,a.string)(),c),i.HexAddressStruct=(0,a.pattern)((0,a.string)(),h),i.HexChecksumAddressStruct=(0,a.pattern)((0,a.string)(),u);const l=e=>"string"==typeof e;function p(e){return l(e)&&o.test(e)}function d(e){return l(e)&&c.test(e)}function f(e){return l(e)&&h.test(e)}function g(e){return l(e)&&u.test(e)}function m(e){(0,s.assert)(g(e),"Invalid hex address.");const i=_(e).toLowerCase(),n=(0,r.keccak_256)(i),{length:a}=i,t=new Array(a);for(let e=0;e<a;e++){const a=1&e,r=n[e>>1],s=0===a?r>>4:15&r;t[e]=s>=8?i[e].toUpperCase():i[e]}return`0x${t.join("")}`}function k(e){return!!g(e)&&(0,i.getChecksumAddress)(e)===e}function b(e){return f(e)||(0,i.isValidChecksumAddress)(e)}function _(e){return e.startsWith("0x")||e.startsWith("0X")?e.substring(2):e}i.isHexString=p,i.isStrictHexString=d,i.isHexAddress=f,i.isHexChecksumAddress=g,i.assertIsHexString=function(e){(0,s.assert)(p(e),"Value must be a hexadecimal string.")},i.assertIsStrictHexString=function(e){(0,s.assert)(d(e),'Value must be a hexadecimal string, starting with "0x".')},i.getChecksumAddressUnmemoized=m,i.getChecksumAddress=(0,t.memoize)(m),i.isValidChecksumAddressUnmemoized=k,i.isValidChecksumAddress=(0,t.memoize)(k),i.isValidHexAddressUnmemoized=b,i.isValidHexAddress=(0,t.memoize)(b),i.add0x=function(e){return e.startsWith("0x")?e:e.startsWith("0X")?`0x${e.substring(2)}`:`0x${e}`},i.remove0x=_},3990:e=>{"use strict";e.exports=JSON.parse('["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ","ひそか","ひそむ","ひたむき","ひだり","ひたる","ひつぎ","ひっこし","ひっし","ひつじゅひん","ひっす","ひつぜん","ぴったり","ぴっちり","ひつよう","ひてい","ひとごみ","ひなまつり","ひなん","ひねる","ひはん","ひびく","ひひょう","ひほう","ひまわり","ひまん","ひみつ","ひめい","ひめじし","ひやけ","ひやす","ひよう","びょうき","ひらがな","ひらく","ひりつ","ひりょう","ひるま","ひるやすみ","ひれい","ひろい","ひろう","ひろき","ひろゆき","ひんかく","ひんけつ","ひんこん","ひんしゅ","ひんそう","ぴんち","ひんぱん","びんぼう","ふあん","ふいうち","ふうけい","ふうせん","ぷうたろう","ふうとう","ふうふ","ふえる","ふおん","ふかい","ふきん","ふくざつ","ふくぶくろ","ふこう","ふさい","ふしぎ","ふじみ","ふすま","ふせい","ふせぐ","ふそく","ぶたにく","ふたん","ふちょう","ふつう","ふつか","ふっかつ","ふっき","ふっこく","ぶどう","ふとる","ふとん","ふのう","ふはい","ふひょう","ふへん","ふまん","ふみん","ふめつ","ふめん","ふよう","ふりこ","ふりる","ふるい","ふんいき","ぶんがく","ぶんぐ","ふんしつ","ぶんせき","ふんそう","ぶんぽう","へいあん","へいおん","へいがい","へいき","へいげん","へいこう","へいさ","へいしゃ","へいせつ","へいそ","へいたく","へいてん","へいねつ","へいわ","へきが","へこむ","べにいろ","べにしょうが","へらす","へんかん","べんきょう","べんごし","へんさい","へんたい","べんり","ほあん","ほいく","ぼうぎょ","ほうこく","ほうそう","ほうほう","ほうもん","ほうりつ","ほえる","ほおん","ほかん","ほきょう","ぼきん","ほくろ","ほけつ","ほけん","ほこう","ほこる","ほしい","ほしつ","ほしゅ","ほしょう","ほせい","ほそい","ほそく","ほたて","ほたる","ぽちぶくろ","ほっきょく","ほっさ","ほったん","ほとんど","ほめる","ほんい","ほんき","ほんけ","ほんしつ","ほんやく","まいにち","まかい","まかせる","まがる","まける","まこと","まさつ","まじめ","ますく","まぜる","まつり","まとめ","まなぶ","まぬけ","まねく","まほう","まもる","まゆげ","まよう","まろやか","まわす","まわり","まわる","まんが","まんきつ","まんぞく","まんなか","みいら","みうち","みえる","みがく","みかた","みかん","みけん","みこん","みじかい","みすい","みすえる","みせる","みっか","みつかる","みつける","みてい","みとめる","みなと","みなみかさい","みねらる","みのう","みのがす","みほん","みもと","みやげ","みらい","みりょく","みわく","みんか","みんぞく","むいか","むえき","むえん","むかい","むかう","むかえ","むかし","むぎちゃ","むける","むげん","むさぼる","むしあつい","むしば","むじゅん","むしろ","むすう","むすこ","むすぶ","むすめ","むせる","むせん","むちゅう","むなしい","むのう","むやみ","むよう","むらさき","むりょう","むろん","めいあん","めいうん","めいえん","めいかく","めいきょく","めいさい","めいし","めいそう","めいぶつ","めいれい","めいわく","めぐまれる","めざす","めした","めずらしい","めだつ","めまい","めやす","めんきょ","めんせき","めんどう","もうしあげる","もうどうけん","もえる","もくし","もくてき","もくようび","もちろん","もどる","もらう","もんく","もんだい","やおや","やける","やさい","やさしい","やすい","やすたろう","やすみ","やせる","やそう","やたい","やちん","やっと","やっぱり","やぶる","やめる","ややこしい","やよい","やわらかい","ゆうき","ゆうびんきょく","ゆうべ","ゆうめい","ゆけつ","ゆしゅつ","ゆせん","ゆそう","ゆたか","ゆちゃく","ゆでる","ゆにゅう","ゆびわ","ゆらい","ゆれる","ようい","ようか","ようきゅう","ようじ","ようす","ようちえん","よかぜ","よかん","よきん","よくせい","よくぼう","よけい","よごれる","よさん","よしゅう","よそう","よそく","よっか","よてい","よどがわく","よねつ","よやく","よゆう","よろこぶ","よろしい","らいう","らくがき","らくご","らくさつ","らくだ","らしんばん","らせん","らぞく","らたい","らっか","られつ","りえき","りかい","りきさく","りきせつ","りくぐん","りくつ","りけん","りこう","りせい","りそう","りそく","りてん","りねん","りゆう","りゅうがく","りよう","りょうり","りょかん","りょくちゃ","りょこう","りりく","りれき","りろん","りんご","るいけい","るいさい","るいじ","るいせき","るすばん","るりがわら","れいかん","れいぎ","れいせい","れいぞうこ","れいとう","れいぼう","れきし","れきだい","れんあい","れんけい","れんこん","れんさい","れんしゅう","れんぞく","れんらく","ろうか","ろうご","ろうじん","ろうそく","ろくが","ろこつ","ろじうら","ろしゅつ","ろせん","ろてん","ろめん","ろれつ","ろんぎ","ろんぱ","ろんぶん","ろんり","わかす","わかめ","わかやま","わかれる","わしつ","わじまし","わすれもの","わらう","われる"]')},4054:(e,i,n)=>{"use strict";const a=n(5926);e.exports=(e,i)=>new a(e,i).set.map(e=>e.map(e=>e.value).join(" ").trim().split(" "))},4058:(e,i,n)=>{"use strict";const a=n(3321);e.exports=(e,i)=>{const n=a(e,i);return n&&n.prerelease.length?n.prerelease:null}},4110:e=>{"use strict";e.exports=JSON.parse('["的","一","是","在","不","了","有","和","人","這","中","大","為","上","個","國","我","以","要","他","時","來","用","們","生","到","作","地","於","出","就","分","對","成","會","可","主","發","年","動","同","工","也","能","下","過","子","說","產","種","面","而","方","後","多","定","行","學","法","所","民","得","經","十","三","之","進","著","等","部","度","家","電","力","裡","如","水","化","高","自","二","理","起","小","物","現","實","加","量","都","兩","體","制","機","當","使","點","從","業","本","去","把","性","好","應","開","它","合","還","因","由","其","些","然","前","外","天","政","四","日","那","社","義","事","平","形","相","全","表","間","樣","與","關","各","重","新","線","內","數","正","心","反","你","明","看","原","又","麼","利","比","或","但","質","氣","第","向","道","命","此","變","條","只","沒","結","解","問","意","建","月","公","無","系","軍","很","情","者","最","立","代","想","已","通","並","提","直","題","黨","程","展","五","果","料","象","員","革","位","入","常","文","總","次","品","式","活","設","及","管","特","件","長","求","老","頭","基","資","邊","流","路","級","少","圖","山","統","接","知","較","將","組","見","計","別","她","手","角","期","根","論","運","農","指","幾","九","區","強","放","決","西","被","幹","做","必","戰","先","回","則","任","取","據","處","隊","南","給","色","光","門","即","保","治","北","造","百","規","熱","領","七","海","口","東","導","器","壓","志","世","金","增","爭","濟","階","油","思","術","極","交","受","聯","什","認","六","共","權","收","證","改","清","美","再","採","轉","更","單","風","切","打","白","教","速","花","帶","安","場","身","車","例","真","務","具","萬","每","目","至","達","走","積","示","議","聲","報","鬥","完","類","八","離","華","名","確","才","科","張","信","馬","節","話","米","整","空","元","況","今","集","溫","傳","土","許","步","群","廣","石","記","需","段","研","界","拉","林","律","叫","且","究","觀","越","織","裝","影","算","低","持","音","眾","書","布","复","容","兒","須","際","商","非","驗","連","斷","深","難","近","礦","千","週","委","素","技","備","半","辦","青","省","列","習","響","約","支","般","史","感","勞","便","團","往","酸","歷","市","克","何","除","消","構","府","稱","太","準","精","值","號","率","族","維","劃","選","標","寫","存","候","毛","親","快","效","斯","院","查","江","型","眼","王","按","格","養","易","置","派","層","片","始","卻","專","狀","育","廠","京","識","適","屬","圓","包","火","住","調","滿","縣","局","照","參","紅","細","引","聽","該","鐵","價","嚴","首","底","液","官","德","隨","病","蘇","失","爾","死","講","配","女","黃","推","顯","談","罪","神","藝","呢","席","含","企","望","密","批","營","項","防","舉","球","英","氧","勢","告","李","台","落","木","幫","輪","破","亞","師","圍","注","遠","字","材","排","供","河","態","封","另","施","減","樹","溶","怎","止","案","言","士","均","武","固","葉","魚","波","視","僅","費","緊","愛","左","章","早","朝","害","續","輕","服","試","食","充","兵","源","判","護","司","足","某","練","差","致","板","田","降","黑","犯","負","擊","范","繼","興","似","餘","堅","曲","輸","修","故","城","夫","夠","送","筆","船","佔","右","財","吃","富","春","職","覺","漢","畫","功","巴","跟","雖","雜","飛","檢","吸","助","昇","陽","互","初","創","抗","考","投","壞","策","古","徑","換","未","跑","留","鋼","曾","端","責","站","簡","述","錢","副","盡","帝","射","草","衝","承","獨","令","限","阿","宣","環","雙","請","超","微","讓","控","州","良","軸","找","否","紀","益","依","優","頂","礎","載","倒","房","突","坐","粉","敵","略","客","袁","冷","勝","絕","析","塊","劑","測","絲","協","訴","念","陳","仍","羅","鹽","友","洋","錯","苦","夜","刑","移","頻","逐","靠","混","母","短","皮","終","聚","汽","村","雲","哪","既","距","衛","停","烈","央","察","燒","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","遊","久","菜","味","舊","模","湖","貨","損","預","阻","毫","普","穩","乙","媽","植","息","擴","銀","語","揮","酒","守","拿","序","紙","醫","缺","雨","嗎","針","劉","啊","急","唱","誤","訓","願","審","附","獲","茶","鮮","糧","斤","孩","脫","硫","肥","善","龍","演","父","漸","血","歡","械","掌","歌","沙","剛","攻","謂","盾","討","晚","粒","亂","燃","矛","乎","殺","藥","寧","魯","貴","鐘","煤","讀","班","伯","香","介","迫","句","豐","培","握","蘭","擔","弦","蛋","沉","假","穿","執","答","樂","誰","順","煙","縮","徵","臉","喜","松","腳","困","異","免","背","星","福","買","染","井","概","慢","怕","磁","倍","祖","皇","促","靜","補","評","翻","肉","踐","尼","衣","寬","揚","棉","希","傷","操","垂","秋","宜","氫","套","督","振","架","亮","末","憲","慶","編","牛","觸","映","雷","銷","詩","座","居","抓","裂","胞","呼","娘","景","威","綠","晶","厚","盟","衡","雞","孫","延","危","膠","屋","鄉","臨","陸","顧","掉","呀","燈","歲","措","束","耐","劇","玉","趙","跳","哥","季","課","凱","胡","額","款","紹","卷","齊","偉","蒸","殖","永","宗","苗","川","爐","岩","弱","零","楊","奏","沿","露","桿","探","滑","鎮","飯","濃","航","懷","趕","庫","奪","伊","靈","稅","途","滅","賽","歸","召","鼓","播","盤","裁","險","康","唯","錄","菌","純","借","糖","蓋","橫","符","私","努","堂","域","槍","潤","幅","哈","竟","熟","蟲","澤","腦","壤","碳","歐","遍","側","寨","敢","徹","慮","斜","薄","庭","納","彈","飼","伸","折","麥","濕","暗","荷","瓦","塞","床","築","惡","戶","訪","塔","奇","透","梁","刀","旋","跡","卡","氯","遇","份","毒","泥","退","洗","擺","灰","彩","賣","耗","夏","擇","忙","銅","獻","硬","予","繁","圈","雪","函","亦","抽","篇","陣","陰","丁","尺","追","堆","雄","迎","泛","爸","樓","避","謀","噸","野","豬","旗","累","偏","典","館","索","秦","脂","潮","爺","豆","忽","托","驚","塑","遺","愈","朱","替","纖","粗","傾","尚","痛","楚","謝","奮","購","磨","君","池","旁","碎","骨","監","捕","弟","暴","割","貫","殊","釋","詞","亡","壁","頓","寶","午","塵","聞","揭","炮","殘","冬","橋","婦","警","綜","招","吳","付","浮","遭","徐","您","搖","谷","贊","箱","隔","訂","男","吹","園","紛","唐","敗","宋","玻","巨","耕","坦","榮","閉","灣","鍵","凡","駐","鍋","救","恩","剝","凝","鹼","齒","截","煉","麻","紡","禁","廢","盛","版","緩","淨","睛","昌","婚","涉","筒","嘴","插","岸","朗","莊","街","藏","姑","貿","腐","奴","啦","慣","乘","夥","恢","勻","紗","扎","辯","耳","彪","臣","億","璃","抵","脈","秀","薩","俄","網","舞","店","噴","縱","寸","汗","掛","洪","賀","閃","柬","爆","烯","津","稻","牆","軟","勇","像","滾","厘","蒙","芳","肯","坡","柱","盪","腿","儀","旅","尾","軋","冰","貢","登","黎","削","鑽","勒","逃","障","氨","郭","峰","幣","港","伏","軌","畝","畢","擦","莫","刺","浪","秘","援","株","健","售","股","島","甘","泡","睡","童","鑄","湯","閥","休","匯","舍","牧","繞","炸","哲","磷","績","朋","淡","尖","啟","陷","柴","呈","徒","顏","淚","稍","忘","泵","藍","拖","洞","授","鏡","辛","壯","鋒","貧","虛","彎","摩","泰","幼","廷","尊","窗","綱","弄","隸","疑","氏","宮","姐","震","瑞","怪","尤","琴","循","描","膜","違","夾","腰","緣","珠","窮","森","枝","竹","溝","催","繩","憶","邦","剩","幸","漿","欄","擁","牙","貯","禮","濾","鈉","紋","罷","拍","咱","喊","袖","埃","勤","罰","焦","潛","伍","墨","欲","縫","姓","刊","飽","仿","獎","鋁","鬼","麗","跨","默","挖","鏈","掃","喝","袋","炭","污","幕","諸","弧","勵","梅","奶","潔","災","舟","鑑","苯","訟","抱","毀","懂","寒","智","埔","寄","屆","躍","渡","挑","丹","艱","貝","碰","拔","爹","戴","碼","夢","芽","熔","赤","漁","哭","敬","顆","奔","鉛","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","倉","魏","銳","曉","氮","兼","隱","礙","赫","撥","忠","肅","缸","牽","搶","博","巧","殼","兄","杜","訊","誠","碧","祥","柯","頁","巡","矩","悲","灌","齡","倫","票","尋","桂","鋪","聖","恐","恰","鄭","趣","抬","荒","騰","貼","柔","滴","猛","闊","輛","妻","填","撤","儲","簽","鬧","擾","紫","砂","遞","戲","吊","陶","伐","餵","療","瓶","婆","撫","臂","摸","忍","蝦","蠟","鄰","胸","鞏","擠","偶","棄","槽","勁","乳","鄧","吉","仁","爛","磚","租","烏","艦","伴","瓜","淺","丙","暫","燥","橡","柳","迷","暖","牌","秧","膽","詳","簧","踏","瓷","譜","呆","賓","糊","洛","輝","憤","競","隙","怒","粘","乃","緒","肩","籍","敏","塗","熙","皆","偵","懸","掘","享","糾","醒","狂","鎖","淀","恨","牲","霸","爬","賞","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鴨","趨","鳳","晨","畜","輩","秩","卵","署","梯","炎","灘","棋","驅","篩","峽","冒","啥","壽","譯","浸","泉","帽","遲","矽","疆","貸","漏","稿","冠","嫩","脅","芯","牢","叛","蝕","奧","鳴","嶺","羊","憑","串","塘","繪","酵","融","盆","錫","廟","籌","凍","輔","攝","襲","筋","拒","僚","旱","鉀","鳥","漆","沈","眉","疏","添","棒","穗","硝","韓","逼","扭","僑","涼","挺","碗","栽","炒","杯","患","餾","勸","豪","遼","勃","鴻","旦","吏","拜","狗","埋","輥","掩","飲","搬","罵","辭","勾","扣","估","蔣","絨","霧","丈","朵","姆","擬","宇","輯","陝","雕","償","蓄","崇","剪","倡","廳","咬","駛","薯","刷","斥","番","賦","奉","佛","澆","漫","曼","扇","鈣","桃","扶","仔","返","俗","虧","腔","鞋","棱","覆","框","悄","叔","撞","騙","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","脹","諧","拋","黴","桑","崗","嘛","衰","盜","滲","臟","賴","湧","甜","曹","閱","肌","哩","厲","烴","緯","毅","昨","偽","症","煮","嘆","釘","搭","莖","籠","酷","偷","弓","錐","恆","傑","坑","鼻","翼","綸","敘","獄","逮","罐","絡","棚","抑","膨","蔬","寺","驟","穆","冶","枯","冊","屍","凸","紳","坯","犧","焰","轟","欣","晉","瘦","禦","錠","錦","喪","旬","鍛","壟","搜","撲","邀","亭","酯","邁","舒","脆","酶","閒","憂","酚","頑","羽","漲","卸","仗","陪","闢","懲","杭","姚","肚","捉","飄","漂","昆","欺","吾","郎","烷","汁","呵","飾","蕭","雅","郵","遷","燕","撒","姻","赴","宴","煩","債","帳","斑","鈴","旨","醇","董","餅","雛","姿","拌","傅","腹","妥","揉","賢","拆","歪","葡","胺","丟","浩","徽","昂","墊","擋","覽","貪","慰","繳","汪","慌","馮","諾","姜","誼","兇","劣","誣","耀","昏","躺","盈","騎","喬","溪","叢","盧","抹","悶","諮","刮","駕","纜","悟","摘","鉺","擲","頗","幻","柄","惠","慘","佳","仇","臘","窩","滌","劍","瞧","堡","潑","蔥","罩","霍","撈","胎","蒼","濱","倆","捅","湘","砍","霞","邵","萄","瘋","淮","遂","熊","糞","烘","宿","檔","戈","駁","嫂","裕","徙","箭","捐","腸","撐","曬","辨","殿","蓮","攤","攪","醬","屏","疫","哀","蔡","堵","沫","皺","暢","疊","閣","萊","敲","轄","鉤","痕","壩","巷","餓","禍","丘","玄","溜","曰","邏","彭","嘗","卿","妨","艇","吞","韋","怨","矮","歇"]')},4133:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.SHA2=void 0;const a=n(1371),r=n(9161);class t extends r.Hash{constructor(e,i,n,a){super(),this.blockLen=e,this.outputLen=i,this.padOffset=n,this.isLE=a,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=(0,r.createView)(this.buffer)}update(e){(0,a.exists)(this);const{view:i,buffer:n,blockLen:t}=this,s=(e=(0,r.toBytes)(e)).length;for(let a=0;a<s;){const o=Math.min(t-this.pos,s-a);if(o===t){const i=(0,r.createView)(e);for(;t<=s-a;a+=t)this.process(i,a);continue}n.set(e.subarray(a,a+o),this.pos),this.pos+=o,a+=o,this.pos===t&&(this.process(i,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){(0,a.exists)(this),(0,a.output)(e,this),this.finished=!0;const{buffer:i,view:n,blockLen:t,isLE:s}=this;let{pos:o}=this;i[o++]=128,this.buffer.subarray(o).fill(0),this.padOffset>t-o&&(this.process(n,0),o=0);for(let e=o;e<t;e++)i[e]=0;!function(e,i,n,a){if("function"==typeof e.setBigUint64)return e.setBigUint64(i,n,a);const r=BigInt(32),t=BigInt(4294967295),s=Number(n>>r&t),o=Number(n&t),c=a?4:0,h=a?0:4;e.setUint32(i+c,s,a),e.setUint32(i+h,o,a)}(n,t-8,BigInt(8*this.length),s),this.process(n,0);const c=(0,r.createView)(e),h=this.outputLen;if(h%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const u=h/4,l=this.get();if(u>l.length)throw new Error("_sha2: outputLen bigger than state");for(let e=0;e<u;e++)c.setUint32(4*e,l[e],s)}digest(){const{buffer:e,outputLen:i}=this;this.digestInto(e);const n=e.slice(0,i);return this.destroy(),n}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:i,buffer:n,length:a,finished:r,destroyed:t,pos:s}=this;return e.length=a,e.pos=s,e.finished=r,e.destroyed=t,a%i&&e.buffer.set(n),e}}i.SHA2=t},4180:function(e,i){"use strict";var n,a,r=this&&this.__classPrivateFieldGet||function(e,i,n,a){if("a"===n&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof i?e!==i||!a:!i.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?a:"a"===n?a.call(e):a?a.value:i.get(e)},t=this&&this.__classPrivateFieldSet||function(e,i,n,a,r){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!r)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof i?e!==i||!r:!i.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?r.call(e,n):r?r.value=n:i.set(e,n),n};Object.defineProperty(i,"__esModule",{value:!0}),i.FrozenSet=i.FrozenMap=void 0;class s{get size(){return r(this,n,"f").size}[(n=new WeakMap,Symbol.iterator)](){return r(this,n,"f")[Symbol.iterator]()}constructor(e){n.set(this,void 0),t(this,n,new Map(e),"f"),Object.freeze(this)}entries(){return r(this,n,"f").entries()}forEach(e,i){return r(this,n,"f").forEach((n,a,r)=>e.call(i,n,a,this))}get(e){return r(this,n,"f").get(e)}has(e){return r(this,n,"f").has(e)}keys(){return r(this,n,"f").keys()}values(){return r(this,n,"f").values()}toString(){return`FrozenMap(${this.size}) {${this.size>0?` ${[...this.entries()].map(([e,i])=>`${String(e)} => ${String(i)}`).join(", ")} `:""}}`}}i.FrozenMap=s;class o{get size(){return r(this,a,"f").size}[(a=new WeakMap,Symbol.iterator)](){return r(this,a,"f")[Symbol.iterator]()}constructor(e){a.set(this,void 0),t(this,a,new Set(e),"f"),Object.freeze(this)}entries(){return r(this,a,"f").entries()}forEach(e,i){return r(this,a,"f").forEach((n,a,r)=>e.call(i,n,a,this))}has(e){return r(this,a,"f").has(e)}keys(){return r(this,a,"f").keys()}values(){return r(this,a,"f").values()}toString(){return`FrozenSet(${this.size}) {${this.size>0?` ${[...this.values()].map(e=>String(e)).join(", ")} `:""}}`}}i.FrozenSet=o,Object.freeze(s),Object.freeze(s.prototype),Object.freeze(o),Object.freeze(o.prototype)},4194:e=>{var i,n,a=(()=>{for(var e=new Uint8Array(128),i=0;i<64;i++)e[i<26?i+65:i<52?i+71:i<62?i-4:4*i-205]=i;return i=>{for(var n=i.length,a=new Uint8Array(3*(n-("="==i[n-1])-("="==i[n-2]))/4|0),r=0,t=0;r<n;){var s=e[i.charCodeAt(r++)],o=e[i.charCodeAt(r++)],c=e[i.charCodeAt(r++)],h=e[i.charCodeAt(r++)];a[t++]=s<<2|o>>4,a[t++]=o<<4|c>>2,a[t++]=c<<6|h}return a}})(),r=(i={"wasm-binary:./sha256.wat"(e,i){i.exports=a("AGFzbQEAAAABNAVgAX8Bf2AIf39/f39/f38AYAR/f39/AX9gEX9/f39/f39/f39/f39/f39/AGAEf39/fwADBgUAAQIDBAUDAQABBikIfwFBAAt/AUEAC38BQQALfwFBAAt/AUEAC38BQQALfwFBAAt/AUEACwcTAgZtZW1vcnkCAAZzaGEyNTYABAreFwUZACAAQf+B/AdxQQh4IABBgP6DeHFBCHdyC7wDAQZ/IwQjBXEjBEF/cyMGcXMhCiMAIwFxIwAjAnFzIwEjAnFzIQsjAEECeCMAQQ14cyMAQRZ4cyEMIwRBBngjBEELeHMjBEEZeHMhDSMHIApqIA1qIABqIARqIQggDCALaiEJIwMgCGokByAIIAlqJAMjByMEcSMHQX9zIwVxcyEKIwMjAHEjAyMBcXMjACMBcXMhCyMDQQJ4IwNBDXhzIwNBFnhzIQwjB0EGeCMHQQt4cyMHQRl4cyENIwYgCmogDWogAWogBWohCCAMIAtqIQkjAiAIaiQGIAggCWokAiMGIwdxIwZBf3MjBHFzIQojAiMDcSMCIwBxcyMDIwBxcyELIwJBAngjAkENeHMjAkEWeHMhDCMGQQZ4IwZBC3hzIwZBGXhzIQ0jBSAKaiANaiACaiAGaiEIIAwgC2ohCSMBIAhqJAUgCCAJaiQBIwUjBnEjBUF/cyMHcXMhCiMBIwJxIwEjA3FzIwIjA3FzIQsjAUECeCMBQQ14cyMBQRZ4cyEMIwVBBngjBUELeHMjBUEZeHMhDSMEIApqIA1qIANqIAdqIQggDCALaiEJIwAgCGokBCAIIAlqJAALKwAgAEEReCAAQRN4cyAAQQp2cyABaiACQQd4IAJBEnhzIAJBA3ZzIANqagvLCwEwfyAAKAJoRQRAIABB58yn0AY2AgAgAEGF3Z7bezYCBCAAQfLmu+MDNgIIIABBuuq/qno2AgwgAEH/pLmIBTYCECAAQYzRldh5NgIUIABBq7OP/AE2AhggAEGZmoPfBTYCHCAAQQE2AmgLIAAoAgAkACAAKAIEJAEgACgCCCQCIAAoAgwkAyAAKAIQJAQgACgCFCQFIAAoAhgkBiAAKAIcJAcgARAAIQEgAhAAIQIgAxAAIQMgBBAAIQQgBRAAIQUgBhAAIQYgBxAAIQcgCBAAIQggCRAAIQkgChAAIQogCxAAIQsgDBAAIQwgDRAAIQ0gDhAAIQ4gDxAAIQ8gEBAAIRAgASACIAMgBEGY36iUBEGRid2JB0HP94Oue0Glt9fNfhABIAUgBiAHIAhB24TbygNB8aPEzwVBpIX+kXlB1b3x2HoQASAJIAogCyAMQZjVnsB9QYG2jZQBQb6LxqECQcP7sagFEAEgDSAOIA8gEEH0uvmVB0H+4/qGeEGnjfDeeUH04u+MfBABIA8gCiACIAEQAiEBIBAgCyADIAIQAiECIAEgDCAEIAMQAiEDIAIgDSAFIAQQAiEEIAMgDiAGIAUQAiEFIAQgDyAHIAYQAiEGIAUgECAIIAcQAiEHIAYgASAJIAgQAiEIIAcgAiAKIAkQAiEJIAggAyALIAoQAiEKIAkgBCAMIAsQAiELIAogBSANIAwQAiEMIAsgBiAOIA0QAiENIAwgByAPIA4QAiEOIA0gCCAQIA8QAiEPIA4gCSABIBAQAiEQIAEgAiADIARBwdPtpH5Bho/5/X5BxruG/gBBzMOyoAIQASAFIAYgByAIQe/YpO8CQaqJ0tMEQdzTwuUFQdqR5rcHEAEgCSAKIAsgDEHSovnBeUHtjMfBekHIz4yAe0HH/+X6exABIA0gDiAPIBBB85eAt3xBx6KerX1B0capNkHn0qShARABIA8gCiACIAEQAiEBIBAgCyADIAIQAiECIAEgDCAEIAMQAiEDIAIgDSAFIAQQAiEEIAMgDiAGIAUQAiEFIAQgDyAHIAYQAiEGIAUgECAIIAcQAiEHIAYgASAJIAgQAiEIIAcgAiAKIAkQAiEJIAggAyALIAoQAiEKIAkgBCAMIAsQAiELIAogBSANIAwQAiEMIAsgBiAOIA0QAiENIAwgByAPIA4QAiEOIA0gCCAQIA8QAiEPIA4gCSABIBAQAiEQIAEgAiADIARBhZXcvQJBuMLs8AJB/Nux6QRBk5rgmQUQASAFIAYgByAIQdTmqagGQbuVqLMHQa6Si454QYXZyJN5EAEgCSAKIAsgDEGh0f+VekHLzOnAekHwlq6SfEGjo7G7fBABIA0gDiAPIBBBmdDLjH1BpIzktH1Bheu4oH9B8MCqgwEQASAPIAogAiABEAIhASAQIAsgAyACEAIhAiABIAwgBCADEAIhAyACIA0gBSAEEAIhBCADIA4gBiAFEAIhBSAEIA8gByAGEAIhBiAFIBAgCCAHEAIhByAGIAEgCSAIEAIhCCAHIAIgCiAJEAIhCSAIIAMgCyAKEAIhCiAJIAQgDCALEAIhCyAKIAUgDSAMEAIhDCALIAYgDiANEAIhDSAMIAcgDyAOEAIhDiANIAggECAPEAIhDyAOIAkgASAQEAIhECABIAIgAyAEQZaCk80BQYjY3fEBQczuoboCQbX5wqUDEAEgBSAGIAcgCEGzmfDIA0HK1OL2BEHPlPPcBUHz37nBBhABIAkgCiALIAxB7oW+pAdB78aVxQdBlPChpnhBiISc5ngQASANIA4gDyAQQfr/+4V5QevZwaJ6QffH5vd7QfLxxbN8EAEgACAAKAIAIwBqNgIAIAAgACgCBCMBajYCBCAAIAAoAggjAmo2AgggACAAKAIMIwNqNgIMIAAgACgCECMEajYCECAAIAAoAhQjBWo2AhQgACAAKAIYIwZqNgIYIAAgACgCHCMHajYCHAuKCAIBfhJ/IAApAyAhBCAEp0E/cSACaiEGIAQgAq18IQQgACAENwMgAkAgACgCKCEHIAAoAiwhCCAAKAIwIQkgACgCNCEKIAAoAjghCyAAKAI8IQwgACgCQCENIAAoAkQhDiAAKAJIIQ8gACgCTCEQIAAoAlAhESAAKAJUIRIgACgCWCETIAAoAlwhFCAAKAJgIRUgACgCZCEWIAZBwABrIgZBAEgNACAAIAcgCCAJIAogCyAMIA0gDiAPIBAgESASIBMgFCAVIBYQAwNAIAEoAgAhByABKAIEIQggASgCCCEJIAEoAgwhCiABKAIQIQsgASgCFCEMIAEoAhghDSABKAIcIQ4gASgCICEPIAEoAiQhECABKAIoIREgASgCLCESIAEoAjAhEyABKAI0IRQgASgCOCEVIAEoAjwhFiABQcAAaiEBIAZBwABrIgZBAEgEQCAAIAc2AiggACAINgIsIAAgCTYCMCAAIAo2AjQgACALNgI4IAAgDDYCPCAAIA02AkAgACAONgJEIAAgDzYCSCAAIBA2AkwgACARNgJQIAAgEjYCVCAAIBM2AlggACAUNgJcIAAgFTYCYCAAIBY2AmQMAgsgACAHIAggCSAKIAsgDCANIA4gDyAQIBEgEiATIBQgFSAWEAMMAAsLIANBAUYEQCAEp0E/cSEGQYABIAZBA3FBA3R0IQUCQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAgBkECdg4PAwQFBgcICQoLDA0ODxABAgsLIAUgFXIhFUEAIQULIAUgFnIhFkEAIQUgACAHIAggCSAKIAsgDCANIA4gDyAQIBEgEiATIBQgFSAWEAMgACAENwMgQQAhB0EAIQhBACEJQQAhCkEAIQtBACEMQQAhDUEAIQ5BACEPQQAhEEEAIRFBACESQQAhE0EAIRRBACEVQQAhFgsgBSAHciEHQQAhBQsgBSAIciEIQQAhBQsgBSAJciEJQQAhBQsgBSAKciEKQQAhBQsgBSALciELQQAhBQsgBSAMciEMQQAhBQsgBSANciENQQAhBQsgBSAOciEOQQAhBQsgBSAPciEPQQAhBQsgBSAQciEQQQAhBQsgBSARciERQQAhBQsgBSASciESQQAhBQsgBSATciETQQAhBQsgBSAUciEUQQAhBQsgBEIdiKcQACEVIARCA4anEAAhFiAAIAcgCCAJIAogCyAMIA0gDiAPIBAgESASIBMgFCAVIBYQAyAAIAAoAgAQADYCACAAIAAoAgQQADYCBCAAIAAoAggQADYCCCAAIAAoAgwQADYCDCAAIAAoAhAQADYCECAAIAAoAhQQADYCFCAAIAAoAhgQADYCGCAAIAAoAhwQADYCHAsL")}},function(){return n||(0,i[Object.keys(i)[0]])((n={exports:{}}).exports,n),n.exports})(),t=new WebAssembly.Module(r);e.exports=e=>new WebAssembly.Instance(t,e).exports},4306:e=>{"use strict";const i=e=>{if(e&&"object"==typeof e&&"cause"in e){if("function"==typeof e.cause){const i=e.cause();return i instanceof Error?i:void 0}return e.cause instanceof Error?e.cause:void 0}},n=(e,a)=>{if(!(e instanceof Error))return"";const r=e.stack||"";if(a.has(e))return r+"\ncauses have become circular...";const t=i(e);return t?(a.add(e),r+"\ncaused by: "+n(t,a)):r},a=(e,n,r)=>{if(!(e instanceof Error))return"";const t=r?"":e.message||"";if(n.has(e))return t+": ...";const s=i(e);if(s){n.add(e);const i="cause"in e&&"function"==typeof e.cause;return t+(i?"":": ")+a(s,n,i)}return t};e.exports={findCauseByReference:(e,n)=>{if(!e||!n)return;if(!(e instanceof Error))return;if(!(n.prototype instanceof Error)&&n!==Error)return;const a=new Set;let r=e;for(;r&&!a.has(r);){if(a.add(r),r instanceof n)return r;r=i(r)}},getErrorCause:i,stackWithCauses:e=>n(e,new Set),messageWithCauses:e=>a(e,new Set)}},4309:(e,i,n)=>{const a=n(6889),r=n(5682),t="undefined"!=typeof WebAssembly&&n(4194)({imports:{debug:{log(...e){console.log(...e.map(e=>(e>>>0).toString(16).padStart(8,"0")))},log_tee:e=>(console.log((e>>>0).toString(16).padStart(8,"0")),e)}}});let s=0;const o=[];e.exports=u;const c=e.exports.SHA256_BYTES=32,h=108;function u(){if(!(this instanceof u))return new u;if(!t)throw new Error("WASM not loaded. Wait for Sha256.ready(cb)");o.length||(o.push(s),s+=h),this.finalized=!1,this.digestLength=c,this.pointer=o.pop(),this.pos=0,this._memory=new Uint8Array(t.memory.buffer),this._memory.fill(0,this.pointer,this.pointer+h),this.pointer+this.digestLength>this._memory.length&&this._realloc(this.pointer+h)}function l(e){if(!(this instanceof l))return new l(e);this.pad=r.alloc(64),this.inner=u(),this.outer=u();const i=r.alloc(32);e.byteLength>64&&(u().update(e).digest(i),e=i),this.pad.fill(54);for(let i=0;i<e.byteLength;i++)this.pad[i]^=e[i];this.inner.update(this.pad),this.pad.fill(92);for(let i=0;i<e.byteLength;i++)this.pad[i]^=e[i];this.outer.update(this.pad),this.pad.fill(0),i.fill(0)}function p(){}u.prototype._realloc=function(e){t.memory.grow(Math.max(0,Math.ceil(Math.abs(e-this._memory.length)/65536))),this._memory=new Uint8Array(t.memory.buffer)},u.prototype.update=function(e,i){a(!1===this.finalized,"Hash instance finalized"),s%4!=0&&(s+=4-s%4),a(s%4==0,"input shoud be aligned for int32");const[n,o]=function(e,i){var n=r.from(e,i);return[n,n.byteLength]}(e,i);return a(n instanceof Uint8Array,"input must be Uint8Array or Buffer"),s+o>this._memory.length&&this._realloc(s+e.length),this._memory.fill(0,s,s+(o+64-1&-64)-64),this._memory.set(n.subarray(0,64-this.pos),this.pointer+40+this.pos),this._memory.set(n.subarray(64-this.pos),s),this.pos=this.pos+o&63,t.sha256(this.pointer,s,o,0),this},u.prototype.digest=function(e,i=0){a(!1===this.finalized,"Hash instance finalized"),this.finalized=!0,o.push(this.pointer);const n=this.pointer+40+this.pos;this._memory.fill(0,n,this.pointer+40+64),t.sha256(this.pointer,s,0,1);const c=this._memory.subarray(this.pointer,this.pointer+this.digestLength);if(!e)return c;if("string"==typeof e)return r.toString(c,e);a(e instanceof Uint8Array,"output must be Uint8Array or Buffer"),a(e.byteLength>=this.digestLength+i,"output must have at least 'SHA256_BYTES' bytes remaining");for(let n=0;n<this.digestLength;n++)e[n+i]=c[n];return e},u.WASM=t,u.WASM_SUPPORTED="undefined"!=typeof WebAssembly,u.ready=function(e){return e||(e=p),t?(e(),Promise.resolve()):e(new Error("WebAssembly not supported"))},u.prototype.ready=u.ready,l.prototype.update=function(e,i){return this.inner.update(e,i),this},l.prototype.digest=function(e,i=0){return this.outer.update(this.inner.digest()),this.outer.digest(e,i)},u.HMAC=l},4316:(e,i,n)=>{"use strict";const a=n(2944);e.exports=(e,i,n)=>a(e,i,">",n)},4503:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.getBIP44CoinType=i.validateNetwork=i.isWebCryptoSupported=i.numberToUint32=i.validateCurve=i.mnemonicPhraseToBytes=i.getFingerprint=i.encodeBase58check=i.decodeBase58check=i.validateBytes=i.getBytesUnsafe=i.getBytes=i.isValidInteger=i.isValidBytesKey=i.nullableHexStringToBytes=i.hexStringToBytes=i.isHardened=i.isValidBIP32PathSegment=i.isValidBIP32Index=i.validateBIP32Index=i.getBIP32NodeToken=i.getUnhardenedBIP32NodeToken=i.getHardenedBIP32NodeToken=i.getBIP44CoinTypeToAddressPathTuple=i.getBIP44ChangePathString=i.getBIP44CoinTypePathString=void 0;const a=n(7822),r=n(2367),t=n(3203),s=n(482),o=n(4927),c=n(5162),h=n(2913);function u(e){return d(e),`${l(e)}'`}function l(e){return d(e),`bip32:${e}`}function p(e){if("number"==typeof e)return l(e);if(!e||!Number.isInteger(e.index)||"boolean"!=typeof e.hardened)throw new Error("Invalid BIP-32 index: Must be an object containing the index and whether it is hardened.");return e.hardened?u(e.index):l(e.index)}function d(e){if(!f(e))throw new Error("Invalid BIP-32 index: Must be a non-negative integer.")}function f(e){return k(e)&&e<=o.MAX_BIP_32_INDEX}function g(e){return e instanceof Uint8Array?e:(0,r.hexToBytes)(e)}function m(e,i){if(e.length!==i)return!1;for(const i of e)if(0!==i)return!0;return!1}function k(e){return"number"==typeof e&&Number.isInteger(e)&&e>=0}function b(e,i){if(!m(e,i))throw new Error(`Invalid value: Must be a non-zero ${i}-byte byte array.`)}i.getBIP44CoinTypePathString=function(e){return`m / ${o.BIP44PurposeNodeToken} / ${u(e)}`},i.getBIP44ChangePathString=function(e,i){return`${e} / ${u(i.account??0)} / ${p(i.change??0)}`},i.getBIP44CoinTypeToAddressPathTuple=function({account:e=0,change:i=0,address_index:n}){return[u(e),p(i),p(n)]},i.getHardenedBIP32NodeToken=u,i.getUnhardenedBIP32NodeToken=l,i.getBIP32NodeToken=p,i.validateBIP32Index=d,i.isValidBIP32Index=f,i.isValidBIP32PathSegment=function(e){if("string"!=typeof e)return!1;const i=e.match(o.UNPREFIXED_BIP_32_PATH_REGEX);if(void 0===i?.groups?.index)return!1;const n=parseInt(i.groups.index,10);return k(n)&&n<=o.MAX_UNHARDENED_BIP_32_INDEX},i.isHardened=function(e){return e.endsWith("'")},i.hexStringToBytes=g,i.nullableHexStringToBytes=function(e){if(void 0!==e)return g(e)},i.isValidBytesKey=m,i.isValidInteger=k,i.getBytes=function(e,i){if(e instanceof Uint8Array)return b(e,i),e;if("string"==typeof e){const n=(0,r.hexToBytes)(e);return b(n,i),n}throw new Error("Invalid value: Expected an instance of Uint8Array or hexadecimal string.")},i.getBytesUnsafe=function e(i,n){if(i instanceof Uint8Array)return(0,r.assert)(i.length===n,`Invalid value: Must be a ${n}-byte byte array.`),i;if("string"==typeof i)return e((0,r.hexToBytes)(i),n);throw new Error("Invalid value: Expected an instance of Uint8Array or hexadecimal string.")},i.validateBytes=b,i.decodeBase58check=e=>{const i=(0,t.base58check)(c.sha256);try{return i.decode(e)}catch{throw new Error("Invalid extended key: Value is not base58-encoded, or the checksum is invalid.")}},i.encodeBase58check=e=>(0,t.base58check)(c.sha256).encode(e),i.getFingerprint=(e,i)=>{if(!m(e,i))throw new Error(`Invalid public key: The key must be a ${i}-byte, non-zero byte array.`);const n=(0,c.ripemd160)((0,c.sha256)(e));return(0,r.createDataView)(n).getUint32(0,!1)},i.mnemonicPhraseToBytes=function(e){const i=e.split(" ").map(e=>{const i=a.wordlist.indexOf(e);return(0,r.assert)(-1!==i,`Invalid mnemonic phrase: Unknown word "${e}".`),i});return new Uint8Array(new Uint16Array(i).buffer)},i.validateCurve=function(e){if(!e||"string"!=typeof e)throw new Error("Invalid curve: Must specify a curve.");if(!Object.keys(h.curves).includes(e))throw new Error(`Invalid curve: Only the following curves are supported: ${Object.keys(h.curves).join(", ")}.`)},i.numberToUint32=function(e,i=!1){const n=new Uint8Array(4);return(0,r.createDataView)(n).setUint32(0,e,i),n},i.isWebCryptoSupported=function(){return Boolean(globalThis.crypto?.subtle)},i.validateNetwork=function(e){if(void 0!==e){if("string"!=typeof e)throw new Error("Invalid network: Must be a string if specified.");if(!["mainnet","testnet"].includes(e))throw new Error('Invalid network: Must be either "mainnet" or "testnet" if specified.')}},i.getBIP44CoinType=function(e){const i=e[s.BIP_44_COIN_TYPE_DEPTH].split(":")[1]?.replace("'","");(0,r.assert)(i,"Invalid derivation path: Coin type is not specified.");const n=Number.parseInt(i,10);return(0,r.assert)(k(n),"Invalid derivation path: Coin type is not a valid integer."),n}},4533:function(e,i,n){"use strict";var a,r,t,s,o=this&&this.__classPrivateFieldGet||function(e,i,n,a){if("a"===n&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof i?e!==i||!a:!i.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?a:"a"===n?a.call(e):a?a.value:i.get(e)},c=this&&this.__classPrivateFieldSet||function(e,i,n,a,r){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!r)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof i?e!==i||!r:!i.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?r.call(e,n):r?r.value=n:i.set(e,n),n};Object.defineProperty(i,"__esModule",{value:!0}),i.deriveChildNode=i.validateRootIndex=i.validateMasterParentFingerprint=i.validateParentFingerprint=i.validateBIP32Depth=i.SLIP10Node=void 0;const h=n(2367),u=n(4927),l=n(2913),p=n(823),d=n(1603),f=n(3144),g=n(9440),m=n(6383),k=n(4503);class b{static async fromJSON(e,i){return a.fromExtendedKey(e,i)}static async fromExtendedKey(e,i){if("string"==typeof e){const n=(0,g.decodeExtendedKey)(e),{chainCode:r,depth:t,parentFingerprint:s,index:o}=n;if("private"===n.type){const{privateKey:e}=n;return a.fromExtendedKey({depth:t,parentFingerprint:s,index:o,privateKey:e,chainCode:r,curve:"secp256k1"},i)}const{publicKey:c}=n;return a.fromExtendedKey({depth:t,parentFingerprint:s,index:o,publicKey:c,chainCode:r,curve:"secp256k1"},i)}const{depth:n,masterFingerprint:t,parentFingerprint:s,index:c,network:p,privateKey:d,publicKey:f,chainCode:b,curve:z,guard:I}=e,E=(0,k.getBytes)(b,u.BYTES_KEY_LENGTH);(0,k.validateCurve)(z),_(n),(0,k.validateBIP32Index)(c),A(c,n),(0,k.validateNetwork)(p),y(s,n),v(t,s,n);const j=(0,l.getCurveByName)(z);if(d){const e=(0,k.getBytesUnsafe)(d,j.privateKeyLength);(0,h.assert)(j.isValidPrivateKey(e),`Invalid private key: Value is not a valid ${z} private key.`);const u=I===m.PUBLIC_KEY_GUARD&&f?(0,k.getBytes)(f,j.publicKeyLength):void 0;return new a({depth:n,masterFingerprint:t,parentFingerprint:s,index:c,network:p,chainCode:E,privateKey:e,publicKey:u,curve:z},i,o(this,a,"f",r))}if(f){const e=(0,k.getBytes)(f,j.publicKeyLength);return new a({depth:n,masterFingerprint:t,parentFingerprint:s,index:c,network:p,chainCode:E,publicKey:e,curve:z},i,o(this,a,"f",r))}throw new Error("Invalid options: Must provide either a private key or a public key.")}static async fromDerivationPath({derivationPath:e,network:i,curve:n},a){if((0,k.validateCurve)(n),!e)throw new Error("Invalid options: Must provide a derivation path.");if(0===e.length)throw new Error("Invalid derivation path: May not specify an empty derivation path.");const r=await(0,f.getDerivationPathWithSeed)({path:e,curve:n},a);return await(0,p.deriveKeyFromPath)({path:r,depth:e.length-1,network:i,curve:n},a)}static async fromSeed({derivationPath:e,network:i,curve:n},a){if((0,k.validateCurve)(n),"ed25519Bip32"===n)throw new Error('Invalid curve: The curve "ed25519Bip32" is not supported by the `fromSeed` function.');if(!e)throw new Error("Invalid options: Must provide a derivation path.");if(0===e.length)throw new Error("Invalid derivation path: May not specify an empty derivation path.");return await(0,p.deriveKeyFromPath)({path:e,depth:e.length-1,network:i,curve:n},a)}constructor({depth:e,masterFingerprint:i,parentFingerprint:n,index:u,network:l="mainnet",chainCode:p,privateKey:d,publicKey:f,curve:g},m={},k){t.set(this,void 0),s.set(this,void 0),(0,h.assert)(k===o(a,a,"f",r),"SLIP10Node can only be constructed using `SLIP10Node.fromJSON`, `SLIP10Node.fromExtendedKey`, `SLIP10Node.fromDerivationPath`, or `SLIP10Node.fromSeed`."),(0,h.assert)(void 0!==d||void 0!==f,"SLIP10Node requires either a private key or a public key to be set."),this.depth=e,this.masterFingerprint=i,this.parentFingerprint=n,this.index=u,this.network=l,this.chainCodeBytes=p,this.privateKeyBytes=d,this.curve=g,c(this,t,f,"f"),c(this,s,m,"f"),Object.freeze(this)}get chainCode(){return(0,h.bytesToHex)(this.chainCodeBytes)}get privateKey(){if(this.privateKeyBytes)return(0,h.bytesToHex)(this.privateKeyBytes)}get publicKey(){return(0,h.bytesToHex)(this.publicKeyBytes)}get publicKeyBytes(){return void 0!==o(this,t,"f")||((0,h.assert)(this.privateKeyBytes,"Either a private key or public key is required."),c(this,t,(0,l.getCurveByName)(this.curve).getPublicKey(this.privateKeyBytes),"f")),o(this,t,"f")}get compressedPublicKeyBytes(){return(0,l.getCurveByName)(this.curve).compressPublicKey(this.publicKeyBytes)}get compressedPublicKey(){return(0,h.bytesToHex)(this.compressedPublicKeyBytes)}get address(){if("secp256k1"!==this.curve)throw new Error("Unable to get address for this node: Only secp256k1 is supported.");return(0,h.bytesToHex)((0,d.publicKeyToEthAddress)(this.publicKeyBytes))}get fingerprint(){return(0,k.getFingerprint)(this.compressedPublicKeyBytes,(0,l.getCurveByName)(this.curve).compressedPublicKeyLength)}get extendedKey(){(0,h.assert)("secp256k1"===this.curve,"Unable to get extended key for this node: Only secp256k1 is supported.");const e={depth:this.depth,parentFingerprint:this.parentFingerprint,index:this.index,network:this.network,chainCode:this.chainCodeBytes};return this.privateKeyBytes?(0,g.encodeExtendedKey)({...e,type:"private",privateKey:this.privateKeyBytes}):(0,g.encodeExtendedKey)({...e,type:"public",publicKey:this.publicKeyBytes})}neuter(){return new a({depth:this.depth,masterFingerprint:this.masterFingerprint,parentFingerprint:this.parentFingerprint,index:this.index,chainCode:this.chainCodeBytes,publicKey:this.publicKeyBytes,curve:this.curve,network:this.network},o(this,s,"f"),o(a,a,"f",r))}async derive(e){return await z({path:e,node:this},o(this,s,"f"))}toJSON(){return{depth:this.depth,masterFingerprint:this.masterFingerprint,parentFingerprint:this.parentFingerprint,index:this.index,network:this.network,curve:this.curve,privateKey:this.privateKey,publicKey:this.publicKey,chainCode:this.chainCode}}}function _(e){if(!(0,k.isValidInteger)(e))throw new Error(`Invalid HD tree path depth: The depth must be a positive integer. Received: "${String(e)}".`)}function y(e,i){if(!(0,k.isValidInteger)(e))throw new Error(`Invalid parent fingerprint: The fingerprint must be a positive integer. Received: "${String(e)}".`);if(0===i&&0!==e)throw new Error(`Invalid parent fingerprint: The fingerprint of the root node must be 0. Received: "${String(e)}".`);if(i>0&&0===e)throw new Error(`Invalid parent fingerprint: The fingerprint of a child node must not be 0. Received: "${String(e)}".`)}function v(e,i,n){if(e&&n>=2&&e===i)throw new Error(`Invalid parent fingerprint: The fingerprint of a child node cannot be equal to the master fingerprint. Received: "${String(i)}".`)}function A(e,i){if(0===i&&0!==e)throw new Error(`Invalid index: The index of the root node must be 0. Received: "${String(e)}".`)}async function z({path:e,node:i},n){if(0===e.length)throw new Error("Invalid HD tree derivation path: Deriving a path of length 0 is not defined.");const a=i.depth+e.length;return _(a),await(0,p.deriveKeyFromPath)({path:e,node:i,depth:a},n)}i.SLIP10Node=b,a=b,t=new WeakMap,s=new WeakMap,r={value:Symbol("SLIP10Node.constructor")},i.validateBIP32Depth=_,i.validateParentFingerprint=y,i.validateMasterParentFingerprint=v,i.validateRootIndex=A,i.deriveChildNode=z},4567:(e,i,n)=>{"use strict";const{MAX_SAFE_COMPONENT_LENGTH:a,MAX_SAFE_BUILD_LENGTH:r,MAX_LENGTH:t}=n(5237),s=n(2207),o=(i=e.exports={}).re=[],c=i.safeRe=[],h=i.src=[],u=i.safeSrc=[],l=i.t={};let p=0;const d="[a-zA-Z0-9-]",f=[["\\s",1],["\\d",t],[d,r]],g=(e,i,n)=>{const a=(e=>{for(const[i,n]of f)e=e.split(`${i}*`).join(`${i}{0,${n}}`).split(`${i}+`).join(`${i}{1,${n}}`);return e})(i),r=p++;s(e,r,i),l[e]=r,h[r]=i,u[r]=a,o[r]=new RegExp(i,n?"g":void 0),c[r]=new RegExp(a,n?"g":void 0)};g("NUMERICIDENTIFIER","0|[1-9]\\d*"),g("NUMERICIDENTIFIERLOOSE","\\d+"),g("NONNUMERICIDENTIFIER",`\\d*[a-zA-Z-]${d}*`),g("MAINVERSION",`(${h[l.NUMERICIDENTIFIER]})\\.(${h[l.NUMERICIDENTIFIER]})\\.(${h[l.NUMERICIDENTIFIER]})`),g("MAINVERSIONLOOSE",`(${h[l.NUMERICIDENTIFIERLOOSE]})\\.(${h[l.NUMERICIDENTIFIERLOOSE]})\\.(${h[l.NUMERICIDENTIFIERLOOSE]})`),g("PRERELEASEIDENTIFIER",`(?:${h[l.NONNUMERICIDENTIFIER]}|${h[l.NUMERICIDENTIFIER]})`),g("PRERELEASEIDENTIFIERLOOSE",`(?:${h[l.NONNUMERICIDENTIFIER]}|${h[l.NUMERICIDENTIFIERLOOSE]})`),g("PRERELEASE",`(?:-(${h[l.PRERELEASEIDENTIFIER]}(?:\\.${h[l.PRERELEASEIDENTIFIER]})*))`),g("PRERELEASELOOSE",`(?:-?(${h[l.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${h[l.PRERELEASEIDENTIFIERLOOSE]})*))`),g("BUILDIDENTIFIER",`${d}+`),g("BUILD",`(?:\\+(${h[l.BUILDIDENTIFIER]}(?:\\.${h[l.BUILDIDENTIFIER]})*))`),g("FULLPLAIN",`v?${h[l.MAINVERSION]}${h[l.PRERELEASE]}?${h[l.BUILD]}?`),g("FULL",`^${h[l.FULLPLAIN]}$`),g("LOOSEPLAIN",`[v=\\s]*${h[l.MAINVERSIONLOOSE]}${h[l.PRERELEASELOOSE]}?${h[l.BUILD]}?`),g("LOOSE",`^${h[l.LOOSEPLAIN]}$`),g("GTLT","((?:<|>)?=?)"),g("XRANGEIDENTIFIERLOOSE",`${h[l.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),g("XRANGEIDENTIFIER",`${h[l.NUMERICIDENTIFIER]}|x|X|\\*`),g("XRANGEPLAIN",`[v=\\s]*(${h[l.XRANGEIDENTIFIER]})(?:\\.(${h[l.XRANGEIDENTIFIER]})(?:\\.(${h[l.XRANGEIDENTIFIER]})(?:${h[l.PRERELEASE]})?${h[l.BUILD]}?)?)?`),g("XRANGEPLAINLOOSE",`[v=\\s]*(${h[l.XRANGEIDENTIFIERLOOSE]})(?:\\.(${h[l.XRANGEIDENTIFIERLOOSE]})(?:\\.(${h[l.XRANGEIDENTIFIERLOOSE]})(?:${h[l.PRERELEASELOOSE]})?${h[l.BUILD]}?)?)?`),g("XRANGE",`^${h[l.GTLT]}\\s*${h[l.XRANGEPLAIN]}$`),g("XRANGELOOSE",`^${h[l.GTLT]}\\s*${h[l.XRANGEPLAINLOOSE]}$`),g("COERCEPLAIN",`(^|[^\\d])(\\d{1,${a}})(?:\\.(\\d{1,${a}}))?(?:\\.(\\d{1,${a}}))?`),g("COERCE",`${h[l.COERCEPLAIN]}(?:$|[^\\d])`),g("COERCEFULL",h[l.COERCEPLAIN]+`(?:${h[l.PRERELEASE]})?`+`(?:${h[l.BUILD]})?(?:$|[^\\d])`),g("COERCERTL",h[l.COERCE],!0),g("COERCERTLFULL",h[l.COERCEFULL],!0),g("LONETILDE","(?:~>?)"),g("TILDETRIM",`(\\s*)${h[l.LONETILDE]}\\s+`,!0),i.tildeTrimReplace="$1~",g("TILDE",`^${h[l.LONETILDE]}${h[l.XRANGEPLAIN]}$`),g("TILDELOOSE",`^${h[l.LONETILDE]}${h[l.XRANGEPLAINLOOSE]}$`),g("LONECARET","(?:\\^)"),g("CARETTRIM",`(\\s*)${h[l.LONECARET]}\\s+`,!0),i.caretTrimReplace="$1^",g("CARET",`^${h[l.LONECARET]}${h[l.XRANGEPLAIN]}$`),g("CARETLOOSE",`^${h[l.LONECARET]}${h[l.XRANGEPLAINLOOSE]}$`),g("COMPARATORLOOSE",`^${h[l.GTLT]}\\s*(${h[l.LOOSEPLAIN]})$|^$`),g("COMPARATOR",`^${h[l.GTLT]}\\s*(${h[l.FULLPLAIN]})$|^$`),g("COMPARATORTRIM",`(\\s*)${h[l.GTLT]}\\s*(${h[l.LOOSEPLAIN]}|${h[l.XRANGEPLAIN]})`,!0),i.comparatorTrimReplace="$1$2$3",g("HYPHENRANGE",`^\\s*(${h[l.XRANGEPLAIN]})\\s+-\\s+(${h[l.XRANGEPLAIN]})\\s*$`),g("HYPHENRANGELOOSE",`^\\s*(${h[l.XRANGEPLAINLOOSE]})\\s+-\\s+(${h[l.XRANGEPLAINLOOSE]})\\s*$`),g("STAR","(<|>)?=?\\s*\\*"),g("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),g("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")},4586:(e,i,n)=>{"use strict";const a=n(4739);e.exports=(e,i,n,r,t)=>{"string"==typeof n&&(t=r,r=n,n=void 0);try{return new a(e instanceof a?e.version:e,n).inc(i,r,t).version}catch(e){return null}}},4739:(e,i,n)=>{"use strict";const a=n(2207),{MAX_LENGTH:r,MAX_SAFE_INTEGER:t}=n(5237),{safeRe:s,t:o}=n(4567),c=n(9932),{compareIdentifiers:h}=n(7660);class u{constructor(e,i){if(i=c(i),e instanceof u){if(e.loose===!!i.loose&&e.includePrerelease===!!i.includePrerelease)return e;e=e.version}else if("string"!=typeof e)throw new TypeError(`Invalid version. Must be a string. Got type "${typeof e}".`);if(e.length>r)throw new TypeError(`version is longer than ${r} characters`);a("SemVer",e,i),this.options=i,this.loose=!!i.loose,this.includePrerelease=!!i.includePrerelease;const n=e.trim().match(i.loose?s[o.LOOSE]:s[o.FULL]);if(!n)throw new TypeError(`Invalid Version: ${e}`);if(this.raw=e,this.major=+n[1],this.minor=+n[2],this.patch=+n[3],this.major>t||this.major<0)throw new TypeError("Invalid major version");if(this.minor>t||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>t||this.patch<0)throw new TypeError("Invalid patch version");n[4]?this.prerelease=n[4].split(".").map(e=>{if(/^[0-9]+$/.test(e)){const i=+e;if(i>=0&&i<t)return i}return e}):this.prerelease=[],this.build=n[5]?n[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(e){if(a("SemVer.compare",this.version,this.options,e),!(e instanceof u)){if("string"==typeof e&&e===this.version)return 0;e=new u(e,this.options)}return e.version===this.version?0:this.compareMain(e)||this.comparePre(e)}compareMain(e){return e instanceof u||(e=new u(e,this.options)),h(this.major,e.major)||h(this.minor,e.minor)||h(this.patch,e.patch)}comparePre(e){if(e instanceof u||(e=new u(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;let i=0;do{const n=this.prerelease[i],r=e.prerelease[i];if(a("prerelease compare",i,n,r),void 0===n&&void 0===r)return 0;if(void 0===r)return 1;if(void 0===n)return-1;if(n!==r)return h(n,r)}while(++i)}compareBuild(e){e instanceof u||(e=new u(e,this.options));let i=0;do{const n=this.build[i],r=e.build[i];if(a("build compare",i,n,r),void 0===n&&void 0===r)return 0;if(void 0===r)return 1;if(void 0===n)return-1;if(n!==r)return h(n,r)}while(++i)}inc(e,i,n){if(e.startsWith("pre")){if(!i&&!1===n)throw new Error("invalid increment argument: identifier is empty");if(i){const e=`-${i}`.match(this.options.loose?s[o.PRERELEASELOOSE]:s[o.PRERELEASE]);if(!e||e[1]!==i)throw new Error(`invalid identifier: ${i}`)}}switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",i,n);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",i,n);break;case"prepatch":this.prerelease.length=0,this.inc("patch",i,n),this.inc("pre",i,n);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",i,n),this.inc("pre",i,n);break;case"release":if(0===this.prerelease.length)throw new Error(`version ${this.raw} is not a prerelease`);this.prerelease.length=0;break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":{const e=Number(n)?1:0;if(0===this.prerelease.length)this.prerelease=[e];else{let a=this.prerelease.length;for(;--a>=0;)"number"==typeof this.prerelease[a]&&(this.prerelease[a]++,a=-2);if(-1===a){if(i===this.prerelease.join(".")&&!1===n)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(e)}}if(i){let a=[i,e];!1===n&&(a=[i]),0===h(this.prerelease[0],i)?isNaN(this.prerelease[1])&&(this.prerelease=a):this.prerelease=a}break}default:throw new Error(`invalid increment argument: ${e}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}}e.exports=u},4761:(e,i,n)=>{const a=n(6889),r=n(5682);e.exports=o;const t=128;var s=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function o(){return this instanceof o?(this.hh=new Int32Array(8),this.hl=new Int32Array(8),this.buffer=new Uint8Array(128),this.finalised=!1,this.bytesRead=0,this.pos=0,this.hh[0]=1779033703,this.hh[1]=3144134277,this.hh[2]=1013904242,this.hh[3]=2773480762,this.hh[4]=1359893119,this.hh[5]=2600822924,this.hh[6]=528734635,this.hh[7]=1541459225,this.hl[0]=4089235720,this.hl[1]=2227873595,this.hl[2]=4271175723,this.hl[3]=1595750129,this.hl[4]=2917565137,this.hl[5]=725511199,this.hl[6]=4215389547,this.hl[7]=327033209,this):new o}function c(e,i,n,a){e[i]=n>>24&255,e[i+1]=n>>16&255,e[i+2]=n>>8&255,e[i+3]=255&n,e[i+4]=a>>24&255,e[i+5]=a>>16&255,e[i+6]=a>>8&255,e[i+7]=255&a}function h(e,i,n,a){for(var r,t,o,c,h,u,l,p,d,f,g,m,k,b,_,y,v,A,z,I,E,j,w,B,C,x,S=new Int32Array(16),Q=new Int32Array(16),T=e[0],P=e[1],L=e[2],D=e[3],U=e[4],R=e[5],O=e[6],N=e[7],F=i[0],M=i[1],K=i[2],H=i[3],q=i[4],Y=i[5],G=i[6],$=i[7],V=0;a>=128;){for(z=0;z<16;z++)I=8*z+V,S[z]=n[I+0]<<24|n[I+1]<<16|n[I+2]<<8|n[I+3],Q[z]=n[I+4]<<24|n[I+5]<<16|n[I+6]<<8|n[I+7];for(z=0;z<80;z++)if(r=T,t=P,o=L,c=D,h=U,u=R,l=O,d=F,f=M,g=K,m=H,k=q,b=Y,_=G,w=65535&(j=$),B=j>>>16,C=65535&(E=N),x=E>>>16,w+=65535&(j=(q>>>14|U<<18)^(q>>>18|U<<14)^(U>>>9|q<<23)),B+=j>>>16,C+=65535&(E=(U>>>14|q<<18)^(U>>>18|q<<14)^(q>>>9|U<<23)),x+=E>>>16,w+=65535&(j=q&Y^~q&G),B+=j>>>16,C+=65535&(E=U&R^~U&O),x+=E>>>16,w+=65535&(j=s[2*z+1]),B+=j>>>16,C+=65535&(E=s[2*z]),x+=E>>>16,E=S[z%16],B+=(j=Q[z%16])>>>16,C+=65535&E,x+=E>>>16,C+=(B+=(w+=65535&j)>>>16)>>>16,w=65535&(j=A=65535&w|B<<16),B=j>>>16,C=65535&(E=v=65535&C|(x+=C>>>16)<<16),x=E>>>16,w+=65535&(j=(F>>>28|T<<4)^(T>>>2|F<<30)^(T>>>7|F<<25)),B+=j>>>16,C+=65535&(E=(T>>>28|F<<4)^(F>>>2|T<<30)^(F>>>7|T<<25)),x+=E>>>16,B+=(j=F&M^F&K^M&K)>>>16,C+=65535&(E=T&P^T&L^P&L),x+=E>>>16,p=65535&(C+=(B+=(w+=65535&j)>>>16)>>>16)|(x+=C>>>16)<<16,y=65535&w|B<<16,w=65535&(j=m),B=j>>>16,C=65535&(E=c),x=E>>>16,B+=(j=A)>>>16,C+=65535&(E=v),x+=E>>>16,P=r,L=t,D=o,U=c=65535&(C+=(B+=(w+=65535&j)>>>16)>>>16)|(x+=C>>>16)<<16,R=h,O=u,N=l,T=p,M=d,K=f,H=g,q=m=65535&w|B<<16,Y=k,G=b,$=_,F=y,z%16==15)for(I=0;I<16;I++)E=S[I],w=65535&(j=Q[I]),B=j>>>16,C=65535&E,x=E>>>16,E=S[(I+9)%16],w+=65535&(j=Q[(I+9)%16]),B+=j>>>16,C+=65535&E,x+=E>>>16,v=S[(I+1)%16],w+=65535&(j=((A=Q[(I+1)%16])>>>1|v<<31)^(A>>>8|v<<24)^(A>>>7|v<<25)),B+=j>>>16,C+=65535&(E=(v>>>1|A<<31)^(v>>>8|A<<24)^v>>>7),x+=E>>>16,v=S[(I+14)%16],B+=(j=((A=Q[(I+14)%16])>>>19|v<<13)^(v>>>29|A<<3)^(A>>>6|v<<26))>>>16,C+=65535&(E=(v>>>19|A<<13)^(A>>>29|v<<3)^v>>>6),x+=E>>>16,x+=(C+=(B+=(w+=65535&j)>>>16)>>>16)>>>16,S[I]=65535&C|x<<16,Q[I]=65535&w|B<<16;w=65535&(j=F),B=j>>>16,C=65535&(E=T),x=E>>>16,E=e[0],B+=(j=i[0])>>>16,C+=65535&E,x+=E>>>16,x+=(C+=(B+=(w+=65535&j)>>>16)>>>16)>>>16,e[0]=T=65535&C|x<<16,i[0]=F=65535&w|B<<16,w=65535&(j=M),B=j>>>16,C=65535&(E=P),x=E>>>16,E=e[1],B+=(j=i[1])>>>16,C+=65535&E,x+=E>>>16,x+=(C+=(B+=(w+=65535&j)>>>16)>>>16)>>>16,e[1]=P=65535&C|x<<16,i[1]=M=65535&w|B<<16,w=65535&(j=K),B=j>>>16,C=65535&(E=L),x=E>>>16,E=e[2],B+=(j=i[2])>>>16,C+=65535&E,x+=E>>>16,x+=(C+=(B+=(w+=65535&j)>>>16)>>>16)>>>16,e[2]=L=65535&C|x<<16,i[2]=K=65535&w|B<<16,w=65535&(j=H),B=j>>>16,C=65535&(E=D),x=E>>>16,E=e[3],B+=(j=i[3])>>>16,C+=65535&E,x+=E>>>16,x+=(C+=(B+=(w+=65535&j)>>>16)>>>16)>>>16,e[3]=D=65535&C|x<<16,i[3]=H=65535&w|B<<16,w=65535&(j=q),B=j>>>16,C=65535&(E=U),x=E>>>16,E=e[4],B+=(j=i[4])>>>16,C+=65535&E,x+=E>>>16,x+=(C+=(B+=(w+=65535&j)>>>16)>>>16)>>>16,e[4]=U=65535&C|x<<16,i[4]=q=65535&w|B<<16,w=65535&(j=Y),B=j>>>16,C=65535&(E=R),x=E>>>16,E=e[5],B+=(j=i[5])>>>16,C+=65535&E,x+=E>>>16,x+=(C+=(B+=(w+=65535&j)>>>16)>>>16)>>>16,e[5]=R=65535&C|x<<16,i[5]=Y=65535&w|B<<16,w=65535&(j=G),B=j>>>16,C=65535&(E=O),x=E>>>16,E=e[6],B+=(j=i[6])>>>16,C+=65535&E,x+=E>>>16,x+=(C+=(B+=(w+=65535&j)>>>16)>>>16)>>>16,e[6]=O=65535&C|x<<16,i[6]=G=65535&w|B<<16,w=65535&(j=$),B=j>>>16,C=65535&(E=N),x=E>>>16,E=e[7],B+=(j=i[7])>>>16,C+=65535&E,x+=E>>>16,x+=(C+=(B+=(w+=65535&j)>>>16)>>>16)>>>16,e[7]=N=65535&C|x<<16,i[7]=$=65535&w|B<<16,V+=128,a-=128}}function u(e){if(!(this instanceof u))return new u(e);this.pad=r.alloc(128),this.inner=o(),this.outer=o();const i=r.alloc(64);e.byteLength>128&&(o().update(e).digest(i),e=i),this.pad.fill(54);for(let i=0;i<e.byteLength;i++)this.pad[i]^=e[i];this.inner.update(this.pad),this.pad.fill(92);for(let i=0;i<e.byteLength;i++)this.pad[i]^=e[i];this.outer.update(this.pad),this.pad.fill(0),i.fill(0)}o.prototype.update=function(e,i){a(!1===this.finalised,"Hash instance finalised");var[n,s]=function(e,i){var n=r.from(e,i);return[n,n.byteLength]}(e,i);this.bytesRead+=s;const o=s+this.pos&-128;this.buffer.set(n.subarray(0,t-this.pos),this.pos);const c=this.pos;return(s-=t-this.pos)>=0&&(h(this.hh,this.hl,this.buffer,128),this.pos=0),s>127&&(h(this.hh,this.hl,n.subarray(t-c,o-c),o-t),s%=128),this.buffer.set(n.subarray(n.byteLength-s)),this.pos=127&this.bytesRead,this.buffer.fill(0,this.pos),this},o.prototype.digest=function(e,i=0){if(a(!1===this.finalised,"Hash instance finalised"),this.finalised=!0,this.buffer.fill(0,this.pos),this.buffer[this.pos]=128,this.pos>111&&(h(this.hh,this.hl,this.buffer,128),this.buffer.fill(0),this.pos=0),c(this.buffer,120,this.bytesRead/536870912|0,this.bytesRead<<3),h(this.hh,this.hl,this.buffer,128),e instanceof Uint8Array&&e.byteLength>63){for(let n=0;n<8;n++)c(e,8*n+i,this.hh[n],this.hl[n]);return e}const n=new Uint8Array(64);for(let e=0;e<8;e++)c(n,8*e,this.hh[e],this.hl[e]);return"string"==typeof e?r.toString(n,e):n},u.prototype.update=function(e,i){return this.inner.update(e,i),this},u.prototype.digest=function(e,i=0){return this.outer.update(this.inner.digest()),this.outer.digest(e,i)},o.HMAC=u},4813:function(e,i,n){"use strict";var a,r=this&&this.__classPrivateFieldGet||function(e,i,n,a){if("a"===n&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof i?e!==i||!a:!i.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?a:"a"===n?a.call(e):a?a.value:i.get(e)},t=this&&this.__classPrivateFieldSet||function(e,i,n,a,r){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!r)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof i?e!==i||!r:!i.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?r.call(e,n):r?r.value=n:i.set(e,n),n};Object.defineProperty(i,"__esModule",{value:!0}),i.validateBIP44Depth=i.BIP44Node=void 0;const s=n(2367),o=n(4927),c=n(9440),h=n(4533),u=n(4503);class l{static async fromJSON(e,i){return l.fromExtendedKey(e,i)}static async fromExtendedKey(e,i){if("string"==typeof e){const n=(0,c.decodeExtendedKey)(e),{type:a,chainCode:r,depth:t,parentFingerprint:s,index:o,network:h}=n;if("private"===a){const{privateKey:e}=n;return l.fromExtendedKey({depth:t,parentFingerprint:s,index:o,network:h,privateKey:e,chainCode:r},i)}const{publicKey:u}=n;return l.fromExtendedKey({depth:t,parentFingerprint:s,index:o,network:h,publicKey:u,chainCode:r},i)}const{privateKey:n,publicKey:a,chainCode:r,depth:t,parentFingerprint:s,index:o,network:u}=e;p(t);const d=await h.SLIP10Node.fromExtendedKey({privateKey:n,publicKey:a,chainCode:r,depth:t,parentFingerprint:s,index:o,network:u,curve:"secp256k1"},i);return new l(d)}static async fromDerivationPath({derivationPath:e,network:i},n){p(e.length-1),d(e,o.MIN_BIP_44_DEPTH);const a=await h.SLIP10Node.fromDerivationPath({derivationPath:e,network:i,curve:"secp256k1"},n);return new l(a)}static async fromSeed({derivationPath:e,network:i},n){p(e.length-1),d(e,o.MIN_BIP_44_DEPTH);const a=await h.SLIP10Node.fromSeed({derivationPath:e,network:i,curve:"secp256k1"},n);return new l(a)}get depth(){return r(this,a,"f").depth}get privateKeyBytes(){return r(this,a,"f").privateKeyBytes}get publicKeyBytes(){return r(this,a,"f").publicKeyBytes}get chainCodeBytes(){return r(this,a,"f").chainCodeBytes}get privateKey(){return r(this,a,"f").privateKey}get publicKey(){return r(this,a,"f").publicKey}get compressedPublicKey(){return r(this,a,"f").compressedPublicKey}get compressedPublicKeyBytes(){return r(this,a,"f").compressedPublicKeyBytes}get chainCode(){return r(this,a,"f").chainCode}get address(){return r(this,a,"f").address}get masterFingerprint(){return r(this,a,"f").masterFingerprint}get parentFingerprint(){return r(this,a,"f").parentFingerprint}get fingerprint(){return r(this,a,"f").fingerprint}get index(){return r(this,a,"f").index}get network(){return r(this,a,"f").network}get extendedKey(){return r(this,a,"f").extendedKey}get curve(){return r(this,a,"f").curve}constructor(e){a.set(this,void 0),t(this,a,e,"f"),Object.freeze(this)}neuter(){const e=r(this,a,"f").neuter();return new l(e)}async derive(e){if(this.depth===o.MAX_BIP_44_DEPTH)throw new Error("Illegal operation: This HD tree node is already a leaf node.");p(this.depth+e.length),d(e,this.depth+1);const i=await r(this,a,"f").derive(e);return new l(i)}toJSON(){return{depth:this.depth,masterFingerprint:this.masterFingerprint,parentFingerprint:this.parentFingerprint,index:this.index,network:this.network,privateKey:this.privateKey,publicKey:this.publicKey,chainCode:this.chainCode}}}function p(e){if((0,h.validateBIP32Depth)(e),e<o.MIN_BIP_44_DEPTH||e>o.MAX_BIP_44_DEPTH)throw new Error(`Invalid HD tree path depth: The depth must be a positive integer N such that 0 <= N <= 5. Received: "${e}"`)}function d(e,i){e.forEach((e,n)=>{const a=i+n;if(a!==o.MIN_BIP_44_DEPTH)switch((0,s.assert)("string"==typeof e),a){case 1:if(e!==o.BIP44PurposeNodeToken)throw new Error(`Invalid derivation path: The "purpose" node (depth 1) must be the string "${o.BIP44PurposeNodeToken}".`);break;case 2:if(!o.BIP_32_PATH_REGEX.test(e)||!(0,u.isHardened)(e))throw new Error('Invalid derivation path: The "coin_type" node (depth 2) must be a hardened BIP-32 node.');break;case 3:if(!o.BIP_32_PATH_REGEX.test(e)||!(0,u.isHardened)(e))throw new Error('Invalid derivation path: The "account" node (depth 3) must be a hardened BIP-32 node.');break;case 4:if(!o.BIP_32_PATH_REGEX.test(e))throw new Error('Invalid derivation path: The "change" node (depth 4) must be a BIP-32 node.');break;case o.MAX_BIP_44_DEPTH:if(!o.BIP_32_PATH_REGEX.test(e))throw new Error('Invalid derivation path: The "address_index" node (depth 5) must be a BIP-32 node.')}else if(!(e instanceof Uint8Array||o.BIP_39_PATH_REGEX.test(e)))throw new Error('Invalid derivation path: The "m" / seed node (depth 0) must be a BIP-39 node.')})}i.BIP44Node=l,a=new WeakMap,i.validateBIP44Depth=p},4837:(e,i,n)=>{const{crypto_verify_32:a}=n(8597),{crypto_hash:r}=n(2004),{gf:t,gf0:s,gf1:o,D:c,D2:h,X:u,Y:l,I:p,A:d,Z:f,M:g,S:m,sel25519:k,pack25519:b,inv25519:_,unpack25519:y}=n(3895),{randombytes:v}=n(7996),{crypto_scalarmult_BYTES:A}=n(1542),{crypto_hash_sha512_BYTES:z}=n(2004),I=n(6889),E=64;function j(e,i){for(let n=0;n<16;n++)e[n]=0|i[n]}function w(e,i){var n=t(),a=t(),r=t(),s=t(),o=t(),c=t(),u=t(),l=t(),p=t();f(n,e[1],e[0]),f(p,i[1],i[0]),g(n,n,p),d(a,e[0],e[1]),d(p,i[0],i[1]),g(a,a,p),g(r,e[3],i[3]),g(r,r,h),g(s,e[2],i[2]),d(s,s,s),f(o,a,n),f(c,s,r),d(u,s,r),d(l,a,n),g(e[0],o,c),g(e[1],l,u),g(e[2],u,c),g(e[3],o,l)}function B(e,i,n){var a;for(a=0;a<4;a++)k(e[a],i[a],n)}function C(e,i){var n=t(),a=t(),r=t();_(r,i[2]),g(n,i[0],r),g(a,i[1],r),b(e,a),e[31]^=O(n)<<7}function x(e,i,n){var a,r,c=[t(i[0]),t(i[1]),t(i[2]),t(i[3])];for(j(e[0],s),j(e[1],o),j(e[2],o),j(e[3],s),r=255;r>=0;--r)B(e,c,a=n[r/8|0]>>(7&r)&1),w(c,e),w(e,e),B(e,c,a)}function S(e,i){var n=[t(),t(),t(),t()];j(n[0],u),j(n[1],l),j(n[2],o),g(n[3],u,l),x(e,n,i)}function Q(e,i,n){F(e,32),F(i,64);var a,s=new Uint8Array(64),o=[t(),t(),t(),t()];for(n||v(i,32),r(s,i,32),s[0]&=248,s[31]&=127,s[31]|=64,S(o,s),C(e,o),a=0;a<32;a++)i[a+32]=e[a]}e.exports={crypto_sign_keypair:Q,crypto_sign_seed_keypair:function(e,i,n){return F(n,32),i.set(n),Q(e,i,!0)},crypto_sign:D,crypto_sign_detached:function(e,i,n){var a=new Uint8Array(i.length+E);D(a,i,n);for(let i=0;i<E;i++)e[i]=a[i]},crypto_sign_open:R,crypto_sign_verify_detached:function(e,i,n){F(e,E);var a=new Uint8Array(i.length+E),r=0;for(r=0;r<E;r++)a[r]=e[r];for(r=0;r<i.length;r++)a[r+E]=i[r];return R(i,a,n)},crypto_sign_BYTES:E,crypto_sign_PUBLICKEYBYTES:32,crypto_sign_SECRETKEYBYTES:64,crypto_sign_SEEDBYTES:32,crypto_sign_ed25519_PUBLICKEYBYTES:32,crypto_sign_ed25519_SECRETKEYBYTES:64,crypto_sign_ed25519_SEEDBYTES:32,crypto_sign_ed25519_BYTES:64,crypto_sign_ed25519_pk_to_curve25519:function(e,i){F(e,32),F(i,32);var n=[t(),t(),t(),t()],a=t([1]),r=t([1]);I(function(e){Uint8Array.from([]);var i,n=[Uint8Array.from([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Uint8Array.from([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Uint8Array.from([38,232,149,143,194,178,39,176,69,195,244,137,242,239,152,240,213,223,172,5,211,198,51,57,177,56,2,136,109,83,252,5]),Uint8Array.from([199,23,106,112,61,77,216,79,186,60,11,118,13,16,103,15,42,32,83,250,44,57,204,198,78,199,253,119,146,172,3,122]),Uint8Array.from([236,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127]),Uint8Array.from([237,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127]),Uint8Array.from([238,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127])],a=new Uint8Array(7);F(n,7);for(let r=0;r<n.length;r++)for(i=0;i<31;i++)a[r]|=e[i]^n[r][i];for(let r=0;r<n.length;r++)a[r]|=127&e[i]^n[r][i];var r=0;for(let e=0;e<n.length;e++)r|=a[e]-1;return!(r>>8&1)}(i)&&U(n,i)&&function(e){var i=[t(),t(),t(),t()];!function(e,i){x(e,i,T)}(i,e);var n=0;for(let e=0;e<16;e++)n|=65535&i[0][e];return 0===n}(n),"Cannot convert key: bad point");for(let i=0;i<n.length;i++)b(e,n[i]);return f(r,r,n[1]),d(a,a,n[1]),_(r,r),g(a,a,r),b(e,a),0},crypto_sign_ed25519_sk_to_curve25519:function(e,i){I(e&&e.byteLength===A,"curveSk must be 'crypto_sign_SECRETKEYBYTES' long"),I(i&&64===i.byteLength,"edSk must be 'crypto_sign_ed25519_SECRETKEYBYTES' long");var n=new Uint8Array(z);return r(n,i,32),n[0]&=248,n[31]&=127,n[31]|=64,e.set(n.subarray(0,A)),n.fill(0),e},crypto_sign_ed25519_sk_to_pk:function(e,i){return F(e,32),e.set(i.subarray(32)),e},unpackneg:U,pack:C};var T=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function P(e,i){var n,a,r,t;for(a=63;a>=32;--a){for(n=0,r=a-32,t=a-12;r<t;++r)i[r]+=n-16*i[a]*T[r-(a-32)],n=i[r]+128>>8,i[r]-=256*n;i[r]+=n,i[a]=0}for(n=0,r=0;r<32;r++)i[r]+=n-(i[31]>>4)*T[r],n=i[r]>>8,i[r]&=255;for(r=0;r<32;r++)i[r]-=n*T[r];for(a=0;a<32;a++)i[a+1]+=i[a]>>8,e[a]=255&i[a]}function L(e){var i=new Float64Array(64);for(let n=0;n<64;n++)i[n]=e[n];for(let i=0;i<64;i++)e[i]=0;P(e,i)}function D(e,i,n){F(e,E+i.length),F(i,0),F(n,64);var a,s,o=i.length,c=new Uint8Array(64),h=new Uint8Array(64),u=new Uint8Array(64),l=new Float64Array(64),p=[t(),t(),t(),t()];r(c,n,32),c[0]&=248,c[31]&=127,c[31]|=64;var d=o+64;for(a=0;a<o;a++)e[64+a]=i[a];for(a=0;a<32;a++)e[32+a]=c[32+a];for(r(u,e.subarray(32),o+32),L(u),S(p,u),C(e,p),a=32;a<64;a++)e[a]=n[a];for(r(h,e,o+64),L(h),a=0;a<64;a++)l[a]=0;for(a=0;a<32;a++)l[a]=u[a];for(a=0;a<32;a++)for(s=0;s<32;s++)l[a+s]+=h[a]*c[s];return P(e.subarray(32),l),d}function U(e,i){var n=t(),a=t(),r=t(),s=t(),h=t(),u=t(),l=t();return j(e[2],o),y(e[1],i),m(r,e[1]),g(s,r,c),f(r,r,e[2]),d(s,e[2],s),m(h,s),m(u,h),g(l,u,h),g(n,l,r),g(n,n,s),function(e,i){var n,a=t();for(n=0;n<16;n++)a[n]=i[n];for(n=250;n>=0;n--)m(a,a),1!==n&&g(a,a,i);for(n=0;n<16;n++)e[n]=a[n]}(n,n),g(n,n,r),g(n,n,s),g(n,n,s),g(e[0],n,s),m(a,e[0]),g(a,a,s),N(a,r)||g(e[0],e[0],p),m(a,e[0]),g(a,a,s),!!N(a,r)&&(O(e[0])===i[31]>>7&&f(e[0],t(),e[0]),g(e[3],e[0],e[1]),!0)}function R(e,i,n){F(e,i.length-E),F(i,E),F(n,32);var s,o=i.length,c=new Uint8Array(i.length),h=new Uint8Array(32),u=new Uint8Array(64),l=[t(),t(),t(),t()],p=[t(),t(),t(),t()];if(o<64)return!1;if(!U(p,n))return!1;for(s=0;s<o;s++)c[s]=i[s];for(s=0;s<32;s++)c[s+32]=n[s];if(r(u,c,o),L(u),x(l,p,u),S(p,i.subarray(32)),w(l,p),C(h,l),o-=64,!a(i,0,h,0)){for(s=0;s<o;s++)c[s]=0;return!1}for(s=0;s<o;s++)e[s]=i[s+64];return!0}function O(e){var i=new Uint8Array(32);return b(i,e),1&i[0]}function N(e,i){var n=new Uint8Array(32),r=new Uint8Array(32);return b(n,e),b(r,i),a(n,0,r,0)}function F(e,i,n="Argument"){if(!e||i&&e.length<i)throw new Error(n+" must be a buffer"+(i?" of length "+i:""))}},4843:e=>{"use strict";e.exports=JSON.parse('["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubí","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sábado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmón","salón","salsa","salto","salud","salvar","samba","sanción","sandía","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sartén","sastre","satán","sauna","saxofón","sección","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","señal","señor","separar","sepia","sequía","ser","serie","sermón","servir","sesenta","sesión","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","sílaba","silbar","silencio","silla","símbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","sólido","soltar","solución","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","sostén","sótano","suave","subir","suceso","sudor","suegra","suelo","sueño","suerte","sufrir","sujeto","sultán","sumar","superar","suplir","suponer","supremo","sur","surco","sureño","surgir","susto","sutil","tabaco","tabique","tabla","tabú","taco","tacto","tajo","talar","talco","talento","talla","talón","tamaño","tambor","tango","tanque","tapa","tapete","tapia","tapón","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazón","teatro","techo","tecla","técnica","tejado","tejer","tejido","tela","teléfono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teoría","terapia","terco","término","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburón","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","tímido","timo","tinta","tío","típico","tipo","tira","tirón","titán","títere","título","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","tórax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","tóxico","trabajo","tractor","traer","tráfico","trago","traje","tramo","trance","trato","trauma","trazar","trébol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tubería","tubo","tuerto","tumba","tumor","túnel","túnica","turbina","turismo","turno","tutor","ubicar","úlcera","umbral","unidad","unir","universo","uno","untar","uña","urbano","urbe","urgente","urna","usar","usuario","útil","utopía","uva","vaca","vacío","vacuna","vagar","vago","vaina","vajilla","vale","válido","valle","valor","válvula","vampiro","vara","variar","varón","vaso","vecino","vector","vehículo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vía","viaje","vibrar","vicio","víctima","vida","vídeo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","viñedo","violín","viral","virgo","virtud","visor","víspera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volcán","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"]')},4847:e=>{"use strict";e.exports=class{constructor(){this.max=1e3,this.map=new Map}get(e){const i=this.map.get(e);return void 0===i?void 0:(this.map.delete(e),this.map.set(e,i),i)}delete(e){return this.map.delete(e)}set(e,i){if(!this.delete(e)&&void 0!==i){if(this.map.size>=this.max){const e=this.map.keys().next().value;this.delete(e)}this.map.set(e,i)}return this}}},4860:(e,i,n)=>{const a=n(6889),{randombytes_buf:r}=n(7996),{crypto_stream_chacha20_ietf:t,crypto_stream_chacha20_ietf_xor:s,crypto_stream_chacha20_ietf_xor_ic:o,crypto_stream_chacha20_ietf_KEYBYTES:c}=n(457),{crypto_core_hchacha20:h,crypto_core_hchacha20_INPUTBYTES:u}=n(5732),l=n(1353),{sodium_increment:p,sodium_is_zero:d,sodium_memcmp:f}=n(2515),g=Number.MAX_SAFE_INTEGER,m=Number.MAX_SAFE_INTEGER,k=new Uint8Array([0]),b=new Uint8Array([1]),_=new Uint8Array([2]),y=new Uint8Array([b|_]),v=52,A=32,z=44,I=new Uint8Array(16);function E(e,i){let n=1,a=0;for(e[0]=255&i;++a<8&&(n*=256);)e[a]=i/n&255}function j(e){a(e.byteLength===v,"state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long");const i=e.subarray(A,z);for(let e=0;e<4;e++)i[e]=0;i[0]=1}function w(e){a(e.byteLength===v,"state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long");const i=e.subarray(0,A),n=e.subarray(A,z),r=new Uint8Array(c+8);let t;for(t=0;t<c;t++)r[t]=i[t];for(t=0;t<8;t++)r[c+t]=n[4+t];for(s(r,r,n,i),t=0;t<c;t++)i[t]=r[t];for(t=0;t<8;t++)n[4+t]=r[c+t];j(e)}function B(e,i,n){for(let a=0;a<n;a++)e[a]^=i[a]}e.exports={crypto_secretstream_xchacha20poly1305_keygen:function(e){a(32===e.length),r(e)},crypto_secretstream_xchacha20poly1305_init_push:function(e,i,n){a(e.byteLength===v,"state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long"),a(i instanceof Uint8Array&&24===i.length,"out not byte array of length crypto_secretstream_xchacha20poly1305_HEADERBYTES"),a(n instanceof Uint8Array&&32===n.length,"key not byte array of length crypto_secretstream_xchacha20poly1305_KEYBYTES");const t=e.subarray(0,A),s=e.subarray(A,z),o=e.subarray(z);r(i,24),h(t,i,n,null),j(e);for(let e=0;e<8;e++)s[e+4]=i[e+u];o.fill(0)},crypto_secretstream_xchacha20poly1305_init_pull:function(e,i,n){a(e.byteLength===v,"state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long"),a(i instanceof Uint8Array&&24===i.length,"_in not byte array of length crypto_secretstream_xchacha20poly1305_HEADERBYTES"),a(n instanceof Uint8Array&&32===n.length,"key not byte array of length crypto_secretstream_xchacha20poly1305_KEYBYTES");const r=e.subarray(0,A),t=e.subarray(A,z),s=e.subarray(z);h(r,i,n,null),j(e);for(let e=0;e<8;e++)t[e+4]=i[e+u];s.fill(0)},crypto_secretstream_xchacha20poly1305_rekey:w,crypto_secretstream_xchacha20poly1305_push:function(e,i,n,r,s){a(e.byteLength===v,"state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long"),r||(r=new Uint8Array(0));const c=e.subarray(0,A),h=e.subarray(A,z),u=new Uint8Array(64),f=new Uint8Array(8);a(g<=m),t(u,h,c);const k=new l(u);u.fill(0),k.update(r,0,r.byteLength),k.update(I,0,16-r.byteLength&15),u[0]=s[0],o(u,u,h,1,c),k.update(u,0,u.byteLength),i[0]=u[0];const b=i.subarray(1,i.byteLength);o(b,n,h,2,c),k.update(b,0,n.byteLength),k.update(I,0,16-u.byteLength+n.byteLength&15),E(f,r.byteLength),k.update(f,0,f.byteLength),E(f,u.byteLength+n.byteLength),k.update(f,0,f.byteLength);const y=i.subarray(1+n.byteLength,i.byteLength);return k.finish(y,0),a(!0),B(h.subarray(4,h.length),y,8),p(h),(0!==(s[0]&_)||d(h.subarray(0,4)))&&w(e),17+n.byteLength},crypto_secretstream_xchacha20poly1305_pull:function(e,i,n,r,s){a(e.byteLength===v,"state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long"),s||(s=new Uint8Array(0));const c=e.subarray(0,A),h=e.subarray(A,z),u=new Uint8Array(64),g=new Uint8Array(8),m=new Uint8Array(16);a(r.byteLength>=17,"ciphertext is too short.");const k=r.byteLength-17;t(u,h,c);const b=new l(u);u.fill(0),b.update(s,0,s.byteLength),b.update(I,0,16-s.byteLength&15),u.fill(0),u[0]=r[0],o(u,u,h,1,c),n[0]=u[0],u[0]=r[0],b.update(u,0,u.byteLength);const y=r.subarray(1,r.length);b.update(y,0,k),b.update(I,0,16-u.byteLength+k&15),E(g,s.byteLength),b.update(g,0,g.byteLength),E(g,u.byteLength+i.byteLength),b.update(g,0,g.byteLength),b.finish(m,0);const j=r.subarray(1+k,r.length);if(!f(m,j))throw m.fill(0),new Error("MAC could not be verified.");return o(i,y.subarray(0,i.length),h,2,c),B(h.subarray(4,h.length),m,8),p(h),(0!==(n&_)||d(h.subarray(0,4)))&&w(e),k},crypto_secretstream_xchacha20poly1305_STATEBYTES:v,crypto_secretstream_xchacha20poly1305_ABYTES:17,crypto_secretstream_xchacha20poly1305_HEADERBYTES:24,crypto_secretstream_xchacha20poly1305_KEYBYTES:32,crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX:g,crypto_secretstream_xchacha20poly1305_TAGBYTES:1,crypto_secretstream_xchacha20poly1305_TAG_MESSAGE:k,crypto_secretstream_xchacha20poly1305_TAG_PUSH:b,crypto_secretstream_xchacha20poly1305_TAG_REKEY:_,crypto_secretstream_xchacha20poly1305_TAG_FINAL:y}},4875:()=>{},4927:(e,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.BIP_32_HARDENED_OFFSET=i.BIP_39_PATH_REGEX=i.CIP_3_PATH_REGEX=i.SLIP_10_PATH_REGEX=i.BIP_32_PATH_REGEX=i.UNPREFIXED_BIP_32_PATH_REGEX=i.UNPREFIXED_PATH_REGEX=i.BIP44PurposeNodeToken=i.MAX_BIP_32_INDEX=i.MAX_UNHARDENED_BIP_32_INDEX=i.MAX_BIP_44_DEPTH=i.MIN_BIP_44_DEPTH=i.BYTES_KEY_LENGTH=void 0,i.BYTES_KEY_LENGTH=32,i.MIN_BIP_44_DEPTH=0,i.MAX_BIP_44_DEPTH=5,i.MAX_UNHARDENED_BIP_32_INDEX=2147483647,i.MAX_BIP_32_INDEX=4294967295,i.BIP44PurposeNodeToken="bip32:44'",i.UNPREFIXED_PATH_REGEX=/^\d+$/u,i.UNPREFIXED_BIP_32_PATH_REGEX=/^(?<index>\d+)'?$/u,i.BIP_32_PATH_REGEX=/^bip32:\d+'?$/u,i.SLIP_10_PATH_REGEX=/^slip10:\d+'?$/u,i.CIP_3_PATH_REGEX=/^cip3:\d+'?$/u,i.BIP_39_PATH_REGEX=/^bip39:([a-z]+){1}( [a-z]+){11,23}$/u,i.BIP_32_HARDENED_OFFSET=2147483648},4930:(e,i,n)=>{"use strict";function a(i){Object.keys(i).forEach(function(n){e.exports[n]=i[n]})}a(n(7996)),a(n(7539)),a(n(2515)),a(n(8597)),a(n(9402)),a(n(1223)),a(n(4959)),a(n(2004)),a(n(7004)),a(n(7789)),a(n(251)),a(n(6743)),a(n(2557)),a(n(1542)),a(n(9191)),a(n(4860)),a(n(5396)),a(n(4837)),a(n(6940)),a(n(457))},4956:(e,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0})},4959:(e,i,n)=>{var a=n(2206);if(1!==new Uint16Array([1])[0])throw new Error("Big endian architecture is not supported.");e.exports.crypto_generichash_PRIMITIVE="blake2b",e.exports.crypto_generichash_BYTES_MIN=a.BYTES_MIN,e.exports.crypto_generichash_BYTES_MAX=a.BYTES_MAX,e.exports.crypto_generichash_BYTES=a.BYTES,e.exports.crypto_generichash_KEYBYTES_MIN=a.KEYBYTES_MIN,e.exports.crypto_generichash_KEYBYTES_MAX=a.KEYBYTES_MAX,e.exports.crypto_generichash_KEYBYTES=a.KEYBYTES,e.exports.crypto_generichash_WASM_SUPPORTED=a.WASM_SUPPORTED,e.exports.crypto_generichash_WASM_LOADED=!1,e.exports.crypto_generichash=function(e,i,n){a(e.length,n).update(i).final(e)},e.exports.crypto_generichash_ready=a.ready,e.exports.crypto_generichash_batch=function(e,i,n){for(var r=a(e.length,n),t=0;t<i.length;t++)r.update(i[t]);r.final(e)},e.exports.crypto_generichash_instance=function(i,n){return null==n&&(n=e.exports.crypto_generichash_BYTES),a(n,i)},a.ready(function(i){e.exports.crypto_generichash_WASM_LOADED=a.WASM_LOADED})},4967:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.isNegativeLE=void 0,i.mod=f,i.pow=function(e,i,n){return A(j(n),e,i)},i.pow2=function(e,i,n){let a=e;for(;i-- >r;)a*=a,a%=n;return a},i.invert=g,i.tonelliShanks=_,i.FpSqrt=y,i.validateField=function(e){const i=v.reduce((e,i)=>(e[i]="function",e),{ORDER:"bigint",MASK:"bigint",BYTES:"number",BITS:"number"});return(0,a._validateObject)(e,i),e},i.FpPow=A,i.FpInvertBatch=z,i.FpDiv=function(e,i,n){return e.mul(i,"bigint"==typeof n?g(n,e.ORDER):e.inv(n))},i.FpLegendre=I,i.FpIsSquare=function(e,i){return 1===I(e,i)},i.nLength=E,i.Field=j,i.FpSqrtOdd=function(e,i){if(!e.isOdd)throw new Error("Field doesn't have isOdd");const n=e.sqrt(i);return e.isOdd(n)?n:e.neg(n)},i.FpSqrtEven=function(e,i){if(!e.isOdd)throw new Error("Field doesn't have isOdd");const n=e.sqrt(i);return e.isOdd(n)?e.neg(n):n},i.hashToPrivateScalar=function(e,i,n=!1){const r=(e=(0,a.ensureBytes)("privateHash",e)).length,s=E(i).nByteLength+8;if(s<24||r<s||r>1024)throw new Error("hashToPrivateScalar: expected "+s+"-1024 bytes of input, got "+r);return f(n?(0,a.bytesToNumberLE)(e):(0,a.bytesToNumberBE)(e),i-t)+t},i.getFieldBytesLength=w,i.getMinHashLength=B,i.mapHashToField=function(e,i,n=!1){const r=e.length,s=w(i),o=B(i);if(r<16||r<o||r>1024)throw new Error("expected "+o+"-1024 bytes of input, got "+r);const c=f(n?(0,a.bytesToNumberLE)(e):(0,a.bytesToNumberBE)(e),i-t)+t;return n?(0,a.numberToBytesLE)(c,s):(0,a.numberToBytesBE)(c,s)};const a=n(8627),r=BigInt(0),t=BigInt(1),s=BigInt(2),o=BigInt(3),c=BigInt(4),h=BigInt(5),u=BigInt(7),l=BigInt(8),p=BigInt(9),d=BigInt(16);function f(e,i){const n=e%i;return n>=r?n:i+n}function g(e,i){if(e===r)throw new Error("invert: expected non-zero number");if(i<=r)throw new Error("invert: expected positive modulus, got "+i);let n=f(e,i),a=i,s=r,o=t,c=t,h=r;for(;n!==r;){const e=a/n,i=a%n,r=s-c*e,t=o-h*e;a=n,n=i,s=c,o=h,c=r,h=t}if(a!==t)throw new Error("invert: does not exist");return f(s,i)}function m(e,i,n){if(!e.eql(e.sqr(i),n))throw new Error("Cannot find square root")}function k(e,i){const n=(e.ORDER+t)/c,a=e.pow(i,n);return m(e,a,i),a}function b(e,i){const n=(e.ORDER-h)/l,a=e.mul(i,s),r=e.pow(a,n),t=e.mul(i,r),o=e.mul(e.mul(t,s),r),c=e.mul(t,e.sub(o,e.ONE));return m(e,c,i),c}function _(e){if(e<o)throw new Error("sqrt is not defined for small field");let i=e-t,n=0;for(;i%s===r;)i/=s,n++;let a=s;const c=j(e);for(;1===I(c,a);)if(a++>1e3)throw new Error("Cannot find square root: probably non-prime P");if(1===n)return k;let h=c.pow(a,i);const u=(i+t)/s;return function(e,a){if(e.is0(a))return a;if(1!==I(e,a))throw new Error("Cannot find square root");let r=n,s=e.mul(e.ONE,h),o=e.pow(a,i),c=e.pow(a,u);for(;!e.eql(o,e.ONE);){if(e.is0(o))return e.ZERO;let i=1,n=e.sqr(o);for(;!e.eql(n,e.ONE);)if(i++,n=e.sqr(n),i===r)throw new Error("Cannot find square root");const a=t<<BigInt(r-i-1),h=e.pow(s,a);r=i,s=e.sqr(h),o=e.mul(o,s),c=e.mul(c,h)}return c}}function y(e){return e%c===o?k:e%l===h?b:e%d===p?function(e){const i=j(e),n=_(e),a=n(i,i.neg(i.ONE)),r=n(i,a),t=n(i,i.neg(a)),s=(e+u)/d;return(e,i)=>{let n=e.pow(i,s),o=e.mul(n,a);const c=e.mul(n,r),h=e.mul(n,t),u=e.eql(e.sqr(o),i),l=e.eql(e.sqr(c),i);n=e.cmov(n,o,u),o=e.cmov(h,c,l);const p=e.eql(e.sqr(o),i),d=e.cmov(n,o,p);return m(e,d,i),d}}(e):_(e)}i.isNegativeLE=(e,i)=>(f(e,i)&t)===t;const v=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function A(e,i,n){if(n<r)throw new Error("invalid exponent, negatives unsupported");if(n===r)return e.ONE;if(n===t)return i;let a=e.ONE,s=i;for(;n>r;)n&t&&(a=e.mul(a,s)),s=e.sqr(s),n>>=t;return a}function z(e,i,n=!1){const a=new Array(i.length).fill(n?e.ZERO:void 0),r=i.reduce((i,n,r)=>e.is0(n)?i:(a[r]=i,e.mul(i,n)),e.ONE),t=e.inv(r);return i.reduceRight((i,n,r)=>e.is0(n)?i:(a[r]=e.mul(i,a[r]),e.mul(i,n)),t),a}function I(e,i){const n=(e.ORDER-t)/s,a=e.pow(i,n),r=e.eql(a,e.ONE),o=e.eql(a,e.ZERO),c=e.eql(a,e.neg(e.ONE));if(!r&&!o&&!c)throw new Error("invalid Legendre symbol result");return r?1:o?0:-1}function E(e,i){void 0!==i&&(0,a.anumber)(i);const n=void 0!==i?i:e.toString(2).length;return{nBitLength:n,nByteLength:Math.ceil(n/8)}}function j(e,i,n=!1,s={}){if(e<=r)throw new Error("invalid field: expected ORDER > 0, got "+e);let o,c,h,u=!1;if("object"==typeof i&&null!=i){if(s.sqrt||n)throw new Error("cannot specify opts in two arguments");const e=i;e.BITS&&(o=e.BITS),e.sqrt&&(c=e.sqrt),"boolean"==typeof e.isLE&&(n=e.isLE),"boolean"==typeof e.modFromBytes&&(u=e.modFromBytes),h=e.allowedLengths}else"number"==typeof i&&(o=i),s.sqrt&&(c=s.sqrt);const{nBitLength:l,nByteLength:p}=E(e,o);if(p>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let d;const m=Object.freeze({ORDER:e,isLE:n,BITS:l,BYTES:p,MASK:(0,a.bitMask)(l),ZERO:r,ONE:t,allowedLengths:h,create:i=>f(i,e),isValid:i=>{if("bigint"!=typeof i)throw new Error("invalid field element: expected bigint, got "+typeof i);return r<=i&&i<e},is0:e=>e===r,isValidNot0:e=>!m.is0(e)&&m.isValid(e),isOdd:e=>(e&t)===t,neg:i=>f(-i,e),eql:(e,i)=>e===i,sqr:i=>f(i*i,e),add:(i,n)=>f(i+n,e),sub:(i,n)=>f(i-n,e),mul:(i,n)=>f(i*n,e),pow:(e,i)=>A(m,e,i),div:(i,n)=>f(i*g(n,e),e),sqrN:e=>e*e,addN:(e,i)=>e+i,subN:(e,i)=>e-i,mulN:(e,i)=>e*i,inv:i=>g(i,e),sqrt:c||(i=>(d||(d=y(e)),d(m,i))),toBytes:e=>n?(0,a.numberToBytesLE)(e,p):(0,a.numberToBytesBE)(e,p),fromBytes:(i,r=!0)=>{if(h){if(!h.includes(i.length)||i.length>p)throw new Error("Field.fromBytes: expected "+h+" bytes, got "+i.length);const e=new Uint8Array(p);e.set(i,n?0:e.length-i.length),i=e}if(i.length!==p)throw new Error("Field.fromBytes: expected "+p+" bytes, got "+i.length);let t=n?(0,a.bytesToNumberLE)(i):(0,a.bytesToNumberBE)(i);if(u&&(t=f(t,e)),!r&&!m.isValid(t))throw new Error("invalid field element: outside of range 0..ORDER");return t},invertBatch:e=>z(m,e),cmov:(e,i,n)=>n?i:e});return Object.freeze(m)}function w(e){if("bigint"!=typeof e)throw new Error("field order must be bigint");const i=e.toString(2).length;return Math.ceil(i/8)}function B(e){const i=w(e);return i+Math.ceil(i/2)}},5007:(e,i,n)=>{"use strict";const a=n(3321);e.exports=(e,i)=>{const n=a(e,null,!0),r=a(i,null,!0),t=n.compare(r);if(0===t)return null;const s=t>0,o=s?n:r,c=s?r:n,h=!!o.prerelease.length;if(c.prerelease.length&&!h){if(!c.patch&&!c.minor)return"major";if(0===c.compareMain(o))return c.minor&&!c.patch?"minor":"patch"}const u=h?"pre":"";return n.major!==r.major?u+"major":n.minor!==r.minor?u+"minor":n.patch!==r.patch?u+"patch":"prerelease"}},5145:(e,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.crypto=void 0,i.crypto="object"==typeof globalThis&&"crypto"in globalThis?globalThis.crypto:void 0},5162:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.sha256=i.ripemd160=i.pbkdf2Sha512=i.keccak256=i.hmacSha512=void 0;const a=n(9615),r=n(8941),t=n(3238),s=n(2623),o=n(2955),c=n(102),h=n(4503);i.hmacSha512=async function(e,i,n={}){if(n.hmacSha512)return await n.hmacSha512(e,i);if((0,h.isWebCryptoSupported)()){const n=await crypto.subtle.importKey("raw",e,{name:"HMAC",hash:"SHA-512"},!1,["sign"]),a=await crypto.subtle.sign("HMAC",n,i);return new Uint8Array(a)}return(0,a.hmac)(c.sha512,e,i)},i.keccak256=function(e){return(0,o.keccak_256)(e)},i.pbkdf2Sha512=async function(e,i,n,a,t={}){if(t.pbkdf2Sha512)return await t.pbkdf2Sha512(e,i,n,a);if((0,h.isWebCryptoSupported)()){const r=await crypto.subtle.importKey("raw",e,{name:"PBKDF2"},!1,["deriveBits"]),t=await crypto.subtle.deriveBits({name:"PBKDF2",salt:i,iterations:n,hash:{name:"SHA-512"}},r,8*a);return new Uint8Array(t)}return await(0,r.pbkdf2Async)(c.sha512,e,i,{c:n,dkLen:a})},i.ripemd160=function(e){return(0,t.ripemd160)(e)},i.sha256=function(e){return(0,s.sha256)(e)}},5207:(e,i,n)=>{"use strict";const a=n(4739);e.exports=(e,i)=>new a(e,i).major},5211:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.createHex=i.createBytes=i.createBigInt=i.createNumber=void 0;const a=n(5620),r=n(2011),t=n(7862),s=n(3976),o=(0,a.union)([(0,a.number)(),(0,a.bigint)(),(0,a.string)(),s.StrictHexStruct]),c=(0,a.coerce)((0,a.number)(),o,Number),h=(0,a.coerce)((0,a.bigint)(),o,BigInt),u=((0,a.union)([s.StrictHexStruct,(0,a.instance)(Uint8Array)]),(0,a.coerce)((0,a.instance)(Uint8Array),(0,a.union)([s.StrictHexStruct]),t.hexToBytes)),l=(0,a.coerce)(s.StrictHexStruct,(0,a.instance)(Uint8Array),t.bytesToHex);i.createNumber=function(e){try{const i=(0,a.create)(e,c);return(0,r.assert)(Number.isFinite(i),`Expected a number-like value, got "${e}".`),i}catch(i){if(i instanceof a.StructError)throw new Error(`Expected a number-like value, got "${e}".`);throw i}},i.createBigInt=function(e){try{return(0,a.create)(e,h)}catch(e){if(e instanceof a.StructError)throw new Error(`Expected a number-like value, got "${String(e.value)}".`);throw e}},i.createBytes=function(e){if("string"==typeof e&&"0x"===e.toLowerCase())return new Uint8Array;try{return(0,a.create)(e,u)}catch(e){if(e instanceof a.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}},i.createHex=function(e){if(e instanceof Uint8Array&&0===e.length||"string"==typeof e&&"0x"===e.toLowerCase())return"0x";try{return(0,a.create)(e,l)}catch(e){if(e instanceof a.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}}},5219:(e,i,n)=>{const a=n(4930),r=n(5682),t=n(6889),{detectLanguage:s,loadWordlist:o}=n(6712);function c({entropy:e=d(),language:i="english"}={}){const n=o(i),a=p(e),r=[];for(const e of function*(e){yield*function*(e){let i=0,n=0;for(;;){const a=i>>3;if(a>=e.byteLength)return 2047&n;const r=11-i%11,t=8*(a+1)-i;n+=f(e[a],r-t),i+=Math.min(r,t),i%11||(yield 2047&n,n=0)}}(e)}(a))r.push(n[e]);const t="japanese"===i?"　":" ";return r.join(t).trim()}function h(e){const i=e.replace(/\u3000/g," ").trim().split(" "),n=s(i);if(!n)throw new Error("Language not recognised");if(i.length%3!=0)throw new Error("Invalid length");const a=o(n),t=[];for(const e of i){const i=a.indexOf(e);if(-1===i)throw new Error("Bad word");t.push(i)}const c=11*i.length,h=32*c/33>>3,u=r.alloc(Math.ceil(c/8)),l=u.subarray(0,h);if(function(e,i){let n=0;for(;;){const a=n>>3,r=Math.floor(n/11);if(r>=i.length)break;if(a>=e.length)throw new Error("Failed to encode uints");const t=8-n%8,s=11*(r+1)-n,o=f(i[r],t-s);e[a]+=g(o,t),n+=Math.min(t,s)}}(u,t),!r.equals(u,p(l)))throw new Error("Invalid checksum");return l}function u(e){return e.trim().replace(/\u3000/," ").split(/\s+/).map(e=>e.toLowerCase()).join(" ")}function l(e){try{h(e)}catch(e){return!1}return!0}function p(e){t(!(4&e.byteLength),"seed must be a multiple of 4 bytes");const i=e.byteLength,n=i>>2,s=i+Math.ceil(n/8),o=r.alloc(i+32);return o.set(e),function(e,i=r.alloc(32)){a.crypto_hash_sha256(i,e)}(o.subarray(0,i),o.subarray(i)),o[s-1]&=255^255>>n,o.subarray(0,s)}function d(e=32){const i=r.alloc(e);return a.randombytes_buf(i),i}function f(e,i){return 0===i?e:i>0?e<<i:e>>-1*i}function g(e,i){return i<32?e&(1<<i)-1:e%2**i}e.exports={generateEntropy:d,generateMnemonic:c,normalizeMnemonic:u,validateMnemonic:l,mnemonicToEntropy:h,mnemonicToSeed:async function(e,i=""){if(!l(e=u(e)))throw new Error("Invalid mnemonic");const n=r.from(e),t=r.from("mnemonic"+i),s=r.alloc(64);return await a.extension_pbkdf2_sha512_async(s,n,t,2048,64),s},entropyToMnemonic:function(e,{language:i="english"}={}){return c({entropy:e,language:i})}}},5237:e=>{"use strict";const i=Number.MAX_SAFE_INTEGER||9007199254740991;e.exports={MAX_LENGTH:256,MAX_SAFE_COMPONENT_LENGTH:16,MAX_SAFE_BUILD_LENGTH:250,MAX_SAFE_INTEGER:i,RELEASE_TYPES:["major","premajor","minor","preminor","patch","prepatch","prerelease"],SEMVER_SPEC_VERSION:"2.0.0",FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2}},5396:(e,i,n)=>{var a=n(525);if(1!==new Uint16Array([1])[0])throw new Error("Big endian architecture is not supported.");i.crypto_shorthash_PRIMITIVE="siphash24",i.crypto_shorthash_BYTES=a.BYTES,i.crypto_shorthash_KEYBYTES=a.KEYBYTES,i.crypto_shorthash_WASM_SUPPORTED=a.WASM_SUPPORTED,i.crypto_shorthash_WASM_LOADED=a.WASM_LOADED,i.crypto_shorthash=function(e,i,n,r){a(i,n,e,r)}},5435:e=>{function i(e){return 2*e.length}e.exports={byteLength:i,toString:function(e){const i=e.byteLength;let n="";for(let a=0;a<i-1;a+=2)n+=String.fromCharCode(e[a]+256*e[a+1]);return n},write:function(e,n,a=0,r=i(n)){const t=Math.min(r,e.byteLength-a);let s=t;for(let i=0;i<n.length&&!((s-=2)<0);++i){const r=n.charCodeAt(i),t=r>>8,s=r%256;e[a+2*i]=s,e[a+2*i+1]=t}return t}}},5474:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.compressedPublicKeyLength=i.masterNodeGenerationSpec=i.privateKeyLength=i.decompressPublicKey=i.compressPublicKey=i.publicAdd=i.getPublicKey=i.publicKeyLength=i.deriveUnhardenedKeys=i.isValidPrivateKey=i.secret=i.name=i.curve=void 0;const a=n(2367),r=n(459);i.curve=r.ed25519.CURVE,i.name="ed25519",i.secret=(0,a.stringToBytes)("ed25519 seed"),i.isValidPrivateKey=e=>!0,i.deriveUnhardenedKeys=!1,i.publicKeyLength=33,i.getPublicKey=(()=>{let e=!1;return(i,n)=>{e||(r.ed25519.ExtendedPoint.BASE._setWindowSize(4),e=!0);const t=r.ed25519.getPublicKey(i);return(0,a.concatBytes)([new Uint8Array([0]),t])}})(),i.publicAdd=(e,i)=>{throw new Error("Ed25519 does not support public key derivation.")},i.compressPublicKey=e=>e,i.decompressPublicKey=e=>e,i.privateKeyLength=32,i.masterNodeGenerationSpec="slip10",i.compressedPublicKeyLength=33},5539:e=>{"use strict";e.exports=JSON.parse('["的","一","是","在","不","了","有","和","人","这","中","大","为","上","个","国","我","以","要","他","时","来","用","们","生","到","作","地","于","出","就","分","对","成","会","可","主","发","年","动","同","工","也","能","下","过","子","说","产","种","面","而","方","后","多","定","行","学","法","所","民","得","经","十","三","之","进","着","等","部","度","家","电","力","里","如","水","化","高","自","二","理","起","小","物","现","实","加","量","都","两","体","制","机","当","使","点","从","业","本","去","把","性","好","应","开","它","合","还","因","由","其","些","然","前","外","天","政","四","日","那","社","义","事","平","形","相","全","表","间","样","与","关","各","重","新","线","内","数","正","心","反","你","明","看","原","又","么","利","比","或","但","质","气","第","向","道","命","此","变","条","只","没","结","解","问","意","建","月","公","无","系","军","很","情","者","最","立","代","想","已","通","并","提","直","题","党","程","展","五","果","料","象","员","革","位","入","常","文","总","次","品","式","活","设","及","管","特","件","长","求","老","头","基","资","边","流","路","级","少","图","山","统","接","知","较","将","组","见","计","别","她","手","角","期","根","论","运","农","指","几","九","区","强","放","决","西","被","干","做","必","战","先","回","则","任","取","据","处","队","南","给","色","光","门","即","保","治","北","造","百","规","热","领","七","海","口","东","导","器","压","志","世","金","增","争","济","阶","油","思","术","极","交","受","联","什","认","六","共","权","收","证","改","清","美","再","采","转","更","单","风","切","打","白","教","速","花","带","安","场","身","车","例","真","务","具","万","每","目","至","达","走","积","示","议","声","报","斗","完","类","八","离","华","名","确","才","科","张","信","马","节","话","米","整","空","元","况","今","集","温","传","土","许","步","群","广","石","记","需","段","研","界","拉","林","律","叫","且","究","观","越","织","装","影","算","低","持","音","众","书","布","复","容","儿","须","际","商","非","验","连","断","深","难","近","矿","千","周","委","素","技","备","半","办","青","省","列","习","响","约","支","般","史","感","劳","便","团","往","酸","历","市","克","何","除","消","构","府","称","太","准","精","值","号","率","族","维","划","选","标","写","存","候","毛","亲","快","效","斯","院","查","江","型","眼","王","按","格","养","易","置","派","层","片","始","却","专","状","育","厂","京","识","适","属","圆","包","火","住","调","满","县","局","照","参","红","细","引","听","该","铁","价","严","首","底","液","官","德","随","病","苏","失","尔","死","讲","配","女","黄","推","显","谈","罪","神","艺","呢","席","含","企","望","密","批","营","项","防","举","球","英","氧","势","告","李","台","落","木","帮","轮","破","亚","师","围","注","远","字","材","排","供","河","态","封","另","施","减","树","溶","怎","止","案","言","士","均","武","固","叶","鱼","波","视","仅","费","紧","爱","左","章","早","朝","害","续","轻","服","试","食","充","兵","源","判","护","司","足","某","练","差","致","板","田","降","黑","犯","负","击","范","继","兴","似","余","坚","曲","输","修","故","城","夫","够","送","笔","船","占","右","财","吃","富","春","职","觉","汉","画","功","巴","跟","虽","杂","飞","检","吸","助","升","阳","互","初","创","抗","考","投","坏","策","古","径","换","未","跑","留","钢","曾","端","责","站","简","述","钱","副","尽","帝","射","草","冲","承","独","令","限","阿","宣","环","双","请","超","微","让","控","州","良","轴","找","否","纪","益","依","优","顶","础","载","倒","房","突","坐","粉","敌","略","客","袁","冷","胜","绝","析","块","剂","测","丝","协","诉","念","陈","仍","罗","盐","友","洋","错","苦","夜","刑","移","频","逐","靠","混","母","短","皮","终","聚","汽","村","云","哪","既","距","卫","停","烈","央","察","烧","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","游","久","菜","味","旧","模","湖","货","损","预","阻","毫","普","稳","乙","妈","植","息","扩","银","语","挥","酒","守","拿","序","纸","医","缺","雨","吗","针","刘","啊","急","唱","误","训","愿","审","附","获","茶","鲜","粮","斤","孩","脱","硫","肥","善","龙","演","父","渐","血","欢","械","掌","歌","沙","刚","攻","谓","盾","讨","晚","粒","乱","燃","矛","乎","杀","药","宁","鲁","贵","钟","煤","读","班","伯","香","介","迫","句","丰","培","握","兰","担","弦","蛋","沉","假","穿","执","答","乐","谁","顺","烟","缩","征","脸","喜","松","脚","困","异","免","背","星","福","买","染","井","概","慢","怕","磁","倍","祖","皇","促","静","补","评","翻","肉","践","尼","衣","宽","扬","棉","希","伤","操","垂","秋","宜","氢","套","督","振","架","亮","末","宪","庆","编","牛","触","映","雷","销","诗","座","居","抓","裂","胞","呼","娘","景","威","绿","晶","厚","盟","衡","鸡","孙","延","危","胶","屋","乡","临","陆","顾","掉","呀","灯","岁","措","束","耐","剧","玉","赵","跳","哥","季","课","凯","胡","额","款","绍","卷","齐","伟","蒸","殖","永","宗","苗","川","炉","岩","弱","零","杨","奏","沿","露","杆","探","滑","镇","饭","浓","航","怀","赶","库","夺","伊","灵","税","途","灭","赛","归","召","鼓","播","盘","裁","险","康","唯","录","菌","纯","借","糖","盖","横","符","私","努","堂","域","枪","润","幅","哈","竟","熟","虫","泽","脑","壤","碳","欧","遍","侧","寨","敢","彻","虑","斜","薄","庭","纳","弹","饲","伸","折","麦","湿","暗","荷","瓦","塞","床","筑","恶","户","访","塔","奇","透","梁","刀","旋","迹","卡","氯","遇","份","毒","泥","退","洗","摆","灰","彩","卖","耗","夏","择","忙","铜","献","硬","予","繁","圈","雪","函","亦","抽","篇","阵","阴","丁","尺","追","堆","雄","迎","泛","爸","楼","避","谋","吨","野","猪","旗","累","偏","典","馆","索","秦","脂","潮","爷","豆","忽","托","惊","塑","遗","愈","朱","替","纤","粗","倾","尚","痛","楚","谢","奋","购","磨","君","池","旁","碎","骨","监","捕","弟","暴","割","贯","殊","释","词","亡","壁","顿","宝","午","尘","闻","揭","炮","残","冬","桥","妇","警","综","招","吴","付","浮","遭","徐","您","摇","谷","赞","箱","隔","订","男","吹","园","纷","唐","败","宋","玻","巨","耕","坦","荣","闭","湾","键","凡","驻","锅","救","恩","剥","凝","碱","齿","截","炼","麻","纺","禁","废","盛","版","缓","净","睛","昌","婚","涉","筒","嘴","插","岸","朗","庄","街","藏","姑","贸","腐","奴","啦","惯","乘","伙","恢","匀","纱","扎","辩","耳","彪","臣","亿","璃","抵","脉","秀","萨","俄","网","舞","店","喷","纵","寸","汗","挂","洪","贺","闪","柬","爆","烯","津","稻","墙","软","勇","像","滚","厘","蒙","芳","肯","坡","柱","荡","腿","仪","旅","尾","轧","冰","贡","登","黎","削","钻","勒","逃","障","氨","郭","峰","币","港","伏","轨","亩","毕","擦","莫","刺","浪","秘","援","株","健","售","股","岛","甘","泡","睡","童","铸","汤","阀","休","汇","舍","牧","绕","炸","哲","磷","绩","朋","淡","尖","启","陷","柴","呈","徒","颜","泪","稍","忘","泵","蓝","拖","洞","授","镜","辛","壮","锋","贫","虚","弯","摩","泰","幼","廷","尊","窗","纲","弄","隶","疑","氏","宫","姐","震","瑞","怪","尤","琴","循","描","膜","违","夹","腰","缘","珠","穷","森","枝","竹","沟","催","绳","忆","邦","剩","幸","浆","栏","拥","牙","贮","礼","滤","钠","纹","罢","拍","咱","喊","袖","埃","勤","罚","焦","潜","伍","墨","欲","缝","姓","刊","饱","仿","奖","铝","鬼","丽","跨","默","挖","链","扫","喝","袋","炭","污","幕","诸","弧","励","梅","奶","洁","灾","舟","鉴","苯","讼","抱","毁","懂","寒","智","埔","寄","届","跃","渡","挑","丹","艰","贝","碰","拔","爹","戴","码","梦","芽","熔","赤","渔","哭","敬","颗","奔","铅","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","仓","魏","锐","晓","氮","兼","隐","碍","赫","拨","忠","肃","缸","牵","抢","博","巧","壳","兄","杜","讯","诚","碧","祥","柯","页","巡","矩","悲","灌","龄","伦","票","寻","桂","铺","圣","恐","恰","郑","趣","抬","荒","腾","贴","柔","滴","猛","阔","辆","妻","填","撤","储","签","闹","扰","紫","砂","递","戏","吊","陶","伐","喂","疗","瓶","婆","抚","臂","摸","忍","虾","蜡","邻","胸","巩","挤","偶","弃","槽","劲","乳","邓","吉","仁","烂","砖","租","乌","舰","伴","瓜","浅","丙","暂","燥","橡","柳","迷","暖","牌","秧","胆","详","簧","踏","瓷","谱","呆","宾","糊","洛","辉","愤","竞","隙","怒","粘","乃","绪","肩","籍","敏","涂","熙","皆","侦","悬","掘","享","纠","醒","狂","锁","淀","恨","牲","霸","爬","赏","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鸭","趋","凤","晨","畜","辈","秩","卵","署","梯","炎","滩","棋","驱","筛","峡","冒","啥","寿","译","浸","泉","帽","迟","硅","疆","贷","漏","稿","冠","嫩","胁","芯","牢","叛","蚀","奥","鸣","岭","羊","凭","串","塘","绘","酵","融","盆","锡","庙","筹","冻","辅","摄","袭","筋","拒","僚","旱","钾","鸟","漆","沈","眉","疏","添","棒","穗","硝","韩","逼","扭","侨","凉","挺","碗","栽","炒","杯","患","馏","劝","豪","辽","勃","鸿","旦","吏","拜","狗","埋","辊","掩","饮","搬","骂","辞","勾","扣","估","蒋","绒","雾","丈","朵","姆","拟","宇","辑","陕","雕","偿","蓄","崇","剪","倡","厅","咬","驶","薯","刷","斥","番","赋","奉","佛","浇","漫","曼","扇","钙","桃","扶","仔","返","俗","亏","腔","鞋","棱","覆","框","悄","叔","撞","骗","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","胀","谐","抛","霉","桑","岗","嘛","衰","盗","渗","脏","赖","涌","甜","曹","阅","肌","哩","厉","烃","纬","毅","昨","伪","症","煮","叹","钉","搭","茎","笼","酷","偷","弓","锥","恒","杰","坑","鼻","翼","纶","叙","狱","逮","罐","络","棚","抑","膨","蔬","寺","骤","穆","冶","枯","册","尸","凸","绅","坯","牺","焰","轰","欣","晋","瘦","御","锭","锦","丧","旬","锻","垄","搜","扑","邀","亭","酯","迈","舒","脆","酶","闲","忧","酚","顽","羽","涨","卸","仗","陪","辟","惩","杭","姚","肚","捉","飘","漂","昆","欺","吾","郎","烷","汁","呵","饰","萧","雅","邮","迁","燕","撒","姻","赴","宴","烦","债","帐","斑","铃","旨","醇","董","饼","雏","姿","拌","傅","腹","妥","揉","贤","拆","歪","葡","胺","丢","浩","徽","昂","垫","挡","览","贪","慰","缴","汪","慌","冯","诺","姜","谊","凶","劣","诬","耀","昏","躺","盈","骑","乔","溪","丛","卢","抹","闷","咨","刮","驾","缆","悟","摘","铒","掷","颇","幻","柄","惠","惨","佳","仇","腊","窝","涤","剑","瞧","堡","泼","葱","罩","霍","捞","胎","苍","滨","俩","捅","湘","砍","霞","邵","萄","疯","淮","遂","熊","粪","烘","宿","档","戈","驳","嫂","裕","徙","箭","捐","肠","撑","晒","辨","殿","莲","摊","搅","酱","屏","疫","哀","蔡","堵","沫","皱","畅","叠","阁","莱","敲","辖","钩","痕","坝","巷","饿","祸","丘","玄","溜","曰","逻","彭","尝","卿","妨","艇","吞","韦","怨","矮","歇"]')},5620:function(e,i,n){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,i,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(i,n);r&&!("get"in r?!i.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return i[n]}}),Object.defineProperty(e,a,r)}:function(e,i,n,a){void 0===a&&(a=n),e[a]=i[n]}),r=this&&this.__exportStar||function(e,i){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(i,n)||a(i,e,n)};Object.defineProperty(i,"__esModule",{value:!0}),r(n(7754),i),r(n(9067),i),r(n(1704),i),r(n(401),i),r(n(7792),i),r(n(5991),i)},5682:(e,i,n)=>{const a=n(6209),r=n(943),t=n(1847),s=n(6679),o=n(5435),c=255===new Uint8Array(Uint16Array.of(255).buffer)[0];function h(e){switch(e){case"ascii":return a;case"base64":return r;case"hex":return t;case"utf8":case"utf-8":case void 0:case null:return s;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return o;default:throw new Error(`Unknown encoding: ${e}`)}}function u(e){return e instanceof Uint8Array}function l(e,i,n){return"string"==typeof e?function(e,i){const n=h(i),a=new Uint8Array(n.byteLength(e));return n.write(a,e,0,a.byteLength),a}(e,i):Array.isArray(e)?function(e){const i=new Uint8Array(e.length);return i.set(e),i}(e):ArrayBuffer.isView(e)?function(e){const i=new Uint8Array(e.byteLength);return i.set(e),i}(e):function(e,i,n){return new Uint8Array(e,i,n)}(e,i,n)}function p(e,i,n,a,r){if(0===e.byteLength)return-1;if("string"==typeof n?(a=n,n=0):void 0===n?n=r?0:e.length-1:n<0&&(n+=e.byteLength),n>=e.byteLength){if(r)return-1;n=e.byteLength-1}else if(n<0){if(!r)return-1;n=0}if("string"==typeof i)i=l(i,a);else if("number"==typeof i)return i&=255,r?e.indexOf(i,n):e.lastIndexOf(i,n);if(0===i.byteLength)return-1;if(r){let a=-1;for(let r=n;r<e.byteLength;r++)if(e[r]===i[-1===a?0:r-a]){if(-1===a&&(a=r),r-a+1===i.byteLength)return a}else-1!==a&&(r-=r-a),a=-1}else{n+i.byteLength>e.byteLength&&(n=e.byteLength-i.byteLength);for(let a=n;a>=0;a--){let n=!0;for(let r=0;r<i.byteLength;r++)if(e[a+r]!==i[r]){n=!1;break}if(n)return a}}return-1}function d(e,i,n,a){return p(e,i,n,a,!0)}function f(e,i,n){const a=e[i];e[i]=e[n],e[n]=a}e.exports=i={isBuffer:u,isEncoding:function(e){try{return h(e),!0}catch{return!1}},alloc:function(e,n,a){const r=new Uint8Array(e);return void 0!==n&&i.fill(r,n,0,r.byteLength,a),r},allocUnsafe:function(e){return new Uint8Array(e)},allocUnsafeSlow:function(e){return new Uint8Array(e)},byteLength:function(e,i){return h(i).byteLength(e)},compare:function(e,i){if(e===i)return 0;const n=Math.min(e.byteLength,i.byteLength);e=new DataView(e.buffer,e.byteOffset,e.byteLength),i=new DataView(i.buffer,i.byteOffset,i.byteLength);let a=0;for(let r=n-n%4;a<r&&e.getUint32(a,c)===i.getUint32(a,c);a+=4);for(;a<n;a++){const n=e.getUint8(a),r=i.getUint8(a);if(n<r)return-1;if(n>r)return 1}return e.byteLength>i.byteLength?1:e.byteLength<i.byteLength?-1:0},concat:function(e,i){void 0===i&&(i=e.reduce((e,i)=>e+i.byteLength,0));const n=new Uint8Array(i);let a=0;for(const i of e){if(a+i.byteLength>n.byteLength){const e=i.subarray(0,n.byteLength-a);return n.set(e,a),n}n.set(i,a),a+=i.byteLength}return n},copy:function(e,i,n=0,a=0,r=e.byteLength){if(r>0&&r<a)return 0;if(r===a)return 0;if(0===e.byteLength||0===i.byteLength)return 0;if(n<0)throw new RangeError("targetStart is out of range");if(a<0||a>=e.byteLength)throw new RangeError("sourceStart is out of range");if(r<0)throw new RangeError("sourceEnd is out of range");n>=i.byteLength&&(n=i.byteLength),r>e.byteLength&&(r=e.byteLength),i.byteLength-n<r-a&&(r=i.length-n+a);const t=r-a;return e===i?i.copyWithin(n,a,r):i.set(e.subarray(a,r),n),t},equals:function(e,i){if(e===i)return!0;if(e.byteLength!==i.byteLength)return!1;const n=e.byteLength;e=new DataView(e.buffer,e.byteOffset,e.byteLength),i=new DataView(i.buffer,i.byteOffset,i.byteLength);let a=0;for(let r=n-n%4;a<r;a+=4)if(e.getUint32(a,c)!==i.getUint32(a,c))return!1;for(;a<n;a++)if(e.getUint8(a)!==i.getUint8(a))return!1;return!0},fill:function(e,i,n,a,r){if("string"==typeof i?"string"==typeof n?(r=n,n=0,a=e.byteLength):"string"==typeof a&&(r=a,a=e.byteLength):"number"==typeof i?i&=255:"boolean"==typeof i&&(i=+i),n<0||e.byteLength<n||e.byteLength<a)throw new RangeError("Out of range index");if(void 0===n&&(n=0),void 0===a&&(a=e.byteLength),a<=n)return e;if(i||(i=0),"number"==typeof i)for(let r=n;r<a;++r)e[r]=i;else{const t=(i=u(i)?i:l(i,r)).byteLength;for(let r=0;r<a-n;++r)e[r+n]=i[r%t]}return e},from:l,includes:function(e,i,n,a){return-1!==d(e,i,n,a)},indexOf:d,lastIndexOf:function(e,i,n,a){return p(e,i,n,a,!1)},swap16:function(e){const i=e.byteLength;if(i%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let n=0;n<i;n+=2)f(e,n,n+1);return e},swap32:function(e){const i=e.byteLength;if(i%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let n=0;n<i;n+=4)f(e,n,n+3),f(e,n+1,n+2);return e},swap64:function(e){const i=e.byteLength;if(i%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let n=0;n<i;n+=8)f(e,n,n+7),f(e,n+1,n+6),f(e,n+2,n+5),f(e,n+3,n+4);return e},toBuffer:function(e){return e},toString:function(e,i,n=0,a=e.byteLength){const r=e.byteLength;return n>=r||a<=n?"":(n<0&&(n=0),a>r&&(a=r),(0!==n||a<r)&&(e=e.subarray(n,a)),h(i).toString(e))},write:function(e,i,n,a,r){return void 0===n?r="utf8":void 0===a&&"string"==typeof n?(r=n,n=void 0):void 0===r&&"string"==typeof a&&(r=a,a=void 0),h(r).write(e,i,n,a)},writeDoubleLE:function(e,i,n){return void 0===n&&(n=0),new DataView(e.buffer,e.byteOffset,e.byteLength).setFloat64(n,i,!0),n+8},writeFloatLE:function(e,i,n){return void 0===n&&(n=0),new DataView(e.buffer,e.byteOffset,e.byteLength).setFloat32(n,i,!0),n+4},writeUInt32LE:function(e,i,n){return void 0===n&&(n=0),new DataView(e.buffer,e.byteOffset,e.byteLength).setUint32(n,i,!0),n+4},writeInt32LE:function(e,i,n){return void 0===n&&(n=0),new DataView(e.buffer,e.byteOffset,e.byteLength).setInt32(n,i,!0),n+4},readDoubleLE:function(e,i){return void 0===i&&(i=0),new DataView(e.buffer,e.byteOffset,e.byteLength).getFloat64(i,!0)},readFloatLE:function(e,i){return void 0===i&&(i=0),new DataView(e.buffer,e.byteOffset,e.byteLength).getFloat32(i,!0)},readUInt32LE:function(e,i){return void 0===i&&(i=0),new DataView(e.buffer,e.byteOffset,e.byteLength).getUint32(i,!0)},readInt32LE:function(e,i){return void 0===i&&(i=0),new DataView(e.buffer,e.byteOffset,e.byteLength).getInt32(i,!0)},writeDoubleBE:function(e,i,n){return void 0===n&&(n=0),new DataView(e.buffer,e.byteOffset,e.byteLength).setFloat64(n,i,!1),n+8},writeFloatBE:function(e,i,n){return void 0===n&&(n=0),new DataView(e.buffer,e.byteOffset,e.byteLength).setFloat32(n,i,!1),n+4},writeUInt32BE:function(e,i,n){return void 0===n&&(n=0),new DataView(e.buffer,e.byteOffset,e.byteLength).setUint32(n,i,!1),n+4},writeInt32BE:function(e,i,n){return void 0===n&&(n=0),new DataView(e.buffer,e.byteOffset,e.byteLength).setInt32(n,i,!1),n+4},readDoubleBE:function(e,i){return void 0===i&&(i=0),new DataView(e.buffer,e.byteOffset,e.byteLength).getFloat64(i,!1)},readFloatBE:function(e,i){return void 0===i&&(i=0),new DataView(e.buffer,e.byteOffset,e.byteLength).getFloat32(i,!1)},readUInt32BE:function(e,i){return void 0===i&&(i=0),new DataView(e.buffer,e.byteOffset,e.byteLength).getUint32(i,!1)},readInt32BE:function(e,i){return void 0===i&&(i=0),new DataView(e.buffer,e.byteOffset,e.byteLength).getInt32(i,!1)}}},5732:(e,i,n)=>{const{sodium_malloc:a}=n(7539),r=n(6889);if(1!==new Uint16Array([1])[0])throw new Error("Big endian architecture is not supported.");function t(e,i){return(e&=4294967295)<<(i&=4294967295)|e>>>32-i}function s(e,i){r(e instanceof Uint8Array,"src not byte array");let n=e[i];return n|=e[i+1]<<8,n|=e[i+2]<<16,n|=e[i+3]<<24,n}function o(e,i,n){r(e instanceof Uint8Array,"dest not byte array");var a=1,t=0;for(e[n]=255&i;++t<4&&(a*=256);)e[n+t]=i/a&255}function c(e,i,n,a,r){e[i]+=e[n],e[r]=t(e[r]^e[i],16),e[a]+=e[r],e[n]=t(e[n]^e[a],12),e[i]+=e[n],e[r]=t(e[r]^e[i],8),e[a]+=e[r],e[n]=t(e[n]^e[a],7)}e.exports={crypto_core_hchacha20_INPUTBYTES:16,LOAD32_LE:s,STORE32_LE:o,QUARTERROUND:c,crypto_core_hchacha20:function(e,i,n,a){r(e instanceof Uint8Array&&32===e.length,"out is not an array of 32 bytes"),r(n instanceof Uint8Array&&32===n.length,"k is not an array of 32 bytes"),r(null===a||a instanceof Uint8Array&&16===a.length,"c is not null or an array of 16 bytes");let t=0;const h=new Uint32Array(16);for(a?(h[0]=s(a,0),h[1]=s(a,4),h[2]=s(a,8),h[3]=s(a,12)):(h[0]=1634760805,h[1]=857760878,h[2]=2036477234,h[3]=1797285236),h[4]=s(n,0),h[5]=s(n,4),h[6]=s(n,8),h[7]=s(n,12),h[8]=s(n,16),h[9]=s(n,20),h[10]=s(n,24),h[11]=s(n,28),h[12]=s(i,0),h[13]=s(i,4),h[14]=s(i,8),h[15]=s(i,12),t=0;t<10;t++)c(h,0,4,8,12),c(h,1,5,9,13),c(h,2,6,10,14),c(h,3,7,11,15),c(h,0,5,10,15),c(h,1,6,11,12),c(h,2,7,8,13),c(h,3,4,9,14);return o(e,h[0],0),o(e,h[1],4),o(e,h[2],8),o(e,h[3],12),o(e,h[12],16),o(e,h[13],20),o(e,h[14],24),o(e,h[15],28),0},crypto_core_hchacha20_outputbytes:function(){return 32},crypto_core_hchacha20_inputbytes:function(){return 16},crypto_core_hchacha20_keybytes:function(){return 32},crypto_core_hchacha20_constbytes:function(){return 16}}},5770:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.hexToBigInt=i.hexToNumber=i.bigIntToHex=i.numberToHex=void 0;const a=n(2011),r=n(3976);i.numberToHex=e=>((0,a.assert)("number"==typeof e,"Value must be a number."),(0,a.assert)(e>=0,"Value must be a non-negative number."),(0,a.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToHex` instead."),(0,r.add0x)(e.toString(16))),i.bigIntToHex=e=>((0,a.assert)("bigint"==typeof e,"Value must be a bigint."),(0,a.assert)(e>=0,"Value must be a non-negative bigint."),(0,r.add0x)(e.toString(16))),i.hexToNumber=e=>{(0,r.assertIsHexString)(e);const i=parseInt(e,16);return(0,a.assert)(Number.isSafeInteger(i),"Value is not a safe integer. Use `hexToBigInt` instead."),i},i.hexToBigInt=e=>((0,r.assertIsHexString)(e),BigInt((0,r.add0x)(e)))},5778:(e,i,n)=>{"use strict";const a=n(8317);e.exports=(e,i,n)=>0===a(e,i,n)},5832:e=>{"use strict";class i extends Error{constructor(e,{cause:n}={}){super(e),this.name=i.name,n&&(this.cause=n),this.message=e}}e.exports={ErrorWithCause:i}},5852:(e,i,n)=>{"use strict";const a=n(4739);e.exports=(e,i)=>new a(e,i).patch},5926:(e,i,n)=>{"use strict";const a=/\s+/g;class r{constructor(e,i){if(i=s(i),e instanceof r)return e.loose===!!i.loose&&e.includePrerelease===!!i.includePrerelease?e:new r(e.raw,i);if(e instanceof o)return this.raw=e.value,this.set=[[e]],this.formatted=void 0,this;if(this.options=i,this.loose=!!i.loose,this.includePrerelease=!!i.includePrerelease,this.raw=e.trim().replace(a," "),this.set=this.raw.split("||").map(e=>this.parseRange(e.trim())).filter(e=>e.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){const e=this.set[0];if(this.set=this.set.filter(e=>!k(e[0])),0===this.set.length)this.set=[e];else if(this.set.length>1)for(const e of this.set)if(1===e.length&&b(e[0])){this.set=[e];break}}this.formatted=void 0}get range(){if(void 0===this.formatted){this.formatted="";for(let e=0;e<this.set.length;e++){e>0&&(this.formatted+="||");const i=this.set[e];for(let e=0;e<i.length;e++)e>0&&(this.formatted+=" "),this.formatted+=i[e].toString().trim()}}return this.formatted}format(){return this.range}toString(){return this.range}parseRange(e){const i=((this.options.includePrerelease&&g)|(this.options.loose&&m))+":"+e,n=t.get(i);if(n)return n;const a=this.options.loose,r=a?u[l.HYPHENRANGELOOSE]:u[l.HYPHENRANGE];e=e.replace(r,x(this.options.includePrerelease)),c("hyphen replace",e),e=e.replace(u[l.COMPARATORTRIM],p),c("comparator trim",e),e=e.replace(u[l.TILDETRIM],d),c("tilde trim",e),e=e.replace(u[l.CARETTRIM],f),c("caret trim",e);let s=e.split(" ").map(e=>y(e,this.options)).join(" ").split(/\s+/).map(e=>C(e,this.options));a&&(s=s.filter(e=>(c("loose invalid filter",e,this.options),!!e.match(u[l.COMPARATORLOOSE])))),c("range list",s);const h=new Map,b=s.map(e=>new o(e,this.options));for(const e of b){if(k(e))return[e];h.set(e.value,e)}h.size>1&&h.has("")&&h.delete("");const _=[...h.values()];return t.set(i,_),_}intersects(e,i){if(!(e instanceof r))throw new TypeError("a Range is required");return this.set.some(n=>_(n,i)&&e.set.some(e=>_(e,i)&&n.every(n=>e.every(e=>n.intersects(e,i)))))}test(e){if(!e)return!1;if("string"==typeof e)try{e=new h(e,this.options)}catch(e){return!1}for(let i=0;i<this.set.length;i++)if(S(this.set[i],e,this.options))return!0;return!1}}e.exports=r;const t=new(n(4847)),s=n(9932),o=n(2139),c=n(2207),h=n(4739),{safeRe:u,t:l,comparatorTrimReplace:p,tildeTrimReplace:d,caretTrimReplace:f}=n(4567),{FLAG_INCLUDE_PRERELEASE:g,FLAG_LOOSE:m}=n(5237),k=e=>"<0.0.0-0"===e.value,b=e=>""===e.value,_=(e,i)=>{let n=!0;const a=e.slice();let r=a.pop();for(;n&&a.length;)n=a.every(e=>r.intersects(e,i)),r=a.pop();return n},y=(e,i)=>(c("comp",e,i),e=I(e,i),c("caret",e),e=A(e,i),c("tildes",e),e=j(e,i),c("xrange",e),e=B(e,i),c("stars",e),e),v=e=>!e||"x"===e.toLowerCase()||"*"===e,A=(e,i)=>e.trim().split(/\s+/).map(e=>z(e,i)).join(" "),z=(e,i)=>{const n=i.loose?u[l.TILDELOOSE]:u[l.TILDE];return e.replace(n,(i,n,a,r,t)=>{let s;return c("tilde",e,i,n,a,r,t),v(n)?s="":v(a)?s=`>=${n}.0.0 <${+n+1}.0.0-0`:v(r)?s=`>=${n}.${a}.0 <${n}.${+a+1}.0-0`:t?(c("replaceTilde pr",t),s=`>=${n}.${a}.${r}-${t} <${n}.${+a+1}.0-0`):s=`>=${n}.${a}.${r} <${n}.${+a+1}.0-0`,c("tilde return",s),s})},I=(e,i)=>e.trim().split(/\s+/).map(e=>E(e,i)).join(" "),E=(e,i)=>{c("caret",e,i);const n=i.loose?u[l.CARETLOOSE]:u[l.CARET],a=i.includePrerelease?"-0":"";return e.replace(n,(i,n,r,t,s)=>{let o;return c("caret",e,i,n,r,t,s),v(n)?o="":v(r)?o=`>=${n}.0.0${a} <${+n+1}.0.0-0`:v(t)?o="0"===n?`>=${n}.${r}.0${a} <${n}.${+r+1}.0-0`:`>=${n}.${r}.0${a} <${+n+1}.0.0-0`:s?(c("replaceCaret pr",s),o="0"===n?"0"===r?`>=${n}.${r}.${t}-${s} <${n}.${r}.${+t+1}-0`:`>=${n}.${r}.${t}-${s} <${n}.${+r+1}.0-0`:`>=${n}.${r}.${t}-${s} <${+n+1}.0.0-0`):(c("no pr"),o="0"===n?"0"===r?`>=${n}.${r}.${t}${a} <${n}.${r}.${+t+1}-0`:`>=${n}.${r}.${t}${a} <${n}.${+r+1}.0-0`:`>=${n}.${r}.${t} <${+n+1}.0.0-0`),c("caret return",o),o})},j=(e,i)=>(c("replaceXRanges",e,i),e.split(/\s+/).map(e=>w(e,i)).join(" ")),w=(e,i)=>{e=e.trim();const n=i.loose?u[l.XRANGELOOSE]:u[l.XRANGE];return e.replace(n,(n,a,r,t,s,o)=>{c("xRange",e,n,a,r,t,s,o);const h=v(r),u=h||v(t),l=u||v(s),p=l;return"="===a&&p&&(a=""),o=i.includePrerelease?"-0":"",h?n=">"===a||"<"===a?"<0.0.0-0":"*":a&&p?(u&&(t=0),s=0,">"===a?(a=">=",u?(r=+r+1,t=0,s=0):(t=+t+1,s=0)):"<="===a&&(a="<",u?r=+r+1:t=+t+1),"<"===a&&(o="-0"),n=`${a+r}.${t}.${s}${o}`):u?n=`>=${r}.0.0${o} <${+r+1}.0.0-0`:l&&(n=`>=${r}.${t}.0${o} <${r}.${+t+1}.0-0`),c("xRange return",n),n})},B=(e,i)=>(c("replaceStars",e,i),e.trim().replace(u[l.STAR],"")),C=(e,i)=>(c("replaceGTE0",e,i),e.trim().replace(u[i.includePrerelease?l.GTE0PRE:l.GTE0],"")),x=e=>(i,n,a,r,t,s,o,c,h,u,l,p)=>`${n=v(a)?"":v(r)?`>=${a}.0.0${e?"-0":""}`:v(t)?`>=${a}.${r}.0${e?"-0":""}`:s?`>=${n}`:`>=${n}${e?"-0":""}`} ${c=v(h)?"":v(u)?`<${+h+1}.0.0-0`:v(l)?`<${h}.${+u+1}.0-0`:p?`<=${h}.${u}.${l}-${p}`:e?`<${h}.${u}.${+l+1}-0`:`<=${c}`}`.trim(),S=(e,i,n)=>{for(let n=0;n<e.length;n++)if(!e[n].test(i))return!1;if(i.prerelease.length&&!n.includePrerelease){for(let n=0;n<e.length;n++)if(c(e[n].semver),e[n].semver!==o.ANY&&e[n].semver.prerelease.length>0){const a=e[n].semver;if(a.major===i.major&&a.minor===i.minor&&a.patch===i.patch)return!0}return!1}return!0}},5940:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.wrapError=i.getErrorMessage=i.isErrorWithStack=i.isErrorWithMessage=i.isErrorWithCode=void 0;const a=n(1843),r=n(3745);function t(e){return"object"==typeof e&&null!==e&&"code"in e}function s(e){return"object"==typeof e&&null!==e&&"message"in e}i.isErrorWithCode=t,i.isErrorWithMessage=s,i.isErrorWithStack=function(e){return"object"==typeof e&&null!==e&&"stack"in e},i.getErrorMessage=function(e){return s(e)&&"string"==typeof e.message?e.message:(0,r.isNullOrUndefined)(e)?"":String(e)},i.wrapError=function(e,i){if((n=e)instanceof Error||(0,r.isObject)(n)&&"Error"===n.constructor.name){let n;return n=2===Error.length?new Error(i,{cause:e}):new a.ErrorWithCause(i,{cause:e}),t(e)&&(n.code=e.code),n}var n;return i.length>0?new Error(`${String(e)}: ${i}`):new Error(String(e))}},5960:(e,i,n)=>{"use strict";const a=n(8317);e.exports=(e,i,n)=>a(e,i,n)<0},5991:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.pick=i.partial=i.omit=i.lazy=i.dynamic=i.deprecated=i.define=i.assign=void 0;const a=n(9067),r=n(7792);i.assign=function(...e){const i="type"===e[0]?.type,n=e.map(({schema:e})=>e),a=Object.assign({},...n);return i?(0,r.type)(a):(0,r.object)(a)},i.define=function(e,i){return new a.Struct({type:e,schema:null,validator:i})},i.deprecated=function(e,i){return new a.Struct({...e,refiner:(i,n)=>void 0===i||e.refiner(i,n),validator:(n,a)=>void 0===n||(i(n,a),e.validator(n,a))})},i.dynamic=function(e){return new a.Struct({type:"dynamic",schema:null,*entries(i,n){const a=e(i,n);yield*a.entries(i,n)},validator:(i,n)=>e(i,n).validator(i,n),coercer:(i,n)=>e(i,n).coercer(i,n),refiner:(i,n)=>e(i,n).refiner(i,n)})},i.lazy=function(e){let i;return new a.Struct({type:"lazy",schema:null,*entries(n,a){i??(i=e()),yield*i.entries(n,a)},validator:(n,a)=>(i??(i=e()),i.validator(n,a)),coercer:(n,a)=>(i??(i=e()),i.coercer(n,a)),refiner:(n,a)=>(i??(i=e()),i.refiner(n,a))})},i.omit=function(e,i){const{schema:n}=e,a={...n};for(const e of i)delete a[e];return"type"===e.type?(0,r.type)(a):(0,r.object)(a)},i.partial=function(e){const i=e instanceof a.Struct,n=i?{...e.schema}:{...e};for(const e in n)n[e]=(0,r.optional)(n[e]);return i&&"type"===e.type?(0,r.type)(n):(0,r.object)(n)},i.pick=function(e,i){const{schema:n}=e,a={};for(const e of i)a[e]=n[e];return"type"===e.type?(0,r.type)(a):(0,r.object)(a)}},6209:e=>{function i(e){return e.length}e.exports={byteLength:i,toString:function(e){const i=e.byteLength;let n="";for(let a=0;a<i;a++)n+=String.fromCharCode(e[a]);return n},write:function(e,n,a=0,r=i(n)){const t=Math.min(r,e.byteLength-a);for(let i=0;i<t;i++)e[a+i]=n.charCodeAt(i);return t}}},6258:(e,i,n)=>{"use strict";const a=n(4739),r=n(5926),t=n(47);e.exports=(e,i)=>{e=new r(e,i);let n=new a("0.0.0");if(e.test(n))return n;if(n=new a("0.0.0-0"),e.test(n))return n;n=null;for(let i=0;i<e.set.length;++i){const r=e.set[i];let s=null;r.forEach(e=>{const i=new a(e.semver.version);switch(e.operator){case">":0===i.prerelease.length?i.patch++:i.prerelease.push(0),i.raw=i.format();case"":case">=":s&&!t(i,s)||(s=i);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${e.operator}`)}}),!s||n&&!t(n,s)||(n=s)}return n&&e.test(n)?n:null}},6377:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.PrimeEdwardsPoint=void 0,i.edwards=u,i.eddsa=l,i.twistedEdwards=function(e){const{CURVE:i,curveOpts:n,hash:a,eddsaOpts:r}=function(e){const i={a:e.a,d:e.d,p:e.Fp.ORDER,n:e.n,h:e.h,Gx:e.Gx,Gy:e.Gy},n={Fp:e.Fp,Fn:(0,t.Field)(i.n,e.nBitLength,!0),uvRatio:e.uvRatio},a={randomBytes:e.randomBytes,adjustScalarBytes:e.adjustScalarBytes,domain:e.domain,prehash:e.prehash,mapToCurve:e.mapToCurve};return{CURVE:i,curveOpts:n,hash:e.hash,eddsaOpts:a}}(e);return function(e,i){const n=i.Point;return Object.assign({},i,{ExtendedPoint:n,CURVE:e,nBitLength:n.Fn.BITS,nByteLength:n.Fn.BYTES})}(e,l(u(i,n),a,r))};const a=n(8627),r=n(2422),t=n(4967),s=BigInt(0),o=BigInt(1),c=BigInt(2),h=BigInt(8);function u(e,i={}){const n=(0,r._createCurveFields)("edwards",e,i,i.FpFnLE),{Fp:t,Fn:u}=n;let l=n.CURVE;const{h:p}=l;(0,a._validateObject)(i,{},{uvRatio:"function"});const d=c<<BigInt(8*u.BYTES)-o,f=e=>t.create(e),g=i.uvRatio||((e,i)=>{try{return{isValid:!0,value:t.sqrt(t.div(e,i))}}catch(e){return{isValid:!1,value:s}}});if(!function(e,i,n,a){const r=e.sqr(n),t=e.sqr(a),s=e.add(e.mul(i.a,r),t),o=e.add(e.ONE,e.mul(i.d,e.mul(r,t)));return e.eql(s,o)}(t,l,l.Gx,l.Gy))throw new Error("bad curve params: generator point");function m(e,i,n=!1){const r=n?o:s;return(0,a.aInRange)("coordinate "+e,i,r,d),i}function k(e){if(!(e instanceof y))throw new Error("ExtendedPoint expected")}const b=(0,a.memoized)((e,i)=>{const{X:n,Y:a,Z:r}=e,c=e.is0();null==i&&(i=c?h:t.inv(r));const u=f(n*i),l=f(a*i),p=t.mul(r,i);if(c)return{x:s,y:o};if(p!==o)throw new Error("invZ was invalid");return{x:u,y:l}}),_=(0,a.memoized)(e=>{const{a:i,d:n}=l;if(e.is0())throw new Error("bad point: ZERO");const{X:a,Y:r,Z:t,T:s}=e,o=f(a*a),c=f(r*r),h=f(t*t),u=f(h*h),p=f(o*i);if(f(h*f(p+c))!==f(u+f(n*f(o*c))))throw new Error("bad point: equation left != right (1)");if(f(a*r)!==f(t*s))throw new Error("bad point: equation left != right (2)");return!0});class y{constructor(e,i,n,a){this.X=m("x",e),this.Y=m("y",i),this.Z=m("z",n,!0),this.T=m("t",a),Object.freeze(this)}static CURVE(){return l}static fromAffine(e){if(e instanceof y)throw new Error("extended point not allowed");const{x:i,y:n}=e||{};return m("x",i),m("y",n),new y(i,n,o,f(i*n))}static fromBytes(e,i=!1){const n=t.BYTES,{a:r,d:c}=l;e=(0,a.copyBytes)((0,a._abytes2)(e,n,"point")),(0,a._abool2)(i,"zip215");const h=(0,a.copyBytes)(e),u=e[n-1];h[n-1]=-129&u;const p=(0,a.bytesToNumberLE)(h),m=i?d:t.ORDER;(0,a.aInRange)("point.y",p,s,m);const k=f(p*p),b=f(k-o),_=f(c*k-r);let{isValid:v,value:A}=g(b,_);if(!v)throw new Error("bad point: invalid y coordinate");const z=(A&o)===o,I=!!(128&u);if(!i&&A===s&&I)throw new Error("bad point: x=0 and x_0=1");return I!==z&&(A=f(-A)),y.fromAffine({x:A,y:p})}static fromHex(e,i=!1){return y.fromBytes((0,a.ensureBytes)("point",e),i)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}precompute(e=8,i=!0){return v.createCache(this,e),i||this.multiply(c),this}assertValidity(){_(this)}equals(e){k(e);const{X:i,Y:n,Z:a}=this,{X:r,Y:t,Z:s}=e,o=f(i*s),c=f(r*a),h=f(n*s),u=f(t*a);return o===c&&h===u}is0(){return this.equals(y.ZERO)}negate(){return new y(f(-this.X),this.Y,this.Z,f(-this.T))}double(){const{a:e}=l,{X:i,Y:n,Z:a}=this,r=f(i*i),t=f(n*n),s=f(c*f(a*a)),o=f(e*r),h=i+n,u=f(f(h*h)-r-t),p=o+t,d=p-s,g=o-t,m=f(u*d),k=f(p*g),b=f(u*g),_=f(d*p);return new y(m,k,_,b)}add(e){k(e);const{a:i,d:n}=l,{X:a,Y:r,Z:t,T:s}=this,{X:o,Y:c,Z:h,T:u}=e,p=f(a*o),d=f(r*c),g=f(s*n*u),m=f(t*h),b=f((a+r)*(o+c)-p-d),_=m-g,v=m+g,A=f(d-i*p),z=f(b*_),I=f(v*A),E=f(b*A),j=f(_*v);return new y(z,I,j,E)}subtract(e){return this.add(e.negate())}multiply(e){if(!u.isValidNot0(e))throw new Error("invalid scalar: expected 1 <= sc < curve.n");const{p:i,f:n}=v.cached(this,e,e=>(0,r.normalizeZ)(y,e));return(0,r.normalizeZ)(y,[i,n])[0]}multiplyUnsafe(e,i=y.ZERO){if(!u.isValid(e))throw new Error("invalid scalar: expected 0 <= sc < curve.n");return e===s?y.ZERO:this.is0()||e===o?this:v.unsafe(this,e,e=>(0,r.normalizeZ)(y,e),i)}isSmallOrder(){return this.multiplyUnsafe(p).is0()}isTorsionFree(){return v.unsafe(this,l.n).is0()}toAffine(e){return b(this,e)}clearCofactor(){return p===o?this:this.multiplyUnsafe(p)}toBytes(){const{x:e,y:i}=this.toAffine(),n=t.toBytes(i);return n[n.length-1]|=e&o?128:0,n}toHex(){return(0,a.bytesToHex)(this.toBytes())}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}get ex(){return this.X}get ey(){return this.Y}get ez(){return this.Z}get et(){return this.T}static normalizeZ(e){return(0,r.normalizeZ)(y,e)}static msm(e,i){return(0,r.pippenger)(y,u,e,i)}_setWindowSize(e){this.precompute(e)}toRawBytes(){return this.toBytes()}}y.BASE=new y(l.Gx,l.Gy,o,f(l.Gx*l.Gy)),y.ZERO=new y(s,o,o,s),y.Fp=t,y.Fn=u;const v=new r.wNAF(y,u.BITS);return y.BASE.precompute(8),y}function l(e,i,n={}){if("function"!=typeof i)throw new Error('"hash" function param is required');(0,a._validateObject)(n,{},{adjustScalarBytes:"function",randomBytes:"function",domain:"function",prehash:"function",mapToCurve:"function"});const{prehash:r}=n,{BASE:t,Fp:s,Fn:c}=e,h=n.randomBytes||a.randomBytes,u=n.adjustScalarBytes||(e=>e),l=n.domain||((e,i,n)=>{if((0,a._abool2)(n,"phflag"),i.length||n)throw new Error("Contexts/pre-hash are not supported");return e});function p(e){return c.create((0,a.bytesToNumberLE)(e))}function d(e){const{head:n,prefix:r,scalar:s}=function(e){const n=b.secretKey;e=(0,a.ensureBytes)("private key",e,n);const r=(0,a.ensureBytes)("hashed private key",i(e),2*n),t=u(r.slice(0,n));return{head:t,prefix:r.slice(n,2*n),scalar:p(t)}}(e),o=t.multiply(s),c=o.toBytes();return{head:n,prefix:r,scalar:s,point:o,pointBytes:c}}function f(e){return d(e).pointBytes}function g(e=Uint8Array.of(),...n){const t=(0,a.concatBytes)(...n);return p(i(l(t,(0,a.ensureBytes)("context",e),!!r)))}const m={zip215:!0},k=s.BYTES,b={secretKey:k,publicKey:k,signature:2*k,seed:k};function _(e=h(b.seed)){return(0,a._abytes2)(e,b.seed,"seed")}const y={getExtendedPublicKey:d,randomSecretKey:_,isValidSecretKey:function(e){return(0,a.isBytes)(e)&&e.length===c.BYTES},isValidPublicKey:function(i,n){try{return!!e.fromBytes(i,n)}catch(e){return!1}},toMontgomery(i){const{y:n}=e.fromBytes(i),a=b.publicKey,r=32===a;if(!r&&57!==a)throw new Error("only defined for 25519 and 448");const t=r?s.div(o+n,o-n):s.div(n-o,n+o);return s.toBytes(t)},toMontgomerySecret(e){const n=b.secretKey;(0,a._abytes2)(e,n);const r=i(e.subarray(0,n));return u(r).subarray(0,n)},randomPrivateKey:_,precompute:(i=8,n=e.BASE)=>n.precompute(i,!1)};return Object.freeze({keygen:function(e){const i=y.randomSecretKey(e);return{secretKey:i,publicKey:f(i)}},getPublicKey:f,sign:function(e,i,n={}){e=(0,a.ensureBytes)("message",e),r&&(e=r(e));const{prefix:s,scalar:o,pointBytes:h}=d(i),u=g(n.context,s,e),l=t.multiply(u).toBytes(),p=g(n.context,l,h,e),f=c.create(u+p*o);if(!c.isValid(f))throw new Error("sign failed: invalid s");const m=(0,a.concatBytes)(l,c.toBytes(f));return(0,a._abytes2)(m,b.signature,"result")},verify:function(i,n,s,o=m){const{context:c,zip215:h}=o,u=b.signature;i=(0,a.ensureBytes)("signature",i,u),n=(0,a.ensureBytes)("message",n),s=(0,a.ensureBytes)("publicKey",s,b.publicKey),void 0!==h&&(0,a._abool2)(h,"zip215"),r&&(n=r(n));const l=u/2,p=i.subarray(0,l),d=(0,a.bytesToNumberLE)(i.subarray(l,u));let f,k,_;try{f=e.fromBytes(s,h),k=e.fromBytes(p,h),_=t.multiplyUnsafe(d)}catch(e){return!1}if(!h&&f.isSmallOrder())return!1;const y=g(c,k.toBytes(),f.toBytes(),n);return k.add(f.multiplyUnsafe(y)).subtract(_).clearCofactor().is0()},utils:y,Point:e,lengths:b})}i.PrimeEdwardsPoint=class{constructor(e){this.ep=e}static fromBytes(e){(0,a.notImplemented)()}static fromHex(e){(0,a.notImplemented)()}get x(){return this.toAffine().x}get y(){return this.toAffine().y}clearCofactor(){return this}assertValidity(){this.ep.assertValidity()}toAffine(e){return this.ep.toAffine(e)}toHex(){return(0,a.bytesToHex)(this.toBytes())}toString(){return this.toHex()}isTorsionFree(){return!0}isSmallOrder(){return!1}add(e){return this.assertSame(e),this.init(this.ep.add(e.ep))}subtract(e){return this.assertSame(e),this.init(this.ep.subtract(e.ep))}multiply(e){return this.init(this.ep.multiply(e))}multiplyUnsafe(e){return this.init(this.ep.multiplyUnsafe(e))}double(){return this.init(this.ep.double())}negate(){return this.init(this.ep.negate())}precompute(e,i){return this.init(this.ep.precompute(e,i))}toRawBytes(){return this.toBytes()}}},6383:(e,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.PUBLIC_KEY_GUARD=void 0,i.PUBLIC_KEY_GUARD=Symbol("Public key guard. Do not export this from the module.")},6472:(e,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.add5L=i.add5H=i.add4H=i.add4L=i.add3H=i.add3L=i.add=i.rotlBL=i.rotlBH=i.rotlSL=i.rotlSH=i.rotr32L=i.rotr32H=i.rotrBL=i.rotrBH=i.rotrSL=i.rotrSH=i.shrSL=i.shrSH=i.toBig=i.split=i.fromBig=void 0;const n=BigInt(2**32-1),a=BigInt(32);function r(e,i=!1){return i?{h:Number(e&n),l:Number(e>>a&n)}:{h:0|Number(e>>a&n),l:0|Number(e&n)}}function t(e,i=!1){let n=new Uint32Array(e.length),a=new Uint32Array(e.length);for(let t=0;t<e.length;t++){const{h:s,l:o}=r(e[t],i);[n[t],a[t]]=[s,o]}return[n,a]}i.fromBig=r,i.split=t;const s=(e,i)=>BigInt(e>>>0)<<a|BigInt(i>>>0);i.toBig=s;const o=(e,i,n)=>e>>>n;i.shrSH=o;const c=(e,i,n)=>e<<32-n|i>>>n;i.shrSL=c;const h=(e,i,n)=>e>>>n|i<<32-n;i.rotrSH=h;const u=(e,i,n)=>e<<32-n|i>>>n;i.rotrSL=u;const l=(e,i,n)=>e<<64-n|i>>>n-32;i.rotrBH=l;const p=(e,i,n)=>e>>>n-32|i<<64-n;i.rotrBL=p;const d=(e,i)=>i;i.rotr32H=d;const f=(e,i)=>e;i.rotr32L=f;const g=(e,i,n)=>e<<n|i>>>32-n;i.rotlSH=g;const m=(e,i,n)=>i<<n|e>>>32-n;i.rotlSL=m;const k=(e,i,n)=>i<<n-32|e>>>64-n;i.rotlBH=k;const b=(e,i,n)=>e<<n-32|i>>>64-n;function _(e,i,n,a){const r=(i>>>0)+(a>>>0);return{h:e+n+(r/2**32|0)|0,l:0|r}}i.rotlBL=b,i.add=_;const y=(e,i,n)=>(e>>>0)+(i>>>0)+(n>>>0);i.add3L=y;const v=(e,i,n,a)=>i+n+a+(e/2**32|0)|0;i.add3H=v;const A=(e,i,n,a)=>(e>>>0)+(i>>>0)+(n>>>0)+(a>>>0);i.add4L=A;const z=(e,i,n,a,r)=>i+n+a+r+(e/2**32|0)|0;i.add4H=z;const I=(e,i,n,a,r)=>(e>>>0)+(i>>>0)+(n>>>0)+(a>>>0)+(r>>>0);i.add5L=I;const E=(e,i,n,a,r,t)=>i+n+a+r+t+(e/2**32|0)|0;i.add5H=E;const j={fromBig:r,split:t,toBig:s,shrSH:o,shrSL:c,rotrSH:h,rotrSL:u,rotrBH:l,rotrBL:p,rotr32H:d,rotr32L:f,rotlSH:g,rotlSL:m,rotlBH:k,rotlBL:b,add:_,add3L:y,add3H:v,add4L:A,add4H:z,add5H:E,add5L:I};i.default=j},6585:e=>{var i=1e3,n=60*i,a=60*n,r=24*a,t=7*r;function s(e,i,n,a){var r=i>=1.5*n;return Math.round(e/n)+" "+a+(r?"s":"")}e.exports=function(e,o){o=o||{};var c,h,u=typeof e;if("string"===u&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var s=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(s){var o=parseFloat(s[1]);switch((s[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*o;case"weeks":case"week":case"w":return o*t;case"days":case"day":case"d":return o*r;case"hours":case"hour":case"hrs":case"hr":case"h":return o*a;case"minutes":case"minute":case"mins":case"min":case"m":return o*n;case"seconds":case"second":case"secs":case"sec":case"s":return o*i;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return o;default:return}}}}(e);if("number"===u&&isFinite(e))return o.long?(c=e,(h=Math.abs(c))>=r?s(c,h,r,"day"):h>=a?s(c,h,a,"hour"):h>=n?s(c,h,n,"minute"):h>=i?s(c,h,i,"second"):c+" ms"):function(e){var t=Math.abs(e);return t>=r?Math.round(e/r)+"d":t>=a?Math.round(e/a)+"h":t>=n?Math.round(e/n)+"m":t>=i?Math.round(e/i)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},6667:(e,i,n)=>{const a=n(4761),r=n(3294);var t=a;e.exports=function(){return new t},e.exports.ready=function(e){r.ready(function(){e()})},e.exports.WASM_SUPPORTED=r.SUPPORTED,e.exports.WASM_LOADED=!1,e.exports.SHA512_BYTES=64,r.ready(function(i){i||(e.exports.WASM_LOADED=!0,e.exports=t=r)})},6679:e=>{function i(e){let i=0;for(let n=0,a=e.length;n<a;n++){const r=e.charCodeAt(n);if(r>=55296&&r<=56319&&n+1<a){const a=e.charCodeAt(n+1);if(a>=56320&&a<=57343){i+=4,n++;continue}}i+=r<=127?1:r<=2047?2:3}return i}let n,a;if("undefined"!=typeof TextDecoder){const e=new TextDecoder;n=function(i){return e.decode(i)}}else n=function(e){const i=e.byteLength;let n="",a=0;for(;a<i;){let r=e[a];if(r<=127){n+=String.fromCharCode(r),a++;continue}let t=0,s=0;if(r<=223?(t=1,s=31&r):r<=239?(t=2,s=15&r):r<=244&&(t=3,s=7&r),i-a-t>0){let i=0;for(;i<t;)r=e[a+i+1],s=s<<6|63&r,i+=1}else s=65533,t=i-a;n+=String.fromCodePoint(s),a+=t+1}return n};if("undefined"!=typeof TextEncoder){const e=new TextEncoder;a=function(n,a,r=0,t=i(a)){const s=Math.min(t,n.byteLength-r);return e.encodeInto(a,n.subarray(r,r+s)),s}}else a=function(e,n,a=0,r=i(n)){const t=Math.min(r,e.byteLength-a);e=e.subarray(a,a+t);let s=0,o=0;for(;s<n.length;){const i=n.codePointAt(s);if(i<=127){e[o++]=i,s++;continue}let a=0,r=0;for(i<=2047?(a=6,r=192):i<=65535?(a=12,r=224):i<=2097151&&(a=18,r=240),e[o++]=r|i>>a,a-=6;a>=0;)e[o++]=128|i>>a&63,a-=6;s+=i>=65536?2:1}return t};e.exports={byteLength:i,toString:n,write:a}},6712:(e,i,n)=>{const a=n(1819);e.exports={loadWordlist:function(e){switch(e){case"chinese_simplified":return n(5539);case"chinese_traditional":return n(4110);case"czech":return n(708);case"english":return n(2963);case"french":return n(2201);case"italian":return n(27);case"japanese":return n(3990);case"korean":return n(6717);case"portuguese":return n(1644);case"russian":return n(8778);case"spanish":return n(4843);case"turkish":return n(3891)}throw new Error("Unknown language: "+e)},detectLanguage:function(e){let i=null;for(const n of e){const e=a[n];if(!e)return null;if(1===e.length)return e[0];if(!i){i=e;continue}const r=i.filter(i=>e.includes(i));if(1===r.length)return r[0]}return i[0]}}},6717:e=>{"use strict";e.exports=JSON.parse('["가격","가끔","가난","가능","가득","가르침","가뭄","가방","가상","가슴","가운데","가을","가이드","가입","가장","가정","가족","가죽","각오","각자","간격","간부","간섭","간장","간접","간판","갈등","갈비","갈색","갈증","감각","감기","감소","감수성","감자","감정","갑자기","강남","강당","강도","강력히","강변","강북","강사","강수량","강아지","강원도","강의","강제","강조","같이","개구리","개나리","개방","개별","개선","개성","개인","객관적","거실","거액","거울","거짓","거품","걱정","건강","건물","건설","건조","건축","걸음","검사","검토","게시판","게임","겨울","견해","결과","결국","결론","결석","결승","결심","결정","결혼","경계","경고","경기","경력","경복궁","경비","경상도","경영","경우","경쟁","경제","경주","경찰","경치","경향","경험","계곡","계단","계란","계산","계속","계약","계절","계층","계획","고객","고구려","고궁","고급","고등학생","고무신","고민","고양이","고장","고전","고집","고춧가루","고통","고향","곡식","골목","골짜기","골프","공간","공개","공격","공군","공급","공기","공동","공무원","공부","공사","공식","공업","공연","공원","공장","공짜","공책","공통","공포","공항","공휴일","과목","과일","과장","과정","과학","관객","관계","관광","관념","관람","관련","관리","관습","관심","관점","관찰","광경","광고","광장","광주","괴로움","굉장히","교과서","교문","교복","교실","교양","교육","교장","교직","교통","교환","교훈","구경","구름","구멍","구별","구분","구석","구성","구속","구역","구입","구청","구체적","국가","국기","국내","국립","국물","국민","국수","국어","국왕","국적","국제","국회","군대","군사","군인","궁극적","권리","권위","권투","귀국","귀신","규정","규칙","균형","그날","그냥","그늘","그러나","그룹","그릇","그림","그제서야","그토록","극복","극히","근거","근교","근래","근로","근무","근본","근원","근육","근처","글씨","글자","금강산","금고","금년","금메달","금액","금연","금요일","금지","긍정적","기간","기관","기념","기능","기독교","기둥","기록","기름","기법","기본","기분","기쁨","기숙사","기술","기억","기업","기온","기운","기원","기적","기준","기침","기혼","기획","긴급","긴장","길이","김밥","김치","김포공항","깍두기","깜빡","깨달음","깨소금","껍질","꼭대기","꽃잎","나들이","나란히","나머지","나물","나침반","나흘","낙엽","난방","날개","날씨","날짜","남녀","남대문","남매","남산","남자","남편","남학생","낭비","낱말","내년","내용","내일","냄비","냄새","냇물","냉동","냉면","냉방","냉장고","넥타이","넷째","노동","노란색","노력","노인","녹음","녹차","녹화","논리","논문","논쟁","놀이","농구","농담","농민","농부","농업","농장","농촌","높이","눈동자","눈물","눈썹","뉴욕","느낌","늑대","능동적","능력","다방","다양성","다음","다이어트","다행","단계","단골","단독","단맛","단순","단어","단위","단점","단체","단추","단편","단풍","달걀","달러","달력","달리","닭고기","담당","담배","담요","담임","답변","답장","당근","당분간","당연히","당장","대규모","대낮","대단히","대답","대도시","대략","대량","대륙","대문","대부분","대신","대응","대장","대전","대접","대중","대책","대출","대충","대통령","대학","대한민국","대합실","대형","덩어리","데이트","도대체","도덕","도둑","도망","도서관","도심","도움","도입","도자기","도저히","도전","도중","도착","독감","독립","독서","독일","독창적","동화책","뒷모습","뒷산","딸아이","마누라","마늘","마당","마라톤","마련","마무리","마사지","마약","마요네즈","마을","마음","마이크","마중","마지막","마찬가지","마찰","마흔","막걸리","막내","막상","만남","만두","만세","만약","만일","만점","만족","만화","많이","말기","말씀","말투","맘대로","망원경","매년","매달","매력","매번","매스컴","매일","매장","맥주","먹이","먼저","먼지","멀리","메일","며느리","며칠","면담","멸치","명단","명령","명예","명의","명절","명칭","명함","모금","모니터","모델","모든","모범","모습","모양","모임","모조리","모집","모퉁이","목걸이","목록","목사","목소리","목숨","목적","목표","몰래","몸매","몸무게","몸살","몸속","몸짓","몸통","몹시","무관심","무궁화","무더위","무덤","무릎","무슨","무엇","무역","무용","무조건","무지개","무척","문구","문득","문법","문서","문제","문학","문화","물가","물건","물결","물고기","물론","물리학","물음","물질","물체","미국","미디어","미사일","미술","미역","미용실","미움","미인","미팅","미혼","민간","민족","민주","믿음","밀가루","밀리미터","밑바닥","바가지","바구니","바나나","바늘","바닥","바닷가","바람","바이러스","바탕","박물관","박사","박수","반대","반드시","반말","반발","반성","반응","반장","반죽","반지","반찬","받침","발가락","발걸음","발견","발달","발레","발목","발바닥","발생","발음","발자국","발전","발톱","발표","밤하늘","밥그릇","밥맛","밥상","밥솥","방금","방면","방문","방바닥","방법","방송","방식","방안","방울","방지","방학","방해","방향","배경","배꼽","배달","배드민턴","백두산","백색","백성","백인","백제","백화점","버릇","버섯","버튼","번개","번역","번지","번호","벌금","벌레","벌써","범위","범인","범죄","법률","법원","법적","법칙","베이징","벨트","변경","변동","변명","변신","변호사","변화","별도","별명","별일","병실","병아리","병원","보관","보너스","보라색","보람","보름","보상","보안","보자기","보장","보전","보존","보통","보편적","보험","복도","복사","복숭아","복습","볶음","본격적","본래","본부","본사","본성","본인","본질","볼펜","봉사","봉지","봉투","부근","부끄러움","부담","부동산","부문","부분","부산","부상","부엌","부인","부작용","부장","부정","부족","부지런히","부친","부탁","부품","부회장","북부","북한","분노","분량","분리","분명","분석","분야","분위기","분필","분홍색","불고기","불과","불교","불꽃","불만","불법","불빛","불안","불이익","불행","브랜드","비극","비난","비닐","비둘기","비디오","비로소","비만","비명","비밀","비바람","비빔밥","비상","비용","비율","비중","비타민","비판","빌딩","빗물","빗방울","빗줄기","빛깔","빨간색","빨래","빨리","사건","사계절","사나이","사냥","사람","사랑","사립","사모님","사물","사방","사상","사생활","사설","사슴","사실","사업","사용","사월","사장","사전","사진","사촌","사춘기","사탕","사투리","사흘","산길","산부인과","산업","산책","살림","살인","살짝","삼계탕","삼국","삼십","삼월","삼촌","상관","상금","상대","상류","상반기","상상","상식","상업","상인","상자","상점","상처","상추","상태","상표","상품","상황","새벽","색깔","색연필","생각","생명","생물","생방송","생산","생선","생신","생일","생활","서랍","서른","서명","서민","서비스","서양","서울","서적","서점","서쪽","서클","석사","석유","선거","선물","선배","선생","선수","선원","선장","선전","선택","선풍기","설거지","설날","설렁탕","설명","설문","설사","설악산","설치","설탕","섭씨","성공","성당","성명","성별","성인","성장","성적","성질","성함","세금","세미나","세상","세월","세종대왕","세탁","센터","센티미터","셋째","소규모","소극적","소금","소나기","소년","소득","소망","소문","소설","소속","소아과","소용","소원","소음","소중히","소지품","소질","소풍","소형","속담","속도","속옷","손가락","손길","손녀","손님","손등","손목","손뼉","손실","손질","손톱","손해","솔직히","솜씨","송아지","송이","송편","쇠고기","쇼핑","수건","수년","수단","수돗물","수동적","수면","수명","수박","수상","수석","수술","수시로","수업","수염","수영","수입","수준","수집","수출","수컷","수필","수학","수험생","수화기","숙녀","숙소","숙제","순간","순서","순수","순식간","순위","숟가락","술병","술집","숫자","스님","스물","스스로","스승","스웨터","스위치","스케이트","스튜디오","스트레스","스포츠","슬쩍","슬픔","습관","습기","승객","승리","승부","승용차","승진","시각","시간","시골","시금치","시나리오","시댁","시리즈","시멘트","시민","시부모","시선","시설","시스템","시아버지","시어머니","시월","시인","시일","시작","시장","시절","시점","시중","시즌","시집","시청","시합","시험","식구","식기","식당","식량","식료품","식물","식빵","식사","식생활","식초","식탁","식품","신고","신규","신념","신문","신발","신비","신사","신세","신용","신제품","신청","신체","신화","실감","실내","실력","실례","실망","실수","실습","실시","실장","실정","실질적","실천","실체","실컷","실태","실패","실험","실현","심리","심부름","심사","심장","심정","심판","쌍둥이","씨름","씨앗","아가씨","아나운서","아드님","아들","아쉬움","아스팔트","아시아","아울러","아저씨","아줌마","아직","아침","아파트","아프리카","아픔","아홉","아흔","악기","악몽","악수","안개","안경","안과","안내","안녕","안동","안방","안부","안주","알루미늄","알코올","암시","암컷","압력","앞날","앞문","애인","애정","액수","앨범","야간","야단","야옹","약간","약국","약속","약수","약점","약품","약혼녀","양념","양력","양말","양배추","양주","양파","어둠","어려움","어른","어젯밤","어쨌든","어쩌다가","어쩐지","언니","언덕","언론","언어","얼굴","얼른","얼음","얼핏","엄마","업무","업종","업체","엉덩이","엉망","엉터리","엊그제","에너지","에어컨","엔진","여건","여고생","여관","여군","여권","여대생","여덟","여동생","여든","여론","여름","여섯","여성","여왕","여인","여전히","여직원","여학생","여행","역사","역시","역할","연결","연구","연극","연기","연락","연설","연세","연속","연습","연애","연예인","연인","연장","연주","연출","연필","연합","연휴","열기","열매","열쇠","열심히","열정","열차","열흘","염려","엽서","영국","영남","영상","영양","영역","영웅","영원히","영하","영향","영혼","영화","옆구리","옆방","옆집","예감","예금","예방","예산","예상","예선","예술","예습","예식장","예약","예전","예절","예정","예컨대","옛날","오늘","오락","오랫동안","오렌지","오로지","오른발","오븐","오십","오염","오월","오전","오직","오징어","오페라","오피스텔","오히려","옥상","옥수수","온갖","온라인","온몸","온종일","온통","올가을","올림픽","올해","옷차림","와이셔츠","와인","완성","완전","왕비","왕자","왜냐하면","왠지","외갓집","외국","외로움","외삼촌","외출","외침","외할머니","왼발","왼손","왼쪽","요금","요일","요즘","요청","용기","용서","용어","우산","우선","우승","우연히","우정","우체국","우편","운동","운명","운반","운전","운행","울산","울음","움직임","웃어른","웃음","워낙","원고","원래","원서","원숭이","원인","원장","원피스","월급","월드컵","월세","월요일","웨이터","위반","위법","위성","위원","위험","위협","윗사람","유난히","유럽","유명","유물","유산","유적","유치원","유학","유행","유형","육군","육상","육십","육체","은행","음력","음료","음반","음성","음식","음악","음주","의견","의논","의문","의복","의식","의심","의외로","의욕","의원","의학","이것","이곳","이념","이놈","이달","이대로","이동","이렇게","이력서","이론적","이름","이민","이발소","이별","이불","이빨","이상","이성","이슬","이야기","이용","이웃","이월","이윽고","이익","이전","이중","이튿날","이틀","이혼","인간","인격","인공","인구","인근","인기","인도","인류","인물","인생","인쇄","인연","인원","인재","인종","인천","인체","인터넷","인하","인형","일곱","일기","일단","일대","일등","일반","일본","일부","일상","일생","일손","일요일","일월","일정","일종","일주일","일찍","일체","일치","일행","일회용","임금","임무","입대","입력","입맛","입사","입술","입시","입원","입장","입학","자가용","자격","자극","자동","자랑","자부심","자식","자신","자연","자원","자율","자전거","자정","자존심","자판","작가","작년","작성","작업","작용","작은딸","작품","잔디","잔뜩","잔치","잘못","잠깐","잠수함","잠시","잠옷","잠자리","잡지","장관","장군","장기간","장래","장례","장르","장마","장면","장모","장미","장비","장사","장소","장식","장애인","장인","장점","장차","장학금","재능","재빨리","재산","재생","재작년","재정","재채기","재판","재학","재활용","저것","저고리","저곳","저녁","저런","저렇게","저번","저울","저절로","저축","적극","적당히","적성","적용","적응","전개","전공","전기","전달","전라도","전망","전문","전반","전부","전세","전시","전용","전자","전쟁","전주","전철","전체","전통","전혀","전후","절대","절망","절반","절약","절차","점검","점수","점심","점원","점점","점차","접근","접시","접촉","젓가락","정거장","정도","정류장","정리","정말","정면","정문","정반대","정보","정부","정비","정상","정성","정오","정원","정장","정지","정치","정확히","제공","제과점","제대로","제목","제발","제법","제삿날","제안","제일","제작","제주도","제출","제품","제한","조각","조건","조금","조깅","조명","조미료","조상","조선","조용히","조절","조정","조직","존댓말","존재","졸업","졸음","종교","종로","종류","종소리","종업원","종종","종합","좌석","죄인","주관적","주름","주말","주머니","주먹","주문","주민","주방","주변","주식","주인","주일","주장","주전자","주택","준비","줄거리","줄기","줄무늬","중간","중계방송","중국","중년","중단","중독","중반","중부","중세","중소기업","중순","중앙","중요","중학교","즉석","즉시","즐거움","증가","증거","증권","증상","증세","지각","지갑","지경","지극히","지금","지급","지능","지름길","지리산","지방","지붕","지식","지역","지우개","지원","지적","지점","지진","지출","직선","직업","직원","직장","진급","진동","진로","진료","진리","진짜","진찰","진출","진통","진행","질문","질병","질서","짐작","집단","집안","집중","짜증","찌꺼기","차남","차라리","차량","차림","차별","차선","차츰","착각","찬물","찬성","참가","참기름","참새","참석","참여","참외","참조","찻잔","창가","창고","창구","창문","창밖","창작","창조","채널","채점","책가방","책방","책상","책임","챔피언","처벌","처음","천국","천둥","천장","천재","천천히","철도","철저히","철학","첫날","첫째","청년","청바지","청소","청춘","체계","체력","체온","체육","체중","체험","초등학생","초반","초밥","초상화","초순","초여름","초원","초저녁","초점","초청","초콜릿","촛불","총각","총리","총장","촬영","최근","최상","최선","최신","최악","최종","추석","추억","추진","추천","추측","축구","축소","축제","축하","출근","출발","출산","출신","출연","출입","출장","출판","충격","충고","충돌","충분히","충청도","취업","취직","취향","치약","친구","친척","칠십","칠월","칠판","침대","침묵","침실","칫솔","칭찬","카메라","카운터","칼국수","캐릭터","캠퍼스","캠페인","커튼","컨디션","컬러","컴퓨터","코끼리","코미디","콘서트","콜라","콤플렉스","콩나물","쾌감","쿠데타","크림","큰길","큰딸","큰소리","큰아들","큰어머니","큰일","큰절","클래식","클럽","킬로","타입","타자기","탁구","탁자","탄생","태권도","태양","태풍","택시","탤런트","터널","터미널","테니스","테스트","테이블","텔레비전","토론","토마토","토요일","통계","통과","통로","통신","통역","통일","통장","통제","통증","통합","통화","퇴근","퇴원","퇴직금","튀김","트럭","특급","특별","특성","특수","특징","특히","튼튼히","티셔츠","파란색","파일","파출소","판결","판단","판매","판사","팔십","팔월","팝송","패션","팩스","팩시밀리","팬티","퍼센트","페인트","편견","편의","편지","편히","평가","평균","평생","평소","평양","평일","평화","포스터","포인트","포장","포함","표면","표정","표준","표현","품목","품질","풍경","풍속","풍습","프랑스","프린터","플라스틱","피곤","피망","피아노","필름","필수","필요","필자","필통","핑계","하느님","하늘","하드웨어","하룻밤","하반기","하숙집","하순","하여튼","하지만","하천","하품","하필","학과","학교","학급","학기","학년","학력","학번","학부모","학비","학생","학술","학습","학용품","학원","학위","학자","학점","한계","한글","한꺼번에","한낮","한눈","한동안","한때","한라산","한마디","한문","한번","한복","한식","한여름","한쪽","할머니","할아버지","할인","함께","함부로","합격","합리적","항공","항구","항상","항의","해결","해군","해답","해당","해물","해석","해설","해수욕장","해안","핵심","핸드백","햄버거","햇볕","햇살","행동","행복","행사","행운","행위","향기","향상","향수","허락","허용","헬기","현관","현금","현대","현상","현실","현장","현재","현지","혈액","협력","형부","형사","형수","형식","형제","형태","형편","혜택","호기심","호남","호랑이","호박","호텔","호흡","혹시","홀로","홈페이지","홍보","홍수","홍차","화면","화분","화살","화요일","화장","화학","확보","확인","확장","확정","환갑","환경","환영","환율","환자","활기","활동","활발히","활용","활짝","회견","회관","회복","회색","회원","회장","회전","횟수","횡단보도","효율적","후반","후춧가루","훈련","훨씬","휴식","휴일","흉내","흐름","흑백","흑인","흔적","흔히","흥미","흥분","희곡","희망","희생","흰색","힘껏"]')},6743:(e,i,n)=>{const{crypto_stream_chacha20_ietf:a,crypto_stream_chacha20_ietf_xor_ic:r}=n(457),{crypto_verify_16:t}=n(8597),s=n(1353),o=n(6889),c=16,h=Number.MAX_SAFE_INTEGER,u=new Uint8Array(16);function l(e,i,n,t,p,f,g){if(null===t)return l(e,i,n,new Uint8Array(0),p,f,g);o(e.byteLength===n.byteLength,"ciphertext should be same length than message"),o(12===f.byteLength,"npub should be 'crypto_aead_chacha20poly1305_ietf_NPUBBYTES' long"),o(32===g.byteLength,"k should be 'crypto_aead_chacha20poly1305_ietf_KEYBYTES' long"),o(n.byteLength<=h,"message is too large"),o(i.byteLength<=c,"mac should be 'crypto_aead_chacha20poly1305_ietf_ABYTES' long");const m=new Uint8Array(64);var k=new Uint8Array(8);a(m,f,g);const b=new s(m);return m.fill(0),b.update(t,0,t.byteLength),b.update(u,0,16-t.byteLength&15),r(e,n,f,1,g),b.update(e,0,n.byteLength),b.update(u,0,16-n.byteLength&15),d(k,0,t.byteLength),b.update(k,0,k.byteLength),d(k,0,n.byteLength),b.update(k,0,k.byteLength),b.finish(i,0),k.fill(0),c}function p(e,i,n,l,f,g,m){if(null===f)return p(e,i,n,l,new Uint8Array(0),g,m);o(n.byteLength===e.byteLength,"message should be same length than ciphertext"),o(12===g.byteLength,"npub should be 'crypto_aead_chacha20poly1305_ietf_NPUBBYTES' long"),o(32===m.byteLength,"k should be 'crypto_aead_chacha20poly1305_ietf_KEYBYTES' long"),o(e.byteLength<=h,"message is too large"),o(l.byteLength<=c,"mac should be 'crypto_aead_chacha20poly1305_ietf_ABYTES' long");const k=new Uint8Array(64),b=new Uint8Array(8),_=new Uint8Array(c);a(k,g,m);const y=new s(k);k.fill(0),y.update(f,0,f.byteLength),y.update(u,0,16-f.byteLength&15);const v=n.byteLength;y.update(n,0,v),y.update(u,0,16-v&15),d(b,0,f.byteLength),y.update(b,0,b.byteLength),d(b,0,v),y.update(b,0,b.byteLength),y.finish(_,0),o(16===_.byteLength);const A=t(_,0,l,0);if(_.fill(0),b.fill(0),!A)throw e.fill(0),new Error("could not verify data");r(e,n,g,1,m)}function d(e,i,n){e.fill(0,0,8);const a=new DataView(e.buffer,e.byteOffset,e.byteLength);a.setUint32(i,4294967295&n,!0),a.setUint32(i+4,n/2**32&4294967295,!0)}e.exports={crypto_aead_chacha20poly1305_ietf_encrypt:function e(i,n,a,r,t,s){if(null===a)return e(i,n,new Uint8Array(0),r,t,s);o(i.byteLength===n.byteLength+c,"ciphertext should be 'crypto_aead_chacha20poly1305_ietf_ABYTES' longer than message"),o(12===t.byteLength,"npub should be 'crypto_aead_chacha20poly1305_ietf_NPUBBYTES' long"),o(32===s.byteLength,"k should be 'crypto_aead_chacha20poly1305_ietf_KEYBYTES' long"),o(n.byteLength<=h,"message is too large");const u=l(i.subarray(0,n.byteLength),i.subarray(n.byteLength),n,a,r,t,s);return n.byteLength+u},crypto_aead_chacha20poly1305_ietf_encrypt_detached:l,crypto_aead_chacha20poly1305_ietf_decrypt:function e(i,n,a,r,t,s){if(null===r)return e(i,n,a,new Uint8Array(0),t,s);if(o(i.byteLength===a.byteLength-c,"message should be 'crypto_aead_chacha20poly1305_ietf_ABYTES' shorter than ciphertext"),o(12===t.byteLength,"npub should be 'crypto_aead_chacha20poly1305_ietf_NPUBBYTES' long"),o(32===s.byteLength,"k should be 'crypto_aead_chacha20poly1305_ietf_KEYBYTES' long"),o(i.byteLength<=h,"message is too large"),a.byteLength<c)throw new Error("could not verify data");return p(i,n,a.subarray(0,a.byteLength-c),a.subarray(a.byteLength-c),r,t,s),a.byteLength-c},crypto_aead_chacha20poly1305_ietf_decrypt_detached:p,crypto_aead_chacha20poly1305_ietf_ABYTES:c,crypto_aead_chacha20poly1305_ietf_KEYBYTES:32,crypto_aead_chacha20poly1305_ietf_NPUBBYTES:12,crypto_aead_chacha20poly1305_ietf_NSECBYTES:0,crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX:h}},6864:(e,i,n)=>{"use strict";const a=n(4567),r=n(5237),t=n(4739),s=n(7660),o=n(3321),c=n(9572),h=n(911),u=n(4586),l=n(5007),p=n(5207),d=n(547),f=n(5852),g=n(4058),m=n(8317),k=n(9173),b=n(1554),_=n(7544),y=n(3400),v=n(1200),A=n(47),z=n(5960),I=n(5778),E=n(710),j=n(668),w=n(9925),B=n(3646),C=n(7425),x=n(2139),S=n(5926),Q=n(2643),T=n(4054),P=n(3777),L=n(3099),D=n(6258),U=n(7529),R=n(2944),O=n(4316),N=n(2373),F=n(8337),M=n(2196),K=n(2505);e.exports={parse:o,valid:c,clean:h,inc:u,diff:l,major:p,minor:d,patch:f,prerelease:g,compare:m,rcompare:k,compareLoose:b,compareBuild:_,sort:y,rsort:v,gt:A,lt:z,eq:I,neq:E,gte:j,lte:w,cmp:B,coerce:C,Comparator:x,Range:S,satisfies:Q,toComparators:T,maxSatisfying:P,minSatisfying:L,minVersion:D,validRange:U,outside:R,gtr:O,ltr:N,intersects:F,simplifyRange:M,subset:K,SemVer:t,re:a.re,src:a.src,tokens:a.t,SEMVER_SPEC_VERSION:r.SEMVER_SPEC_VERSION,RELEASE_TYPES:r.RELEASE_TYPES,compareIdentifiers:s.compareIdentifiers,rcompareIdentifiers:s.rcompareIdentifiers}},6871:(e,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0})},6889:e=>{e.exports=function e(n,a){if(!n){var r=new i(a);throw Error.captureStackTrace&&Error.captureStackTrace(r,e),r}};class i extends Error{}i.prototype.name="AssertionError"},6940:(e,i,n)=>{const a=n(1043);if(1!==new Uint16Array([1])[0])throw new Error("Big endian architecture is not supported.");function r(e,i){this._instance=a(e,i)}i.crypto_stream_KEYBYTES=32,i.crypto_stream_NONCEBYTES=24,i.crypto_stream_PRIMITIVE="xsalsa20",i.crypto_stream_xsalsa20_MESSAGEBYTES_MAX=Number.MAX_SAFE_INTEGER,i.crypto_stream=function(e,n,a){e.fill(0),i.crypto_stream_xor(e,e,n,a)},i.crypto_stream_xor=function(e,i,n,r){const t=a(n,r);t.update(i,e),t.final()},i.crypto_stream_xor_instance=function(e,i){return new r(e,i)},r.prototype.update=function(e,i){this._instance.update(i,e)},r.prototype.final=function(){this._instance.finalize(),this._instance=null}},6956:function(e,i,n){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,i,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(i,n);r&&!("get"in r?!i.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return i[n]}}),Object.defineProperty(e,a,r)}:function(e,i,n,a){void 0===a&&(a=n),e[a]=i[n]}),r=this&&this.__exportStar||function(e,i){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(i,n)||a(i,e,n)};Object.defineProperty(i,"__esModule",{value:!0}),i.mnemonicToSeed=i.createBip39KeyFromSeed=i.mnemonicPhraseToBytes=i.isValidBIP32PathSegment=i.getBIP44CoinTypeToAddressPathTuple=i.getBIP44AddressKeyDeriver=i.deriveBIP44AddressKey=i.BIP_44_COIN_TYPE_DEPTH=i.BIP44CoinTypeNode=i.ed25519Bip32=i.ed25519=i.secp256k1=i.SLIP10Node=i.BIP44Node=void 0;var t=n(4813);Object.defineProperty(i,"BIP44Node",{enumerable:!0,get:function(){return t.BIP44Node}});var s=n(4533);Object.defineProperty(i,"SLIP10Node",{enumerable:!0,get:function(){return s.SLIP10Node}});var o=n(2913);Object.defineProperty(i,"secp256k1",{enumerable:!0,get:function(){return o.secp256k1}}),Object.defineProperty(i,"ed25519",{enumerable:!0,get:function(){return o.ed25519}}),Object.defineProperty(i,"ed25519Bip32",{enumerable:!0,get:function(){return o.ed25519Bip32}});var c=n(482);Object.defineProperty(i,"BIP44CoinTypeNode",{enumerable:!0,get:function(){return c.BIP44CoinTypeNode}}),Object.defineProperty(i,"BIP_44_COIN_TYPE_DEPTH",{enumerable:!0,get:function(){return c.BIP_44_COIN_TYPE_DEPTH}}),Object.defineProperty(i,"deriveBIP44AddressKey",{enumerable:!0,get:function(){return c.deriveBIP44AddressKey}}),Object.defineProperty(i,"getBIP44AddressKeyDeriver",{enumerable:!0,get:function(){return c.getBIP44AddressKeyDeriver}}),r(n(4927),i);var h=n(4503);Object.defineProperty(i,"getBIP44CoinTypeToAddressPathTuple",{enumerable:!0,get:function(){return h.getBIP44CoinTypeToAddressPathTuple}}),Object.defineProperty(i,"isValidBIP32PathSegment",{enumerable:!0,get:function(){return h.isValidBIP32PathSegment}}),Object.defineProperty(i,"mnemonicPhraseToBytes",{enumerable:!0,get:function(){return h.mnemonicPhraseToBytes}});var u=n(741);Object.defineProperty(i,"createBip39KeyFromSeed",{enumerable:!0,get:function(){return u.createBip39KeyFromSeed}}),Object.defineProperty(i,"mnemonicToSeed",{enumerable:!0,get:function(){return u.mnemonicToSeed}})},6962:(e,i,n)=>{var a=n(4930),r=n(5682),t=n(7675),s=t.TRAC_PRIV_KEY_SIZE,o=t.TRAC_SIGNATURE_SIZE;e.exports={sign:function(e,i){if(!r.isBuffer(i)||!r.isBuffer(e))throw new Error("Invalid message or private key format. Expected Buffers.");if(i.length!==s)throw new Error("Invalid private key length");var n=r.alloc(o);return a.crypto_sign_detached(n,e,i),n},verify:function(e,i,n){try{return a.crypto_sign_verify_detached(e,i,n)}catch(e){console.error(e)}return!1},SIZE:o}},7004:(e,i,n)=>{const a=n(2110),r=n(6889);if(1!==new Uint16Array([1])[0])throw new Error("Big endian architecture is not supported.");e.exports={crypto_hash_sha256:function(e,i,n){return r(32===e.byteLength,"out must be 'crypto_hash_sha256_BYTES' bytes long"),a().update(i.subarray(0,n)).digest(e),0},crypto_hash_sha256_BYTES:32}},7076:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.sha512_224=i.sha512_256=i.sha384=i.sha512=i.sha224=i.sha256=i.SHA512_256=i.SHA512_224=i.SHA384=i.SHA512=i.SHA224=i.SHA256=void 0;const a=n(7202),r=n(2318),t=n(9175),s=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),o=new Uint32Array(64);class c extends a.HashMD{constructor(e=32){super(64,e,8,!1),this.A=0|a.SHA256_IV[0],this.B=0|a.SHA256_IV[1],this.C=0|a.SHA256_IV[2],this.D=0|a.SHA256_IV[3],this.E=0|a.SHA256_IV[4],this.F=0|a.SHA256_IV[5],this.G=0|a.SHA256_IV[6],this.H=0|a.SHA256_IV[7]}get(){const{A:e,B:i,C:n,D:a,E:r,F:t,G:s,H:o}=this;return[e,i,n,a,r,t,s,o]}set(e,i,n,a,r,t,s,o){this.A=0|e,this.B=0|i,this.C=0|n,this.D=0|a,this.E=0|r,this.F=0|t,this.G=0|s,this.H=0|o}process(e,i){for(let n=0;n<16;n++,i+=4)o[n]=e.getUint32(i,!1);for(let e=16;e<64;e++){const i=o[e-15],n=o[e-2],a=(0,t.rotr)(i,7)^(0,t.rotr)(i,18)^i>>>3,r=(0,t.rotr)(n,17)^(0,t.rotr)(n,19)^n>>>10;o[e]=r+o[e-7]+a+o[e-16]|0}let{A:n,B:r,C:c,D:h,E:u,F:l,G:p,H:d}=this;for(let e=0;e<64;e++){const i=d+((0,t.rotr)(u,6)^(0,t.rotr)(u,11)^(0,t.rotr)(u,25))+(0,a.Chi)(u,l,p)+s[e]+o[e]|0,f=((0,t.rotr)(n,2)^(0,t.rotr)(n,13)^(0,t.rotr)(n,22))+(0,a.Maj)(n,r,c)|0;d=p,p=l,l=u,u=h+i|0,h=c,c=r,r=n,n=i+f|0}n=n+this.A|0,r=r+this.B|0,c=c+this.C|0,h=h+this.D|0,u=u+this.E|0,l=l+this.F|0,p=p+this.G|0,d=d+this.H|0,this.set(n,r,c,h,u,l,p,d)}roundClean(){(0,t.clean)(o)}destroy(){this.set(0,0,0,0,0,0,0,0),(0,t.clean)(this.buffer)}}i.SHA256=c;class h extends c{constructor(){super(28),this.A=0|a.SHA224_IV[0],this.B=0|a.SHA224_IV[1],this.C=0|a.SHA224_IV[2],this.D=0|a.SHA224_IV[3],this.E=0|a.SHA224_IV[4],this.F=0|a.SHA224_IV[5],this.G=0|a.SHA224_IV[6],this.H=0|a.SHA224_IV[7]}}i.SHA224=h;const u=(()=>r.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(e=>BigInt(e))))(),l=(()=>u[0])(),p=(()=>u[1])(),d=new Uint32Array(80),f=new Uint32Array(80);class g extends a.HashMD{constructor(e=64){super(128,e,16,!1),this.Ah=0|a.SHA512_IV[0],this.Al=0|a.SHA512_IV[1],this.Bh=0|a.SHA512_IV[2],this.Bl=0|a.SHA512_IV[3],this.Ch=0|a.SHA512_IV[4],this.Cl=0|a.SHA512_IV[5],this.Dh=0|a.SHA512_IV[6],this.Dl=0|a.SHA512_IV[7],this.Eh=0|a.SHA512_IV[8],this.El=0|a.SHA512_IV[9],this.Fh=0|a.SHA512_IV[10],this.Fl=0|a.SHA512_IV[11],this.Gh=0|a.SHA512_IV[12],this.Gl=0|a.SHA512_IV[13],this.Hh=0|a.SHA512_IV[14],this.Hl=0|a.SHA512_IV[15]}get(){const{Ah:e,Al:i,Bh:n,Bl:a,Ch:r,Cl:t,Dh:s,Dl:o,Eh:c,El:h,Fh:u,Fl:l,Gh:p,Gl:d,Hh:f,Hl:g}=this;return[e,i,n,a,r,t,s,o,c,h,u,l,p,d,f,g]}set(e,i,n,a,r,t,s,o,c,h,u,l,p,d,f,g){this.Ah=0|e,this.Al=0|i,this.Bh=0|n,this.Bl=0|a,this.Ch=0|r,this.Cl=0|t,this.Dh=0|s,this.Dl=0|o,this.Eh=0|c,this.El=0|h,this.Fh=0|u,this.Fl=0|l,this.Gh=0|p,this.Gl=0|d,this.Hh=0|f,this.Hl=0|g}process(e,i){for(let n=0;n<16;n++,i+=4)d[n]=e.getUint32(i),f[n]=e.getUint32(i+=4);for(let e=16;e<80;e++){const i=0|d[e-15],n=0|f[e-15],a=r.rotrSH(i,n,1)^r.rotrSH(i,n,8)^r.shrSH(i,n,7),t=r.rotrSL(i,n,1)^r.rotrSL(i,n,8)^r.shrSL(i,n,7),s=0|d[e-2],o=0|f[e-2],c=r.rotrSH(s,o,19)^r.rotrBH(s,o,61)^r.shrSH(s,o,6),h=r.rotrSL(s,o,19)^r.rotrBL(s,o,61)^r.shrSL(s,o,6),u=r.add4L(t,h,f[e-7],f[e-16]),l=r.add4H(u,a,c,d[e-7],d[e-16]);d[e]=0|l,f[e]=0|u}let{Ah:n,Al:a,Bh:t,Bl:s,Ch:o,Cl:c,Dh:h,Dl:u,Eh:g,El:m,Fh:k,Fl:b,Gh:_,Gl:y,Hh:v,Hl:A}=this;for(let e=0;e<80;e++){const i=r.rotrSH(g,m,14)^r.rotrSH(g,m,18)^r.rotrBH(g,m,41),z=r.rotrSL(g,m,14)^r.rotrSL(g,m,18)^r.rotrBL(g,m,41),I=g&k^~g&_,E=m&b^~m&y,j=r.add5L(A,z,E,p[e],f[e]),w=r.add5H(j,v,i,I,l[e],d[e]),B=0|j,C=r.rotrSH(n,a,28)^r.rotrBH(n,a,34)^r.rotrBH(n,a,39),x=r.rotrSL(n,a,28)^r.rotrBL(n,a,34)^r.rotrBL(n,a,39),S=n&t^n&o^t&o,Q=a&s^a&c^s&c;v=0|_,A=0|y,_=0|k,y=0|b,k=0|g,b=0|m,({h:g,l:m}=r.add(0|h,0|u,0|w,0|B)),h=0|o,u=0|c,o=0|t,c=0|s,t=0|n,s=0|a;const T=r.add3L(B,x,Q);n=r.add3H(T,w,C,S),a=0|T}({h:n,l:a}=r.add(0|this.Ah,0|this.Al,0|n,0|a)),({h:t,l:s}=r.add(0|this.Bh,0|this.Bl,0|t,0|s)),({h:o,l:c}=r.add(0|this.Ch,0|this.Cl,0|o,0|c)),({h,l:u}=r.add(0|this.Dh,0|this.Dl,0|h,0|u)),({h:g,l:m}=r.add(0|this.Eh,0|this.El,0|g,0|m)),({h:k,l:b}=r.add(0|this.Fh,0|this.Fl,0|k,0|b)),({h:_,l:y}=r.add(0|this.Gh,0|this.Gl,0|_,0|y)),({h:v,l:A}=r.add(0|this.Hh,0|this.Hl,0|v,0|A)),this.set(n,a,t,s,o,c,h,u,g,m,k,b,_,y,v,A)}roundClean(){(0,t.clean)(d,f)}destroy(){(0,t.clean)(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}i.SHA512=g;class m extends g{constructor(){super(48),this.Ah=0|a.SHA384_IV[0],this.Al=0|a.SHA384_IV[1],this.Bh=0|a.SHA384_IV[2],this.Bl=0|a.SHA384_IV[3],this.Ch=0|a.SHA384_IV[4],this.Cl=0|a.SHA384_IV[5],this.Dh=0|a.SHA384_IV[6],this.Dl=0|a.SHA384_IV[7],this.Eh=0|a.SHA384_IV[8],this.El=0|a.SHA384_IV[9],this.Fh=0|a.SHA384_IV[10],this.Fl=0|a.SHA384_IV[11],this.Gh=0|a.SHA384_IV[12],this.Gl=0|a.SHA384_IV[13],this.Hh=0|a.SHA384_IV[14],this.Hl=0|a.SHA384_IV[15]}}i.SHA384=m;const k=Uint32Array.from([2352822216,424955298,1944164710,2312950998,502970286,855612546,1738396948,1479516111,258812777,2077511080,2011393907,79989058,1067287976,1780299464,286451373,2446758561]),b=Uint32Array.from([573645204,4230739756,2673172387,3360449730,596883563,1867755857,2520282905,1497426621,2519219938,2827943907,3193839141,1401305490,721525244,746961066,246885852,2177182882]);class _ extends g{constructor(){super(28),this.Ah=0|k[0],this.Al=0|k[1],this.Bh=0|k[2],this.Bl=0|k[3],this.Ch=0|k[4],this.Cl=0|k[5],this.Dh=0|k[6],this.Dl=0|k[7],this.Eh=0|k[8],this.El=0|k[9],this.Fh=0|k[10],this.Fl=0|k[11],this.Gh=0|k[12],this.Gl=0|k[13],this.Hh=0|k[14],this.Hl=0|k[15]}}i.SHA512_224=_;class y extends g{constructor(){super(32),this.Ah=0|b[0],this.Al=0|b[1],this.Bh=0|b[2],this.Bl=0|b[3],this.Ch=0|b[4],this.Cl=0|b[5],this.Dh=0|b[6],this.Dl=0|b[7],this.Eh=0|b[8],this.El=0|b[9],this.Fh=0|b[10],this.Fl=0|b[11],this.Gh=0|b[12],this.Gl=0|b[13],this.Hh=0|b[14],this.Hl=0|b[15]}}i.SHA512_256=y,i.sha256=(0,t.createHasher)(()=>new c),i.sha224=(0,t.createHasher)(()=>new h),i.sha512=(0,t.createHasher)(()=>new g),i.sha384=(0,t.createHasher)(()=>new m),i.sha512_256=(0,t.createHasher)(()=>new y),i.sha512_224=(0,t.createHasher)(()=>new _)},7202:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.SHA512_IV=i.SHA384_IV=i.SHA224_IV=i.SHA256_IV=i.HashMD=void 0,i.setBigUint64=r,i.Chi=function(e,i,n){return e&i^~e&n},i.Maj=function(e,i,n){return e&i^e&n^i&n};const a=n(9175);function r(e,i,n,a){if("function"==typeof e.setBigUint64)return e.setBigUint64(i,n,a);const r=BigInt(32),t=BigInt(4294967295),s=Number(n>>r&t),o=Number(n&t),c=a?4:0,h=a?0:4;e.setUint32(i+c,s,a),e.setUint32(i+h,o,a)}class t extends a.Hash{constructor(e,i,n,r){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=e,this.outputLen=i,this.padOffset=n,this.isLE=r,this.buffer=new Uint8Array(e),this.view=(0,a.createView)(this.buffer)}update(e){(0,a.aexists)(this),e=(0,a.toBytes)(e),(0,a.abytes)(e);const{view:i,buffer:n,blockLen:r}=this,t=e.length;for(let s=0;s<t;){const o=Math.min(r-this.pos,t-s);if(o===r){const i=(0,a.createView)(e);for(;r<=t-s;s+=r)this.process(i,s);continue}n.set(e.subarray(s,s+o),this.pos),this.pos+=o,s+=o,this.pos===r&&(this.process(i,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){(0,a.aexists)(this),(0,a.aoutput)(e,this),this.finished=!0;const{buffer:i,view:n,blockLen:t,isLE:s}=this;let{pos:o}=this;i[o++]=128,(0,a.clean)(this.buffer.subarray(o)),this.padOffset>t-o&&(this.process(n,0),o=0);for(let e=o;e<t;e++)i[e]=0;r(n,t-8,BigInt(8*this.length),s),this.process(n,0);const c=(0,a.createView)(e),h=this.outputLen;if(h%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const u=h/4,l=this.get();if(u>l.length)throw new Error("_sha2: outputLen bigger than state");for(let e=0;e<u;e++)c.setUint32(4*e,l[e],s)}digest(){const{buffer:e,outputLen:i}=this;this.digestInto(e);const n=e.slice(0,i);return this.destroy(),n}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:i,buffer:n,length:a,finished:r,destroyed:t,pos:s}=this;return e.destroyed=t,e.finished=r,e.length=a,e.pos=s,a%i&&e.buffer.set(n),e}clone(){return this._cloneInto()}}i.HashMD=t,i.SHA256_IV=Uint32Array.from([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),i.SHA224_IV=Uint32Array.from([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]),i.SHA384_IV=Uint32Array.from([3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]),i.SHA512_IV=Uint32Array.from([1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209])},7266:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.deriveChildKey=void 0;const a=n(2367),r=n(2600),t=n(4927),s=n(4503);async function o(e,i,n){const{curve:o,isHardened:c,childIndex:h,entropy:u,chainCode:l}=i;if("ed25519"===o.name)throw e;const p=c?h+t.BIP_32_HARDENED_OFFSET:h,d=await(0,r.generateEntropy)({chainCode:l,extension:(0,a.concatBytes)([1,u.slice(32,64),(0,s.numberToUint32)(p)])},n);return{...i,entropy:d}}i.deriveChildKey=async function(e,i){return await(0,r.deriveChildKey)(e,o,i)}},7268:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.deriveChildKey=i.derivePublicKey=i.deriveChainCode=i.derivePrivateKey=i.getKeyExtension=i.add=i.mod2Pow256=i.trunc28Mul8=i.padEnd32Bytes=i.bigIntToBytes=i.bytesToBigInt=i.toReversed=void 0;const a=n(2367),r=n(2600),t=n(4927),s=n(2913),o=n(4533),c=n(4503);i.toReversed=e=>e.slice().reverse(),i.bytesToBigInt=e=>{const n=(0,i.toReversed)(e),r=(0,a.bytesToHex)(n);return BigInt(r)},i.bigIntToBytes=e=>{const n=e.toString(16);return(0,i.toReversed)((0,a.hexToBytes)(n))},i.padEnd32Bytes=e=>(0,a.concatBytes)([e,new Uint8Array(Math.max(32-e.length,0)).fill(0)]),i.trunc28Mul8=e=>{const n=(0,i.bytesToBigInt)(e.slice(0,28))*BigInt(8);return(0,i.padEnd32Bytes)((0,i.bigIntToBytes)(n))},i.mod2Pow256=e=>(0,i.padEnd32Bytes)((0,i.bigIntToBytes)((0,s.mod)((0,i.bytesToBigInt)(e),BigInt(2)**BigInt(256)))),i.add=(e,n)=>{const a=(0,i.bytesToBigInt)(e)+(0,i.bytesToBigInt)(n);return(0,i.padEnd32Bytes)((0,i.bigIntToBytes)(a)).slice(0,32)},i.getKeyExtension=(e,i,n)=>(0,a.concatBytes)([new Uint8Array([e]),i,(0,c.numberToUint32)(n,!0)]);i.derivePrivateKey=async({parentNode:e,childIndex:n,isHardened:s},o)=>{const c=s?(0,i.getKeyExtension)(0,e.privateKeyBytes,n+t.BIP_32_HARDENED_OFFSET):(0,i.getKeyExtension)(2,e.publicKeyBytes,n),h=await(0,r.generateEntropy)({chainCode:e.chainCodeBytes,extension:c},o),u=h.subarray(0,32),l=h.subarray(32),p=e.privateKeyBytes.subarray(0,32),d=e.privateKeyBytes.subarray(32),f=(0,i.add)((0,i.trunc28Mul8)(u),p),g=(0,i.add)(l,d);return(0,a.concatBytes)([f,g])};i.deriveChainCode=async({parentNode:e,childIndex:n,isHardened:a},s)=>{const o=a?(0,i.getKeyExtension)(1,e.privateKeyBytes,n+t.BIP_32_HARDENED_OFFSET):(0,i.getKeyExtension)(3,e.publicKeyBytes,n);return(await(0,r.generateEntropy)({chainCode:e.chainCodeBytes,extension:o},s)).subarray(32)};i.derivePublicKey=async({parentNode:e,childIndex:n,curve:a},t)=>{const s=(0,i.getKeyExtension)(2,e.publicKeyBytes,n),o=(await(0,r.generateEntropy)({chainCode:e.chainCodeBytes,extension:s},t)).slice(0,32),c=a.getPublicKey((0,i.trunc28Mul8)(o));return a.publicAdd(e.publicKeyBytes,c)},i.deriveChildKey=async function(e,n){const{curve:s,node:c,path:h}=e;(0,r.validateNode)(c);const{childIndex:u,isHardened:l}=(0,r.getValidatedPath)(h,c,s);if("ed25519Bip32"!==s.name||!c)throw new Error("Unsupported curve: Only ed25519Bip32 is supported by CIP3.");const p=u+(l?t.BIP_32_HARDENED_OFFSET:0),{privateKeyBytes:d,chainCodeBytes:f,publicKeyBytes:g,masterFingerprint:m,depth:k,fingerprint:b}=c;if(d){const e={privateKeyBytes:d,chainCodeBytes:f,publicKeyBytes:g},r=await(0,i.derivePrivateKey)({parentNode:e,childIndex:u,isHardened:l},n),t=await(0,i.deriveChainCode)({parentNode:e,childIndex:u,isHardened:l},n);return o.SLIP10Node.fromExtendedKey({privateKey:(0,a.bytesToHex)(r),chainCode:(0,a.bytesToHex)(t),masterFingerprint:m,depth:k+1,parentFingerprint:b,index:p,curve:s.name},n)}(0,a.assert)(!l,"Invalid parameters: Cannot derive hardened child keys without a private key.");const _={chainCodeBytes:f,publicKeyBytes:g},y=await(0,i.derivePublicKey)({parentNode:_,childIndex:u,isHardened:!1,curve:s},n),v=await(0,i.deriveChainCode)({parentNode:_,childIndex:u,isHardened:!1},n);return o.SLIP10Node.fromExtendedKey({publicKey:(0,a.bytesToHex)(y),chainCode:(0,a.bytesToHex)(v),masterFingerprint:m,depth:k+1,parentFingerprint:b,index:p,curve:s.name},n)}},7425:(e,i,n)=>{"use strict";const a=n(4739),r=n(3321),{safeRe:t,t:s}=n(4567);e.exports=(e,i)=>{if(e instanceof a)return e;if("number"==typeof e&&(e=String(e)),"string"!=typeof e)return null;let n=null;if((i=i||{}).rtl){const a=i.includePrerelease?t[s.COERCERTLFULL]:t[s.COERCERTL];let r;for(;(r=a.exec(e))&&(!n||n.index+n[0].length!==e.length);)n&&r.index+r[0].length===n.index+n[0].length||(n=r),a.lastIndex=r.index+r[1].length+r[2].length;a.lastIndex=-1}else n=e.match(i.includePrerelease?t[s.COERCEFULL]:t[s.COERCE]);if(null===n)return null;const o=n[2],c=n[3]||"0",h=n[4]||"0",u=i.includePrerelease&&n[5]?`-${n[5]}`:"",l=i.includePrerelease&&n[6]?`+${n[6]}`:"";return r(`${o}.${c}.${h}${u}${l}`,i)}},7467:(e,i,n)=>{var a=n(4930),r=n(5682),t=n(7675).TRAC_NONCE_SIZE;e.exports={generate:function(){var e=r.alloc(t);return a.randombytes_buf(e),e},SIZE:t}},7526:(e,i)=>{"use strict";i.byteLength=function(e){var i=o(e),n=i[0],a=i[1];return 3*(n+a)/4-a},i.toByteArray=function(e){var i,n,t=o(e),s=t[0],c=t[1],h=new r(function(e,i,n){return 3*(i+n)/4-n}(0,s,c)),u=0,l=c>0?s-4:s;for(n=0;n<l;n+=4)i=a[e.charCodeAt(n)]<<18|a[e.charCodeAt(n+1)]<<12|a[e.charCodeAt(n+2)]<<6|a[e.charCodeAt(n+3)],h[u++]=i>>16&255,h[u++]=i>>8&255,h[u++]=255&i;return 2===c&&(i=a[e.charCodeAt(n)]<<2|a[e.charCodeAt(n+1)]>>4,h[u++]=255&i),1===c&&(i=a[e.charCodeAt(n)]<<10|a[e.charCodeAt(n+1)]<<4|a[e.charCodeAt(n+2)]>>2,h[u++]=i>>8&255,h[u++]=255&i),h},i.fromByteArray=function(e){for(var i,a=e.length,r=a%3,t=[],s=16383,o=0,c=a-r;o<c;o+=s)t.push(h(e,o,o+s>c?c:o+s));return 1===r?(i=e[a-1],t.push(n[i>>2]+n[i<<4&63]+"==")):2===r&&(i=(e[a-2]<<8)+e[a-1],t.push(n[i>>10]+n[i>>4&63]+n[i<<2&63]+"=")),t.join("")};for(var n=[],a=[],r="undefined"!=typeof Uint8Array?Uint8Array:Array,t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0;s<64;++s)n[s]=t[s],a[t.charCodeAt(s)]=s;function o(e){var i=e.length;if(i%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=i),[n,n===i?0:4-n%4]}function c(e){return n[e>>18&63]+n[e>>12&63]+n[e>>6&63]+n[63&e]}function h(e,i,n){for(var a,r=[],t=i;t<n;t+=3)a=(e[t]<<16&16711680)+(e[t+1]<<8&65280)+(255&e[t+2]),r.push(c(a));return r.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},7529:(e,i,n)=>{"use strict";const a=n(5926);e.exports=(e,i)=>{try{return new a(e,i).range||"*"}catch(e){return null}}},7539:(e,i,n)=>{function a(e){e.fill(0)}var r;e.exports={sodium_malloc:function(e){return new Uint8Array(e)},sodium_free:function(e){a(e),function(){if(r)return r;var e=globalThis.MessageChannel;return null==e&&({MessageChannel:e}=n(9632)),r=new e}().port1.postMessage(e.buffer,[e.buffer])},sodium_memzero:a}},7544:(e,i,n)=>{"use strict";const a=n(4739);e.exports=(e,i,n)=>{const r=new a(e,n),t=new a(i,n);return r.compare(t)||r.compareBuild(t)}},7592:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.compressedPublicKeyLength=i.masterNodeGenerationSpec=i.privateKeyLength=i.decompressPublicKey=i.compressPublicKey=i.publicAdd=i.getPublicKey=i.multiplyWithBase=i.bytesToNumberLE=i.publicKeyLength=i.deriveUnhardenedKeys=i.isValidPrivateKey=i.secret=i.name=i.curve=void 0;const a=n(2367),r=n(4967),t=n(459);function s(e,i){const n=e[i];return(0,a.assert)(void 0!==n,"Private key is too short."),n}i.curve=t.ed25519.CURVE,i.name="ed25519Bip32",i.secret=(0,a.stringToBytes)(""),i.isValidPrivateKey=e=>!(7&s(e,0)||128&s(e,31)||64&~s(e,31)),i.deriveUnhardenedKeys=!0,i.publicKeyLength=32,i.bytesToNumberLE=e=>(0,a.hexToBigInt)((0,a.bytesToHex)(Uint8Array.from(e).reverse())),i.multiplyWithBase=e=>{const n=(0,r.mod)((0,i.bytesToNumberLE)(e),i.curve.n);return t.ed25519.ExtendedPoint.BASE.multiply(n).toRawBytes()},i.getPublicKey=(e,n)=>(0,i.multiplyWithBase)(e.slice(0,32)),i.publicAdd=(e,i)=>t.ed25519.ExtendedPoint.fromHex((0,a.remove0x)((0,a.bytesToHex)(e))).add(t.ed25519.ExtendedPoint.fromHex((0,a.remove0x)((0,a.bytesToHex)(i)))).toRawBytes(),i.compressPublicKey=e=>e,i.decompressPublicKey=e=>e,i.privateKeyLength=64,i.masterNodeGenerationSpec="cip3",i.compressedPublicKeyLength=32},7660:e=>{"use strict";const i=/^[0-9]+$/,n=(e,n)=>{const a=i.test(e),r=i.test(n);return a&&r&&(e=+e,n=+n),e===n?0:a&&!r?-1:r&&!a?1:e<n?-1:1};e.exports={compareIdentifiers:n,rcompareIdentifiers:(e,i)=>n(i,e)}},7675:(e,i,n)=>{var a=n(4930),r=a.crypto_sign_PUBLICKEYBYTES,t=a.crypto_sign_SECRETKEYBYTES,s=a.crypto_sign_BYTES;e.exports={TRAC_PUB_KEY_SIZE:r,TRAC_PRIV_KEY_SIZE:t,TRAC_SIGNATURE_SIZE:s,TRAC_MNEMONIC_WORD_COUNT:[24,12],TRAC_NONCE_SIZE:32,TRAC_HASH_SIZE:32,TRAC_TOKEN_AMOUNT_SIZE_BYTES:16,TRAC_VALIDITY_SIZE_BYTES:32}},7690:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.toCaipAssetId=i.toCaipAssetType=i.toCaipAccountId=i.toCaipChainId=i.parseCaipAssetId=i.parseCaipAssetType=i.parseCaipAccountId=i.parseCaipChainId=i.isCaipAssetId=i.isCaipAssetType=i.isCaipTokenId=i.isCaipAssetReference=i.isCaipAssetNamespace=i.isCaipAccountAddress=i.isCaipAccountId=i.isCaipReference=i.isCaipNamespace=i.isCaipChainId=i.KnownCaipNamespace=i.CaipAssetTypeOrIdStruct=i.CaipAssetIdStruct=i.CaipAssetTypeStruct=i.CaipTokenIdStruct=i.CaipAssetReferenceStruct=i.CaipAssetNamespaceStruct=i.CaipAccountAddressStruct=i.CaipAccountIdStruct=i.CaipReferenceStruct=i.CaipNamespaceStruct=i.CaipChainIdStruct=i.CAIP_ASSET_ID_REGEX=i.CAIP_ASSET_TYPE_REGEX=i.CAIP_TOKEN_ID_REGEX=i.CAIP_ASSET_REFERENCE_REGEX=i.CAIP_ASSET_NAMESPACE_REGEX=i.CAIP_ACCOUNT_ADDRESS_REGEX=i.CAIP_ACCOUNT_ID_REGEX=i.CAIP_REFERENCE_REGEX=i.CAIP_NAMESPACE_REGEX=i.CAIP_CHAIN_ID_REGEX=void 0;const a=n(1805);function r(e){return"string"==typeof e&&i.CAIP_NAMESPACE_REGEX.test(e)}function t(e){return"string"==typeof e&&i.CAIP_REFERENCE_REGEX.test(e)}function s(e){return"string"==typeof e&&i.CAIP_ACCOUNT_ADDRESS_REGEX.test(e)}function o(e){return"string"==typeof e&&i.CAIP_ASSET_NAMESPACE_REGEX.test(e)}function c(e){return"string"==typeof e&&i.CAIP_ASSET_REFERENCE_REGEX.test(e)}function h(e){return"string"==typeof e&&i.CAIP_TOKEN_ID_REGEX.test(e)}var u;i.CAIP_CHAIN_ID_REGEX=/^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u,i.CAIP_NAMESPACE_REGEX=/^[-a-z0-9]{3,8}$/u,i.CAIP_REFERENCE_REGEX=/^[-_a-zA-Z0-9]{1,32}$/u,i.CAIP_ACCOUNT_ID_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u,i.CAIP_ACCOUNT_ADDRESS_REGEX=/^[-.%a-zA-Z0-9]{1,128}$/u,i.CAIP_ASSET_NAMESPACE_REGEX=/^[-a-z0-9]{3,8}$/u,i.CAIP_ASSET_REFERENCE_REGEX=/^[-.%a-zA-Z0-9]{1,128}$/u,i.CAIP_TOKEN_ID_REGEX=/^[-.%a-zA-Z0-9]{1,78}$/u,i.CAIP_ASSET_TYPE_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})$/u,i.CAIP_ASSET_ID_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})\/(?<tokenId>[-.%a-zA-Z0-9]{1,78})$/u,i.CaipChainIdStruct=(0,a.definePattern)("CaipChainId",i.CAIP_CHAIN_ID_REGEX),i.CaipNamespaceStruct=(0,a.definePattern)("CaipNamespace",i.CAIP_NAMESPACE_REGEX),i.CaipReferenceStruct=(0,a.definePattern)("CaipReference",i.CAIP_REFERENCE_REGEX),i.CaipAccountIdStruct=(0,a.definePattern)("CaipAccountId",i.CAIP_ACCOUNT_ID_REGEX),i.CaipAccountAddressStruct=(0,a.definePattern)("CaipAccountAddress",i.CAIP_ACCOUNT_ADDRESS_REGEX),i.CaipAssetNamespaceStruct=(0,a.definePattern)("CaipAssetNamespace",i.CAIP_ASSET_NAMESPACE_REGEX),i.CaipAssetReferenceStruct=(0,a.definePattern)("CaipAssetReference",i.CAIP_ASSET_REFERENCE_REGEX),i.CaipTokenIdStruct=(0,a.definePattern)("CaipTokenId",i.CAIP_TOKEN_ID_REGEX),i.CaipAssetTypeStruct=(0,a.definePattern)("CaipAssetType",i.CAIP_ASSET_TYPE_REGEX),i.CaipAssetIdStruct=(0,a.definePattern)("CaipAssetId",i.CAIP_ASSET_ID_REGEX),i.CaipAssetTypeOrIdStruct=(0,a.definePattern)("CaipAssetTypeOrId",/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})(\/(?<tokenId>[-.%a-zA-Z0-9]{1,78}))?$/u),(u=i.KnownCaipNamespace||(i.KnownCaipNamespace={})).Bip122="bip122",u.Solana="solana",u.Tron="tron",u.Eip155="eip155",u.Wallet="wallet",i.isCaipChainId=function(e){return"string"==typeof e&&i.CAIP_CHAIN_ID_REGEX.test(e)},i.isCaipNamespace=r,i.isCaipReference=t,i.isCaipAccountId=function(e){return"string"==typeof e&&i.CAIP_ACCOUNT_ID_REGEX.test(e)},i.isCaipAccountAddress=s,i.isCaipAssetNamespace=o,i.isCaipAssetReference=c,i.isCaipTokenId=h,i.isCaipAssetType=function(e){return"string"==typeof e&&i.CAIP_ASSET_TYPE_REGEX.test(e)},i.isCaipAssetId=function(e){return"string"==typeof e&&i.CAIP_ASSET_ID_REGEX.test(e)},i.parseCaipChainId=function(e){const n=i.CAIP_CHAIN_ID_REGEX.exec(e);if(!n?.groups)throw new Error("Invalid CAIP chain ID.");return{namespace:n.groups.namespace,reference:n.groups.reference}},i.parseCaipAccountId=function(e){const n=i.CAIP_ACCOUNT_ID_REGEX.exec(e);if(!n?.groups)throw new Error("Invalid CAIP account ID.");return{address:n.groups.accountAddress,chainId:n.groups.chainId,chain:{namespace:n.groups.namespace,reference:n.groups.reference}}},i.parseCaipAssetType=function(e){const n=i.CAIP_ASSET_TYPE_REGEX.exec(e);if(!n?.groups)throw new Error("Invalid CAIP asset type.");return{assetNamespace:n.groups.assetNamespace,assetReference:n.groups.assetReference,chainId:n.groups.chainId,chain:{namespace:n.groups.namespace,reference:n.groups.reference}}},i.parseCaipAssetId=function(e){const n=i.CAIP_ASSET_ID_REGEX.exec(e);if(!n?.groups)throw new Error("Invalid CAIP asset ID.");return{assetNamespace:n.groups.assetNamespace,assetReference:n.groups.assetReference,tokenId:n.groups.tokenId,chainId:n.groups.chainId,chain:{namespace:n.groups.namespace,reference:n.groups.reference}}},i.toCaipChainId=function(e,n){if(!r(e))throw new Error(`Invalid "namespace", must match: ${i.CAIP_NAMESPACE_REGEX.toString()}`);if(!t(n))throw new Error(`Invalid "reference", must match: ${i.CAIP_REFERENCE_REGEX.toString()}`);return`${e}:${n}`},i.toCaipAccountId=function(e,n,a){if(!r(e))throw new Error(`Invalid "namespace", must match: ${i.CAIP_NAMESPACE_REGEX.toString()}`);if(!t(n))throw new Error(`Invalid "reference", must match: ${i.CAIP_REFERENCE_REGEX.toString()}`);if(!s(a))throw new Error(`Invalid "accountAddress", must match: ${i.CAIP_ACCOUNT_ADDRESS_REGEX.toString()}`);return`${e}:${n}:${a}`},i.toCaipAssetType=function(e,n,a,s){if(!r(e))throw new Error(`Invalid "namespace", must match: ${i.CAIP_NAMESPACE_REGEX.toString()}`);if(!t(n))throw new Error(`Invalid "reference", must match: ${i.CAIP_REFERENCE_REGEX.toString()}`);if(!o(a))throw new Error(`Invalid "assetNamespace", must match: ${i.CAIP_ASSET_NAMESPACE_REGEX.toString()}`);if(!c(s))throw new Error(`Invalid "assetReference", must match: ${i.CAIP_ASSET_REFERENCE_REGEX.toString()}`);return`${e}:${n}/${a}:${s}`},i.toCaipAssetId=function(e,n,a,s,u){if(!r(e))throw new Error(`Invalid "namespace", must match: ${i.CAIP_NAMESPACE_REGEX.toString()}`);if(!t(n))throw new Error(`Invalid "reference", must match: ${i.CAIP_REFERENCE_REGEX.toString()}`);if(!o(a))throw new Error(`Invalid "assetNamespace", must match: ${i.CAIP_ASSET_NAMESPACE_REGEX.toString()}`);if(!c(s))throw new Error(`Invalid "assetReference", must match: ${i.CAIP_ASSET_REFERENCE_REGEX.toString()}`);if(!h(u))throw new Error(`Invalid "tokenId", must match: ${i.CAIP_TOKEN_ID_REGEX.toString()}`);return`${e}:${n}/${a}:${s}/${u}`}},7707:e=>{function i(e){var i=new Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}i.keys=()=>[],i.resolve=i,i.id=7707,e.exports=i},7754:(e,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.StructError=void 0;class n extends TypeError{constructor(e,i){let n;const{message:a,explanation:r,...t}=e,{path:s}=e,o=0===s.length?a:`At path: ${s.join(".")} -- ${a}`;super(r??o),null!=r&&(this.cause=o),Object.assign(this,t),this.name=this.constructor.name,this.failures=()=>n??(n=[e,...i()])}}i.StructError=n},7789:(e,i,n)=>{const a=n(6889),r=n(7996).randombytes_buf,t=n(2206);e.exports.crypto_kdf_PRIMITIVE="blake2b",e.exports.crypto_kdf_BYTES_MIN=16,e.exports.crypto_kdf_BYTES_MAX=64,e.exports.crypto_kdf_CONTEXTBYTES=8,e.exports.crypto_kdf_KEYBYTES=32,e.exports.crypto_kdf_derive_from_key=function(i,n,r,s){a(i.length>=e.exports.crypto_kdf_BYTES_MIN,"subkey must be at least crypto_kdf_BYTES_MIN"),a(n>=0&&n<=9007199254740991,"subkey_id must be safe integer"),a(r.length>=e.exports.crypto_kdf_CONTEXTBYTES,"context must be at least crypto_kdf_CONTEXTBYTES");var o=new Uint8Array(t.PERSONALBYTES),c=new Uint8Array(t.SALTBYTES);o.set(r,0,e.exports.crypto_kdf_CONTEXTBYTES),function(e,i){var n=1,a=0;for(e[0]=255&i;++a<8&&(n*=256);)e[a]=i/n&255}(c,n);var h=Math.min(i.length,e.exports.crypto_kdf_BYTES_MAX);t(h,s.subarray(0,e.exports.crypto_kdf_KEYBYTES),c,o,!0).final(i)},e.exports.crypto_kdf_keygen=function(i){a(i.length>=e.exports.crypto_kdf_KEYBYTES,"out.length must be crypto_kdf_KEYBYTES"),r(i.subarray(0,e.exports.crypto_kdf_KEYBYTES))}},7792:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.unknown=i.union=i.type=i.tuple=i.string=i.set=i.regexp=i.record=i.exactOptional=i.optional=i.object=i.number=i.nullable=i.never=i.map=i.literal=i.intersection=i.integer=i.instance=i.func=i.enums=i.date=i.boolean=i.bigint=i.array=i.any=void 0;const a=n(9067),r=n(639),t=n(5991);function s(){return(0,t.define)("never",()=>!1)}i.any=function(){return(0,t.define)("any",()=>!0)},i.array=function(e){return new a.Struct({type:"array",schema:e,*entries(i){if(e&&Array.isArray(i))for(const[n,a]of i.entries())yield[n,a,e]},coercer:e=>Array.isArray(e)?e.slice():e,validator:e=>Array.isArray(e)||`Expected an array value, but received: ${(0,r.print)(e)}`})},i.bigint=function(){return(0,t.define)("bigint",e=>"bigint"==typeof e)},i.boolean=function(){return(0,t.define)("boolean",e=>"boolean"==typeof e)},i.date=function(){return(0,t.define)("date",e=>e instanceof Date&&!isNaN(e.getTime())||`Expected a valid \`Date\` object, but received: ${(0,r.print)(e)}`)},i.enums=function(e){const i={},n=e.map(e=>(0,r.print)(e)).join();for(const n of e)i[n]=n;return new a.Struct({type:"enums",schema:i,validator:i=>e.includes(i)||`Expected one of \`${n}\`, but received: ${(0,r.print)(i)}`})},i.func=function(){return(0,t.define)("func",e=>"function"==typeof e||`Expected a function, but received: ${(0,r.print)(e)}`)},i.instance=function(e){return(0,t.define)("instance",i=>i instanceof e||`Expected a \`${e.name}\` instance, but received: ${(0,r.print)(i)}`)},i.integer=function(){return(0,t.define)("integer",e=>"number"==typeof e&&!isNaN(e)&&Number.isInteger(e)||`Expected an integer, but received: ${(0,r.print)(e)}`)},i.intersection=function(e){return new a.Struct({type:"intersection",schema:null,*entries(i,n){for(const{entries:a}of e)yield*a(i,n)},*validator(i,n){for(const{validator:a}of e)yield*a(i,n)},*refiner(i,n){for(const{refiner:a}of e)yield*a(i,n)}})},i.literal=function(e){const i=(0,r.print)(e),n=typeof e;return new a.Struct({type:"literal",schema:"string"===n||"number"===n||"boolean"===n?e:null,validator:n=>n===e||`Expected the literal \`${i}\`, but received: ${(0,r.print)(n)}`})},i.map=function(e,i){return new a.Struct({type:"map",schema:null,*entries(n){if(e&&i&&n instanceof Map)for(const[a,r]of n.entries())yield[a,a,e],yield[a,r,i]},coercer:e=>e instanceof Map?new Map(e):e,validator:e=>e instanceof Map||`Expected a \`Map\` object, but received: ${(0,r.print)(e)}`})},i.never=s,i.nullable=function(e){return new a.Struct({...e,validator:(i,n)=>null===i||e.validator(i,n),refiner:(i,n)=>null===i||e.refiner(i,n)})},i.number=function(){return(0,t.define)("number",e=>"number"==typeof e&&!isNaN(e)||`Expected a number, but received: ${(0,r.print)(e)}`)},i.object=function(e){const i=e?Object.keys(e):[],n=s();return new a.Struct({type:"object",schema:e??null,*entries(t){if(e&&(0,r.isObject)(t)){const r=new Set(Object.keys(t));for(const n of i){r.delete(n);const i=e[n];a.ExactOptionalStruct.isExactOptional(i)&&!Object.prototype.hasOwnProperty.call(t,n)||(yield[n,t[n],e[n]])}for(const e of r)yield[e,t[e],n]}},validator:e=>(0,r.isObject)(e)||`Expected an object, but received: ${(0,r.print)(e)}`,coercer:e=>(0,r.isObject)(e)?{...e}:e})},i.optional=function(e){return new a.Struct({...e,validator:(i,n)=>void 0===i||e.validator(i,n),refiner:(i,n)=>void 0===i||e.refiner(i,n)})},i.exactOptional=function(e){return new a.ExactOptionalStruct(e)},i.record=function(e,i){return new a.Struct({type:"record",schema:null,*entries(n){if((0,r.isObject)(n))for(const a in n){const r=n[a];yield[a,a,e],yield[a,r,i]}},validator:e=>(0,r.isObject)(e)||`Expected an object, but received: ${(0,r.print)(e)}`})},i.regexp=function(){return(0,t.define)("regexp",e=>e instanceof RegExp)},i.set=function(e){return new a.Struct({type:"set",schema:null,*entries(i){if(e&&i instanceof Set)for(const n of i)yield[n,n,e]},coercer:e=>e instanceof Set?new Set(e):e,validator:e=>e instanceof Set||`Expected a \`Set\` object, but received: ${(0,r.print)(e)}`})},i.string=function(){return(0,t.define)("string",e=>"string"==typeof e||`Expected a string, but received: ${(0,r.print)(e)}`)},i.tuple=function(e){const i=s();return new a.Struct({type:"tuple",schema:null,*entries(n){if(Array.isArray(n)){const a=Math.max(e.length,n.length);for(let r=0;r<a;r++)yield[r,n[r],e[r]||i]}},validator:e=>Array.isArray(e)||`Expected an array, but received: ${(0,r.print)(e)}`})},i.type=function(e){const i=Object.keys(e);return new a.Struct({type:"type",schema:e,*entries(n){if((0,r.isObject)(n))for(const a of i)yield[a,n[a],e[a]]},validator:e=>(0,r.isObject)(e)||`Expected an object, but received: ${(0,r.print)(e)}`,coercer:e=>(0,r.isObject)(e)?{...e}:e})},i.union=function(e){const i=e.map(e=>e.type).join(" | ");return new a.Struct({type:"union",schema:null,coercer(i){for(const n of e){const[e,a]=n.validate(i,{coerce:!0});if(!e)return a}return i},validator(n,a){const t=[];for(const i of e){const[...e]=(0,r.run)(n,i,a),[s]=e;if(!s?.[0])return[];for(const[i]of e)i&&t.push(i)}return[`Expected the value to satisfy a union of \`${i}\`, but received: ${(0,r.print)(n)}`,...t]}})},i.unknown=function(){return(0,t.define)("unknown",()=>!0)}},7822:(e,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.wordlist=void 0,i.wordlist="abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nchild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nkey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nseed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\ntypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo".split("\n")},7833:(e,i,n)=>{i.formatArgs=function(i){if(i[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+i[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const n="color: "+this.color;i.splice(1,0,n,"color: inherit");let a=0,r=0;i[0].replace(/%[a-zA-Z%]/g,e=>{"%%"!==e&&(a++,"%c"===e&&(r=a))}),i.splice(r,0,n)},i.save=function(e){try{e?i.storage.setItem("debug",e):i.storage.removeItem("debug")}catch(e){}},i.load=function(){let e;try{e=i.storage.getItem("debug")||i.storage.getItem("DEBUG")}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e},i.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;let e;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&(e=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(e[1],10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},i.storage=function(){try{return localStorage}catch(e){}}(),i.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),i.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],i.log=console.debug||console.log||(()=>{}),e.exports=n(736)(i);const{formatters:a}=e.exports;a.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},7862:(e,i,n)=>{"use strict";var a=n(8287).hp;Object.defineProperty(i,"__esModule",{value:!0}),i.areUint8ArraysEqual=i.createDataView=i.concatBytes=i.valueToBytes=i.base64ToBytes=i.stringToBytes=i.numberToBytes=i.signedBigIntToBytes=i.bigIntToBytes=i.hexToBytes=i.bytesToBase64=i.bytesToString=i.bytesToNumber=i.bytesToSignedBigInt=i.bytesToBigInt=i.bytesToHex=i.assertIsBytes=i.isBytes=void 0;const r=n(3203),t=n(2011),s=n(3976),o=function(){const e=[];return()=>{if(0===e.length)for(let i=0;i<256;i++)e.push(i.toString(16).padStart(2,"0"));return e}}();function c(e){return e instanceof Uint8Array}function h(e){(0,t.assert)(c(e),"Value must be a Uint8Array.")}function u(e){if(h(e),0===e.length)return"0x";const i=o(),n=new Array(e.length);for(let a=0;a<e.length;a++)n[a]=i[e[a]];return(0,s.add0x)(n.join(""))}function l(e){h(e);const i=u(e);return BigInt(i)}function p(e){if("0x"===e?.toLowerCase?.())return new Uint8Array;(0,s.assertIsHexString)(e);const i=(0,s.remove0x)(e).toLowerCase(),n=i.length%2==0?i:`0${i}`,a=new Uint8Array(n.length/2);for(let e=0;e<a.length;e++){const i=n.charCodeAt(2*e),r=n.charCodeAt(2*e+1),t=i-(i<58?48:87),s=r-(r<58?48:87);a[e]=16*t+s}return a}function d(e){return(0,t.assert)("bigint"==typeof e,"Value must be a bigint."),(0,t.assert)(e>=BigInt(0),"Value must be a non-negative bigint."),p(e.toString(16))}function f(e){return(0,t.assert)("number"==typeof e,"Value must be a number."),(0,t.assert)(e>=0,"Value must be a non-negative number."),(0,t.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToBytes` instead."),p(e.toString(16))}function g(e){return(0,t.assert)("string"==typeof e,"Value must be a string."),(new TextEncoder).encode(e)}function m(e){if("bigint"==typeof e)return d(e);if("number"==typeof e)return f(e);if("string"==typeof e)return e.startsWith("0x")?p(e):g(e);if(c(e))return e;throw new TypeError(`Unsupported value type: "${typeof e}".`)}i.isBytes=c,i.assertIsBytes=h,i.bytesToHex=u,i.bytesToBigInt=l,i.bytesToSignedBigInt=function(e){h(e);let i=BigInt(0);for(const n of e)i=(i<<BigInt(8))+BigInt(n);return BigInt.asIntN(8*e.length,i)},i.bytesToNumber=function(e){h(e);const i=l(e);return(0,t.assert)(i<=BigInt(Number.MAX_SAFE_INTEGER),"Number is not a safe integer. Use `bytesToBigInt` instead."),Number(i)},i.bytesToString=function(e){return h(e),(new TextDecoder).decode(e)},i.bytesToBase64=function(e){return h(e),r.base64.encode(e)},i.hexToBytes=p,i.bigIntToBytes=d,i.signedBigIntToBytes=function(e,i){(0,t.assert)("bigint"==typeof e,"Value must be a bigint."),(0,t.assert)("number"==typeof i,"Byte length must be a number."),(0,t.assert)(i>0,"Byte length must be greater than 0."),(0,t.assert)(function(e,i){(0,t.assert)(i>0);const n=e>>BigInt(31);return!((~e&n)+(e&~n)>>BigInt(8*i-1))}(e,i),"Byte length is too small to represent the given value.");let n=e;const a=new Uint8Array(i);for(let e=0;e<a.length;e++)a[e]=Number(BigInt.asUintN(8,n)),n>>=BigInt(8);return a.reverse()},i.numberToBytes=f,i.stringToBytes=g,i.base64ToBytes=function(e){return(0,t.assert)("string"==typeof e,"Value must be a string."),r.base64.decode(e)},i.valueToBytes=m,i.concatBytes=function(e){const i=new Array(e.length);let n=0;for(let a=0;a<e.length;a++){const r=m(e[a]);i[a]=r,n+=r.length}const a=new Uint8Array(n);for(let e=0,n=0;e<i.length;e++)a.set(i[e],n),n+=i[e].length;return a},i.createDataView=function(e){if(void 0!==a&&e instanceof a){const i=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return new DataView(i)}return new DataView(e.buffer,e.byteOffset,e.byteLength)},i.areUint8ArraysEqual=function(e,i){let n=e.byteLength^i.byteLength;const a=Math.max(e.byteLength,i.byteLength);for(let r=0;r<a;r++)n|=(e[r]??0)^(i[r]??0);return 0===n}},7996:(e,i,n)=>{var a=n(6889),r=function(){var e=globalThis.crypto||globalThis.msCrypto;return e&&e.getRandomValues?function(i,n){for(let a=0;a<n;a+=65536)e.getRandomValues(new Uint8Array(i.buffer,a+i.byteOffset,Math.min(n-a,65536)))}:null!=n(7707)&&(e=n(4875))&&e.randomBytes?function(i,n){new Uint8Array(i.buffer,i.byteOffset,n).set(e.randomBytes(n))}:function(){throw new Error("No secure random number generator available")}}();Object.defineProperty(e.exports,"randombytes",{value:r}),e.exports.randombytes_buf=function(e){a(e,"out must be given"),r(e,e.byteLength)}},8287:(e,i,n)=>{"use strict";const a=n(7526),r=n(2632),t="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;i.hp=c,i.IS=50;const s=2147483647;function o(e){if(e>s)throw new RangeError('The value "'+e+'" is invalid for option "size"');const i=new Uint8Array(e);return Object.setPrototypeOf(i,c.prototype),i}function c(e,i,n){if("number"==typeof e){if("string"==typeof i)throw new TypeError('The "string" argument must be of type string. Received type number');return l(e)}return h(e,i,n)}function h(e,i,n){if("string"==typeof e)return function(e,i){if("string"==typeof i&&""!==i||(i="utf8"),!c.isEncoding(i))throw new TypeError("Unknown encoding: "+i);const n=0|g(e,i);let a=o(n);const r=a.write(e,i);return r!==n&&(a=a.slice(0,r)),a}(e,i);if(ArrayBuffer.isView(e))return function(e){if(V(e,Uint8Array)){const i=new Uint8Array(e);return d(i.buffer,i.byteOffset,i.byteLength)}return p(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(V(e,ArrayBuffer)||e&&V(e.buffer,ArrayBuffer))return d(e,i,n);if("undefined"!=typeof SharedArrayBuffer&&(V(e,SharedArrayBuffer)||e&&V(e.buffer,SharedArrayBuffer)))return d(e,i,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const a=e.valueOf&&e.valueOf();if(null!=a&&a!==e)return c.from(a,i,n);const r=function(e){if(c.isBuffer(e)){const i=0|f(e.length),n=o(i);return 0===n.length||e.copy(n,0,0,i),n}return void 0!==e.length?"number"!=typeof e.length||J(e.length)?o(0):p(e):"Buffer"===e.type&&Array.isArray(e.data)?p(e.data):void 0}(e);if(r)return r;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return c.from(e[Symbol.toPrimitive]("string"),i,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function u(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function l(e){return u(e),o(e<0?0:0|f(e))}function p(e){const i=e.length<0?0:0|f(e.length),n=o(i);for(let a=0;a<i;a+=1)n[a]=255&e[a];return n}function d(e,i,n){if(i<0||e.byteLength<i)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<i+(n||0))throw new RangeError('"length" is outside of buffer bounds');let a;return a=void 0===i&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,i):new Uint8Array(e,i,n),Object.setPrototypeOf(a,c.prototype),a}function f(e){if(e>=s)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s.toString(16)+" bytes");return 0|e}function g(e,i){if(c.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||V(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const n=e.length,a=arguments.length>2&&!0===arguments[2];if(!a&&0===n)return 0;let r=!1;for(;;)switch(i){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return Y(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return G(e).length;default:if(r)return a?-1:Y(e).length;i=(""+i).toLowerCase(),r=!0}}function m(e,i,n){let a=!1;if((void 0===i||i<0)&&(i=0),i>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(i>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return x(this,i,n);case"utf8":case"utf-8":return j(this,i,n);case"ascii":return B(this,i,n);case"latin1":case"binary":return C(this,i,n);case"base64":return E(this,i,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,i,n);default:if(a)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),a=!0}}function k(e,i,n){const a=e[i];e[i]=e[n],e[n]=a}function b(e,i,n,a,r){if(0===e.length)return-1;if("string"==typeof n?(a=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),J(n=+n)&&(n=r?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(r)return-1;n=e.length-1}else if(n<0){if(!r)return-1;n=0}if("string"==typeof i&&(i=c.from(i,a)),c.isBuffer(i))return 0===i.length?-1:_(e,i,n,a,r);if("number"==typeof i)return i&=255,"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(e,i,n):Uint8Array.prototype.lastIndexOf.call(e,i,n):_(e,[i],n,a,r);throw new TypeError("val must be string, number or Buffer")}function _(e,i,n,a,r){let t,s=1,o=e.length,c=i.length;if(void 0!==a&&("ucs2"===(a=String(a).toLowerCase())||"ucs-2"===a||"utf16le"===a||"utf-16le"===a)){if(e.length<2||i.length<2)return-1;s=2,o/=2,c/=2,n/=2}function h(e,i){return 1===s?e[i]:e.readUInt16BE(i*s)}if(r){let a=-1;for(t=n;t<o;t++)if(h(e,t)===h(i,-1===a?0:t-a)){if(-1===a&&(a=t),t-a+1===c)return a*s}else-1!==a&&(t-=t-a),a=-1}else for(n+c>o&&(n=o-c),t=n;t>=0;t--){let n=!0;for(let a=0;a<c;a++)if(h(e,t+a)!==h(i,a)){n=!1;break}if(n)return t}return-1}function y(e,i,n,a){n=Number(n)||0;const r=e.length-n;a?(a=Number(a))>r&&(a=r):a=r;const t=i.length;let s;for(a>t/2&&(a=t/2),s=0;s<a;++s){const a=parseInt(i.substr(2*s,2),16);if(J(a))return s;e[n+s]=a}return s}function v(e,i,n,a){return $(Y(i,e.length-n),e,n,a)}function A(e,i,n,a){return $(function(e){const i=[];for(let n=0;n<e.length;++n)i.push(255&e.charCodeAt(n));return i}(i),e,n,a)}function z(e,i,n,a){return $(G(i),e,n,a)}function I(e,i,n,a){return $(function(e,i){let n,a,r;const t=[];for(let s=0;s<e.length&&!((i-=2)<0);++s)n=e.charCodeAt(s),a=n>>8,r=n%256,t.push(r),t.push(a);return t}(i,e.length-n),e,n,a)}function E(e,i,n){return 0===i&&n===e.length?a.fromByteArray(e):a.fromByteArray(e.slice(i,n))}function j(e,i,n){n=Math.min(e.length,n);const a=[];let r=i;for(;r<n;){const i=e[r];let t=null,s=i>239?4:i>223?3:i>191?2:1;if(r+s<=n){let n,a,o,c;switch(s){case 1:i<128&&(t=i);break;case 2:n=e[r+1],128==(192&n)&&(c=(31&i)<<6|63&n,c>127&&(t=c));break;case 3:n=e[r+1],a=e[r+2],128==(192&n)&&128==(192&a)&&(c=(15&i)<<12|(63&n)<<6|63&a,c>2047&&(c<55296||c>57343)&&(t=c));break;case 4:n=e[r+1],a=e[r+2],o=e[r+3],128==(192&n)&&128==(192&a)&&128==(192&o)&&(c=(15&i)<<18|(63&n)<<12|(63&a)<<6|63&o,c>65535&&c<1114112&&(t=c))}}null===t?(t=65533,s=1):t>65535&&(t-=65536,a.push(t>>>10&1023|55296),t=56320|1023&t),a.push(t),r+=s}return function(e){const i=e.length;if(i<=w)return String.fromCharCode.apply(String,e);let n="",a=0;for(;a<i;)n+=String.fromCharCode.apply(String,e.slice(a,a+=w));return n}(a)}c.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),i={foo:function(){return 42}};return Object.setPrototypeOf(i,Uint8Array.prototype),Object.setPrototypeOf(e,i),42===e.foo()}catch(e){return!1}}(),c.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(c.prototype,"parent",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.buffer}}),Object.defineProperty(c.prototype,"offset",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.byteOffset}}),c.poolSize=8192,c.from=function(e,i,n){return h(e,i,n)},Object.setPrototypeOf(c.prototype,Uint8Array.prototype),Object.setPrototypeOf(c,Uint8Array),c.alloc=function(e,i,n){return function(e,i,n){return u(e),e<=0?o(e):void 0!==i?"string"==typeof n?o(e).fill(i,n):o(e).fill(i):o(e)}(e,i,n)},c.allocUnsafe=function(e){return l(e)},c.allocUnsafeSlow=function(e){return l(e)},c.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==c.prototype},c.compare=function(e,i){if(V(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),V(i,Uint8Array)&&(i=c.from(i,i.offset,i.byteLength)),!c.isBuffer(e)||!c.isBuffer(i))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===i)return 0;let n=e.length,a=i.length;for(let r=0,t=Math.min(n,a);r<t;++r)if(e[r]!==i[r]){n=e[r],a=i[r];break}return n<a?-1:a<n?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,i){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);let n;if(void 0===i)for(i=0,n=0;n<e.length;++n)i+=e[n].length;const a=c.allocUnsafe(i);let r=0;for(n=0;n<e.length;++n){let i=e[n];if(V(i,Uint8Array))r+i.length>a.length?(c.isBuffer(i)||(i=c.from(i)),i.copy(a,r)):Uint8Array.prototype.set.call(a,i,r);else{if(!c.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(a,r)}r+=i.length}return a},c.byteLength=g,c.prototype._isBuffer=!0,c.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let i=0;i<e;i+=2)k(this,i,i+1);return this},c.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let i=0;i<e;i+=4)k(this,i,i+3),k(this,i+1,i+2);return this},c.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let i=0;i<e;i+=8)k(this,i,i+7),k(this,i+1,i+6),k(this,i+2,i+5),k(this,i+3,i+4);return this},c.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?j(this,0,e):m.apply(this,arguments)},c.prototype.toLocaleString=c.prototype.toString,c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){let e="";const n=i.IS;return e=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(e+=" ... "),"<Buffer "+e+">"},t&&(c.prototype[t]=c.prototype.inspect),c.prototype.compare=function(e,i,n,a,r){if(V(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),!c.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===i&&(i=0),void 0===n&&(n=e?e.length:0),void 0===a&&(a=0),void 0===r&&(r=this.length),i<0||n>e.length||a<0||r>this.length)throw new RangeError("out of range index");if(a>=r&&i>=n)return 0;if(a>=r)return-1;if(i>=n)return 1;if(this===e)return 0;let t=(r>>>=0)-(a>>>=0),s=(n>>>=0)-(i>>>=0);const o=Math.min(t,s),h=this.slice(a,r),u=e.slice(i,n);for(let e=0;e<o;++e)if(h[e]!==u[e]){t=h[e],s=u[e];break}return t<s?-1:s<t?1:0},c.prototype.includes=function(e,i,n){return-1!==this.indexOf(e,i,n)},c.prototype.indexOf=function(e,i,n){return b(this,e,i,n,!0)},c.prototype.lastIndexOf=function(e,i,n){return b(this,e,i,n,!1)},c.prototype.write=function(e,i,n,a){if(void 0===i)a="utf8",n=this.length,i=0;else if(void 0===n&&"string"==typeof i)a=i,n=this.length,i=0;else{if(!isFinite(i))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");i>>>=0,isFinite(n)?(n>>>=0,void 0===a&&(a="utf8")):(a=n,n=void 0)}const r=this.length-i;if((void 0===n||n>r)&&(n=r),e.length>0&&(n<0||i<0)||i>this.length)throw new RangeError("Attempt to write outside buffer bounds");a||(a="utf8");let t=!1;for(;;)switch(a){case"hex":return y(this,e,i,n);case"utf8":case"utf-8":return v(this,e,i,n);case"ascii":case"latin1":case"binary":return A(this,e,i,n);case"base64":return z(this,e,i,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return I(this,e,i,n);default:if(t)throw new TypeError("Unknown encoding: "+a);a=(""+a).toLowerCase(),t=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const w=4096;function B(e,i,n){let a="";n=Math.min(e.length,n);for(let r=i;r<n;++r)a+=String.fromCharCode(127&e[r]);return a}function C(e,i,n){let a="";n=Math.min(e.length,n);for(let r=i;r<n;++r)a+=String.fromCharCode(e[r]);return a}function x(e,i,n){const a=e.length;(!i||i<0)&&(i=0),(!n||n<0||n>a)&&(n=a);let r="";for(let a=i;a<n;++a)r+=X[e[a]];return r}function S(e,i,n){const a=e.slice(i,n);let r="";for(let e=0;e<a.length-1;e+=2)r+=String.fromCharCode(a[e]+256*a[e+1]);return r}function Q(e,i,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+i>n)throw new RangeError("Trying to access beyond buffer length")}function T(e,i,n,a,r,t){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(i>r||i<t)throw new RangeError('"value" argument is out of bounds');if(n+a>e.length)throw new RangeError("Index out of range")}function P(e,i,n,a,r){M(i,a,r,e,n,7);let t=Number(i&BigInt(4294967295));e[n++]=t,t>>=8,e[n++]=t,t>>=8,e[n++]=t,t>>=8,e[n++]=t;let s=Number(i>>BigInt(32)&BigInt(4294967295));return e[n++]=s,s>>=8,e[n++]=s,s>>=8,e[n++]=s,s>>=8,e[n++]=s,n}function L(e,i,n,a,r){M(i,a,r,e,n,7);let t=Number(i&BigInt(4294967295));e[n+7]=t,t>>=8,e[n+6]=t,t>>=8,e[n+5]=t,t>>=8,e[n+4]=t;let s=Number(i>>BigInt(32)&BigInt(4294967295));return e[n+3]=s,s>>=8,e[n+2]=s,s>>=8,e[n+1]=s,s>>=8,e[n]=s,n+8}function D(e,i,n,a,r,t){if(n+a>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function U(e,i,n,a,t){return i=+i,n>>>=0,t||D(e,0,n,4),r.write(e,i,n,a,23,4),n+4}function R(e,i,n,a,t){return i=+i,n>>>=0,t||D(e,0,n,8),r.write(e,i,n,a,52,8),n+8}c.prototype.slice=function(e,i){const n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(i=void 0===i?n:~~i)<0?(i+=n)<0&&(i=0):i>n&&(i=n),i<e&&(i=e);const a=this.subarray(e,i);return Object.setPrototypeOf(a,c.prototype),a},c.prototype.readUintLE=c.prototype.readUIntLE=function(e,i,n){e>>>=0,i>>>=0,n||Q(e,i,this.length);let a=this[e],r=1,t=0;for(;++t<i&&(r*=256);)a+=this[e+t]*r;return a},c.prototype.readUintBE=c.prototype.readUIntBE=function(e,i,n){e>>>=0,i>>>=0,n||Q(e,i,this.length);let a=this[e+--i],r=1;for(;i>0&&(r*=256);)a+=this[e+--i]*r;return a},c.prototype.readUint8=c.prototype.readUInt8=function(e,i){return e>>>=0,i||Q(e,1,this.length),this[e]},c.prototype.readUint16LE=c.prototype.readUInt16LE=function(e,i){return e>>>=0,i||Q(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUint16BE=c.prototype.readUInt16BE=function(e,i){return e>>>=0,i||Q(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUint32LE=c.prototype.readUInt32LE=function(e,i){return e>>>=0,i||Q(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUint32BE=c.prototype.readUInt32BE=function(e,i){return e>>>=0,i||Q(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readBigUInt64LE=W(function(e){K(e>>>=0,"offset");const i=this[e],n=this[e+7];void 0!==i&&void 0!==n||H(e,this.length-8);const a=i+256*this[++e]+65536*this[++e]+this[++e]*2**24,r=this[++e]+256*this[++e]+65536*this[++e]+n*2**24;return BigInt(a)+(BigInt(r)<<BigInt(32))}),c.prototype.readBigUInt64BE=W(function(e){K(e>>>=0,"offset");const i=this[e],n=this[e+7];void 0!==i&&void 0!==n||H(e,this.length-8);const a=i*2**24+65536*this[++e]+256*this[++e]+this[++e],r=this[++e]*2**24+65536*this[++e]+256*this[++e]+n;return(BigInt(a)<<BigInt(32))+BigInt(r)}),c.prototype.readIntLE=function(e,i,n){e>>>=0,i>>>=0,n||Q(e,i,this.length);let a=this[e],r=1,t=0;for(;++t<i&&(r*=256);)a+=this[e+t]*r;return r*=128,a>=r&&(a-=Math.pow(2,8*i)),a},c.prototype.readIntBE=function(e,i,n){e>>>=0,i>>>=0,n||Q(e,i,this.length);let a=i,r=1,t=this[e+--a];for(;a>0&&(r*=256);)t+=this[e+--a]*r;return r*=128,t>=r&&(t-=Math.pow(2,8*i)),t},c.prototype.readInt8=function(e,i){return e>>>=0,i||Q(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,i){e>>>=0,i||Q(e,2,this.length);const n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt16BE=function(e,i){e>>>=0,i||Q(e,2,this.length);const n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt32LE=function(e,i){return e>>>=0,i||Q(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,i){return e>>>=0,i||Q(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readBigInt64LE=W(function(e){K(e>>>=0,"offset");const i=this[e],n=this[e+7];void 0!==i&&void 0!==n||H(e,this.length-8);const a=this[e+4]+256*this[e+5]+65536*this[e+6]+(n<<24);return(BigInt(a)<<BigInt(32))+BigInt(i+256*this[++e]+65536*this[++e]+this[++e]*2**24)}),c.prototype.readBigInt64BE=W(function(e){K(e>>>=0,"offset");const i=this[e],n=this[e+7];void 0!==i&&void 0!==n||H(e,this.length-8);const a=(i<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(a)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+n)}),c.prototype.readFloatLE=function(e,i){return e>>>=0,i||Q(e,4,this.length),r.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,i){return e>>>=0,i||Q(e,4,this.length),r.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,i){return e>>>=0,i||Q(e,8,this.length),r.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,i){return e>>>=0,i||Q(e,8,this.length),r.read(this,e,!1,52,8)},c.prototype.writeUintLE=c.prototype.writeUIntLE=function(e,i,n,a){e=+e,i>>>=0,n>>>=0,a||T(this,e,i,n,Math.pow(2,8*n)-1,0);let r=1,t=0;for(this[i]=255&e;++t<n&&(r*=256);)this[i+t]=e/r&255;return i+n},c.prototype.writeUintBE=c.prototype.writeUIntBE=function(e,i,n,a){e=+e,i>>>=0,n>>>=0,a||T(this,e,i,n,Math.pow(2,8*n)-1,0);let r=n-1,t=1;for(this[i+r]=255&e;--r>=0&&(t*=256);)this[i+r]=e/t&255;return i+n},c.prototype.writeUint8=c.prototype.writeUInt8=function(e,i,n){return e=+e,i>>>=0,n||T(this,e,i,1,255,0),this[i]=255&e,i+1},c.prototype.writeUint16LE=c.prototype.writeUInt16LE=function(e,i,n){return e=+e,i>>>=0,n||T(this,e,i,2,65535,0),this[i]=255&e,this[i+1]=e>>>8,i+2},c.prototype.writeUint16BE=c.prototype.writeUInt16BE=function(e,i,n){return e=+e,i>>>=0,n||T(this,e,i,2,65535,0),this[i]=e>>>8,this[i+1]=255&e,i+2},c.prototype.writeUint32LE=c.prototype.writeUInt32LE=function(e,i,n){return e=+e,i>>>=0,n||T(this,e,i,4,4294967295,0),this[i+3]=e>>>24,this[i+2]=e>>>16,this[i+1]=e>>>8,this[i]=255&e,i+4},c.prototype.writeUint32BE=c.prototype.writeUInt32BE=function(e,i,n){return e=+e,i>>>=0,n||T(this,e,i,4,4294967295,0),this[i]=e>>>24,this[i+1]=e>>>16,this[i+2]=e>>>8,this[i+3]=255&e,i+4},c.prototype.writeBigUInt64LE=W(function(e,i=0){return P(this,e,i,BigInt(0),BigInt("0xffffffffffffffff"))}),c.prototype.writeBigUInt64BE=W(function(e,i=0){return L(this,e,i,BigInt(0),BigInt("0xffffffffffffffff"))}),c.prototype.writeIntLE=function(e,i,n,a){if(e=+e,i>>>=0,!a){const a=Math.pow(2,8*n-1);T(this,e,i,n,a-1,-a)}let r=0,t=1,s=0;for(this[i]=255&e;++r<n&&(t*=256);)e<0&&0===s&&0!==this[i+r-1]&&(s=1),this[i+r]=(e/t|0)-s&255;return i+n},c.prototype.writeIntBE=function(e,i,n,a){if(e=+e,i>>>=0,!a){const a=Math.pow(2,8*n-1);T(this,e,i,n,a-1,-a)}let r=n-1,t=1,s=0;for(this[i+r]=255&e;--r>=0&&(t*=256);)e<0&&0===s&&0!==this[i+r+1]&&(s=1),this[i+r]=(e/t|0)-s&255;return i+n},c.prototype.writeInt8=function(e,i,n){return e=+e,i>>>=0,n||T(this,e,i,1,127,-128),e<0&&(e=255+e+1),this[i]=255&e,i+1},c.prototype.writeInt16LE=function(e,i,n){return e=+e,i>>>=0,n||T(this,e,i,2,32767,-32768),this[i]=255&e,this[i+1]=e>>>8,i+2},c.prototype.writeInt16BE=function(e,i,n){return e=+e,i>>>=0,n||T(this,e,i,2,32767,-32768),this[i]=e>>>8,this[i+1]=255&e,i+2},c.prototype.writeInt32LE=function(e,i,n){return e=+e,i>>>=0,n||T(this,e,i,4,2147483647,-2147483648),this[i]=255&e,this[i+1]=e>>>8,this[i+2]=e>>>16,this[i+3]=e>>>24,i+4},c.prototype.writeInt32BE=function(e,i,n){return e=+e,i>>>=0,n||T(this,e,i,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[i]=e>>>24,this[i+1]=e>>>16,this[i+2]=e>>>8,this[i+3]=255&e,i+4},c.prototype.writeBigInt64LE=W(function(e,i=0){return P(this,e,i,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),c.prototype.writeBigInt64BE=W(function(e,i=0){return L(this,e,i,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),c.prototype.writeFloatLE=function(e,i,n){return U(this,e,i,!0,n)},c.prototype.writeFloatBE=function(e,i,n){return U(this,e,i,!1,n)},c.prototype.writeDoubleLE=function(e,i,n){return R(this,e,i,!0,n)},c.prototype.writeDoubleBE=function(e,i,n){return R(this,e,i,!1,n)},c.prototype.copy=function(e,i,n,a){if(!c.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),a||0===a||(a=this.length),i>=e.length&&(i=e.length),i||(i=0),a>0&&a<n&&(a=n),a===n)return 0;if(0===e.length||0===this.length)return 0;if(i<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(a<0)throw new RangeError("sourceEnd out of bounds");a>this.length&&(a=this.length),e.length-i<a-n&&(a=e.length-i+n);const r=a-n;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(i,n,a):Uint8Array.prototype.set.call(e,this.subarray(n,a),i),r},c.prototype.fill=function(e,i,n,a){if("string"==typeof e){if("string"==typeof i?(a=i,i=0,n=this.length):"string"==typeof n&&(a=n,n=this.length),void 0!==a&&"string"!=typeof a)throw new TypeError("encoding must be a string");if("string"==typeof a&&!c.isEncoding(a))throw new TypeError("Unknown encoding: "+a);if(1===e.length){const i=e.charCodeAt(0);("utf8"===a&&i<128||"latin1"===a)&&(e=i)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(i<0||this.length<i||this.length<n)throw new RangeError("Out of range index");if(n<=i)return this;let r;if(i>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(r=i;r<n;++r)this[r]=e;else{const t=c.isBuffer(e)?e:c.from(e,a),s=t.length;if(0===s)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(r=0;r<n-i;++r)this[r+i]=t[r%s]}return this};const O={};function N(e,i,n){O[e]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:i.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function F(e){let i="",n=e.length;const a="-"===e[0]?1:0;for(;n>=a+4;n-=3)i=`_${e.slice(n-3,n)}${i}`;return`${e.slice(0,n)}${i}`}function M(e,i,n,a,r,t){if(e>n||e<i){const a="bigint"==typeof i?"n":"";let r;throw r=t>3?0===i||i===BigInt(0)?`>= 0${a} and < 2${a} ** ${8*(t+1)}${a}`:`>= -(2${a} ** ${8*(t+1)-1}${a}) and < 2 ** ${8*(t+1)-1}${a}`:`>= ${i}${a} and <= ${n}${a}`,new O.ERR_OUT_OF_RANGE("value",r,e)}!function(e,i,n){K(i,"offset"),void 0!==e[i]&&void 0!==e[i+n]||H(i,e.length-(n+1))}(a,r,t)}function K(e,i){if("number"!=typeof e)throw new O.ERR_INVALID_ARG_TYPE(i,"number",e)}function H(e,i,n){if(Math.floor(e)!==e)throw K(e,n),new O.ERR_OUT_OF_RANGE(n||"offset","an integer",e);if(i<0)throw new O.ERR_BUFFER_OUT_OF_BOUNDS;throw new O.ERR_OUT_OF_RANGE(n||"offset",`>= ${n?1:0} and <= ${i}`,e)}N("ERR_BUFFER_OUT_OF_BOUNDS",function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),N("ERR_INVALID_ARG_TYPE",function(e,i){return`The "${e}" argument must be of type number. Received type ${typeof i}`},TypeError),N("ERR_OUT_OF_RANGE",function(e,i,n){let a=`The value of "${e}" is out of range.`,r=n;return Number.isInteger(n)&&Math.abs(n)>2**32?r=F(String(n)):"bigint"==typeof n&&(r=String(n),(n>BigInt(2)**BigInt(32)||n<-(BigInt(2)**BigInt(32)))&&(r=F(r)),r+="n"),a+=` It must be ${i}. Received ${r}`,a},RangeError);const q=/[^+/0-9A-Za-z-_]/g;function Y(e,i){let n;i=i||1/0;const a=e.length;let r=null;const t=[];for(let s=0;s<a;++s){if(n=e.charCodeAt(s),n>55295&&n<57344){if(!r){if(n>56319){(i-=3)>-1&&t.push(239,191,189);continue}if(s+1===a){(i-=3)>-1&&t.push(239,191,189);continue}r=n;continue}if(n<56320){(i-=3)>-1&&t.push(239,191,189),r=n;continue}n=65536+(r-55296<<10|n-56320)}else r&&(i-=3)>-1&&t.push(239,191,189);if(r=null,n<128){if((i-=1)<0)break;t.push(n)}else if(n<2048){if((i-=2)<0)break;t.push(n>>6|192,63&n|128)}else if(n<65536){if((i-=3)<0)break;t.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((i-=4)<0)break;t.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return t}function G(e){return a.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(q,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function $(e,i,n,a){let r;for(r=0;r<a&&!(r+n>=i.length||r>=e.length);++r)i[r+n]=e[r];return r}function V(e,i){return e instanceof i||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===i.name}function J(e){return e!=e}const X=function(){const e="0123456789abcdef",i=new Array(256);for(let n=0;n<16;++n){const a=16*n;for(let r=0;r<16;++r)i[a+r]=e[n]+e[r]}return i}();function W(e){return"undefined"==typeof BigInt?Z:e}function Z(){throw new Error("BigInt not supported")}},8308:(e,i,n)=>{e.exports={isNode:function(){if(void 0===n.g)return!1;var e=n.g.process;return null!=e&&null!=e.versions&&null!=e.versions.node},isBare:function(){return void 0!==n.g&&(void 0!==n.g.Bare||void 0!==n.g.Pear)},isBrowser:function(){return"undefined"!=typeof window&&void 0!==window.document}}},8317:(e,i,n)=>{"use strict";const a=n(4739);e.exports=(e,i,n)=>new a(e,n).compare(new a(i,n))},8337:(e,i,n)=>{"use strict";const a=n(5926);e.exports=(e,i,n)=>(e=new a(e,n),i=new a(i,n),e.intersects(i,n))},8356:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.mnemonicToSeedSync=i.mnemonicToSeed=i.validateMnemonic=i.entropyToMnemonic=i.mnemonicToEntropy=i.generateMnemonic=void 0;const a=n(1371),r=n(3279),t=n(9981),s=n(1816),o=n(9161),c=n(8573);function h(e){if("string"!=typeof e)throw new TypeError("Invalid mnemonic type: "+typeof e);return e.normalize("NFKD")}function u(e){const i=h(e),n=i.split(" ");if(![12,15,18,21,24].includes(n.length))throw new Error("Invalid mnemonic");return{nfkd:i,words:n}}function l(e){a.default.bytes(e,16,20,24,28,32)}i.generateMnemonic=function(e,i=128){if(a.default.number(i),i%32!=0||i>256)throw new TypeError("Invalid entropy");return g((0,o.randomBytes)(i/8),e)};const p=e=>{const i=8-e.length/4;return new Uint8Array([(0,t.sha256)(e)[0]>>i<<i])};function d(e){if(!Array.isArray(e)||2048!==e.length||"string"!=typeof e[0])throw new Error("Worlist: expected array of 2048 strings");return e.forEach(e=>{if("string"!=typeof e)throw new Error(`Wordlist: non-string element: ${e}`)}),c.utils.chain(c.utils.checksum(1,p),c.utils.radix2(11,!0),c.utils.alphabet(e))}function f(e,i){let n;if("string"==typeof e){const{words:a}=u(e);n=d(i).decode(a)}else n=d(i).decode(Array.from(new Uint16Array(e.buffer)).map(e=>i[e]));return l(n),n}function g(e,i){l(e);const n=d(i).encode(e).map(e=>i.indexOf(e));return new Uint8Array(new Uint16Array(n).buffer)}i.mnemonicToEntropy=f,i.entropyToMnemonic=g,i.validateMnemonic=function(e,i){try{f(e,i)}catch(e){return!1}return!0};const m=e=>h(`mnemonic${e}`);function k(e,i){let n;return n="string"==typeof e?(new TextEncoder).encode(u(e).nfkd):(new TextEncoder).encode(Array.from(new Uint16Array(e.buffer)).map(e=>i[e]).join(" ")),n}i.mnemonicToSeed=function(e,i,n=""){const a=k(e,i);return(0,r.pbkdf2Async)(s.sha512,a,m(n),{c:2048,dkLen:64})},i.mnemonicToSeedSync=function(e,i,n=""){const a=k(e,i);return(0,r.pbkdf2)(s.sha512,a,m(n),{c:2048,dkLen:64})}},8399:(e,i,n)=>{var a=n(2044),r=n(9518),t=n(2878),s=n(7467),o=n(6962),c=n(9917),h=n(5682),u=n(4930);e.exports={address:a,hash:r,mnemonic:t,nonce:s,signature:o,utils:c,b4a:h,sodium:u}},8510:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.encodeToCurve=i.hashToCurve=i.secp256k1_hasher=i.schnorr=i.secp256k1=void 0;const a=n(7076),r=n(9175),t=n(3562),s=n(1761),o=n(4967),c=n(1705),h=n(8627),u={p:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),n:BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),h:BigInt(1),a:BigInt(0),b:BigInt(7),Gx:BigInt("0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"),Gy:BigInt("0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8")},l={beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),basises:[[BigInt("0x3086d221a7d46bcde86c90e49284eb15"),-BigInt("0xe4437ed6010e88286f547fa90abfe4c3")],[BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),BigInt("0x3086d221a7d46bcde86c90e49284eb15")]]},p=BigInt(0),d=BigInt(1),f=BigInt(2),g=(0,o.Field)(u.p,{sqrt:function(e){const i=u.p,n=BigInt(3),a=BigInt(6),r=BigInt(11),t=BigInt(22),s=BigInt(23),c=BigInt(44),h=BigInt(88),l=e*e*e%i,p=l*l*e%i,d=(0,o.pow2)(p,n,i)*p%i,m=(0,o.pow2)(d,n,i)*p%i,k=(0,o.pow2)(m,f,i)*l%i,b=(0,o.pow2)(k,r,i)*k%i,_=(0,o.pow2)(b,t,i)*b%i,y=(0,o.pow2)(_,c,i)*_%i,v=(0,o.pow2)(y,h,i)*y%i,A=(0,o.pow2)(v,c,i)*_%i,z=(0,o.pow2)(A,n,i)*p%i,I=(0,o.pow2)(z,s,i)*b%i,E=(0,o.pow2)(I,a,i)*l%i,j=(0,o.pow2)(E,f,i);if(!g.eql(g.sqr(j),e))throw new Error("Cannot find square root");return j}});i.secp256k1=(0,t.createCurve)({...u,Fp:g,lowS:!0,endo:l},a.sha256);const m={};function k(e,...i){let n=m[e];if(void 0===n){const i=(0,a.sha256)((0,h.utf8ToBytes)(e));n=(0,h.concatBytes)(i,i),m[e]=n}return(0,a.sha256)((0,h.concatBytes)(n,...i))}const b=e=>e.toBytes(!0).slice(1),_=(()=>i.secp256k1.Point)(),y=e=>e%f===p;function v(e){const{Fn:i,BASE:n}=_,a=(0,c._normFnElement)(i,e),r=n.multiply(a);return{scalar:y(r.y)?a:i.neg(a),bytes:b(r)}}function A(e){const i=g;if(!i.isValidNot0(e))throw new Error("invalid x: Fail if x ≥ p");const n=i.create(e*e),a=i.create(n*e+BigInt(7));let r=i.sqrt(a);y(r)||(r=i.neg(r));const t=_.fromAffine({x:e,y:r});return t.assertValidity(),t}const z=h.bytesToNumberBE;function I(...e){return _.Fn.create(z(k("BIP0340/challenge",...e)))}function E(e){return v(e).bytes}function j(e,i,n=(0,r.randomBytes)(32)){const{Fn:a}=_,t=(0,h.ensureBytes)("message",e),{bytes:s,scalar:o}=v(i),c=(0,h.ensureBytes)("auxRand",n,32),u=a.toBytes(o^z(k("BIP0340/aux",c))),l=k("BIP0340/nonce",u,s,t),{bytes:p,scalar:d}=v(l),f=I(p,s,t),g=new Uint8Array(64);if(g.set(p,0),g.set(a.toBytes(a.create(d+f*o)),32),!w(g,t,s))throw new Error("sign: Invalid signature produced");return g}function w(e,i,n){const{Fn:a,BASE:r}=_,t=(0,h.ensureBytes)("signature",e,64),s=(0,h.ensureBytes)("message",i),o=(0,h.ensureBytes)("publicKey",n,32);try{const e=A(z(o)),i=z(t.subarray(0,32));if(!(0,h.inRange)(i,d,u.p))return!1;const n=z(t.subarray(32,64));if(!(0,h.inRange)(n,d,u.n))return!1;const c=I(a.toBytes(i),b(e),s),l=r.multiplyUnsafe(n).add(e.multiplyUnsafe(a.neg(c))),{x:p,y:f}=l.toAffine();return!(l.is0()||!y(f)||p!==i)}catch(e){return!1}}i.schnorr=(()=>{const e=(e=(0,r.randomBytes)(48))=>(0,o.mapHashToField)(e,u.n);return i.secp256k1.utils.randomSecretKey,{keygen:function(i){const n=e(i);return{secretKey:n,publicKey:E(n)}},getPublicKey:E,sign:j,verify:w,Point:_,utils:{randomSecretKey:e,randomPrivateKey:e,taggedHash:k,lift_x:A,pointToBytes:b,numberToBytesBE:h.numberToBytesBE,bytesToNumberBE:h.bytesToNumberBE,mod:o.mod},lengths:{secretKey:32,publicKey:32,publicKeyHasPrefix:!1,signature:64,seed:48}}})();const B=(()=>(0,s.isogenyMap)(g,[["0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7","0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581","0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262","0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c"],["0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b","0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14","0x0000000000000000000000000000000000000000000000000000000000000001"],["0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c","0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3","0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931","0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84"],["0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b","0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573","0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f","0x0000000000000000000000000000000000000000000000000000000000000001"]].map(e=>e.map(e=>BigInt(e)))))(),C=(()=>(0,c.mapToCurveSimpleSWU)(g,{A:BigInt("0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533"),B:BigInt("1771"),Z:g.create(BigInt("-11"))}))();i.secp256k1_hasher=(0,s.createHasher)(i.secp256k1.Point,e=>{const{x:i,y:n}=C(g.create(e[0]));return B(i,n)},{DST:"secp256k1_XMD:SHA-256_SSWU_RO_",encodeDST:"secp256k1_XMD:SHA-256_SSWU_NU_",p:g.ORDER,m:1,k:128,expand:"xmd",hash:a.sha256}),i.hashToCurve=i.secp256k1_hasher.hashToCurve,i.encodeToCurve=i.secp256k1_hasher.encodeToCurve},8534:(e,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.toWei=i.fromWei=i.numberToString=i.getValueOfUnit=i.unitMap=i.numericToBigInt=void 0;const n=BigInt(0),a=BigInt(-1);function r(e){if("string"==typeof e)return BigInt(e);if("number"==typeof e)return BigInt(e);if("bigint"==typeof e)return e;throw new Error(`Cannot convert ${typeof e} to BigInt`)}i.numericToBigInt=r,i.unitMap={noether:"0",wei:"1",kwei:"1000",Kwei:"1000",babbage:"1000",femtoether:"1000",mwei:"1000000",Mwei:"1000000",lovelace:"1000000",picoether:"1000000",gwei:"1000000000",Gwei:"1000000000",shannon:"1000000000",nanoether:"1000000000",nano:"1000000000",szabo:"1000000000000",microether:"1000000000000",micro:"1000000000000",finney:"1000000000000000",milliether:"1000000000000000",milli:"1000000000000000",ether:"1000000000000000000",kether:"1000000000000000000000",grand:"1000000000000000000000",mether:"1000000000000000000000000",gether:"1000000000000000000000000000",tether:"1000000000000000000000000000000"};const t=Object.fromEntries(Object.entries(i.unitMap).map(([e,i])=>[e,BigInt(i)])),s=Object.fromEntries(Object.entries(i.unitMap).map(([e,i])=>[e,i.length-1||1])),o=/^-?[0-9.]+$/u,c=/^([0-9]*[1-9]|0)(0*)/u,h=/\B(?=(\d{3})+(?!\d))/gu;function u(e){if("string"==typeof e){if(!o.test(e))throw new Error(`while converting number to string, invalid number value '${e}', should be a number matching (^-?[0-9.]+).`);return e}if("number"==typeof e)return String(e);if("bigint"==typeof e)return e.toString();throw new Error(`while converting number to string, invalid number value '${String(e)}' type ${typeof e}.`)}i.getValueOfUnit=function(e="ether"){const n=e.toLowerCase(),a=t[n];if(void 0===a)throw new Error(`The unit provided ${e} doesn't exist, please use the one of the following units ${JSON.stringify(i.unitMap,null,2)}`);return a},i.numberToString=u,i.fromWei=function(e,o,u){let l=r(e);const p=l<n,d=o.toLowerCase(),f=t[d],g=s[d],m=u??{};if(void 0===f)throw new Error(`The unit provided ${o} doesn't exist, please use the one of the following units ${JSON.stringify(i.unitMap,null,2)}`);if(f===n)return p?"-0":"0";p&&(l*=a);let k=(l%f).toString();if(k=k.padStart(g,"0"),!m.pad){const e=k.match(c);k=e?.[1]??"0"}let b=(l/f).toString();m.commify&&(b=b.replace(h,","));let _=`${b}${"0"===k?"":`.${k}`}`;return p&&(_=`-${_}`),_},i.toWei=function(e,r){const o=r.toLowerCase(),c=t[o],h=s[o];if(void 0===c)throw new Error(`The unit provided ${r} doesn't exist, please use the one of the following units ${JSON.stringify(i.unitMap,null,2)}`);if(c===n)return n;if("bigint"==typeof e&&"wei"===o)return e;if("bigint"==typeof e)return e*c;let l=u(e);const p=l.startsWith("-");if(p&&(l=l.substring(1)),"."===l)throw new Error(`While converting number ${e} to wei, invalid value`);const d=l.split(".");if(d.length>2)throw new Error(`While converting number ${e} to wei,  too many decimal points`);let f=d[0],g=d[1];if(f||(f="0"),g||(g="0"),g.length>h)throw new Error(`While converting number ${e} to wei, too many decimal places`);g=g.padEnd(h,"0");let m=BigInt(f)*c+BigInt(g);return p&&(m*=a),m}},8573:(e,i)=>{"use strict";function n(e){if(!Number.isSafeInteger(e))throw new Error(`Wrong integer: ${e}`)}function a(e){return e instanceof Uint8Array||null!=e&&"object"==typeof e&&"Uint8Array"===e.constructor.name}function r(...e){const i=e=>e,n=(e,i)=>n=>e(i(n));return{encode:e.map(e=>e.encode).reduceRight(n,i),decode:e.map(e=>e.decode).reduce(n,i)}}function t(e){return{encode:i=>{if(!Array.isArray(i)||i.length&&"number"!=typeof i[0])throw new Error("alphabet.encode input should be an array of numbers");return i.map(i=>{if(n(i),i<0||i>=e.length)throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${e.length})`);return e[i]})},decode:i=>{if(!Array.isArray(i)||i.length&&"string"!=typeof i[0])throw new Error("alphabet.decode input should be array of strings");return i.map(i=>{if("string"!=typeof i)throw new Error(`alphabet.decode: not string element=${i}`);const n=e.indexOf(i);if(-1===n)throw new Error(`Unknown letter: "${i}". Allowed: ${e}`);return n})}}}function s(e=""){if("string"!=typeof e)throw new Error("join separator should be string");return{encode:i=>{if(!Array.isArray(i)||i.length&&"string"!=typeof i[0])throw new Error("join.encode input should be array of strings");for(let e of i)if("string"!=typeof e)throw new Error(`join.encode: non-string input=${e}`);return i.join(e)},decode:i=>{if("string"!=typeof i)throw new Error("join.decode input should be string");return i.split(e)}}}function o(e,i="="){if(n(e),"string"!=typeof i)throw new Error("padding chr should be string");return{encode(n){if(!Array.isArray(n)||n.length&&"string"!=typeof n[0])throw new Error("padding.encode input should be array of strings");for(let e of n)if("string"!=typeof e)throw new Error(`padding.encode: non-string input=${e}`);for(;n.length*e%8;)n.push(i);return n},decode(n){if(!Array.isArray(n)||n.length&&"string"!=typeof n[0])throw new Error("padding.encode input should be array of strings");for(let e of n)if("string"!=typeof e)throw new Error(`padding.decode: non-string input=${e}`);let a=n.length;if(a*e%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;a>0&&n[a-1]===i;a--)if(!((a-1)*e%8))throw new Error("Invalid padding: string has too much padding");return n.slice(0,a)}}}function c(e){if("function"!=typeof e)throw new Error("normalize fn should be function");return{encode:e=>e,decode:i=>e(i)}}function h(e,i,a){if(i<2)throw new Error(`convertRadix: wrong from=${i}, base cannot be less than 2`);if(a<2)throw new Error(`convertRadix: wrong to=${a}, base cannot be less than 2`);if(!Array.isArray(e))throw new Error("convertRadix: data should be array");if(!e.length)return[];let r=0;const t=[],s=Array.from(e);for(s.forEach(e=>{if(n(e),e<0||e>=i)throw new Error(`Wrong integer: ${e}`)});;){let e=0,n=!0;for(let t=r;t<s.length;t++){const o=s[t],c=i*e+o;if(!Number.isSafeInteger(c)||i*e/i!==e||c-o!==i*e)throw new Error("convertRadix: carry overflow");e=c%a;const h=Math.floor(c/a);if(s[t]=h,!Number.isSafeInteger(h)||h*a+e!==c)throw new Error("convertRadix: carry overflow");n&&(h?n=!1:r=t)}if(t.push(e),n)break}for(let i=0;i<e.length-1&&0===e[i];i++)t.push(0);return t.reverse()}Object.defineProperty(i,"__esModule",{value:!0}),i.bytes=i.stringToBytes=i.str=i.bytesToString=i.hex=i.utf8=i.bech32m=i.bech32=i.base58check=i.createBase58check=i.base58xmr=i.base58xrp=i.base58flickr=i.base58=i.base64urlnopad=i.base64url=i.base64nopad=i.base64=i.base32crockford=i.base32hexnopad=i.base32hex=i.base32nopad=i.base32=i.base16=i.utils=void 0,i.assertNumber=n;const u=(e,i)=>i?u(i,e%i):e,l=(e,i)=>e+(i-u(e,i));function p(e,i,a,r){if(!Array.isArray(e))throw new Error("convertRadix2: data should be array");if(i<=0||i>32)throw new Error(`convertRadix2: wrong from=${i}`);if(a<=0||a>32)throw new Error(`convertRadix2: wrong to=${a}`);if(l(i,a)>32)throw new Error(`convertRadix2: carry overflow from=${i} to=${a} carryBits=${l(i,a)}`);let t=0,s=0;const o=2**a-1,c=[];for(const r of e){if(n(r),r>=2**i)throw new Error(`convertRadix2: invalid data word=${r} from=${i}`);if(t=t<<i|r,s+i>32)throw new Error(`convertRadix2: carry overflow pos=${s} from=${i}`);for(s+=i;s>=a;s-=a)c.push((t>>s-a&o)>>>0);t&=2**s-1}if(t=t<<a-s&o,!r&&s>=i)throw new Error("Excess padding");if(!r&&t)throw new Error(`Non-zero padding: ${t}`);return r&&s>0&&c.push(t>>>0),c}function d(e){return n(e),{encode:i=>{if(!a(i))throw new Error("radix.encode input should be Uint8Array");return h(Array.from(i),256,e)},decode:i=>{if(!Array.isArray(i)||i.length&&"number"!=typeof i[0])throw new Error("radix.decode input should be array of numbers");return Uint8Array.from(h(i,e,256))}}}function f(e,i=!1){if(n(e),e<=0||e>32)throw new Error("radix2: bits should be in (0..32]");if(l(8,e)>32||l(e,8)>32)throw new Error("radix2: carry overflow");return{encode:n=>{if(!a(n))throw new Error("radix2.encode input should be Uint8Array");return p(Array.from(n),8,e,!i)},decode:n=>{if(!Array.isArray(n)||n.length&&"number"!=typeof n[0])throw new Error("radix2.decode input should be array of numbers");return Uint8Array.from(p(n,e,8,i))}}}function g(e){if("function"!=typeof e)throw new Error("unsafeWrapper fn should be function");return function(...i){try{return e.apply(null,i)}catch(e){}}}function m(e,i){if(n(e),"function"!=typeof i)throw new Error("checksum fn should be function");return{encode(n){if(!a(n))throw new Error("checksum.encode: input should be Uint8Array");const r=i(n).slice(0,e),t=new Uint8Array(n.length+e);return t.set(n),t.set(r,n.length),t},decode(n){if(!a(n))throw new Error("checksum.decode: input should be Uint8Array");const r=n.slice(0,-e),t=i(r).slice(0,e),s=n.slice(-e);for(let i=0;i<e;i++)if(t[i]!==s[i])throw new Error("Invalid checksum");return r}}}i.utils={alphabet:t,chain:r,checksum:m,convertRadix:h,convertRadix2:p,radix:d,radix2:f,join:s,padding:o},i.base16=r(f(4),t("0123456789ABCDEF"),s("")),i.base32=r(f(5),t("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),o(5),s("")),i.base32nopad=r(f(5),t("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),s("")),i.base32hex=r(f(5),t("0123456789ABCDEFGHIJKLMNOPQRSTUV"),o(5),s("")),i.base32hexnopad=r(f(5),t("0123456789ABCDEFGHIJKLMNOPQRSTUV"),s("")),i.base32crockford=r(f(5),t("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),s(""),c(e=>e.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1"))),i.base64=r(f(6),t("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),o(6),s("")),i.base64nopad=r(f(6),t("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),s("")),i.base64url=r(f(6),t("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),o(6),s("")),i.base64urlnopad=r(f(6),t("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),s(""));const k=e=>r(d(58),t(e),s(""));i.base58=k("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),i.base58flickr=k("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),i.base58xrp=k("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz");const b=[0,2,3,5,6,7,9,10,11];i.base58xmr={encode(e){let n="";for(let a=0;a<e.length;a+=8){const r=e.subarray(a,a+8);n+=i.base58.encode(r).padStart(b[r.length],"1")}return n},decode(e){let n=[];for(let a=0;a<e.length;a+=11){const r=e.slice(a,a+11),t=b.indexOf(r.length),s=i.base58.decode(r);for(let e=0;e<s.length-t;e++)if(0!==s[e])throw new Error("base58xmr: wrong padding");n=n.concat(Array.from(s.slice(s.length-t)))}return Uint8Array.from(n)}},i.createBase58check=e=>r(m(4,i=>e(e(i))),i.base58),i.base58check=i.createBase58check;const _=r(t("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),s("")),y=[996825010,642813549,513874426,1027748829,705979059];function v(e){const i=e>>25;let n=(33554431&e)<<5;for(let e=0;e<y.length;e++)1==(i>>e&1)&&(n^=y[e]);return n}function A(e,i,n=1){const a=e.length;let r=1;for(let i=0;i<a;i++){const n=e.charCodeAt(i);if(n<33||n>126)throw new Error(`Invalid prefix (${e})`);r=v(r)^n>>5}r=v(r);for(let i=0;i<a;i++)r=v(r)^31&e.charCodeAt(i);for(let e of i)r=v(r)^e;for(let e=0;e<6;e++)r=v(r);return r^=n,_.encode(p([r%2**30],30,5,!1))}function z(e){const i="bech32"===e?1:734539939,n=f(5),a=n.decode,r=n.encode,t=g(a);function s(e,n,a=90){if("string"!=typeof e)throw new Error("bech32.encode prefix should be string, not "+typeof e);if(n instanceof Uint8Array&&(n=Array.from(n)),!Array.isArray(n)||n.length&&"number"!=typeof n[0])throw new Error("bech32.encode words should be array of numbers, not "+typeof n);if(0===e.length)throw new TypeError(`Invalid prefix length ${e.length}`);const r=e.length+7+n.length;if(!1!==a&&r>a)throw new TypeError(`Length ${r} exceeds limit ${a}`);const t=e.toLowerCase(),s=A(t,n,i);return`${t}1${_.encode(n)}${s}`}function o(e,n=90){if("string"!=typeof e)throw new Error("bech32.decode input should be string, not "+typeof e);if(e.length<8||!1!==n&&e.length>n)throw new TypeError(`Wrong string length: ${e.length} (${e}). Expected (8..${n})`);const a=e.toLowerCase();if(e!==a&&e!==e.toUpperCase())throw new Error("String must be lowercase or uppercase");const r=a.lastIndexOf("1");if(0===r||-1===r)throw new Error('Letter "1" must be present between prefix and data only');const t=a.slice(0,r),s=a.slice(r+1);if(s.length<6)throw new Error("Data must be at least 6 characters long");const o=_.decode(s).slice(0,-6),c=A(t,o,i);if(!s.endsWith(c))throw new Error(`Invalid checksum in ${e}: expected "${c}"`);return{prefix:t,words:o}}return{encode:s,decode:o,encodeFromBytes:function(e,i){return s(e,r(i))},decodeToBytes:function(e){const{prefix:i,words:n}=o(e,!1);return{prefix:i,words:n,bytes:a(n)}},decodeUnsafe:g(o),fromWords:a,fromWordsUnsafe:t,toWords:r}}i.bech32=z("bech32"),i.bech32m=z("bech32m"),i.utf8={encode:e=>(new TextDecoder).decode(e),decode:e=>(new TextEncoder).encode(e)},i.hex=r(f(4),t("0123456789abcdef"),s(""),c(e=>{if("string"!=typeof e||e.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof e} with length ${e.length}`);return e.toLowerCase()}));const I={utf8:i.utf8,hex:i.hex,base16:i.base16,base32:i.base32,base64:i.base64,base64url:i.base64url,base58:i.base58,base58xmr:i.base58xmr},E="Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr";i.bytesToString=(e,i)=>{if("string"!=typeof e||!I.hasOwnProperty(e))throw new TypeError(E);if(!a(i))throw new TypeError("bytesToString() expects Uint8Array");return I[e].encode(i)},i.str=i.bytesToString,i.stringToBytes=(e,i)=>{if(!I.hasOwnProperty(e))throw new TypeError(E);if("string"!=typeof i)throw new TypeError("stringToBytes() expects string");return I[e].decode(i)},i.bytes=i.stringToBytes},8587:e=>{function i(e,i){var n=e.l+i.l,a={h:e.h+i.h+(n/2>>>31)>>>0,l:n>>>0};e.h=a.h,e.l=a.l}function n(e,i){e.h^=i.h,e.h>>>=0,e.l^=i.l,e.l>>>=0}function a(e,i){var n={h:e.h<<i|e.l>>>32-i,l:e.l<<i|e.h>>>32-i};e.h=n.h,e.l=n.l}function r(e){var i=e.l;e.l=e.h,e.h=i}function t(e,t,s,o){i(e,t),i(s,o),a(t,13),a(o,16),n(t,e),n(o,s),r(e),i(s,t),i(e,o),a(t,17),a(o,21),n(t,s),n(o,e),r(s)}function s(e,i){return e[i+3]<<24|e[i+2]<<16|e[i+1]<<8|e[i]}e.exports=function(e,i,a){var r,o={h:s(a,4),l:s(a,0)},c={h:s(a,12),l:s(a,8)},h={h:o.h,l:o.l},u=o,l={h:c.h,l:c.l},p=c,d=0,f=i.length,g=f-7,m=new Uint8Array(new ArrayBuffer(8));for(n(h,{h:1936682341,l:1886610805}),n(l,{h:1685025377,l:1852075885}),n(u,{h:1819895653,l:1852142177}),n(p,{h:1952801890,l:2037671283});d<g;)n(p,r={h:s(i,d+4),l:s(i,d)}),t(h,l,u,p),t(h,l,u,p),n(h,r),d+=8;m[7]=f;for(var k=0;d<f;)m[k++]=i[d++];for(;k<7;)m[k++]=0;n(p,r={h:m[7]<<24|m[6]<<16|m[5]<<8|m[4],l:m[3]<<24|m[2]<<16|m[1]<<8|m[0]}),t(h,l,u,p),t(h,l,u,p),n(h,r),n(u,{h:0,l:255}),t(h,l,u,p),t(h,l,u,p),t(h,l,u,p),t(h,l,u,p);var b=h;n(b,l),n(b,u),n(b,p),e[0]=255&b.l,e[1]=b.l>>8&255,e[2]=b.l>>16&255,e[3]=b.l>>24&255,e[4]=255&b.h,e[5]=b.h>>8&255,e[6]=b.h>>16&255,e[7]=b.h>>24&255}},8597:e=>{function i(e,i,n,a,r){var t=0;for(let s=0;s<r;s++)t|=e[i+s]^n[a+s];return(1&t-1>>>8)-1}e.exports={crypto_verify_16:function(e,n,a,r){return 0===i(e,n,a,r,16)},crypto_verify_32:function(e,n,a,r){return 0===i(e,n,a,r,32)},crypto_verify_64:function(e,n,a,r){return 0===i(e,n,a,r,64)}},Object.defineProperty(e.exports,"vn",{value:i})},8627:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.notImplemented=i.bitMask=i.utf8ToBytes=i.randomBytes=i.isBytes=i.hexToBytes=i.concatBytes=i.bytesToUtf8=i.bytesToHex=i.anumber=i.abytes=void 0,i.abool=function(e,i){if("boolean"!=typeof i)throw new Error(e+" boolean expected, got "+i)},i._abool2=function(e,i=""){if("boolean"!=typeof e)throw new Error((i&&`"${i}"`)+"expected boolean, got type="+typeof e);return e},i._abytes2=function(e,i,n=""){const r=(0,a.isBytes)(e),t=e?.length,s=void 0!==i;if(!r||s&&t!==i)throw new Error((n&&`"${n}" `)+"expected Uint8Array"+(s?` of length ${i}`:"")+", got "+(r?`length=${t}`:"type="+typeof e));return e},i.numberToHexUnpadded=o,i.hexToNumber=c,i.bytesToNumberBE=function(e){return c((0,a.bytesToHex)(e))},i.bytesToNumberLE=function(e){return(0,a.abytes)(e),c((0,a.bytesToHex)(Uint8Array.from(e).reverse()))},i.numberToBytesBE=h,i.numberToBytesLE=function(e,i){return h(e,i).reverse()},i.numberToVarBytesBE=function(e){return(0,a.hexToBytes)(o(e))},i.ensureBytes=function(e,i,n){let r;if("string"==typeof i)try{r=(0,a.hexToBytes)(i)}catch(i){throw new Error(e+" must be hex string or Uint8Array, cause: "+i)}else{if(!(0,a.isBytes)(i))throw new Error(e+" must be hex string or Uint8Array");r=Uint8Array.from(i)}const t=r.length;if("number"==typeof n&&t!==n)throw new Error(e+" of length "+n+" expected, got "+t);return r},i.equalBytes=function(e,i){if(e.length!==i.length)return!1;let n=0;for(let a=0;a<e.length;a++)n|=e[a]^i[a];return 0===n},i.copyBytes=function(e){return Uint8Array.from(e)},i.asciiToBytes=function(e){return Uint8Array.from(e,(i,n)=>{const a=i.charCodeAt(0);if(1!==i.length||a>127)throw new Error(`string contains non-ASCII character "${e[n]}" with code ${a} at position ${n}`);return a})},i.inRange=l,i.aInRange=function(e,i,n,a){if(!l(i,n,a))throw new Error("expected valid "+e+": "+n+" <= n < "+a+", got "+i)},i.bitLen=function(e){let i;for(i=0;e>t;e>>=s,i+=1);return i},i.bitGet=function(e,i){return e>>BigInt(i)&s},i.bitSet=function(e,i,n){return e|(n?s:t)<<BigInt(i)},i.createHmacDrbg=function(e,i,n){if("number"!=typeof e||e<2)throw new Error("hashLen must be a number");if("number"!=typeof i||i<2)throw new Error("qByteLen must be a number");if("function"!=typeof n)throw new Error("hmacFn must be a function");const r=e=>new Uint8Array(e),t=e=>Uint8Array.of(e);let s=r(e),o=r(e),c=0;const h=()=>{s.fill(1),o.fill(0),c=0},u=(...e)=>n(o,s,...e),l=(e=r(0))=>{o=u(t(0),e),s=u(),0!==e.length&&(o=u(t(1),e),s=u())},p=()=>{if(c++>=1e3)throw new Error("drbg: tried 1000 values");let e=0;const n=[];for(;e<i;){s=u();const i=s.slice();n.push(i),e+=s.length}return(0,a.concatBytes)(...n)};return(e,i)=>{let n;for(h(),l(e);!(n=i(p()));)l();return h(),n}},i.validateObject=function(e,i,n={}){const a=(i,n,a)=>{const r=p[n];if("function"!=typeof r)throw new Error("invalid validator function");const t=e[i];if(!(a&&void 0===t||r(t,e)))throw new Error("param "+String(i)+" is invalid. Expected "+n+", got "+t)};for(const[e,n]of Object.entries(i))a(e,n,!1);for(const[e,i]of Object.entries(n))a(e,i,!0);return e},i.isHash=function(e){return"function"==typeof e&&Number.isSafeInteger(e.outputLen)},i._validateObject=function(e,i,n={}){if(!e||"object"!=typeof e)throw new Error("expected valid options object");function a(i,n,a){const r=e[i];if(a&&void 0===r)return;const t=typeof r;if(t!==n||null===r)throw new Error(`param "${i}" is invalid: expected ${n}, got ${t}`)}Object.entries(i).forEach(([e,i])=>a(e,i,!1)),Object.entries(n).forEach(([e,i])=>a(e,i,!0))},i.memoized=function(e){const i=new WeakMap;return(n,...a)=>{const r=i.get(n);if(void 0!==r)return r;const t=e(n,...a);return i.set(n,t),t}};const a=n(9175);var r=n(9175);Object.defineProperty(i,"abytes",{enumerable:!0,get:function(){return r.abytes}}),Object.defineProperty(i,"anumber",{enumerable:!0,get:function(){return r.anumber}}),Object.defineProperty(i,"bytesToHex",{enumerable:!0,get:function(){return r.bytesToHex}}),Object.defineProperty(i,"bytesToUtf8",{enumerable:!0,get:function(){return r.bytesToUtf8}}),Object.defineProperty(i,"concatBytes",{enumerable:!0,get:function(){return r.concatBytes}}),Object.defineProperty(i,"hexToBytes",{enumerable:!0,get:function(){return r.hexToBytes}}),Object.defineProperty(i,"isBytes",{enumerable:!0,get:function(){return r.isBytes}}),Object.defineProperty(i,"randomBytes",{enumerable:!0,get:function(){return r.randomBytes}}),Object.defineProperty(i,"utf8ToBytes",{enumerable:!0,get:function(){return r.utf8ToBytes}});const t=BigInt(0),s=BigInt(1);function o(e){const i=e.toString(16);return 1&i.length?"0"+i:i}function c(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);return""===e?t:BigInt("0x"+e)}function h(e,i){return(0,a.hexToBytes)(e.toString(16).padStart(2*i,"0"))}const u=e=>"bigint"==typeof e&&t<=e;function l(e,i,n){return u(e)&&u(i)&&u(n)&&i<=e&&e<n}i.bitMask=e=>(s<<BigInt(e))-s;const p={bigint:e=>"bigint"==typeof e,function:e=>"function"==typeof e,boolean:e=>"boolean"==typeof e,string:e=>"string"==typeof e,stringOrUint8Array:e=>"string"==typeof e||(0,a.isBytes)(e),isSafeInteger:e=>Number.isSafeInteger(e),array:e=>Array.isArray(e),field:(e,i)=>i.Fp.isValid(e),hash:e=>"function"==typeof e&&Number.isSafeInteger(e.outputLen)};i.notImplemented=()=>{throw new Error("not implemented")}},8778:e=>{"use strict";e.exports=JSON.parse('["абзац","абонент","абсурд","авангард","авария","август","авиация","автор","агент","агитация","агрегат","адвокат","адмирал","адрес","азарт","азот","академия","аквариум","аксиома","акула","акцент","акция","аллея","алмаз","алтарь","альбом","альянс","амбиция","анализ","анекдот","анкета","ансамбль","антенна","апельсин","аппарат","аппетит","апрель","аптека","арбуз","аргумент","аренда","арест","армия","аромат","арсенал","артерия","артист","архив","аспирант","асфальт","атака","атомный","атрибут","аукцион","афиша","аэропорт","бабочка","бабушка","багаж","база","бактерия","баланс","балерина","балкон","бандит","банк","барабан","барон","барышня","барьер","бассейн","батарея","башмак","башня","бедный","беженец","бездна","белка","белый","бензин","берег","беседа","бешеный","билет","бинокль","биржа","битва","благо","блеск","близкий","блин","блок","блюдо","богатый","бодрый","боец","бокал","боковой","бокс","более","болото","болтать","большой","бомба","борт","борьба","босой","ботинок","бояться","брак","брать","бревно","бред","бригада","бродяга","броня","бросить","брызги","брюки","брюхо","бугор","будка","будни","будущее","буква","букет","бульвар","бумага","бунт","бурный","буря","бутылка","бухта","бывший","быстро","бытовой","быть","бюджет","бюро","бюст","вагон","важный","вакцина","валенок","вальс","валюта","ванная","варенье","вариант","вблизи","вверх","вводить","вдали","вдвое","вдова","вдоль","вдруг","ведро","ведущий","ведьма","вежливо","везде","веко","вексель","велеть","великий","венец","веник","веранда","верблюд","верить","верный","версия","вертеть","верхний","вершина","весело","весна","весомый","вести","весь","ветеран","ветхий","вечер","вечно","вешалка","вещество","взамен","взгляд","вздох","взнос","взойти","взор","взрыв","взять","видеть","видимо","визг","визит","вилка","вина","вирус","висок","витамин","витрина","вихрь","вишня","вкус","влага","владелец","власть","влево","влияние","вложить","вместе","внешний","вникать","внимание","вновь","внук","внутри","внучка","внушать","вовлечь","вовремя","вовсю","вода","водород","водяной","воевать","возврат","возглас","воздух","возить","возле","возня","возраст","война","войско","вокзал","волос","волчий","вольный","воля","вообще","вопль","вопрос","ворота","восемь","восток","вплоть","вполне","вправе","впредь","впрочем","врач","вредный","время","вручить","всадник","всегда","вскоре","вскрыть","всплеск","вспышка","встреча","всюду","всякий","второй","вход","вчера","выбор","вывод","выгнать","выдать","выехать","вызов","выйти","выкуп","вылезти","вымыть","выпасть","выпить","выплата","выпуск","вырасти","выручка","выслать","высокий","выставка","вышка","вязать","вялый","газета","газовый","галерея","галстук","гамма","гарантия","гармония","гарнизон","гастроли","гвардия","гвоздь","гектар","генерал","гений","геном","геолог","герб","герой","гибкий","гигант","гимн","гипотеза","гитара","главный","глагол","гладить","глаз","глина","глоток","глубокий","глупый","глухой","глыба","глядеть","гнев","гнездо","гнилой","годовой","голова","голубой","голый","гонорар","гордость","горизонт","горло","горный","город","горшок","горький","горючее","горячий","готовый","градус","грамм","граница","граф","гребень","гриб","гримаса","грозить","грохот","грош","грубый","грудь","груз","грунт","группа","груша","грязный","губа","гудок","гулкий","гулять","гусеница","густо","гусь","давление","давно","даже","дальний","данный","дарить","датчик","дать","дача","двадцать","дважды","дверь","двигать","движение","двойной","двор","дебют","девятый","дежурный","действие","декабрь","деление","дело","дельфин","день","дерево","держать","дерзкий","десять","деталь","детский","дефект","дефицит","деятель","джаз","джинсы","джунгли","диагноз","диалог","диапазон","диван","дивизия","дивный","диета","дизайн","дикарь","дилер","динамика","диплом","директор","дитя","длинный","дневник","добрый","добыча","доверие","догадка","догнать","дождь","доклад","доктор","документ","долго","должен","долина","донос","дорога","досада","доска","достать","досуг","доход","доцент","дощатый","драка","древний","дремать","дробный","дрова","дрожать","другой","дружба","дубовый","дуга","думать","дурной","духи","душный","дуэль","дуэт","дыра","дыхание","дюжина","дядя","едва","единый","ерунда","если","ехать","жадный","жажда","жалеть","жалоба","жанр","жареный","жаркий","жгучий","жевать","желание","желудок","жена","женщина","жертва","жест","жидкость","житель","жить","жрец","жулик","журнал","жуткий","забрать","забыть","завести","завод","завтра","загадка","загнать","заговор","задача","задеть","задний","задолго","заехать","заказ","закон","закрыть","закуска","залезть","залить","залп","замок","замуж","замысел","занавес","заново","занять","заодно","запись","запрос","запуск","запястье","заранее","заросль","зарплата","заря","засада","заслуга","заснуть","застать","затвор","затеять","затрата","затылок","захват","зачем","защита","заявить","заяц","звезда","звено","звонить","здесь","зелень","земля","зеркало","зерно","зима","злой","змея","знамя","знание","значит","золотой","зона","зонтик","зоопарк","зрачок","зрение","зритель","зубной","зубр","игла","идеал","идеолог","идея","идол","идти","изба","избить","избрать","избыток","извлечь","извне","изгиб","изгнать","издание","изделие","изнутри","изобилие","изоляция","изредка","изрядно","изучение","изъять","изящный","икона","икра","иллюзия","именно","иметь","имидж","империя","импульс","иначе","инвалид","индекс","индивид","инерция","инженер","иногда","иной","институт","интерес","интрига","интуиция","инфаркт","инцидент","ирония","искать","испуг","история","итог","июнь","кабель","кабинет","каблук","кавалер","кадр","каждый","кажется","казино","калитка","камень","камин","канал","кандидат","каникулы","канон","капитан","капля","капот","капуста","карандаш","карета","каркас","карман","картина","карьера","каска","кассета","кастрюля","каталог","катер","каток","катушка","кафедра","качество","каша","кашлять","каюта","квадрат","квартира","квота","кепка","кивнуть","километр","кино","киоск","кипяток","кирпич","кислота","кисть","клавиша","клапан","класс","клей","клетка","клиент","климат","клиника","кличка","клоун","клочок","клуб","клумба","ключ","книга","кнопка","кнут","княгиня","князь","кобура","когда","кодекс","кожа","коктейль","колено","коллега","колонна","колпак","кольцо","колючий","коляска","команда","комедия","комиссия","коммуна","комната","комок","компания","комфорт","конвейер","конгресс","конечно","конкурс","контроль","концерт","конь","конюшня","копать","копейка","копыто","корабль","корень","корзина","коридор","кормить","корпус","космос","костюм","косяк","котел","котлета","который","коттедж","кофе","кофта","кошка","кража","край","красный","краткий","кредит","крем","крепкий","кресло","кривой","кризис","кристалл","критерий","кричать","кровь","крокодил","кролик","кроме","крона","круг","кружка","крупный","крутой","крушение","крыло","крыша","крючок","кстати","кубик","куда","кузов","кукла","кулак","кулиса","культура","кумир","купе","купить","купол","купюра","курица","курорт","курс","куртка","кусок","куст","кухня","кушать","лабиринт","лавка","лагерь","ладно","ладонь","лапа","лауреат","лгать","лебедь","левый","легенда","легкий","ледяной","лежать","лезвие","лезть","лекция","ленивый","лента","лепесток","лесной","лестница","лететь","лето","лечить","лига","лидер","лиловый","лимон","линия","липкий","лист","литр","лихой","лицо","лишить","лишний","ловить","логика","лодка","ложь","лозунг","локоть","лопата","лошадь","лукавый","луна","лучший","лысый","льгота","любить","любой","людской","люстра","лютый","лягушка","магазин","магия","майор","майский","максимум","макушка","мало","мальчик","мама","манера","марка","март","маршрут","масса","мастер","масштаб","материал","матч","махать","машина","маяк","мебель","медаль","медведь","медицина","медь","между","мелкий","мелочь","мемуары","меньше","меню","менять","мера","мерцать","место","месяц","металл","метод","метр","механизм","меховой","мечтать","мешать","мешок","миграция","микрофон","милиция","миллион","милость","миля","мимо","минерал","министр","минута","мирный","миска","миссия","митинг","мишень","младший","мнение","мнимый","много","могучий","модель","может","мозг","мокрый","молекула","молния","молодой","молчать","момент","монета","монитор","монолог","монстр","монтаж","мораль","море","морковь","мороз","морщина","мостовая","мотать","мотив","мотор","мохнатый","мрамор","мрачный","мстить","мудрый","мужество","мужчина","музей","музыка","мундир","муравей","мусор","муха","мчаться","мысль","мыться","мышца","мышь","мюзикл","мягкий","мясо","набор","навык","наглый","нагрузка","надежда","надзор","надо","наедине","назад","название","назло","наивный","найти","наконец","налево","наличие","налог","намерен","нанести","напасть","например","народ","наследие","натура","наука","наутро","начать","небо","неважно","невеста","негодяй","недавно","неделя","недолго","недра","недуг","нежный","незачем","некто","нелепый","неловко","нельзя","немало","немой","неплохо","нервный","нередко","нестись","неудача","неужели","нефть","неясный","нигде","низкий","никакой","никогда","никуда","ничто","ничуть","ниша","нищий","новость","новый","нога","ноготь","ножницы","ноздря","номер","носить","носок","ночь","ноябрь","нрав","нуль","нынче","нырять","нюанс","няня","обаяние","обед","обезьяна","обещать","обжечь","обзор","обилие","обитать","область","облик","обложка","обмен","обморок","обожать","обои","оболочка","оборона","обочина","образ","обрести","обрыв","обувь","обучение","обход","общество","общий","объект","обыск","обычно","обязать","овощи","овраг","овца","оговорка","ограда","огурец","одежда","одеяло","один","однако","одолеть","ожидать","озеро","океан","окно","около","окоп","окраина","октябрь","опасный","опека","операция","описание","оплата","опора","оппонент","оптимизм","оптовый","опухоль","опыт","оратор","орбита","орган","орден","орел","оригинал","ориентир","оркестр","оружие","осенний","осколок","осмотр","остров","отбор","отбыть","отвлечь","отдать","отдел","отдых","отель","отец","отзыв","отказ","отклик","открыть","откуда","отличие","отныне","отойти","отпуск","отрасль","отросток","отрывок","отряд","отсек","отставка","отсюда","оттенок","оттого","отчего","отъезд","офис","офицер","охота","охрана","оценка","очаг","очень","очередь","очищать","ошибка","ощущение","павильон","падать","пазуха","пакет","палата","палец","палуба","пальто","память","панель","паника","пара","парень","пароход","партия","парус","паспорт","пассажир","пастух","патент","патрон","пауза","паук","паутина","пафос","пахнуть","пациент","пачка","певец","педагог","пейзаж","пенсия","пепел","первый","перед","период","перо","перрон","персонаж","перчатка","песня","песок","петля","петрушка","петух","пехота","печать","печень","пешком","пещера","пианист","пиджак","пилот","пионер","пирамида","пирожок","письмо","пища","плавание","плакать","пламя","план","пласт","платить","пленный","плечо","плита","плод","плоский","плотный","плохой","площадь","плыть","плюс","пляж","плясать","победа","повар","повод","повсюду","повязка","погода","погреб","подбор","подвиг","подделка","поджать","поднос","подпись","подруга","подход","подчас","подъезд","поединок","поезд","поесть","поехать","пожалуй","пожилой","позади","позвать","поздний","позиция","позор","поиск","поймать","пойти","поклон","покой","покрыть","полдень","полезный","ползти","полк","полный","половина","полтора","польза","поляна","помидор","помнить","помощь","попасть","поперек","поплыть","пополам","поправка","попугай","попытка","порог","портрет","порция","порыв","порядок","после","посол","посреди","постель","посуда","потом","похвала","похожий","поцелуй","почва","почему","пошлина","поэма","поэтому","право","праздник","практика","прах","преграда","предмет","прежде","прелесть","премия","препарат","пресса","прибыть","прижать","прийти","приказ","прилавок","пример","принять","природа","притом","прихожая","прицел","причина","приют","прогноз","продукт","проект","прожить","прокат","промысел","пропуск","просто","против","профиль","процесс","прочий","прошлый","прощать","пружина","прут","прыжок","прямой","птица","публика","пугать","пуговица","пузырь","пульт","пуля","пункт","пускать","пустой","путь","пухлый","пучок","пушистый","пушка","пчела","пшеница","пылать","пыль","пышный","пьеса","пятка","пятно","пятый","пятьсот","работа","равнина","ради","радость","радуга","разбить","развитие","разговор","раздел","различие","размер","разный","разрыв","разум","район","ракета","раковина","рамка","рано","рапорт","распад","рассказ","расти","расход","расцвет","рация","рвануть","рваться","реакция","ребро","реветь","редактор","редкий","реестр","режим","резать","резерв","резина","резко","резной","рейс","реклама","рекорд","религия","рельс","ремень","ремонт","реплика","репортаж","ресница","ресторан","реформа","рецепт","речь","решение","ржавый","риск","рисунок","ритуал","рифма","робко","робот","ровесник","ровно","родной","рождение","роза","розовый","розыск","роль","роман","роскошь","роспись","рост","рубашка","рубеж","рубить","рубрика","рудник","рука","рукопись","румяный","русло","рухнуть","ручей","ручной","рыба","рыжий","рынок","рыхлый","рыцарь","рычаг","рюкзак","рядом","садовый","сажать","салон","салфетка","салют","самец","самовар","самый","сани","санкция","сапог","сарай","сатира","сахар","сбить","сбоку","сборная","сбыт","свадьба","свалка","сварить","свежий","сверху","свет","свеча","свинья","свист","свитер","свобода","сводка","свой","свыше","связь","сдаться","сделать","сегмент","сегодня","седло","седой","седьмой","сезон","сейф","сейчас","секрет","сектор","секунда","семинар","семья","сенатор","сено","сенсация","сентябрь","сервис","сердце","середина","сержант","серия","серый","сессия","сесть","сетевой","сжатый","сжечь","сзади","сигнал","сиденье","сила","силуэт","сильный","символ","симпатия","симфония","синий","синтез","синяк","сирень","система","ситуация","сияние","сказать","скала","скамейка","скандал","скатерть","скачок","скважина","сквер","сквозь","скелет","скидка","склад","сколько","скорый","скосить","скот","скрипка","скудный","скука","слабый","слава","сладкий","слегка","след","слеза","слепой","слесарь","слишком","слово","слог","сложный","сломать","служба","слух","случай","слышать","слюна","смежный","смелый","сменить","смесь","сметана","смех","смола","смуглый","смутный","смущать","смысл","снайпер","снаряд","сначала","снег","снизу","сниться","сно��а","снять","собака","соблазн","собрание","событие","совесть","совсем","согласие","создать","сознание","созреть","сойтись","сокол","солдат","соленый","солнце","солома","сомнение","сонный","соперник","соратник","сорвать","сосед","сосиска","состав","сотня","соус","союз","спад","спальня","спасти","спектр","сперва","спешить","спина","спирт","список","спичка","сплав","спонсор","спор","способ","справка","спустя","спутник","сразу","средство","срок","срыв","ссора","ссылка","ставить","стадия","стакан","станция","старый","стая","стебель","стекло","стена","степень","стереть","стиль","стимул","стирать","стихи","стоить","стойка","стол","стонать","стопа","сторона","стоянка","страна","стричь","строгий","струя","студент","стук","ступня","стыдно","суббота","субъект","сувенир","сугроб","сугубо","судить","судно","судьба","суета","суметь","сумма","сумрак","сундук","супруг","суровый","сутки","сухой","суша","существо","сфера","схема","схожий","сценарий","счастье","считать","съезд","сыграть","сырой","сытый","сыщик","сюда","сюжет","сюрприз","тайна","также","такой","такси","тактика","талия","таможня","танец","таракан","тарелка","тариф","тащить","таять","тварь","театр","тезис","текст","текущий","телефон","тема","темнота","теневой","теннис","теория","теперь","тепло","терапия","терзать","термин","терпеть","терраса","терять","тесный","тетрадь","техника","течение","тигр","типовой","тираж","титул","тихий","ткань","товарищ","тоже","толпа","толстый","толчок","толщина","только","тонкий","тонна","топить","топор","торговля","тормоз","торчать","тотчас","точка","точно","тощий","трава","традиция","трактор","трамвай","траншея","трасса","тревога","трезвый","тренер","трепет","треск","третий","трещина","трибуна","тридцать","триста","триумф","трогать","тройка","тронуть","тропа","тротуар","трубка","труд","трюк","тряпка","туго","туловище","туман","тумбочка","тундра","тупик","турист","турнир","тусклый","туфля","туча","тысяча","тяга","тяжело","убежать","убогий","уборка","уважение","увезти","уволить","угадать","угол","угощать","угроза","угрюмый","удар","удачный","уделять","удивить","удобный","удочка","уезжать","ужин","узел","узкий","уйти","указание","уклон","украсть","укусить","улетать","улица","улыбка","умело","умение","умный","умолять","унести","унижать","унылый","упаковка","упасть","упорно","упрек","урна","уровень","урожай","уронить","усадьба","усатый","усвоить","усилие","условие","услуга","усмешка","успеть","устав","устоять","утечка","утешать","утро","уцелеть","участие","ученик","учесть","ущелье","ущерб","уютный","фабрика","фаворит","факел","факт","фамилия","фантазия","фасад","февраль","феномен","фермер","фигура","физика","филиал","философ","фильм","финал","флаг","флот","фойе","фокус","фонарь","фонд","фонтан","форма","форум","фото","фрагмент","фраза","фракция","фронт","фрукт","функция","фуражка","футбол","футляр","халат","хаос","характер","хата","хвалить","хватать","хвойный","хвост","химия","хирург","хитрый","хищник","хлеб","хлынуть","хмурый","ходить","хозяин","хоккей","холм","холст","хорошо","хотеть","храбрый","храм","хранить","хребет","хрен","хрипло","хроника","хрупкий","художник","худший","хулиган","хутор","царь","цветок","целевой","целиком","целое","цель","цензура","ценить","центр","цепной","цикл","цилиндр","цирк","цитата","цифра","чайник","часы","чашка","человек","челюсть","чемодан","чемпион","чепуха","червь","чердак","через","чернила","черта","чеснок","честно","четверть","четыре","число","чистый","читатель","чтение","чтобы","чувство","чудак","чудный","чудо","чужой","чулок","чума","чушь","чуять","шагать","шанс","шапка","шарик","шарф","шахматы","шашлык","шедевр","шептать","шерсть","шестой","шинель","ширина","шишка","шкаф","школа","шкура","шланг","шлем","шнур","шоколад","шорох","шоссе","шпион","шприц","штаб","штамм","штаны","штатный","штора","штраф","штурм","штык","шумно","шуршать","шутить","шутка","щедрый","щека","щенок","экзамен","экипаж","экономия","экран","эксперт","элемент","элитный","эмоция","энергия","эпизод","эпоха","эскиз","эстрада","этап","этика","этот","эфир","эффект","эшелон","юбилей","юбка","южный","юмор","юность","юрист","юстиция","яблоко","явление","ягода","ядро","язык","яйцо","якобы","якорь","январь","яркий","ярмарка","ярость","ясный","яхта","ячейка","ящик"]')},8804:function(e,i,n){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,i,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(i,n);r&&!("get"in r?!i.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return i[n]}}),Object.defineProperty(e,a,r)}:function(e,i,n,a){void 0===a&&(a=n),e[a]=i[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,i){Object.defineProperty(e,"default",{enumerable:!0,value:i})}:function(e,i){e.default=i}),t=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(i,e,n);return r(i,e),i};Object.defineProperty(i,"__esModule",{value:!0}),i.mod=i.getCurveByName=i.curves=void 0;const s=t(n(5474)),o=t(n(7592)),c=t(n(357));i.curves={secp256k1:c,ed25519:s,ed25519Bip32:o},i.getCurveByName=function(e){return i.curves[e]};var h=n(4967);Object.defineProperty(i,"mod",{enumerable:!0,get:function(){return h.mod}})},8860:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.ChecksumStruct=void 0;const a=n(5620),r=n(472);i.ChecksumStruct=(0,a.size)((0,r.base64)((0,a.string)(),{paddingRequired:!0}),44,44)},8912:function(e,i,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0}),i.createModuleLogger=i.createProjectLogger=void 0;const r=(0,a(n(7833)).default)("metamask");i.createProjectLogger=function(e){return r.extend(e)},i.createModuleLogger=function(e,i){return e.extend(i)}},8941:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.pbkdf2=function(e,i,n,a){const{c:o,dkLen:c,DK:h,PRF:u,PRFSalt:l}=t(e,i,n,a);let p;const d=new Uint8Array(4),f=(0,r.createView)(d),g=new Uint8Array(u.outputLen);for(let e=1,i=0;i<c;e++,i+=u.outputLen){const n=h.subarray(i,i+u.outputLen);f.setInt32(0,e,!1),(p=l._cloneInto(p)).update(d).digestInto(g),n.set(g.subarray(0,n.length));for(let e=1;e<o;e++){u._cloneInto(p).update(g).digestInto(g);for(let e=0;e<n.length;e++)n[e]^=g[e]}}return s(u,l,h,p,g)},i.pbkdf2Async=async function(e,i,n,a){const{c:o,dkLen:c,asyncTick:h,DK:u,PRF:l,PRFSalt:p}=t(e,i,n,a);let d;const f=new Uint8Array(4),g=(0,r.createView)(f),m=new Uint8Array(l.outputLen);for(let e=1,i=0;i<c;e++,i+=l.outputLen){const n=u.subarray(i,i+l.outputLen);g.setInt32(0,e,!1),(d=p._cloneInto(d)).update(f).digestInto(m),n.set(m.subarray(0,n.length)),await(0,r.asyncLoop)(o-1,h,()=>{l._cloneInto(d).update(m).digestInto(m);for(let e=0;e<n.length;e++)n[e]^=m[e]})}return s(l,p,u,d,m)};const a=n(9615),r=n(9175);function t(e,i,n,t){(0,r.ahash)(e);const s=(0,r.checkOpts)({dkLen:32,asyncTick:10},t),{c:o,dkLen:c,asyncTick:h}=s;if((0,r.anumber)(o),(0,r.anumber)(c),(0,r.anumber)(h),o<1)throw new Error("iterations (c) should be >= 1");const u=(0,r.kdfInputToBytes)(i),l=(0,r.kdfInputToBytes)(n),p=new Uint8Array(c),d=a.hmac.create(e,u),f=d._cloneInto().update(l);return{c:o,dkLen:c,asyncTick:h,DK:p,PRF:d,PRFSalt:f}}function s(e,i,n,a,t){return e.destroy(),i.destroy(),a&&a.destroy(),(0,r.clean)(t),n}},8971:e=>{var i,n,a=(()=>{for(var e=new Uint8Array(128),i=0;i<64;i++)e[i<26?i+65:i<52?i+71:i<62?i-4:4*i-205]=i;return i=>{for(var n=i.length,a=new Uint8Array(3*(n-("="==i[n-1])-("="==i[n-2]))/4|0),r=0,t=0;r<n;){var s=e[i.charCodeAt(r++)],o=e[i.charCodeAt(r++)],c=e[i.charCodeAt(r++)],h=e[i.charCodeAt(r++)];a[t++]=s<<2|o>>4,a[t++]=o<<4|c>>2,a[t++]=c<<6|h}return a}})(),r=(i={"wasm-binary:./siphash24.wat"(e,i){i.exports=a("AGFzbQEAAAABBgFgAn9/AAMCAQAFBQEBCpBOBxQCBm1lbW9yeQIAB3NpcGhhc2gAAArdCAHaCAIIfgJ/QvXKzYPXrNu38wAhAkLt3pHzlszct+QAIQNC4eSV89bs2bzsACEEQvPK0cunjNmy9AAhBUEIKQMAIQdBECkDACEIIAGtQjiGIQYgAUEHcSELIAAgAWogC2shCiAFIAiFIQUgBCAHhSEEIAMgCIUhAyACIAeFIQICQANAIAAgCkYNASAAKQMAIQkgBSAJhSEFIAIgA3whAiADQg2JIQMgAyAChSEDIAJCIIkhAiAEIAV8IQQgBUIQiSEFIAUgBIUhBSACIAV8IQIgBUIViSEFIAUgAoUhBSAEIAN8IQQgA0IRiSEDIAMgBIUhAyAEQiCJIQQgAiADfCECIANCDYkhAyADIAKFIQMgAkIgiSECIAQgBXwhBCAFQhCJIQUgBSAEhSEFIAIgBXwhAiAFQhWJIQUgBSAChSEFIAQgA3whBCADQhGJIQMgAyAEhSEDIARCIIkhBCACIAmFIQIgAEEIaiEADAALCwJAAkACQAJAAkACQAJAAkAgCw4HBwYFBAMCAQALIAYgADEABkIwhoQhBgsgBiAAMQAFQiiGhCEGCyAGIAAxAARCIIaEIQYLIAYgADEAA0IYhoQhBgsgBiAAMQACQhCGhCEGCyAGIAAxAAFCCIaEIQYLIAYgADEAAIQhBgsgBSAGhSEFIAIgA3whAiADQg2JIQMgAyAChSEDIAJCIIkhAiAEIAV8IQQgBUIQiSEFIAUgBIUhBSACIAV8IQIgBUIViSEFIAUgAoUhBSAEIAN8IQQgA0IRiSEDIAMgBIUhAyAEQiCJIQQgAiADfCECIANCDYkhAyADIAKFIQMgAkIgiSECIAQgBXwhBCAFQhCJIQUgBSAEhSEFIAIgBXwhAiAFQhWJIQUgBSAChSEFIAQgA3whBCADQhGJIQMgAyAEhSEDIARCIIkhBCACIAaFIQIgBEL/AYUhBCACIAN8IQIgA0INiSEDIAMgAoUhAyACQiCJIQIgBCAFfCEEIAVCEIkhBSAFIASFIQUgAiAFfCECIAVCFYkhBSAFIAKFIQUgBCADfCEEIANCEYkhAyADIASFIQMgBEIgiSEEIAIgA3whAiADQg2JIQMgAyAChSEDIAJCIIkhAiAEIAV8IQQgBUIQiSEFIAUgBIUhBSACIAV8IQIgBUIViSEFIAUgAoUhBSAEIAN8IQQgA0IRiSEDIAMgBIUhAyAEQiCJIQQgAiADfCECIANCDYkhAyADIAKFIQMgAkIgiSECIAQgBXwhBCAFQhCJIQUgBSAEhSEFIAIgBXwhAiAFQhWJIQUgBSAChSEFIAQgA3whBCADQhGJIQMgAyAEhSEDIARCIIkhBCACIAN8IQIgA0INiSEDIAMgAoUhAyACQiCJIQIgBCAFfCEEIAVCEIkhBSAFIASFIQUgAiAFfCECIAVCFYkhBSAFIAKFIQUgBCADfCEEIANCEYkhAyADIASFIQMgBEIgiSEEQQAgAiADIAQgBYWFhTcDAAs=")}},function(){return n||(0,i[Object.keys(i)[0]])((n={exports:{}}).exports,n),n.exports})(),t=new WebAssembly.Module(r);e.exports=e=>new WebAssembly.Instance(t,e).exports},9067:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.validate=i.is=i.mask=i.create=i.assert=i.ExactOptionalStruct=i.Struct=void 0;const a=n(7754),r=n(639);class t{constructor(e){const{type:i,schema:n,validator:a,refiner:t,coercer:s=e=>e,entries:o=function*(){}}=e;this.type=i,this.schema=n,this.entries=o,this.coercer=s,this.validator=a?(e,i)=>{const n=a(e,i);return(0,r.toFailures)(n,i,this,e)}:()=>[],this.refiner=t?(e,i)=>{const n=t(e,i);return(0,r.toFailures)(n,i,this,e)}:()=>[]}assert(e,i){return o(e,this,i)}create(e,i){return c(e,this,i)}is(e){return u(e,this)}mask(e,i){return h(e,this,i)}validate(e,i={}){return l(e,this,i)}}i.Struct=t;const s="EXACT_OPTIONAL";function o(e,i,n){const a=l(e,i,{message:n});if(a[0])throw a[0]}function c(e,i,n){const a=l(e,i,{coerce:!0,message:n});if(a[0])throw a[0];return a[1]}function h(e,i,n){const a=l(e,i,{coerce:!0,mask:!0,message:n});if(a[0])throw a[0];return a[1]}function u(e,i){return!l(e,i)[0]}function l(e,i,n={}){const t=(0,r.run)(e,i,n),s=(0,r.shiftIterator)(t);return s[0]?[new a.StructError(s[0],function*(){for(const e of t)e[0]&&(yield e[0])}),void 0]:[void 0,s[1]]}i.ExactOptionalStruct=class extends t{constructor(e){super({...e,type:`exact optional ${e.type}`}),this.brand=s}static isExactOptional(e){return(0,r.isObject)(e)&&"brand"in e&&e.brand===s}},i.assert=o,i.create=c,i.mask=h,i.is=u,i.validate=l},9161:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.randomBytes=i.wrapXOFConstructorWithOpts=i.wrapConstructorWithOpts=i.wrapConstructor=i.checkOpts=i.Hash=i.concatBytes=i.toBytes=i.utf8ToBytes=i.asyncLoop=i.nextTick=i.hexToBytes=i.bytesToHex=i.isLE=i.rotr=i.createView=i.u32=i.u8=void 0;const a=n(2927);function r(e){return e instanceof Uint8Array||null!=e&&"object"==typeof e&&"Uint8Array"===e.constructor.name}if(i.u8=e=>new Uint8Array(e.buffer,e.byteOffset,e.byteLength),i.u32=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4)),i.createView=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),i.rotr=(e,i)=>e<<32-i|e>>>i,i.isLE=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0],!i.isLE)throw new Error("Non little-endian hardware is not supported");const t=Array.from({length:256},(e,i)=>i.toString(16).padStart(2,"0"));i.bytesToHex=function(e){if(!r(e))throw new Error("Uint8Array expected");let i="";for(let n=0;n<e.length;n++)i+=t[e[n]];return i};function s(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:void 0}function o(e){if("string"!=typeof e)throw new Error("utf8ToBytes expected string, got "+typeof e);return new Uint8Array((new TextEncoder).encode(e))}function c(e){if("string"==typeof e&&(e=o(e)),!r(e))throw new Error("expected Uint8Array, got "+typeof e);return e}i.hexToBytes=function(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);const i=e.length,n=i/2;if(i%2)throw new Error("padded hex string expected, got unpadded hex of length "+i);const a=new Uint8Array(n);for(let i=0,r=0;i<n;i++,r+=2){const n=s(e.charCodeAt(r)),t=s(e.charCodeAt(r+1));if(void 0===n||void 0===t){const i=e[r]+e[r+1];throw new Error('hex string expected, got non-hex character "'+i+'" at index '+r)}a[i]=16*n+t}return a},i.nextTick=async()=>{},i.asyncLoop=async function(e,n,a){let r=Date.now();for(let t=0;t<e;t++){a(t);const e=Date.now()-r;e>=0&&e<n||(await(0,i.nextTick)(),r+=e)}},i.utf8ToBytes=o,i.toBytes=c,i.concatBytes=function(...e){let i=0;for(let n=0;n<e.length;n++){const a=e[n];if(!r(a))throw new Error("Uint8Array expected");i+=a.length}const n=new Uint8Array(i);for(let i=0,a=0;i<e.length;i++){const r=e[i];n.set(r,a),a+=r.length}return n},i.Hash=class{clone(){return this._cloneInto()}};const h={}.toString;i.checkOpts=function(e,i){if(void 0!==i&&"[object Object]"!==h.call(i))throw new Error("Options should be object or undefined");return Object.assign(e,i)},i.wrapConstructor=function(e){const i=i=>e().update(c(i)).digest(),n=e();return i.outputLen=n.outputLen,i.blockLen=n.blockLen,i.create=()=>e(),i},i.wrapConstructorWithOpts=function(e){const i=(i,n)=>e(n).update(c(i)).digest(),n=e({});return i.outputLen=n.outputLen,i.blockLen=n.blockLen,i.create=i=>e(i),i},i.wrapXOFConstructorWithOpts=function(e){const i=(i,n)=>e(n).update(c(i)).digest(),n=e({});return i.outputLen=n.outputLen,i.blockLen=n.blockLen,i.create=i=>e(i),i},i.randomBytes=function(e=32){if(a.crypto&&"function"==typeof a.crypto.getRandomValues)return a.crypto.getRandomValues(new Uint8Array(e));throw new Error("crypto.getRandomValues must be defined")}},9173:(e,i,n)=>{"use strict";const a=n(8317);e.exports=(e,i,n)=>a(i,e,n)},9175:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.wrapXOFConstructorWithOpts=i.wrapConstructorWithOpts=i.wrapConstructor=i.Hash=i.nextTick=i.swap32IfBE=i.byteSwapIfBE=i.swap8IfBE=i.isLE=void 0,i.isBytes=r,i.anumber=t,i.abytes=s,i.ahash=function(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("Hash should be wrapped by utils.createHasher");t(e.outputLen),t(e.blockLen)},i.aexists=function(e,i=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(i&&e.finished)throw new Error("Hash#digest() has already been called")},i.aoutput=function(e,i){s(e);const n=i.outputLen;if(e.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)},i.u8=function(e){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)},i.u32=function(e){return new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4))},i.clean=function(...e){for(let i=0;i<e.length;i++)e[i].fill(0)},i.createView=function(e){return new DataView(e.buffer,e.byteOffset,e.byteLength)},i.rotr=function(e,i){return e<<32-i|e>>>i},i.rotl=function(e,i){return e<<i|e>>>32-i>>>0},i.byteSwap=o,i.byteSwap32=c,i.bytesToHex=function(e){if(s(e),h)return e.toHex();let i="";for(let n=0;n<e.length;n++)i+=u[e[n]];return i},i.hexToBytes=function(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);if(h)return Uint8Array.fromHex(e);const i=e.length,n=i/2;if(i%2)throw new Error("hex string expected, got unpadded hex of length "+i);const a=new Uint8Array(n);for(let i=0,r=0;i<n;i++,r+=2){const n=p(e.charCodeAt(r)),t=p(e.charCodeAt(r+1));if(void 0===n||void 0===t){const i=e[r]+e[r+1];throw new Error('hex string expected, got non-hex character "'+i+'" at index '+r)}a[i]=16*n+t}return a},i.asyncLoop=async function(e,n,a){let r=Date.now();for(let t=0;t<e;t++){a(t);const e=Date.now()-r;e>=0&&e<n||(await(0,i.nextTick)(),r+=e)}},i.utf8ToBytes=d,i.bytesToUtf8=function(e){return(new TextDecoder).decode(e)},i.toBytes=f,i.kdfInputToBytes=function(e){return"string"==typeof e&&(e=d(e)),s(e),e},i.concatBytes=function(...e){let i=0;for(let n=0;n<e.length;n++){const a=e[n];s(a),i+=a.length}const n=new Uint8Array(i);for(let i=0,a=0;i<e.length;i++){const r=e[i];n.set(r,a),a+=r.length}return n},i.checkOpts=function(e,i){if(void 0!==i&&"[object Object]"!=={}.toString.call(i))throw new Error("options should be object or undefined");return Object.assign(e,i)},i.createHasher=g,i.createOptHasher=m,i.createXOFer=k,i.randomBytes=function(e=32){if(a.crypto&&"function"==typeof a.crypto.getRandomValues)return a.crypto.getRandomValues(new Uint8Array(e));if(a.crypto&&"function"==typeof a.crypto.randomBytes)return Uint8Array.from(a.crypto.randomBytes(e));throw new Error("crypto.getRandomValues must be defined")};const a=n(5145);function r(e){return e instanceof Uint8Array||ArrayBuffer.isView(e)&&"Uint8Array"===e.constructor.name}function t(e){if(!Number.isSafeInteger(e)||e<0)throw new Error("positive integer expected, got "+e)}function s(e,...i){if(!r(e))throw new Error("Uint8Array expected");if(i.length>0&&!i.includes(e.length))throw new Error("Uint8Array expected of length "+i+", got length="+e.length)}function o(e){return e<<24&4278190080|e<<8&16711680|e>>>8&65280|e>>>24&255}function c(e){for(let i=0;i<e.length;i++)e[i]=o(e[i]);return e}i.isLE=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0],i.swap8IfBE=i.isLE?e=>e:e=>o(e),i.byteSwapIfBE=i.swap8IfBE,i.swap32IfBE=i.isLE?e=>e:c;const h=(()=>"function"==typeof Uint8Array.from([]).toHex&&"function"==typeof Uint8Array.fromHex)(),u=Array.from({length:256},(e,i)=>i.toString(16).padStart(2,"0")),l={_0:48,_9:57,A:65,F:70,a:97,f:102};function p(e){return e>=l._0&&e<=l._9?e-l._0:e>=l.A&&e<=l.F?e-(l.A-10):e>=l.a&&e<=l.f?e-(l.a-10):void 0}function d(e){if("string"!=typeof e)throw new Error("string expected");return new Uint8Array((new TextEncoder).encode(e))}function f(e){return"string"==typeof e&&(e=d(e)),s(e),e}function g(e){const i=i=>e().update(f(i)).digest(),n=e();return i.outputLen=n.outputLen,i.blockLen=n.blockLen,i.create=()=>e(),i}function m(e){const i=(i,n)=>e(n).update(f(i)).digest(),n=e({});return i.outputLen=n.outputLen,i.blockLen=n.blockLen,i.create=i=>e(i),i}function k(e){const i=(i,n)=>e(n).update(f(i)).digest(),n=e({});return i.outputLen=n.outputLen,i.blockLen=n.blockLen,i.create=i=>e(i),i}i.nextTick=async()=>{},i.Hash=class{},i.wrapConstructor=g,i.wrapConstructorWithOpts=m,i.wrapXOFConstructorWithOpts=k},9191:(e,i,n)=>{const a=n(6889),{crypto_stream:r,crypto_stream_xor:t}=n(6940),{crypto_onetimeauth:s,crypto_onetimeauth_verify:o,crypto_onetimeauth_BYTES:c,crypto_onetimeauth_KEYBYTES:h}=n(2557),u=32,l=24,p=32,d=16;function f(e,i,n,r){a(e.byteLength===i.byteLength,"c must be 'm.byteLength' bytes");const o=i.byteLength;a(o>=p,"mlen must be at least 'crypto_secretbox_ZEROBYTES'"),a(n.byteLength===l,"n must be 'crypto_secretbox_NONCEBYTES' bytes"),a(r.byteLength===u,"k must be 'crypto_secretbox_KEYBYTES' bytes"),t(e,i,n,r),s(e.subarray(d,d+c),e.subarray(d+c,e.byteLength),e.subarray(0,h)),e.fill(0,0,d)}function g(e,i,n,s){a(i.byteLength===e.byteLength,"c must be 'm.byteLength' bytes");const f=e.byteLength;a(f>=p,"mlen must be at least 'crypto_secretbox_ZEROBYTES'"),a(n.byteLength===l,"n must be 'crypto_secretbox_NONCEBYTES' bytes"),a(s.byteLength===u,"k must be 'crypto_secretbox_KEYBYTES' bytes");const g=new Uint8Array(h);return r(g,n,s),!1!==o(i.subarray(d,d+c),i.subarray(d+c,i.byteLength),g)&&(t(e,i,n,s),e.fill(0,0,32),!0)}function m(e,i,n,r){a(e.byteLength===i.byteLength+16,"o must be 'msg.byteLength + crypto_secretbox_MACBYTES' bytes"),a(n.byteLength===l,"n must be 'crypto_secretbox_NONCEBYTES' bytes"),a(r.byteLength===u,"k must be 'crypto_secretbox_KEYBYTES' bytes");const t=new Uint8Array(p+i.byteLength),s=new Uint8Array(t.byteLength);t.set(i,p),f(s,t,n,r),e.set(s.subarray(d))}function k(e,i,n,r){a(i.byteLength===e.byteLength+16,"box must be 'msg.byteLength + crypto_secretbox_MACBYTES' bytes"),a(n.byteLength===l,"n must be 'crypto_secretbox_NONCEBYTES' bytes"),a(r.byteLength===u,"k must be 'crypto_secretbox_KEYBYTES' bytes");const t=new Uint8Array(d+i.byteLength),s=new Uint8Array(t.byteLength);return t.set(i,d),!1!==g(s,t,n,r)&&(e.set(s.subarray(p)),!0)}e.exports={crypto_secretbox:f,crypto_secretbox_open:g,crypto_secretbox_detached:function(e,i,n,r,t){a(e.byteLength===n.byteLength,"o must be 'msg.byteLength' bytes"),a(16===i.byteLength,"mac must be 'crypto_secretbox_MACBYTES' bytes"),a(r.byteLength===l,"n must be 'crypto_secretbox_NONCEBYTES' bytes"),a(t.byteLength===u,"k must be 'crypto_secretbox_KEYBYTES' bytes");const s=new Uint8Array(n.byteLength+i.byteLength);return m(s,n,r,t),i.set(s.subarray(0,i.byteLength)),e.set(s.subarray(i.byteLength)),!0},crypto_secretbox_open_detached:function(e,i,n,r,t){a(i.byteLength===e.byteLength,"o must be 'msg.byteLength' bytes"),a(16===n.byteLength,"mac must be 'crypto_secretbox_MACBYTES' bytes"),a(r.byteLength===l,"n must be 'crypto_secretbox_NONCEBYTES' bytes"),a(t.byteLength===u,"k must be 'crypto_secretbox_KEYBYTES' bytes");const s=new Uint8Array(i.byteLength+n.byteLength);return s.set(n),s.set(i,n.byteLength),k(e,s,r,t)},crypto_secretbox_easy:m,crypto_secretbox_open_easy:k,crypto_secretbox_KEYBYTES:u,crypto_secretbox_NONCEBYTES:l,crypto_secretbox_ZEROBYTES:p,crypto_secretbox_BOXZEROBYTES:d,crypto_secretbox_MACBYTES:16}},9266:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.satisfiesVersionRange=i.gtRange=i.gtVersion=i.assertIsSemVerRange=i.assertIsSemVerVersion=i.isValidSemVerRange=i.isValidSemVerVersion=i.VersionRangeStruct=i.VersionStruct=void 0;const a=n(5620),r=n(6864),t=n(2011);i.VersionStruct=(0,a.refine)((0,a.string)(),"Version",e=>null!==(0,r.valid)(e)||`Expected SemVer version, got "${e}"`),i.VersionRangeStruct=(0,a.refine)((0,a.string)(),"Version range",e=>null!==(0,r.validRange)(e)||`Expected SemVer range, got "${e}"`),i.isValidSemVerVersion=function(e){return(0,a.is)(e,i.VersionStruct)},i.isValidSemVerRange=function(e){return(0,a.is)(e,i.VersionRangeStruct)},i.assertIsSemVerVersion=function(e){(0,t.assertStruct)(e,i.VersionStruct)},i.assertIsSemVerRange=function(e){(0,t.assertStruct)(e,i.VersionRangeStruct)},i.gtVersion=function(e,i){return(0,r.gt)(e,i)},i.gtRange=function(e,i){return(0,r.gtr)(e,i)},i.satisfiesVersionRange=function(e,i){return(0,r.satisfies)(e,i,{includePrerelease:!0})}},9402:(e,i,n)=>{const{crypto_verify_32:a}=n(8597),r=n(6667),t=n(6889);e.exports={crypto_auth_BYTES:32,crypto_auth_KEYBYTES:32,crypto_auth:function(e,i,n){t(32===e.byteLength,"out should be 'crypto_auth_BYTES' in length"),t(32===n.byteLength,"key should be 'crypto_auth_KEYBYTES' in length");const a=new Uint8Array(64),s=r.HMAC(n);s.update(i),s.digest(a),e.set(a.subarray(0,32))},crypto_auth_verify:function(e,i,n){t(32===e.byteLength,"h should be 'crypto_auth_BYTES' in length"),t(32===n.byteLength,"key should be 'crypto_auth_KEYBYTES' in length");const s=r.HMAC(n).update(i).digest();return a(e,0,s,0)}}},9440:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.encodeExtendedKey=i.decodeExtendedKey=void 0;const a=n(2367),r=n(4813),t=n(357),s=n(4503),o=76067358,c=76066276,h=70617039,u=70615956;i.decodeExtendedKey=e=>{const i=(0,s.decodeBase58check)(e);if(78!==i.length)throw new Error(`Invalid extended key: Expected a length of 78, got ${i.length}.`);const n=(0,a.createDataView)(i),l=n.getUint32(0,!1),{network:p,type:d}=function(e){switch(e){case o:return{type:"public",network:"mainnet"};case h:return{type:"public",network:"testnet"};case c:return{type:"private",network:"mainnet"};case u:return{type:"private",network:"testnet"};default:throw new Error("Invalid extended key: Expected a public (xpub) or private key (xprv) version.")}}(l),f=n.getUint8(4);(0,r.validateBIP44Depth)(f);const g=n.getUint32(5,!1),m=n.getUint32(9,!1),k=i.slice(13,45);if(!(0,s.isValidBytesKey)(k,32))throw new Error("Invalid extended key: Chain code must be a 32-byte non-zero byte array.");const b=i.slice(45,78);if(!(0,s.isValidBytesKey)(b,33))throw new Error("Invalid extended key: Key must be a 33-byte non-zero byte array.");const _=(0,a.createDataView)(b);if("public"===d){if(2!==_.getUint8(0)&&3!==_.getUint8(0))throw new Error("Invalid extended key: Public key must start with 0x02 or 0x03.");return{type:d,depth:f,parentFingerprint:g,index:m,network:p,chainCode:k,publicKey:(0,t.decompressPublicKey)(b)}}if(0!==_.getUint8(0))throw new Error("Invalid extended key: Private key must start with 0x00.");return{type:d,depth:f,parentFingerprint:g,index:m,network:p,chainCode:k,privateKey:b.slice(1)}},i.encodeExtendedKey=e=>{const{type:i,depth:n,parentFingerprint:r,index:l,network:p,chainCode:d}=e,f=new Uint8Array(78),g=(0,a.createDataView)(f),m=function(e,i){switch(e){case"mainnet":return"public"===i?o:c;case"testnet":return"public"===i?h:u;default:return(0,a.assertExhaustive)(e)}}(p,i);if(g.setUint32(0,m,!1),g.setUint8(4,n),g.setUint32(5,r,!1),g.setUint32(9,l,!1),f.set(d,13),"public"===i){const{publicKey:i}=e,n=(0,t.compressPublicKey)(i);f.set(n,45)}if("private"===i){const{privateKey:i}=e;f.set(i,46)}return(0,s.encodeBase58check)(f)}},9518:(module,__unused_webpack_exports,__webpack_require__)=>{function _regenerator(){var e,i,n="function"==typeof Symbol?Symbol:{},a=n.iterator||"@@iterator",r=n.toStringTag||"@@toStringTag";function t(n,a,r,t){var c=a&&a.prototype instanceof o?a:o,h=Object.create(c.prototype);return _regeneratorDefine2(h,"_invoke",function(n,a,r){var t,o,c,h=0,u=r||[],l=!1,p={p:0,n:0,v:e,a:d,f:d.bind(e,4),d:function(i,n){return t=i,o=0,c=e,p.n=n,s}};function d(n,a){for(o=n,c=a,i=0;!l&&h&&!r&&i<u.length;i++){var r,t=u[i],d=p.p,f=t[2];n>3?(r=f===a)&&(c=t[(o=t[4])?5:(o=3,3)],t[4]=t[5]=e):t[0]<=d&&((r=n<2&&d<t[1])?(o=0,p.v=a,p.n=t[1]):d<f&&(r=n<3||t[0]>a||a>f)&&(t[4]=n,t[5]=a,p.n=f,o=0))}if(r||n>1)return s;throw l=!0,a}return function(r,u,f){if(h>1)throw TypeError("Generator is already running");for(l&&1===u&&d(u,f),o=u,c=f;(i=o<2?e:c)||!l;){t||(o?o<3?(o>1&&(p.n=-1),d(o,c)):p.n=c:p.v=c);try{if(h=2,t){if(o||(r="next"),i=t[r]){if(!(i=i.call(t,c)))throw TypeError("iterator result is not an object");if(!i.done)return i;c=i.value,o<2&&(o=0)}else 1===o&&(i=t.return)&&i.call(t),o<2&&(c=TypeError("The iterator does not provide a '"+r+"' method"),o=1);t=e}else if((i=(l=p.n<0)?c:n.call(a,p))!==s)break}catch(i){t=e,o=1,c=i}finally{h=1}}return{value:i,done:l}}}(n,r,t),!0),h}var s={};function o(){}function c(){}function h(){}i=Object.getPrototypeOf;var u=[][a]?i(i([][a]())):(_regeneratorDefine2(i={},a,function(){return this}),i),l=h.prototype=o.prototype=Object.create(u);function p(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,h):(e.__proto__=h,_regeneratorDefine2(e,r,"GeneratorFunction")),e.prototype=Object.create(l),e}return c.prototype=h,_regeneratorDefine2(l,"constructor",h),_regeneratorDefine2(h,"constructor",c),c.displayName="GeneratorFunction",_regeneratorDefine2(h,r,"GeneratorFunction"),_regeneratorDefine2(l),_regeneratorDefine2(l,r,"Generator"),_regeneratorDefine2(l,a,function(){return this}),_regeneratorDefine2(l,"toString",function(){return"[object Generator]"}),(_regenerator=function(){return{w:t,m:p}})()}function _regeneratorDefine2(e,i,n,a){var r=Object.defineProperty;try{r({},"",{})}catch(e){r=0}_regeneratorDefine2=function(e,i,n,a){function t(i,n){_regeneratorDefine2(e,i,function(e){return this._invoke(i,n,e)})}i?r?r(e,i,{value:n,enumerable:!a,configurable:!a,writable:!a}):e[i]=n:(t("next",0),t("throw",1),t("return",2))},_regeneratorDefine2(e,i,n,a)}function asyncGeneratorStep(e,i,n,a,r,t,s){try{var o=e[t](s),c=o.value}catch(e){return void n(e)}o.done?i(c):Promise.resolve(c).then(a,r)}function _asyncToGenerator(e){return function(){var i=this,n=arguments;return new Promise(function(a,r){var t=e.apply(i,n);function s(e){asyncGeneratorStep(t,a,r,s,o,"next",e)}function o(e){asyncGeneratorStep(t,a,r,s,o,"throw",e)}s(void 0)})}}var b4a=__webpack_require__(5682),sodium=__webpack_require__(4930),runtime=__webpack_require__(8308),blake3External,blake3ExternalFallback=function(){throw new Error("BLAKE3 module is unavailable. Check build configuration (Rollup aliases, Metro resolver) or confirm environment compatibility.")};if(runtime.isBare()){var modulePath="@tracsystems/blake3",options="{}";try{blake3External=eval("require('".concat(modulePath,"', ").concat(options,").blake3"))}catch(e){console.error("Failed to load BLAKE3 in Bare environment:",e),blake3External=blake3ExternalFallback}}else try{blake3External=eval('require("@tracsystems/blake3").blake3')}catch(e){console.error("BLAKE3 native require failed (likely RN/Browser):",e.message),blake3External=blake3ExternalFallback}function blake3(e){return _blake.apply(this,arguments)}function _blake(){return(_blake=_asyncToGenerator(_regenerator().m(function e(i){var n,a,r;return _regenerator().w(function(e){for(;;)switch(e.n){case 0:if(blake3External===blake3ExternalFallback&&blake3External(),(n=b4a.isBuffer(i))||i instanceof Uint8Array){e.n=1;break}throw new Error("Invalid input: must be a Buffer or Uint8Array");case 1:return a=n?i:b4a.from(i),e.n=2,blake3External(a);case 2:return r=e.v,e.a(2,b4a.from(r))}},e)}))).apply(this,arguments)}function blake3Safe(e){return _blake3Safe.apply(this,arguments)}function _blake3Safe(){return(_blake3Safe=_asyncToGenerator(_regenerator().m(function e(i){var n;return _regenerator().w(function(e){for(;;)switch(e.p=e.n){case 0:return e.p=0,e.n=1,blake3(i);case 1:return e.a(2,e.v);case 2:return e.p=2,n=e.v,console.error(n),e.a(2,b4a.alloc(0))}},e,null,[[0,2]])}))).apply(this,arguments)}function sha256(e){var i=b4a.isBuffer(e);if(!(i||e instanceof Uint8Array))throw new Error("Invalid input: must be a Buffer or Uint8Array");var n=i?e:b4a.from(e),a=b4a.alloc(sodium.crypto_hash_sha256_BYTES);return sodium.crypto_hash_sha256(a,n),a}function sha256Safe(e){try{return sha256(e)}catch(e){console.error(e)}return b4a.alloc(0)}module.exports={blake3,blake3Safe,sha256,sha256Safe}},9572:(e,i,n)=>{"use strict";const a=n(3321);e.exports=(e,i)=>{const n=a(e,i);return n?n.version:null}},9615:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.hmac=i.HMAC=void 0;const a=n(9175);class r extends a.Hash{constructor(e,i){super(),this.finished=!1,this.destroyed=!1,(0,a.ahash)(e);const n=(0,a.toBytes)(i);if(this.iHash=e.create(),"function"!=typeof this.iHash.update)throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const r=this.blockLen,t=new Uint8Array(r);t.set(n.length>r?e.create().update(n).digest():n);for(let e=0;e<t.length;e++)t[e]^=54;this.iHash.update(t),this.oHash=e.create();for(let e=0;e<t.length;e++)t[e]^=106;this.oHash.update(t),(0,a.clean)(t)}update(e){return(0,a.aexists)(this),this.iHash.update(e),this}digestInto(e){(0,a.aexists)(this),(0,a.abytes)(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:i,iHash:n,finished:a,destroyed:r,blockLen:t,outputLen:s}=this;return e.finished=a,e.destroyed=r,e.blockLen=t,e.outputLen=s,e.oHash=i._cloneInto(e.oHash),e.iHash=n._cloneInto(e.iHash),e}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}i.HMAC=r,i.hmac=(e,i,n)=>new r(e,i).update(n).digest(),i.hmac.create=(e,i)=>new r(e,i)},9632:()=>{},9917:(e,i,n)=>{function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}var r=n(4930),t=n(5682),s=n(8308);function o(e){return Number.isInteger(e)&&e>=0&&e<=4294967295}function c(e,i){var n=t.alloc(4);return t.writeUInt32BE(n,e,i),n}e.exports={memzero:function(e){t.isBuffer(e)&&r.sodium_memzero(e)},toBase64:function(e){if(!e||"object"!==a(e))throw new Error("Payload must be an object");var i,n=JSON.stringify(e);if(s.isNode()||s.isBare())i=t.from(n,"utf-8").toString("base64");else{for(var r=(new TextEncoder).encode(n),o="",c=0;c<r.length;c++)o+=String.fromCharCode(r[c]);i=btoa(o)}return i},isUInt32:o,toUInt32:c,isHexString:function(e){return"string"==typeof e&&/^[0-9a-fA-F]+$/.test(e)},serialize:function(){for(var e=arguments.length,i=new Array(e),n=0;n<e;n++)i[n]=arguments[n];var a=i.map(function(e){if(t.isBuffer(e))return e;if("number"==typeof e&&o(e))return c(e,0);throw new Error("Invalid argument type. Only Buffer and uint32 are supported for now")}).filter(function(e){return t.isBuffer(e)});return t.concat(a)}}},9925:(e,i,n)=>{"use strict";const a=n(8317);e.exports=(e,i,n)=>a(e,i,n)<=0},9932:e=>{"use strict";const i=Object.freeze({loose:!0}),n=Object.freeze({});e.exports=e=>e?"object"!=typeof e?i:e:n},9981:(e,i,n)=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0}),i.sha224=i.sha256=void 0;const a=n(4133),r=n(9161),t=(e,i,n)=>e&i^~e&n,s=(e,i,n)=>e&i^e&n^i&n,o=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),c=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),h=new Uint32Array(64);class u extends a.SHA2{constructor(){super(64,32,8,!1),this.A=0|c[0],this.B=0|c[1],this.C=0|c[2],this.D=0|c[3],this.E=0|c[4],this.F=0|c[5],this.G=0|c[6],this.H=0|c[7]}get(){const{A:e,B:i,C:n,D:a,E:r,F:t,G:s,H:o}=this;return[e,i,n,a,r,t,s,o]}set(e,i,n,a,r,t,s,o){this.A=0|e,this.B=0|i,this.C=0|n,this.D=0|a,this.E=0|r,this.F=0|t,this.G=0|s,this.H=0|o}process(e,i){for(let n=0;n<16;n++,i+=4)h[n]=e.getUint32(i,!1);for(let e=16;e<64;e++){const i=h[e-15],n=h[e-2],a=(0,r.rotr)(i,7)^(0,r.rotr)(i,18)^i>>>3,t=(0,r.rotr)(n,17)^(0,r.rotr)(n,19)^n>>>10;h[e]=t+h[e-7]+a+h[e-16]|0}let{A:n,B:a,C:c,D:u,E:l,F:p,G:d,H:f}=this;for(let e=0;e<64;e++){const i=f+((0,r.rotr)(l,6)^(0,r.rotr)(l,11)^(0,r.rotr)(l,25))+t(l,p,d)+o[e]+h[e]|0,g=((0,r.rotr)(n,2)^(0,r.rotr)(n,13)^(0,r.rotr)(n,22))+s(n,a,c)|0;f=d,d=p,p=l,l=u+i|0,u=c,c=a,a=n,n=i+g|0}n=n+this.A|0,a=a+this.B|0,c=c+this.C|0,u=u+this.D|0,l=l+this.E|0,p=p+this.F|0,d=d+this.G|0,f=f+this.H|0,this.set(n,a,c,u,l,p,d,f)}roundClean(){h.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}class l extends u{constructor(){super(),this.A=-1056596264,this.B=914150663,this.C=812702999,this.D=-150054599,this.E=-4191439,this.F=1750603025,this.G=1694076839,this.H=-1090891868,this.outputLen=28}}i.sha256=(0,r.wrapConstructor)(()=>new u),i.sha224=(0,r.wrapConstructor)(()=>new l)}},__webpack_module_cache__={};function __webpack_require__(e){var i=__webpack_module_cache__[e];if(void 0!==i)return i.exports;var n=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(n.exports,n,n.exports,__webpack_require__),n.loaded=!0,n.exports}__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,i)=>Object.prototype.hasOwnProperty.call(e,i),__webpack_require__.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var __webpack_exports__=__webpack_require__(8399);module.exports=__webpack_exports__})();